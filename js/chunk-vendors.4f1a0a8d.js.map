{"version":3,"sources":["webpack:///./node_modules/core-js/internals/to-string-tag-support.js","webpack:///./node_modules/core-js/internals/function-bind-context.js","webpack:///./node_modules/core-js/internals/object-get-own-property-names-external.js","webpack:///./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack:///./node_modules/core-js/internals/ie8-dom-define.js","webpack:///./node_modules/core-js/internals/an-instance.js","webpack:///./node_modules/core-js/internals/html.js","webpack:///./node_modules/core-js/internals/a-function.js","webpack:///./node_modules/core-js/internals/check-correctness-of-iteration.js","webpack:///./node_modules/core-js/internals/engine-is-ios.js","webpack:///./node_modules/core-js/internals/require-object-coercible.js","webpack:///./node_modules/core-js/internals/iterate.js","webpack:///./node_modules/core-js/internals/to-absolute-index.js","webpack:///./node_modules/core-js/internals/export.js","webpack:///./node_modules/core-js/internals/object-get-own-property-names.js","webpack:///./node_modules/core-js/internals/set-species.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/core-js/internals/iterator-close.js","webpack:///./node_modules/vue/dist/vue.runtime.esm.js","webpack:///./node_modules/core-js/internals/task.js","webpack:///./node_modules/core-js/internals/engine-v8-version.js","webpack:///./node_modules/core-js/internals/engine-user-agent.js","webpack:///./node_modules/core-js/internals/get-iterator-method.js","webpack:///./node_modules/core-js/internals/object-define-properties.js","webpack:///./node_modules/core-js/internals/a-possible-prototype.js","webpack:///./node_modules/core-js/modules/es.string.iterator.js","webpack:///./node_modules/core-js/internals/iterators.js","webpack:///./node_modules/core-js/internals/path.js","webpack:///./node_modules/core-js/internals/indexed-object.js","webpack:///./node_modules/core-js/internals/add-to-unscopables.js","webpack:///./node_modules/core-js/internals/host-report-errors.js","webpack:///./node_modules/core-js/internals/species-constructor.js","webpack:///./node_modules/core-js/internals/native-symbol.js","webpack:///./node_modules/core-js/internals/array-includes.js","webpack:///./node_modules/core-js/internals/to-length.js","webpack:///./node_modules/core-js/internals/has.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/core-js/internals/shared.js","webpack:///./node_modules/core-js/internals/own-keys.js","webpack:///./node_modules/core-js/internals/create-property-descriptor.js","webpack:///./node_modules/core-js/internals/engine-is-node.js","webpack:///./node_modules/core-js/internals/object-assign.js","webpack:///./node_modules/core-js/internals/string-multibyte.js","webpack:///./node_modules/core-js/internals/array-species-create.js","webpack:///./node_modules/core-js/internals/internal-state.js","webpack:///./node_modules/core-js/internals/redefine.js","webpack:///./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack:///./node_modules/core-js/internals/define-well-known-symbol.js","webpack:///./node_modules/core-js/internals/enum-bug-keys.js","webpack:///./node_modules/core-js/internals/to-object.js","webpack:///./node_modules/core-js/internals/object-create.js","webpack:///./node_modules/core-js/internals/define-iterator.js","webpack:///./node_modules/core-js/internals/native-weak-map.js","webpack:///./node_modules/core-js/internals/an-object.js","webpack:///./node_modules/core-js/internals/descriptors.js","webpack:///./node_modules/core-js/internals/is-object.js","webpack:///./node_modules/core-js/internals/inspect-source.js","webpack:///./node_modules/core-js/internals/uid.js","webpack:///./node_modules/core-js/internals/create-non-enumerable-property.js","webpack:///./node_modules/core-js/internals/is-forced.js","webpack:///./node_modules/core-js/internals/object-define-property.js","webpack:///./node_modules/core-js/internals/create-iterator-constructor.js","webpack:///./node_modules/core-js/internals/engine-is-webos-webkit.js","webpack:///./node_modules/core-js/modules/es.symbol.js","webpack:///./node_modules/core-js/internals/to-integer.js","webpack:///./node_modules/core-js/modules/es.promise.finally.js","webpack:///./node_modules/core-js/internals/iterators-core.js","webpack:///./node_modules/core-js/internals/object-to-string.js","webpack:///./node_modules/core-js/modules/es.function.name.js","webpack:///./node_modules/core-js/internals/microtask.js","webpack:///./node_modules/core-js/internals/well-known-symbol.js","webpack:///./node_modules/core-js/internals/array-iteration.js","webpack:///./node_modules/core-js/internals/to-primitive.js","webpack:///./node_modules/core-js/internals/is-pure.js","webpack:///./node_modules/core-js/internals/classof-raw.js","webpack:///./node_modules/core-js/internals/shared-store.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/core-js/internals/object-keys-internal.js","webpack:///./node_modules/core-js/internals/document-create-element.js","webpack:///./node_modules/core-js/modules/es.object.assign.js","webpack:///./node_modules/mxgraph/javascript/dist/build.js","webpack:///./node_modules/core-js/internals/promise-resolve.js","webpack:///./node_modules/core-js/internals/set-global.js","webpack:///./node_modules/core-js/internals/hidden-keys.js","webpack:///./node_modules/core-js/internals/fails.js","webpack:///./node_modules/core-js/internals/get-built-in.js","webpack:///./node_modules/core-js/internals/object-property-is-enumerable.js","webpack:///./node_modules/core-js/modules/es.symbol.iterator.js","webpack:///./node_modules/core-js/internals/object-set-prototype-of.js","webpack:///./node_modules/core-js/modules/es.object.to-string.js","webpack:///./node_modules/core-js/internals/set-to-string-tag.js","webpack:///./node_modules/core-js/internals/global.js","webpack:///./node_modules/core-js/modules/web.dom-collections.iterator.js","webpack:///./node_modules/core-js/internals/object-keys.js","webpack:///./node_modules/core-js/modules/es.symbol.description.js","webpack:///./node_modules/core-js/internals/object-get-prototype-of.js","webpack:///./node_modules/core-js/internals/correct-prototype-getter.js","webpack:///./node_modules/core-js/modules/es.array.iterator.js","webpack:///./node_modules/core-js/internals/redefine-all.js","webpack:///./node_modules/core-js/internals/well-known-symbol-wrapped.js","webpack:///./node_modules/core-js/internals/perform.js","webpack:///./node_modules/core-js/modules/es.promise.js","webpack:///./node_modules/core-js/internals/copy-constructor-properties.js","webpack:///./node_modules/core-js/internals/is-array.js","webpack:///./node_modules/core-js/internals/is-array-iterator-method.js","webpack:///./node_modules/core-js/internals/new-promise-capability.js","webpack:///./node_modules/core-js/internals/classof.js","webpack:///./node_modules/core-js/internals/shared-key.js","webpack:///./node_modules/core-js/internals/to-indexed-object.js","webpack:///./node_modules/core-js/internals/dom-iterables.js","webpack:///./node_modules/core-js/internals/use-symbol-as-uid.js","webpack:///./node_modules/core-js/internals/native-promise-constructor.js"],"names":["wellKnownSymbol","TO_STRING_TAG","test","module","exports","String","aFunction","fn","that","length","undefined","call","a","b","c","apply","arguments","toIndexedObject","nativeGetOwnPropertyNames","f","toString","windowNames","window","Object","getOwnPropertyNames","getWindowNames","it","error","slice","DESCRIPTORS","propertyIsEnumerableModule","createPropertyDescriptor","toPrimitive","has","IE8_DOM_DEFINE","nativeGetOwnPropertyDescriptor","getOwnPropertyDescriptor","O","P","fails","createElement","defineProperty","get","Constructor","name","TypeError","getBuiltIn","ITERATOR","SAFE_CLOSING","called","iteratorWithReturn","next","done","this","Array","from","exec","SKIP_CLOSING","ITERATION_SUPPORT","object","userAgent","anObject","isArrayIteratorMethod","toLength","bind","getIteratorMethod","iteratorClose","Result","stopped","result","iterable","unboundFunction","options","iterator","iterFn","index","step","AS_ENTRIES","IS_ITERATOR","INTERRUPTED","stop","condition","callFn","value","toInteger","max","Math","min","integer","global","createNonEnumerableProperty","redefine","setGlobal","copyConstructorProperties","isForced","source","FORCED","target","key","targetProperty","sourceProperty","descriptor","TARGET","GLOBAL","STATIC","stat","prototype","noTargetGet","forced","sham","internalObjectKeys","enumBugKeys","hiddenKeys","concat","definePropertyModule","SPECIES","CONSTRUCTOR_NAME","configurable","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","returnMethod","emptyObject","freeze","isUndef","v","isDef","isTrue","isFalse","isPrimitive","isObject","obj","_toString","isPlainObject","isRegExp","isValidArrayIndex","val","n","parseFloat","floor","isFinite","isPromise","then","catch","isArray","JSON","stringify","toNumber","isNaN","makeMap","str","expectsLowerCase","map","create","list","split","i","toLowerCase","isReservedAttribute","remove","arr","item","indexOf","splice","hasOwnProperty","hasOwn","cached","cache","hit","camelizeRE","camelize","replace","_","toUpperCase","capitalize","charAt","hyphenateRE","hyphenate","polyfillBind","ctx","boundFn","l","_length","nativeBind","Function","toArray","start","ret","extend","to","_from","toObject","res","noop","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","every","e","Date","getTime","keysA","keys","keysB","looseIndexOf","once","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","config","optionMergeStrategies","silent","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","async","_lifecycleHooks","unicodeRegExp","isReserved","charCodeAt","def","enumerable","writable","bailRE","RegExp","parsePath","path","segments","_isServer","hasProto","inBrowser","inWeex","WXEnvironment","platform","weexPlatform","UA","navigator","isIE","isIE9","isEdge","isIOS","isFF","match","nativeWatch","watch","supportsPassive","opts","addEventListener","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Symbol","Reflect","ownKeys","Set","set","clear","warn","uid","Dep","id","subs","addSub","sub","push","removeSub","depend","addDep","notify","update","targetStack","pushTarget","popTarget","pop","VNode","tag","data","children","text","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","raw","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","child","defineProperties","createEmptyVNode","node","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","methodsToPatch","forEach","method","original","args","len","inserted","ob","__ob__","observeArray","dep","arrayKeys","shouldObserve","toggleObserving","Observer","vmCount","protoAugment","copyAugment","walk","src","__proto__","observe","asRootData","isExtensible","_isVue","defineReactive$$1","customSetter","shallow","property","getter","setter","childOb","dependArray","newVal","del","items","strats","mergeData","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","dedupeHooks","hooks","mergeAssets","type","key$1","props","methods","inject","computed","provide","defaultStrat","normalizeProps","normalizeInject","normalized","normalizeDirectives","dirs","directives","def$$1","mergeOptions","_base","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","getPropDefaultValue","prevShouldObserve","default","_props","getType","isSameType","expectedTypes","handleError","err","info","cur","$parent","errorCaptured","capture","globalHandleError","invokeWithErrorHandling","handler","_handled","logError","console","timerFunc","isUsingMicroTask","callbacks","pending","flushCallbacks","copies","Promise","p","resolve","setTimeout","MutationObserver","setImmediate","counter","observer","textNode","document","createTextNode","characterData","nextTick","cb","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","passive","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","createOnceHandler","old","event","params","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","extractPropsFromVNodeData","attrs","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","lastIndex","last","shift","_isVList","initProvide","_provided","initInjections","resolveInject","provideKey","provideDefault","resolveSlots","slots","slot","name$1","isWhitespace","normalizeScopedSlots","normalSlots","prevSlots","hasNormalSlots","isStable","$stable","$key","_normalized","$hasNormal","normalizeScopedSlot","key$2","proxyNormalSlot","proxy","renderList","renderSlot","fallback","bindObject","nodes","scopedSlotFn","$scopedSlots","$slots","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","loop","domProps","camelizedKey","hyphenatedKey","$event","renderStatic","isInFor","_staticTrees","tree","_renderProxy","markStatic","markOnce","markStaticNode","bindObjectListeners","ours","resolveScopedSlots","hasDynamicKeys","contentHashKey","bindDynamicKeys","baseObj","values","prependModifier","symbol","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","_d","_p","FunctionalRenderContext","contextVm","this$1","_original","isCompiled","needNormalization","listeners","injections","scopedSlots","_c","d","createFunctionalComponent","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","clone","componentVNodeHooks","init","hydrating","_isDestroyed","keepAlive","mountedNode","prepatch","createComponentInstanceForVnode","activeInstance","$mount","oldVnode","updateChildComponent","insert","_isMounted","callHook","queueActivatedComponent","activateChildComponent","destroy","deactivateChildComponent","$destroy","hooksToMerge","createComponent","baseCtor","cid","resolveAsyncComponent","createAsyncPlaceholder","resolveConstructorOptions","model","transformModel","nativeOn","abstract","installComponentHooks","_isComponent","_parentVnode","inlineTemplate","toMerge","_merged","mergeHook$1","f1","f2","callback","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","_createElement","is","pre","applyNS","registerDeepBindings","force","style","class","initRender","_vnode","parentVnode","_renderChildren","parentData","_parentListeners","currentRenderingInstance","renderMixin","Vue","$nextTick","_render","ref","ensureCtor","comp","base","__esModule","toStringTag","factory","errorComp","resolved","owner","owners","loading","loadingComp","sync","timerLoading","timerTimeout","$on","forceRender","renderCompleted","$forceUpdate","clearTimeout","reject","reason","component","delay","timeout","getFirstComponentChild","initEvents","_events","_hasHookEvent","updateComponentListeners","remove$1","$off","_target","onceHandler","oldListeners","eventsMixin","hookRE","$once","i$1","cbs","$emit","setActiveInstance","prevActiveInstance","initLifecycle","$children","$refs","_watcher","_inactive","_directInactive","_isBeingDestroyed","lifecycleMixin","_update","prevEl","$el","prevVnode","restoreActiveInstance","__patch__","__vue__","teardown","_watchers","_data","mountComponent","el","updateComponent","Watcher","before","renderChildren","newScopedSlots","oldScopedSlots","hasDynamicScopedSlot","needsForceUpdate","$attrs","$listeners","propKeys","_propKeys","isInInactiveTree","direct","handlers","j","queue","activatedChildren","waiting","flushing","resetSchedulerState","currentFlushTimestamp","getNow","now","createEvent","timeStamp","flushSchedulerQueue","watcher","sort","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","emit","queueWatcher","uid$2","expOrFn","isRenderWatcher","deep","user","lazy","active","dirty","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","tmp","oldValue","evaluate","sharedPropertyDefinition","sourceKey","initState","initProps","initMethods","initData","initComputed","initWatch","propsOptions","isRoot","getData","computedWatcherOptions","watchers","_computedWatchers","isSSR","userDef","defineComputed","shouldCache","createComputedGetter","createGetterInvoker","createWatcher","$watch","stateMixin","dataDef","propsDef","$set","$delete","immediate","uid$3","initMixin","_init","_uid","initInternalComponent","constructor","_self","vnodeComponentOptions","_componentTag","super","superOptions","cachedSuperOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","sealed","sealedOptions","initUse","use","plugin","installedPlugins","_installedPlugins","unshift","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","keepAliveInstance","filter","cachedNode","pruneCacheEntry","current","cached$$1","patternTypes","KeepAlive","include","exclude","Number","created","destroyed","mounted","ref$1","parseInt","builtInComponents","initGlobalAPI","configDef","util","defineReactive","delete","observable","version","acceptValue","attr","isEnumeratedAttr","isValidContentEditableValue","convertEnumeratedValue","isFalsyAttrValue","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","genClassForVnode","parentNode","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","HTMLUnknownElement","HTMLElement","isTextInputType","query","selected","querySelector","createElement$1","tagName","multiple","setAttribute","createElementNS","namespace","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","setStyleScope","nodeOps","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","sameInputType","typeA","typeB","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","modules","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","parentElm","refElm","nested","ownerArray","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","end","hydrate","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","hasChildNodes","innerHTML","childrenMatch","firstChild","fullInvoke","isInitialPatch","isRealElement","nodeType","hasAttribute","removeAttribute","oldElm","_leaveCb","patchable","i$2","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldArg","arg","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","join","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","removeEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","target$1","klass","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","normalizeEvents","change","createOnceHandler$1","remove$2","useMicrotaskFix","add$1","attachedTimestamp","_wrapper","currentTarget","ownerDocument","updateDOMListeners","svgContainer","events","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","activeElement","_vModifiers","number","trim","parseStyleText","cssText","listDelimiter","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","getStyle","checkChild","styleData","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","whitespaceRE","addClass","classList","getAttribute","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","s","enter","toggleDisplay","cancelled","_enterCb","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","platformModules","patch","vmodel","trigger","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","o","needReset","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","initEvent","dispatchEvent","locateNode","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","isNotTextNode","isVShowDirective","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","beforeMount","kept","prevChildren","rawChildren","transitionData","removed","c$1","pos","getBoundingClientRect","updated","hasMove","callPendingCbs","recordPosition","applyTranslation","_reflow","body","offsetHeight","moved","transform","WebkitTransform","transitionDuration","_moveCb","propertyName","_hasMove","cloneNode","newPos","oldPos","dx","left","dy","top","platformComponents","defer","channel","port","html","IS_IOS","IS_NODE","location","clearImmediate","process","MessageChannel","Dispatch","ONREADYSTATECHANGE","runner","listener","post","postMessage","protocol","host","port2","port1","onmessage","importScripts","versions","v8","classof","Iterators","objectKeys","Properties","InternalStateModule","defineIterator","STRING_ITERATOR","setInternalState","getInternalState","getterFor","iterated","string","point","state","propertyIsEnumerable","UNSCOPABLES","ArrayPrototype","defaultConstructor","S","C","getOwnPropertySymbols","toAbsoluteIndex","createMethod","IS_INCLUDES","$this","fromIndex","includes","argument","_typeof","IS_PURE","store","copyright","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","bitmap","IndexedObject","nativeAssign","assign","A","B","alphabet","chr","T","argumentsLength","requireObjectCoercible","CONVERT_TO_STRING","first","second","position","size","codeAt","originalArray","NATIVE_WEAK_MAP","objectHas","shared","sharedKey","WeakMap","enforce","TYPE","wmget","wmhas","wmset","metadata","facade","STATE","inspectSource","enforceInternalState","TEMPLATE","unsafe","simple","wrappedWellKnownSymbolModule","NAME","activeXDocument","documentCreateElement","GT","LT","PROTOTYPE","SCRIPT","IE_PROTO","EmptyConstructor","scriptTag","content","NullProtoObjectViaActiveX","write","close","temp","parentWindow","NullProtoObjectViaIFrame","iframeDocument","iframe","JS","contentWindow","open","F","NullProtoObject","domain","ActiveXObject","$","createIteratorConstructor","getPrototypeOf","setPrototypeOf","setToStringTag","IteratorsCore","IteratorPrototype","BUGGY_SAFARI_ITERATORS","KEYS","VALUES","ENTRIES","returnThis","Iterable","IteratorConstructor","DEFAULT","IS_SET","CurrentIteratorPrototype","KEY","getIterationMethod","KIND","defaultIterator","IterablePrototype","INCORRECT_VALUES_NAME","nativeIterator","anyNativeIterator","entries","proto","functionToString","postfix","random","replacement","feature","detection","POLYFILL","NATIVE","nativeDefineProperty","Attributes","NATIVE_SYMBOL","USE_SYMBOL_AS_UID","nativeObjectCreate","getOwnPropertyNamesExternal","getOwnPropertyDescriptorModule","defineWellKnownSymbol","$forEach","HIDDEN","SYMBOL","TO_PRIMITIVE","ObjectPrototype","$Symbol","$stringify","nativePropertyIsEnumerable","AllSymbols","ObjectPrototypeSymbols","StringToSymbolRegistry","SymbolToStringRegistry","WellKnownSymbolsStore","QObject","USE_SETTER","findChild","setSymbolDescriptor","ObjectPrototypeDescriptor","wrap","description","isSymbol","$defineProperty","$defineProperties","properties","$getOwnPropertySymbols","$propertyIsEnumerable","$create","V","$getOwnPropertyDescriptor","$getOwnPropertyNames","names","IS_OBJECT_PROTOTYPE","keyFor","sym","useSetter","useSimple","FORCED_JSON_STRINGIFY","replacer","space","$replacer","valueOf","ceil","NativePromise","speciesConstructor","promiseResolve","NON_GENERIC","real","onFinally","isFunction","x","PrototypeOfArrayIteratorPrototype","arrayIterator","NEW_ITERATOR_PROTOTYPE","TO_STRING_TAG_SUPPORT","FunctionPrototype","FunctionPrototypeToString","nameRE","flush","head","toggle","promise","macrotask","IS_WEBOS_WEBKIT","WebKitMutationObserver","queueMicrotaskDescriptor","queueMicrotask","exit","task","createWellKnownSymbol","withoutSetter","arraySpeciesCreate","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","IS_FILTER_OUT","NO_HOLES","callbackfn","specificCreate","self","boundFunction","find","findIndex","filterOut","input","PREFERRED_STRING","SHARED","g","EXISTS","__mxOutput","mxClient","VERSION","IS_IE","IS_IE6","IS_IE11","IS_EDGE","IS_QUIRKS","documentMode","IS_EM","VML_PREFIX","OFFICE_PREFIX","IS_NS","IS_OP","IS_OT","IS_SF","vendor","IS_ANDROID","appVersion","IS_GC","IS_CHROMEAPP","chrome","app","runtime","IS_FF","InstallTrigger","IS_MT","IS_VML","appName","IS_SVG","NO_FO","IS_WIN","IS_MAC","IS_CHROMEOS","IS_TOUCH","documentElement","IS_POINTER","PointerEvent","IS_LOCAL","href","defaultBundles","isBrowserSupported","link","rel","doc","getElementsByTagName","loadResources","lan","mxResources","mxLoadResources","mxForceIncludes","mxResourceExtension","mxLoadStylesheets","mxBasePath","substring","basePath","mxImageBasePath","imageBasePath","mxLanguage","language","userLanguage","mxDefaultLanguage","defaultLanguage","mxLanguages","languages","namespaces","styleSheets","styleSheet","createStyleSheet","mxLog","consoleName","TRACE","DEBUG","WARN","buffer","title","table","tbody","tr","td","verticalAlign","textarea","height","resize","compatMode","width","addButton","evt","mxUtils","getInnerHtml","debug","copy","alert","popup","w","innerHeight","innerWidth","clientHeight","clientWidth","mxWindow","setMaximizable","setScrollable","setResizable","setClosable","destroyOnClose","elt","getElement","resizeHandler","sender","addListener","mxEvent","RESIZE_END","MAXIMIZE","NORMALIZE","writeln","lab","funct","button","isVisible","setVisible","visible","t0","dt","visibility","scrollTop","scrollHeight","mxObjectIdentity","FIELD_NAME","ctor","getFunctionName","mxDictionary","put","previous","getKeys","getValues","visit","visitor","resources","extension","resourcesEncoded","loadDefaultBundle","loadSpecialBundle","isLanguageSupported","getDefaultBundle","basename","getSpecialBundle","dash","mxConstants","NONE","defaultBundle","specialBundle","req","parse","getText","load","isReady","lines","idx","unescape","defaultValue","replacePlaceholders","mxPoint","y","mxRectangle","equals","setRect","getCenterX","getCenterY","rect","minX","minY","maxX","maxY","intersect","r1","r2","b1","b2","grow","amount","getPoint","rotate90","t","fromRectangle","mxEffects","animateChanges","graph","changes","maxStep","animate","isRequired","mxGeometryChange","mxTerminalChange","mxValueChange","mxChildChange","mxStyleChange","getView","getState","cell","setOpacity","shape","scale","geometry","sx","sy","cellRenderer","redraw","cascadeOpacity","opacity","childCount","getChildCount","getChildAt","childState","edges","getEdges","edgeState","fadeOut","isEnabled","errorResource","closeResource","errorImage","removeCursors","element","cursor","getCurrentStyle","currentStyle","parseCssNumber","setPrefixedStyle","prefix","hasScrollbars","overflow","scope","eval","expr","_mxJavaScriptExpression","message","findNode","NODETYPE_ELEMENT","ltrim","idx2","array","isNode","nodeName","attributeName","attributeValue","isAncestorNode","getChildNodes","importNode","allChildren","importNodeImplementation","attributes","nodeValue","createXmlDocument","implementation","createDocument","createMsXmlDocument","validateOnParse","resolveExternals","parseXml","DOMParser","xml","parser","parseFromString","loadXML","clearSelection","selection","empty","getSelection","removeAllRanges","removeWhitespace","previousSibling","NODETYPE_TEXT","getTextContent","htmlEntities","newline","isVml","tagUrn","getXml","linefeed","getPrettyXml","XMLSerializer","xmlSerializer","serializeToString","tab","indent","namespaceURI","NODETYPE_DOCUMENT","NODETYPE_DOCUMENT_FRAGMENT","NODETYPE_COMMENT","NODETYPE_CDATA","extractTextWithWhitespace","elems","blocks","doExtract","elts","elem","replaceTrailingNewlines","innerText","serializer","getOuterHtml","outerHTML","br","count","label","para","addTransparentBackgroundFilter","linkAction","editor","action","pad","execute","linkInvoke","functName","color","textDecoration","paddingLeft","getDocumentSize","fit","ds","offsetLeft","offsetWidth","offset","getDocumentScrollOrigin","sl","st","right","offsetTop","bottom","url","mxXmlRequest","send","onload","onerror","binary","ontimeout","headers","setRequestHeaders","request","setRequestHeader","setBinary","getAll","urls","remain","errors","status","getStatus","submit","simulate","loadInto","onreadystatechange","readyState","getNumber","getColor","transients","equalPoints","equalEntries","removeDuplicates","dict","superCtor","output","toRadians","deg","PI","toDegree","rad","arcToCurves","x0","y0","angle","largeArcFlag","sweepFlag","fS","psai","abs","sds","cty","cpsi","cos","spsi","sin","rxd","ryd","rxdd","rydd","r1x","r2y","lamda","sqrt","seif","txd","tyd","tx","ty","atan2","s1","dr","sse","seg","segr","cpsir1","cpsir2","spsir1","spsir2","mc","ms","x2","y2","x3","y3","getBoundingBox","rotation","cx","p1","p2","p3","p4","getRotatedPoint","pt","x1","y1","getPortConstraints","terminal","edge","STYLE_PORT_CONSTRAINT","STYLE_SOURCE_PORT_CONSTRAINT","STYLE_TARGET_PORT_CONSTRAINT","directions","returnValue","DIRECTION_MASK_NONE","constraintRotationEnabled","STYLE_PORT_CONSTRAINT_ROTATION","STYLE_ROTATION","quad","DIRECTION_NORTH","DIRECTION_MASK_NORTH","DIRECTION_MASK_EAST","DIRECTION_MASK_SOUTH","DIRECTION_MASK_WEST","DIRECTION_WEST","DIRECTION_SOUTH","DIRECTION_EAST","reversePortConstraints","constraint","findNearestSegment","absolutePoints","dist","ptSegDistSq","getDirectedBounds","m","flipH","flipV","STYLE_DIRECTION","STYLE_FLIPH","STYLE_FLIPV","round","m2","getPerimeterPoint","pts","center","intersection","ip","distSq","rectangleIntersectsSegment","bounds","contains","intersects","tw","th","rw","rh","rx","ry","intersectsHotspot","hotspot","cy","STYLE_STARTSIZE","view","STYLE_HORIZONTAL","alpha","getOffset","container","scrollOffset","fixed","r","scrollLeft","wnd","defaultView","pageXOffset","pageYOffset","getScrollOrigin","includeAncestors","includeDocument","origin","convertPoint","chars","rtrim","isNumeric","isInteger","mod","denom","nume_a","nume_b","ua","ub","px","py","projlenSq","dotprod","lenSq","ptLineDist","relativeCcw","ccw","createImage","imageNode","borderStyle","sortCells","cells","ascending","lookup","o1","o2","mxCellPath","PATH_SEPARATOR","compare","getStylename","pairs","stylename","getStylenames","indexOfStylename","tokens","addStylename","removeStylename","removeAllStylenames","setCellStyles","beginUpdate","setStyle","endUpdate","isValue","sep","setCellStyleFlags","flag","setStyleFlag","cont","getAlignmentAsPoint","align","valign","ALIGN_LEFT","ALIGN_RIGHT","ALIGN_TOP","ALIGN_BOTTOM","getSizeForString","fontSize","fontFamily","textWidth","fontStyle","DEFAULT_FONTSIZE","DEFAULT_FONTFAMILY","div","lineHeight","LINE_HEIGHT","FONT_BOLD","fontWeight","FONT_ITALIC","txtDecor","FONT_UNDERLINE","FONT_STRIKETHROUGH","zoom","whiteSpace","getViewXml","getModel","getRoot","eventsEnabled","isEventsEnabled","setEventsEnabled","drawPane","overlayPane","dialect","DIALECT_SVG","NS_SVG","canvas","translate","getTranslate","mxTemporaryCellStates","enc","mxCodec","encode","getScaleForPageCount","pageCount","pageFormat","border","PAGE_FORMAT_A4_PORTRAIT","availablePageWidth","availablePageHeight","graphBounds","getGraphBounds","sc","getScale","graphWidth","graphHeight","pageFormatAspectRatio","graphAspectRatio","pagesAspectRatio","pageRoot","pagesAspectRatioSqrt","numRowPages","numColumnPages","scaleChange","currentTotalPages","numLoops","roundRowDownProportion","roundColumnDownProportion","posterWidth","links","outer","ownerSVGElement","minWidth","minHeight","printScreen","print","focus","isInternalWindow","prompt","confirm","icon","padding","img","makeDraggable","graphF","dragElement","autoscroll","scalePreview","highlightDropTargets","getDropTarget","dragSource","mxDragSource","dragOffset","TOOLTIP_VERTICAL_OFFSET","setGuidesEnabled","getGraphForEvent","createDragElement","createPreviewElement","DEFAULT_HOTSPOT","MIN_HOTSPOT_SIZE","MAX_HOTSPOT_SIZE","RENDERING_HINT_EXACT","RENDERING_HINT_FASTER","RENDERING_HINT_FASTEST","DIALECT_VML","DIALECT_MIXEDHTML","DIALECT_PREFERHTML","DIALECT_STRICTHTML","NS_XHTML","NS_XLINK","SHADOWCOLOR","VML_SHADOWCOLOR","SHADOW_OFFSET_X","SHADOW_OFFSET_Y","SHADOW_OPACITY","NODETYPE_ATTRIBUTE","NODETYPE_ENTITY_REFERENCE","NODETYPE_ENTITY","NODETYPE_PROCESSING_INSTRUCTION","NODETYPE_DOCUMENTTYPE","NODETYPE_NOTATION","DEFAULT_VALID_COLOR","DEFAULT_INVALID_COLOR","OUTLINE_HIGHLIGHT_COLOR","OUTLINE_HIGHLIGHT_STROKEWIDTH","HIGHLIGHT_STROKEWIDTH","HIGHLIGHT_SIZE","HIGHLIGHT_OPACITY","CURSOR_MOVABLE_VERTEX","CURSOR_MOVABLE_EDGE","CURSOR_LABEL_HANDLE","CURSOR_TERMINAL_HANDLE","CURSOR_BEND_HANDLE","CURSOR_VIRTUAL_BEND_HANDLE","CURSOR_CONNECT","HIGHLIGHT_COLOR","CONNECT_TARGET_COLOR","INVALID_CONNECT_TARGET_COLOR","DROP_TARGET_COLOR","VALID_COLOR","INVALID_COLOR","EDGE_SELECTION_COLOR","VERTEX_SELECTION_COLOR","VERTEX_SELECTION_STROKEWIDTH","EDGE_SELECTION_STROKEWIDTH","VERTEX_SELECTION_DASHED","EDGE_SELECTION_DASHED","GUIDE_COLOR","GUIDE_STROKEWIDTH","OUTLINE_COLOR","OUTLINE_STROKEWIDTH","HANDLE_SIZE","LABEL_HANDLE_SIZE","HANDLE_FILLCOLOR","HANDLE_STROKECOLOR","LABEL_HANDLE_FILLCOLOR","CONNECT_HANDLE_FILLCOLOR","LOCKED_HANDLE_FILLCOLOR","OUTLINE_HANDLE_FILLCOLOR","OUTLINE_HANDLE_STROKECOLOR","DEFAULT_TEXT_DIRECTION","WORD_WRAP","ABSOLUTE_LINE_HEIGHT","DEFAULT_FONTSTYLE","DEFAULT_STARTSIZE","DEFAULT_MARKERSIZE","DEFAULT_IMAGESIZE","ENTITY_SEGMENT","RECTANGLE_ROUNDING_FACTOR","LINE_ARCSIZE","ARROW_SPACING","ARROW_WIDTH","ARROW_SIZE","PAGE_FORMAT_A4_LANDSCAPE","PAGE_FORMAT_LETTER_PORTRAIT","PAGE_FORMAT_LETTER_LANDSCAPE","STYLE_PERIMETER","STYLE_SOURCE_PORT","STYLE_TARGET_PORT","STYLE_OPACITY","STYLE_FILL_OPACITY","STYLE_STROKE_OPACITY","STYLE_TEXT_OPACITY","STYLE_TEXT_DIRECTION","STYLE_OVERFLOW","STYLE_ORTHOGONAL","STYLE_EXIT_X","STYLE_EXIT_Y","STYLE_EXIT_DX","STYLE_EXIT_DY","STYLE_EXIT_PERIMETER","STYLE_ENTRY_X","STYLE_ENTRY_Y","STYLE_ENTRY_DX","STYLE_ENTRY_DY","STYLE_ENTRY_PERIMETER","STYLE_WHITE_SPACE","STYLE_FILLCOLOR","STYLE_POINTER_EVENTS","STYLE_SWIMLANE_FILLCOLOR","STYLE_MARGIN","STYLE_GRADIENTCOLOR","STYLE_GRADIENT_DIRECTION","STYLE_STROKECOLOR","STYLE_SEPARATORCOLOR","STYLE_STROKEWIDTH","STYLE_ALIGN","STYLE_VERTICAL_ALIGN","STYLE_LABEL_WIDTH","STYLE_LABEL_POSITION","STYLE_VERTICAL_LABEL_POSITION","STYLE_IMAGE_ASPECT","STYLE_IMAGE_ALIGN","STYLE_IMAGE_VERTICAL_ALIGN","STYLE_GLASS","STYLE_IMAGE","STYLE_IMAGE_WIDTH","STYLE_IMAGE_HEIGHT","STYLE_IMAGE_BACKGROUND","STYLE_IMAGE_BORDER","STYLE_NOLABEL","STYLE_NOEDGESTYLE","STYLE_LABEL_BACKGROUNDCOLOR","STYLE_LABEL_BORDERCOLOR","STYLE_LABEL_PADDING","STYLE_INDICATOR_SHAPE","STYLE_INDICATOR_IMAGE","STYLE_INDICATOR_COLOR","STYLE_INDICATOR_STROKECOLOR","STYLE_INDICATOR_GRADIENTCOLOR","STYLE_INDICATOR_SPACING","STYLE_INDICATOR_WIDTH","STYLE_INDICATOR_HEIGHT","STYLE_INDICATOR_DIRECTION","STYLE_SHADOW","STYLE_SEGMENT","STYLE_ENDARROW","STYLE_STARTARROW","STYLE_ENDSIZE","STYLE_SWIMLANE_LINE","STYLE_ENDFILL","STYLE_STARTFILL","STYLE_DASHED","STYLE_DASH_PATTERN","STYLE_FIX_DASH","STYLE_ROUNDED","STYLE_CURVED","STYLE_ARCSIZE","STYLE_ABSOLUTE_ARCSIZE","STYLE_SOURCE_PERIMETER_SPACING","STYLE_TARGET_PERIMETER_SPACING","STYLE_PERIMETER_SPACING","STYLE_SPACING","STYLE_SPACING_TOP","STYLE_SPACING_LEFT","STYLE_SPACING_BOTTOM","STYLE_SPACING_RIGHT","STYLE_ANCHOR_POINT_DIRECTION","STYLE_ELBOW","STYLE_FONTCOLOR","STYLE_FONTFAMILY","STYLE_FONTSIZE","STYLE_FONTSTYLE","STYLE_ASPECT","STYLE_AUTOSIZE","STYLE_FOLDABLE","STYLE_EDITABLE","STYLE_BACKGROUND_OUTLINE","STYLE_BENDABLE","STYLE_MOVABLE","STYLE_RESIZABLE","STYLE_RESIZE_WIDTH","STYLE_RESIZE_HEIGHT","STYLE_ROTATABLE","STYLE_CLONEABLE","STYLE_DELETABLE","STYLE_SHAPE","STYLE_EDGE","STYLE_JETTY_SIZE","STYLE_SOURCE_JETTY_SIZE","STYLE_TARGET_JETTY_SIZE","STYLE_LOOP","STYLE_ORTHOGONAL_LOOP","STYLE_ROUTING_CENTER_X","STYLE_ROUTING_CENTER_Y","SHAPE_RECTANGLE","SHAPE_ELLIPSE","SHAPE_DOUBLE_ELLIPSE","SHAPE_RHOMBUS","SHAPE_LINE","SHAPE_IMAGE","SHAPE_ARROW","SHAPE_ARROW_CONNECTOR","SHAPE_LABEL","SHAPE_CYLINDER","SHAPE_SWIMLANE","SHAPE_CONNECTOR","SHAPE_ACTOR","SHAPE_CLOUD","SHAPE_TRIANGLE","SHAPE_HEXAGON","ARROW_CLASSIC","ARROW_CLASSIC_THIN","ARROW_BLOCK","ARROW_BLOCK_THIN","ARROW_OPEN","ARROW_OPEN_THIN","ARROW_OVAL","ARROW_DIAMOND","ARROW_DIAMOND_THIN","ALIGN_CENTER","ALIGN_MIDDLE","TEXT_DIRECTION_DEFAULT","TEXT_DIRECTION_AUTO","TEXT_DIRECTION_LTR","TEXT_DIRECTION_RTL","DIRECTION_MASK_ALL","ELBOW_VERTICAL","ELBOW_HORIZONTAL","EDGESTYLE_ELBOW","EDGESTYLE_ENTITY_RELATION","EDGESTYLE_LOOP","EDGESTYLE_SIDETOSIDE","EDGESTYLE_TOPTOBOTTOM","EDGESTYLE_ORTHOGONAL","EDGESTYLE_SEGMENT","PERIMETER_ELLIPSE","PERIMETER_RECTANGLE","PERIMETER_RHOMBUS","PERIMETER_HEXAGON","PERIMETER_TRIANGLE","mxEventObject","mxMouseEvent","sourceState","mxEventSource","eventSource","setEventSource","consumed","getName","getProperties","getProperty","isConsumed","consume","graphX","graphY","getEvent","getSource","isSource","getX","getClientX","getY","getClientY","getGraphX","getGraphY","getCell","isPopupTrigger","preventDefault","touches","isMouseEvent","eventListeners","getEventSource","removeListener","fireEvent","listen","updateListenerList","eventName","mxListenerList","entry","attachEvent","updateListener","listenerCount","detachEvent","removeAllListeners","addGestureListeners","startListener","moveListener","endListener","removeGestureListeners","redirectMouseEvents","down","move","up","dblClick","fireMouseEvent","MOUSE_DOWN","MOUSE_MOVE","MOUSE_UP","release","addMouseWheelListener","wheelHandler","ctrlKey","deltaY","deltaX","diff","evtCache","dx0","dy0","pointerId","clientX","clientY","PINCH_THRESHOLD","disableContextMenu","srcElement","isTouchEvent","pointerType","MSPOINTER_TYPE_TOUCH","mozInputSource","isPenEvent","MSPOINTER_TYPE_PEN","isMultiTouchEvent","MSPOINTER_TYPE_MOUSE","isLeftMouseButton","which","buttons","isMiddleMouseButton","isRightMouseButton","isControlDown","isShiftDown","isMetaDown","isAltDown","shiftKey","metaKey","getMainEvent","changedTouches","stopPropagation","cancelBubble","LABEL_HANDLE","ROTATION_HANDLE","CUSTOM_HANDLE","VIRTUAL_HANDLE","ACTIVATE","RESIZE_START","RESIZE","MOVE_START","MOVE","MOVE_END","PAN_START","PAN","PAN_END","MINIMIZE","HIDE","SHOW","CLOSE","DESTROY","REFRESH","SIZE","SELECT","FIRED","FIRE_MOUSE_EVENT","GESTURE","TAP_AND_HOLD","GET","RECEIVE","CONNECT","DISCONNECT","SUSPEND","RESUME","MARK","ROOT","POST","OPEN","SAVE","BEFORE_ADD_VERTEX","ADD_VERTEX","AFTER_ADD_VERTEX","DONE","EXECUTE","EXECUTED","BEGIN_UPDATE","START_EDIT","END_UPDATE","END_EDIT","BEFORE_UNDO","UNDO","REDO","CHANGE","NOTIFY","LAYOUT_CELLS","CLICK","SCALE","TRANSLATE","SCALE_AND_TRANSLATE","UP","DOWN","ADD","REMOVE","CLEAR","ADD_CELLS","CELLS_ADDED","MOVE_CELLS","CELLS_MOVED","RESIZE_CELLS","CELLS_RESIZED","TOGGLE_CELLS","CELLS_TOGGLED","ORDER_CELLS","CELLS_ORDERED","REMOVE_CELLS","CELLS_REMOVED","GROUP_CELLS","UNGROUP_CELLS","REMOVE_CELLS_FROM_PARENT","FOLD_CELLS","CELLS_FOLDED","ALIGN_CELLS","LABEL_CHANGED","CONNECT_CELL","CELL_CONNECTED","SPLIT_EDGE","FLIP_EDGE","START_EDITING","EDITING_STARTED","EDITING_STOPPED","ADD_OVERLAY","REMOVE_OVERLAY","UPDATE_CELL_SIZE","ESCAPE","DOUBLE_CLICK","START","RESET","username","password","withCredentials","decodeSimulateValues","isBinary","responseText","getDocumentElement","responseXML","XMLHttpRequest","overrideMimeType","onbeforeunload","form","pars","decodeURIComponent","mxClipboard","STEPSIZE","insertCount","setCells","getCells","isEmpty","cut","removeCells","getSelectionCells","getExportableCells","getTopmostCells","cloneCells","paste","getImportableCells","delta","getDefaultParent","importCells","setSelectionCells","minimizable","movable","replaceNode","installMaximizeHandler","installMinimizeHandler","installCloseHandler","setMinimizable","setTitle","installMoveHandler","replaceChild","mxForm","className","mxImage","mxDivResizer","resizeWidth","resizeHeight","handlingResize","dropHandler","mouseDown","eventConsumer","evtName","me","mxToolbar","mxUndoableEdit","significant","mxUndoManager","closeImage","minimizeImage","normalizeImage","maximizeImage","resizeImage","minimumSize","contentHeightCorrection","touchAction","contentWrapper","activator","hide","scrollable","activeWindow","zIndex","previousWindow","isResizable","resizable","startX","startY","dragHandler","setSize","minimize","getMinimumSize","marginLeft","minimized","maxDisplay","maximize","minSize","maximizable","maximized","minDisplay","docHeight","setLocation","closeImg","setImage","image","marginRight","marginTop","closable","getTable","addButtons","okFunct","cancelFunct","addText","addField","addCheckbox","checked","addTextarea","rows","addCombo","isMultiSelect","select","addOption","combo","isSelected","getDocumentWidth","getDocumentHeight","previewElement","previewOffset","enabled","currentGraph","currentDropTarget","currentPoint","currentGuide","currentHighlight","guidesEnabled","gridEnabled","dragElementZIndex","dragElementOpacity","checkEventSource","setEnabled","isGuidesEnabled","isGridEnabled","setGridEnabled","getCellAt","isActive","mouseMoveHandler","reset","dragExit","removeDragElement","removeListeners","stopDrag","startDrag","mouseMove","mouseUpHandler","mouseUp","pointerEvents","getElementForEvent","elementFromPoint","graphContainsEvent","dragEnter","dragOver","drop","isMouseDown","isMouseTrigger","mxGuide","graphHandler","getGuideStates","mxCellHighlight","panDx","panDy","autoScroll","scrollPointToVisible","autoExtend","isDropEnabled","highlight","isGridEnabledEvent","hideGuide","isEnabledForEvent","off","gridSize","snap","dropTarget","noReset","updateDefaultMode","addItem","pressedIcon","factoryMethod","initialClassName","mouseHandler","backgroundColor","menu","mxPopupMenu","currentImg","isMenuShowing","hideMenu","addActionCombo","addSwitchMode","altIcon","selectedMode","defaultMode","selectMode","addMode","defaultFunction","domNode","resetMode","addSeparator","addBreak","addLine","hr","undone","redone","isSignificant","die","undo","redo","history","indexOfNextAdd","canUndo","edit","canRedo","undoableEditHappened","undoableEdit","edits","mxUrlConverter","mxPanningManager","thread","tdx","tdy","t0x","t0y","scrollbars","mouseListener","addMouseListener","mouseUpListener","createThread","setInterval","panGraph","getDx","getDy","panTo","handleMouseOut","damper","clearInterval","setTranslate","removeMouseListener","mxAutoSaveManager","changeHandler","graphModelChanged","setGraph","mxAnimation","mxMorphing","steps","ease","mxImageBundle","alt","images","mxImageExport","mxAbstractCanvas2D","converter","createUrlConverter","mxXmlCanvas2D","root","writeDefaults","mxSvgCanvas2D","styleEnabled","gradients","defs","createStyle","baseUrl","baseDomain","updateBaseUrl","pathname","lastIndexOf","getBaseUrl","setBaseUrl","getBaseDomain","setBaseDomain","isRelativeUrl","convert","submenuImage","useLeftButtonForPopup","itemCount","autoExpand","smartSeparators","labels","iconCls","noHover","willAddSeparator","containsItems","col1","col2","col3","paddingRight","textAlign","createSubmenu","currentSelection","eventReceiver","activeRow","hideSubmenu","showSubmenu","createRange","addCheckmark","backgroundImage","backgroundRepeat","backgroundPosition","row","showMenu","autoSaveDelay","autoSaveThrottle","autoSaveThreshold","ignoredChanges","lastSnapshot","save","isRunning","startAnimation","updateAnimation","stopAnimation","mxCellStatePreview","animateCell","recurse","getDelta","isVertex","moveState","stopRecursion","getOriginForCell","getParent","geo","getCellGeometry","relative","pgeo","putImage","getImage","includeOverlays","drawState","visitStatesRecursive","drawCellState","drawOverlays","getLinkForCellState","setLink","drawShape","drawText","mxShape","checkBounds","beforePaint","paint","afterPaint","restore","overlays","states","rotateHtml","lastX","lastY","moveOp","lineOp","quadOp","curveOp","closeOp","createState","fillAlpha","strokeAlpha","fillColor","gradientFillAlpha","gradientColor","gradientAlpha","gradientDirection","strokeColor","strokeWidth","dashed","dashPattern","fixDash","lineCap","lineJoin","miterLimit","fontColor","fontBackgroundColor","fontBorderColor","shadow","shadowColor","shadowAlpha","shadowDx","shadowDy","rotationCx","rotationCy","format","addOp","rotatePoint","theta","rotate","setAlpha","setFillAlpha","setStrokeAlpha","setFillColor","setGradient","color1","color2","direction","alpha1","alpha2","setStrokeColor","setStrokeWidth","setDashed","setDashPattern","setLineCap","setLineJoin","setMiterLimit","setFontColor","setFontBackgroundColor","setFontBorderColor","setFontSize","setFontFamily","setFontStyle","setShadow","setShadowColor","setShadowAlpha","setShadowOffset","begin","moveTo","lineTo","quadTo","curveTo","arcTo","curves","textEnabled","compressed","toFixed","roundrect","ellipse","aspect","clip","stroke","fill","fillAndStroke","useDomParser","useAbsoluteIds","matchHtmlAlignment","foEnabled","foAltText","foOffset","textOffset","imageOffset","strokeTolerance","minStrokeWidth","refCount","lineHeightCorrection","pointerEventsValue","fontMetricsPadding","cacheOffsetSize","getAlternateText","fo","createAlternateContent","anchor","createGradientId","getSvgGradient","gradient","tmpId","getElementById","createSvgGradient","op","addNode","filled","stroked","updateFill","updateStroke","createShadow","createTolerance","originalRoot","getCurrentStrokeWidth","sw","updateStrokeAttributes","createDashPattern","pat","tol","convertHtml","xd","xb","adoptNode","ta","createDiv","div2","div3","updateText","updateTextNodes","addForeignObject","group","createCss","getTextCss","flex","block","box","yp","bg","ofl","fw","fh","bgc","lh","deco","plainText","createClip","updateFont","textHeight","addTextBackground","bbox","getBBox","ie","mxVmlCanvas2D","setStates","stencil","initStyles","mxStencil","desc","parseDescription","parseConstraints","rotatedHtmlBackground","vmlScale","createVmlElement","coordsize","strokeweight","strokecolor","createStroke","createFill","createTransparentFill","flip","endcap","joinstyle","miterlimit","dashstyle","getVmlDashStyle","tok","createShadowStroke","createShadowFill","cpx0","cpy0","qpx1","qpy1","cpx3","cpy3","cpx1","cpy1","cpx2","cpy2","createRect","margin","inner","wordWrap","rot","maxHeight","real_cos","real_sin","sizeDiv","oh","top_fix","left_fix","divParent","textpathok","tp","horizontal","vertical","guideX","guideY","rounded","tolerance","getGuideTolerance","createGuideShape","guide","mxPolyline","isDashed","isStateIgnored","tt","overrideX","stateX","valueX","overrideY","stateY","valueY","ttX","ttY","middle","snapX","centerAlign","override","getOverlayPane","snapY","snapDelta","points","getGuideColor","scrollWidth","antiAlias","minSvgStrokeWidth","boundingBox","svgStrokeTolerance","svgPointerEvents","shapePointerEvents","stencilPointerEvents","outline","useSvgBoundingBox","strokewidth","fillOpacity","strokeOpacity","isParseVml","isHtmlAllowed","getSvgScreenOffset","createSvg","createHtml","createVml","reconfigure","updateBoundsFromPoints","redrawShape","redrawHtmlShape","updateBoundingBox","lastChild","getLabelBounds","isPaintBoundsInverted","getLabelMargins","createVmlGroup","createCanvas","insertAdjacentHTML","destroyCanvas","createSvgCanvas","updateVmlContainer","createVmlCanvas","updateHtmlBounds","updateHtmlFilters","updateHtmlColors","isShadow","east","south","west","north","borderColor","borderWidth","setTransparentBackgroundImage","mxRefCount","releaseSvgGradients","oldGradients","strokeDrawn","updateTransform","configureCanvas","bb","createBoundingBox","createTransparentSvgRectangle","paintEdgeShape","paintVertexShape","getGradientBounds","getShapeRotation","paintBackground","paintForeground","getArcSize","paintGlassEffect","arc","isRounded","addPoints","arcSize","initialMove","pe","p0","wp","nx1","ny1","nx2","ny2","resetStyles","spacing","startSize","endSize","startArrow","endArrow","glass","setCursor","getCursor","isRoundable","augmentBoundingBox","getRotation","getTextRotation","mxText","verticalTextRotation","grads","defaultLocalized","allowEval","constraints","w0","h0","bgNode","fgNode","conns","parseConstraint","perimeter","mxConnectionConstraint","evaluateTextAttribute","attribute","evaluateAttribute","loc","stack","computeAspect","minScale","drawChildren","disableShadow","drawNode","inverse","parseRegularly","pointCount","segs","childName","ps","arcsize","factor","mxStencilRegistry","getStencil","stencils","addStencil","mxMarker","markers","addMarker","createMarker","unitX","unitY","mxActor","mxCloud","mxRectangleShape","mxEllipse","mxDoubleEllipse","mxRhombus","mxArrow","arrowWidth","mxArrowConnector","arrowSpacing","family","spacingTop","spacingRight","spacingBottom","spacingLeft","background","clipped","labelPadding","textDirection","updateMargin","mxTriangle","mxHexagon","mxLine","mxImageShape","mxLabel","mxCylinder","mxConnector","mxSwimlane","mxGraphLayout","WeightedCellSorter","weightedValue","mxStackLayout","mxPartitionLayout","mxCompactTreeLayout","invert","mxRadialTreeLayout","mxFastOrganicLayout","mxCircleLayout","radius","mxParallelEdgeLayout","mxCompositeLayout","layouts","master","mxEdgeLabelLayout","mxGraphAbstractHierarchyCell","mxGraphHierarchyNode","connectsAsTarget","connectsAsSource","mxGraphHierarchyEdge","ids","mxGraphHierarchyModel","layout","vertices","roots","tightenToSource","getGraph","vertexMapper","edgeMapper","maxRank","internalVertices","getChildVertices","SOURCESCANSTARTRANK","createInternalCells","internalEdge","realEdges","realEdge","targetCell","getVisibleTerminal","internalTargetCell","mxSwimlaneModel","mxHierarchicalLayoutStage","mxMedianHybridCrossingReduction","MedianCellSorter","mxMinimumCycleRemover","mxCoordinateAssignment","intraCellSpacing","interRankCellSpacing","orientation","initialX","parallelEdgeSpacing","mxSwimlaneOrdering","mxHierarchicalLayout","deterministic","createArrow","widthFactor","endOffsetX","endOffsetY","createOpenArrow","diamond","swFactor","tk","redrawPath","hw","hh","prev","paintLine","paintCurvedLine","ix","iy","arrow","nx","ny","basex","basey","floorx","floory","p0x","p0y","p1x","p1y","p2x","p2y","p3x","p3y","p5x","p5y","getEdgeWidth","isMarkerStart","getStartArrowWidth","isMarkerEnd","getEndArrowWidth","startWidth","endWidth","edgeWidth","openEnded","isOpenEnded","markerStart","markerEnd","isArrowRounded","i0","orthx","orthy","startNx","startNy","paintMarker","outStartX","outStartY","inEndX","inEndY","dx1","dy1","dist1","tmp1","dist2","strokeWidthFactor","angleFactor","outX","outY","inX","inY","c1x","c1y","c2x","c2y","inStartX","inStartY","ptX","ptY","widthArrowRatio","spaceX","spaceY","baseSpacingTop","baseSpacingBottom","baseSpacingLeft","baseSpacingRight","replaceLinefeeds","ignoreClippedStringSize","ignoreStringSize","textWidthPadding","lastValue","cacheEnabled","realHtml","fmt","getAutoDirection","redrawHtmlShapeWithCss3","updateSize","textDiv","updateHtmlFilter","updateHtmlTransform","getContentNode","ow","updateInnerHtml","divs","unrotatedBoundingBox","getHtmlValue","updateValue","bd","enableWrap","maxWidth","getSpacing","mid","preserveImageAspect","useVml","imageSize","indicatorSize","indicatorSpacing","indicatorShape","indicator","indicatorColor","indicatorStrokeColor","indicatorGradientColor","indicatorDirection","paintImage","paintIndicator","getImageBounds","getIndicatorBounds","indicatorImage","getCylinderSize","isForeground","sourceMarker","targetMarker","getTitleSize","isHorizontal","shapeVertical","realHorizontal","realFlipH","realFlipV","getSwimlaneArcSize","swimlaneLine","paintRoundedSwimlane","paintSwimlane","paintSeparator","paintDivider","useBoundingBox","moveCell","resizeCell","getConstraint","getCurrentCellStyle","vertex","directed","func","visited","edgeCount","getEdgeCount","getEdgeAt","getTerminal","isAncestor","traverseAncestors","isVertexMovable","isCellMovable","isVertexIgnored","isCellVisible","isEdgeIgnored","setEdgeStyleEnabled","setOrthogonalEdge","getParentOffset","parentGeo","getGeometry","setEdgePoints","mxGeometry","setRelative","parentOffset","setGeometry","setVertexLocation","getVertexBounds","arrangeGroups","topBorder","rightBorder","bottomBorder","leftBorder","updateGroupBounds","nudge","rankIndex","marginBottom","keepFirstLocation","resizeParent","resizeParentMax","resizeLast","borderCollapse","allowGaps","pstate","getIndex","getParentSize","isLayer","currentRoot","getLayoutCells","c1","c2","geo1","geo2","fillValue","isSwimlane","getCellStyle","horz","childStyle","setChildGeometry","isCellCollapsed","updateParentGeometry","pgeo2","resizeVertices","other","getStartSize","maintainParentLocation","groupPadding","groupPaddingTop","groupPaddingRight","groupPaddingBottom","groupPaddingLeft","parentsChanged","moveTree","levelDistance","nodeDistance","resetEdges","prefHozEdgeSep","prefVertEdgeOff","minEdgeJetty","channelBuffer","edgeRouting","sortEdges","alignRanks","maxRankHeight","getConnections","findTreeRoots","parentX","parentY","dfs","findRankHeights","setCellHeights","horizontalLayout","verticalLayout","moveNode","adjustParents","localEdgeProcessing","sortOutgoingEdges","e1","e2","end1","end2","rank","createNode","out","attachParent","layoutLeaf","offsetX","offsetY","siblingOffset","contour","upperHead","createLine","lowerHead","upperTail","lowerTail","sum","merge","total","upper","lower","bridge","a1","a2","line1","line2","line","processNodeOutgoing","parentCell","sortedCells","sortingCriterion","availableWidth","requiredWidth","edgeSpacing","currentXOffset","currentYOffset","maxYOffset","parentBounds","childCell","childBounds","getEdgesBetween","newPoints","angleOffset","rootx","rooty","autoRadius","rowMinX","rowMaxX","rowMinCenX","rowMaxCenX","rowRadi","rootBounds","centerX","centerY","vertexBounds","calcRowDims","maxLeftGrad","maxRightGrad","leftGrad","rightGrad","xLeftLimit","xRightLimit","fullWidth","xProportion","totalTheta","averTheta","nextTheta","lastTheta","rowNum","rowHasChildren","useInputOrigin","disableEdgeStyle","forceConstant","forceConstantSquared","minDistanceLimit","maxDistanceLimit","minDistanceLimitSquared","initialTemp","temperature","maxIterations","iteration","vertexArray","dispX","dispY","cellLocation","radiusSquared","isMoveable","neighbours","indices","allowedToRun","initialBounds","getBoundingBoxFromGeometry","getOpposites","resetEdge","calcRepulsion","calcAttraction","calcPositions","reduceTemperature","minx","miny","moveCells","deltaLength","newXDisp","newYDisp","k","xDelta","yDelta","deltaLengthSquared","displacementX","displacementY","vertexCount","deltaLengthWithRadius","moveCircle","getRadius","circle","phi","checkOverlap","findParallels","parallels","addCell","getEdgeId","trg","route","scx","scy","tcx","tcy","placeLabels","avoid","labRect","dy2","dx2","minRank","nextLayerConnectedCells","previousLayerConnectedCells","getNextLayerConnectedCells","layer","getPreviousLayerConnectedCells","getGeneralPurposeVariable","setGeneralPurposeVariable","setX","setY","hashCode","getRankValue","otherNode","getCoreCell","isReversed","ranks","dfsCount","undirectedEdges","directedEdges","initialRank","startNodes","internalNode","internalNodes","startNodesCopy","edgesToBeMarked","layerDeterminingEdges","allEdgesScanned","minimumLayer","removedCell","currentMaxLayer","fixRanks","rankList","rootsArray","oldRootsArray","parentToCellRankDifference","dfsRoots","trackAncestors","seenNodes","extendedDfs","connectingEdge","rootId","outgoingEdges","targetNode","ancestors","childHash","hashCodeLength","ranksPerGroup","swimlanes","swimlaneIndex","ii","maxChainDfs","lowerRank","upperRank","chainCount","slIndex","incomingEdges","nestedBestRanks","currentBestCrossings","iterationsWithoutImprovement","maxNoImprovementIterations","calculateCrossings","weightedMedian","transpose","candidateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","connectedCells","nodeIndices","connectedNode","otherCellRankPosition","firstIndex","treeSize","treeIndex","mainLoopIteration","improved","maxCount","orderedCells","tempRank","leftCellAboveConnections","leftCellBelowConnections","rightCellAboveConnections","rightCellBelowConnections","leftAbovePositions","leftBelowPositions","rightAbovePositions","rightBelowPositions","leftCell","rightCell","totalCurrentCrossings","totalSwitchedCrossings","ik","downwardSweep","medianRank","rankValue","numCellsForRank","medianValues","reservedPositions","nextLevelConnectedCells","nextRankValue","sorterEntry","medianValue","arrayCount","medianPoint","leftMedian","rightMedian","unseenNodesArray","unseenNodes","modelRoots","seenNodesCopy","jettyPositions","limitX","currentXDelta","widestRank","rankTopY","rankBottomY","widestRankValue","rankWidths","rankY","fineTuning","nextLayerConnectedCache","previousLayerConnectedCache","printStatus","initialCoords","minNode","bestXDelta","medianPos","minPath","setCellLocations","nodeList","nodeWrapper","maxTries","cellWrapper","numNextLayerConnected","numPreviousLayerConnected","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","currentPosition","cellMedian","positionChanged","leftLimit","rankSize","rightLimit","connectedCell","connectedCellWrapper","rankMedianPosition","weightedValues","cellMap","currentCell","calculatedWeightedValue","numConnectionsNextLevel","leftBuffer","rightBuffer","collection","totalWeight","calculateWidestRank","rankCoordinates","localX","boundsWarning","numEdges","lastRankMaxCellHeight","maxCellHeight","distanceToNextRank","referenceX","edgeStraight","refSegCount","upSegCount","downSegCount","upXPositions","downXPositions","currentX","nextX","repositionValid","rankArray","MAX_VALUE","edgeStyle","mxHierarchicalEdgeStyle","ORTHOGONAL","POLYLINE","CURVE","setEdgePosition","cellIndex","currentCells","currentRank","sorter","connectedEdgeCount","connectedEdges","connections","innerCell","connIndex","numActualEdges","parallelEdgeCount","jettys","layoutReversed","realSource","reversed","arrayOffset","jetty","modelSource","isPort","loopStart","loopLimit","loopDelta","positionX","topChannelY","bottomChannelY","modelTarget","realTarget","processReversedEdge","realCell","positionY","reversedOverSwimlane","cellId","STRAIGHT","mxSwimlaneLayout","mxGraphModel","currentEdit","createUndoableEdit","setRoot","mxRootChange","previousIndex","mxCollapseChange","collapsed","mxVisibleChange","mxCellAttributeChange","mxCell","onInit","moveParent","parentBorder","interHierarchySpacing","edgesCache","edgeSourceTermCache","edgesTargetTermCache","rootsCopy","findRoots","best","maxDiff","fanOut","fanIn","cachedEdges","isCollapsed","terminalCache","term","hierarchyVertices","allVertexSet","filledVertexSet","filterDescendants","filledVertexSetEmpty","candidateRoots","vertexSet","cycleStage","layeringStage","crossingStage","placementStage","allVertices","currentComp","vertexID","edgeIsSource","netCount","isSource2","otherTerm","dummyVertexWidth","dummyVertices","getChildCells","insertVertex","layoutBounds","lane","childrenY","maxChildrenY","newGeo","leftGroupBorder","isValidAncestor","laneCounter","otherVertex","otherIndex","maintainEdgeParent","ignoreRelativeEdgeParent","createIds","nextId","updateLevel","endingUpdate","createRoot","isCreateIds","setCreateIds","filterCells","getDescendants","rootChanged","oldRoot","cellAdded","parentChanged","updateEdgeParents","getId","setId","createId","collision","updateEdgeParent","getNearestCommonAncestor","origin1","getOrigin","origin2","cell1","cell2","getParentPath","cellRemoved","parentForCellChanged","oldIndex","par","getChildren","getChildEdges","setTerminal","terminalChanged","setTerminals","terminalForCellChanged","insertEdge","removeEdge","getDirectedEdgeCount","outgoing","ignoredEdge","getIncomingEdges","getOutgoingEdges","incoming","includeLoops","tmp2","directedMatch","oppositeMatch","sources","targets","terminals","topmost","isConnectable","setValue","valueForCellChanged","valueChanged","geometryForCellChanged","styleForCellChanged","setCollapsed","collapsedStateForCellChanged","visibleStateForCellChanged","mergeChildren","cloneAllEdges","mapping","mergeChildrenImpl","getParents","parents","cloneCell","includeChildren","clones","cloneCellImpl","restoreClone","ident","cellCloned","cloneChild","connect","isConnect","connectable","mxTransient","newValue","setVertex","setEdge","setConnectable","setParent","removeFromParent","getEdgeIndex","isOutgoing","removeFromTerminal","userObject","cloneValue","TRANSLATE_CONTROL_POINTS","alternateBounds","sourcePoint","targetPoint","swap","getTerminalPoint","setTerminalPoint","ct","fixedAspect","t1","t2","mxPerimeter","RectanglePerimeter","orthogonal","pi","pi2","beta","tan","EllipsePerimeter","det","xout1","xout2","yout1","yout2","pow","xout","yout","RhombusPerimeter","TrianglePerimeter","corner","HexagonPerimeter","mxPrintPreview","pageSelector","pageScale","mxStylesheet","putDefaultVertexStyle","createDefaultVertexStyle","putDefaultEdgeStyle","createDefaultEdgeStyle","mxCellState","absoluteOffset","mxGraphSelectionModel","mxSelectionChange","selectionModel","added","mxCellEditor","zoomHandler","isEditing","editingCell","stopEditing","mxCellRenderer","autoOrigin","printOverlays","printControls","printBackgroundImage","targetWindow","clipping","getWindow","getDoctype","appendGraph","forcePageBreaks","keepOpen","previousInitializeOverlay","initializeOverlay","overlay","getDrawPane","initControl","control","handleEvents","clickHandler","isNewWindow","writeHead","currentScale","availableHeight","hpages","vpages","writePageSelector","createPageSelector","addPage","pageBreakAfter","addPageBreak","cov","getCoverPages","apx","getAppendices","pageNum","renderPage","addGraphFragment","insertBackgroundImage","closeDocument","writePostfix","js","pageNumber","pageBreakInside","innerDiv","viewport","useCssTransforms","previousContainer","getCanvas","backgroundPane","getBackgroundPane","realScale","graphEnabled","tempClip","rendering","orig","svgs","getLinkForCell","putCellStyle","getDefaultVertexStyle","getDefaultEdgeStyle","defaultStyle","tmpStyle","invalidStyle","invalid","visibleSourceState","visibleTargetState","terminalDistance","unscaledWidth","unscaledHeight","getPerimeterBounds","setAbsoluteTerminalPoint","getVisibleTerminalState","setVisibleTerminalState","terminalState","getCellBounds","cellBounds","getPaintBounds","paintBounds","updateCachedBounds","setState","doneResource","updatingSelectionResource","singleSelection","isSingleSelection","setSingleSelection","changeSelection","setCell","getFirstSelectableCell","isCellSelectable","addCells","removeCell","autoSize","selectText","emptyLabelText","escapeCancelsEditing","minResize","wordWrapPadding","blurEnabled","initialValue","contentEditable","isLegacyEditor","installListeners","applyValue","labelChanged","setAlign","getInitialValue","getEditingValue","getCurrentValue","isCancelEditingKeyEvent","focusLost","isStopEditingEvent","keyCode","keypressHandler","clearOnChange","getEmptyLabelText","keyupHandler","resizeThread","isEnterStopsCellEditing","isEventSource","lw","bds","hpos","vpos","legacySpacing","isWrapping","getEditorBounds","isInvokesStopCellEditing","getBackgroundColor","absoluteRoot","startEditing","tooltipHandler","hideTooltip","bold","italic","isHideLabel","isSelectText","execCommand","cancel","blur","prepareTextarea","getEditingCell","defaultShapes","defaultEdgeShape","defaultVertexShape","defaultTextShape","legacyControlPosition","forceControlClickHandler","registerShape","initializeShape","configureShape","createShape","getShapeConstructor","createIndicatorShape","getShape","getIndicatorShape","getIndicatorColor","getIndicatorGradientColor","getIndicatorImage","postConfigureShape","resolveColor","checkPlaceholderStyles","field","referenced","getSwimlane","swimlaneIndicatorColorAttribute","rstate","rshape","getLabelValue","getLabel","createLabel","isForceHtml","isHtmlLabel","getVerticalAlign","isLabelClipped","initializeLabel","forceGetCell","isLabelEvent","nativeDblClickEnabled","createCellOverlays","getCellOverlays","installCellOverlayListeners","createControl","getFoldingImage","foldingEnabled","createControlClickHandler","collapse","foldCells","isShapeEvent","redrawLabel","wrapping","isTextShapeInvalid","nextScale","getTextScale","isClipping","vis","redrawLabelShape","check","rotateLabelBounds","redrawCellOverlays","getBounds","redrawControl","getControlBounds","insertStateAfter","htmlNode","shapes","getShapesForState","shapeChanged","selectionCellsHandler","updateHandler","isShapeInvalid","doRedrawShape","mxEdgeStyle","EntityRelation","segment","isSourceLeft","sourceGeometry","isTargetLeft","targetGeometry","getRoutingCenterY","xe","ye","midY","Loop","transformControlPoint","getRoutingCenterX","ElbowConnector","SideToSide","TopToBottom","SegmentConnector","sourceScaled","targetScaled","controlHints","scalePointArray","scaleCellState","lastPushed","hint","pushPoint","lastInx","hints","currentTerm","currentPt","hozChan","vertChan","currentHint","fixedVertAlign","fixedHozAlign","inHozChan","inVertChan","orthBuffer","orthPointsFallback","dirVectors","wayPoints1","routePatterns","inlineRoutePatterns","vertexSeperations","limits","LEFT_MASK","TOP_MASK","RIGHT_MASK","BOTTOM_MASK","LEFT","TOP","RIGHT","BOTTOM","SIDE_MASK","CENTER_MASK","SOURCE_MASK","TARGET_MASK","VERTEX_MASK","getJettySize","OrthConnector","sourceEdge","targetEdge","sourceX","sourceY","sourceWidth","sourceHeight","targetX","targetY","targetWidth","targetHeight","sourceBuffer","targetBuffer","totalBuffer","tooShort","portConstraint","newRect","sourceCenX","sourceCenY","targetCenX","targetCenY","sourceTopDist","sourceLeftDist","sourceBottomDist","sourceRightDist","dirPref","horPref","vertPref","preferredHorizDist","preferredVertDist","prefOrdering","preferredOrderSet","sourceIndex","targetIndex","routePattern","currentIndex","lastOrientation","initialOrientation","currentOrientation","nextDirection","directionIndex","sou","side","limit","souTar","targetOrientation","sameOrient","getRoutePattern","mxStyleRegistry","putValue","mxGraphView","mxCurrentRootChange","isUp","mxGraph","renderHint","stylesheet","mouseListeners","multiplicities","imageBundles","createCellRenderer","setSelectionModel","createSelectionModel","setStylesheet","createStylesheet","createGraphView","graphModelChangeListener","createHandlers","revalidate","mxCellOverlay","tooltip","mxOutline","mxMultiplicity","validNeighbors","countError","typeError","validNeighborsAllowed","mxLayoutManager","undoHandler","beforeUndo","moveHandler","cellsMoved","cellsResized","mxSwimlaneManager","addEnabled","resizeEnabled","addHandler","isAddEnabled","cellsAdded","isResizeEnabled","isCellVisibleFn","oldValidateCellState","validateCellState","oldBounds","oldStates","getStates","oldScale","oldDoRedrawShape","oldPaint","resurse","setScale","resetValidationState","validateCell","setGraphBounds","deltas","mxGraphHandler","panHandler","suspended","updatePreview","updateHint","escapeHandler","refreshHandler","refreshThread","currentDx","currentDy","pBounds","getPreviewBounds","livePreviewUsed","setHandlesVisibleForCells","getHandledSelectionCells","keyHandler","isCloneEvent","isCellsCloneable","isCloneEnabled","cloning","checkPreview","mxPanningHandler","forcePanningHandler","isForcePanningEvent","gestureHandler","eo","isPinchEnabled","initialScale","mouseDownEvent","zoomGraph","mxPopupMenuHandler","inTolerance","mxCellMarker","validColor","invalidColor","mxSelectionCellsHandler","refresh","getSelectionModel","mxConnectionHandler","mxConstraintHandler","resetHandler","currentFocus","mxRubberband","forceRubberbandHandler","isForceRubberbandEvent","repaint","mxHandle","mxVertexHandler","livePreview","invalidate","validate","mxEdgeHandler","isRendering","mxElbowEdgeHandler","mxEdgeSegmentHandler","mxKeyHandler","normalKeys","shiftKeys","controlKeys","controlShiftKeys","keydownHandler","keyDown","mxTooltipHandler","mxCellTracker","highlightColor","repaintHandler","mxDefaultKeyHandler","escape","hideProperties","mxDefaultPopupMenu","mxDefaultToolbar","mxEditor","actions","addActions","cycleAttributeValues","popupHandler","undoManager","createGraph","toolbar","createToolbar","configure","cycleAttributeName","EMPTY_POINT","updatingDocumentResource","captureDocumentGesture","optimizeVmlReflows","lastNode","lastHtmlNode","lastForegroundNode","lastForegroundHtmlNode","setCurrentRoot","sizeDidChange","scaleAndTranslate","previousScale","previousTranslate","viewStateChanged","removeState","includeEdges","invalidating","prevDisplay","getEmptyBounds","validateBackground","createBackgroundPageShape","validateBackgroundImage","validateBackgroundPage","getBackgroundImage","redrawBackgroundImage","pageVisible","getBackgroundPageBounds","backgroundPageShape","isHideOnHover","updateCellState","stateValidated","pState","getChildOffsetForCell","updateVertexState","updateEdgeState","updateVertexLabelOffset","updateFixedTerminalPoints","updatePoints","updateFloatingTerminalPoints","updateEdgeBounds","updateEdgeLabelOffset","fg","keepEdgesInForeground","keepEdgesInBackground","updateFixedTerminalPoint","getConnectionConstraint","getFixedTerminalPoint","getConnectionPoint","updateBoundsFromStencil","asp","getEdgeStyle","getTerminalPort","srcBounds","trgBounds","ignoreScale","isLoopStyleEnabled","tc","defaultLoopStyle","isAllowEval","updateFloatingTerminalPoint","getFloatingTerminalPoint","getNextPoint","orth","isOrthogonal","getPerimeterFunction","opposite","markerSize","gx","gy","getRelativePoint","totalLength","minDist","xSegment","ySegment","projlen","yDistance","setRendering","setAllowEval","getCellStates","getDecoratorPane","decoratorPane","isContainerEvent","isScrollEvent","outWidth","inWidth","outHeight","inHeight","fireGestureEvent","popupMenuHandler","endHandler","createHtmlPane","updateContainerStyle","onResize","updateHtmlCanvasSize","pane","createVmlPane","getTranslateForRoot","cellEditor","portsEnabled","doubleTapEnabled","doubleTapTimeout","doubleTapTolerance","lastTouchY","lastTouchTime","tapAndHoldEnabled","tapAndHoldDelay","tapAndHoldInProgress","tapAndHoldValid","initialTouchX","initialTouchY","defaultOverlap","defaultParent","alternateEdgeStyle","pageBreaksVisible","pageBreakColor","pageBreakDashed","minPageBreakDist","preferPageSize","escapeEnabled","invokesStopCellEditing","enterStopsCellEditing","useScrollbarsForPanning","exportEnabled","importEnabled","cellsLocked","cellsCloneable","cellsEditable","cellsDeletable","cellsMovable","edgeLabelsMovable","vertexLabelsMovable","dropEnabled","splitEnabled","cellsResizable","cellsBendable","cellsSelectable","cellsDisconnectable","autoSizeCells","autoSizeCellsOnAdd","ignoreScrollbars","translateToScrollPosition","timerAutoScroll","allowAutoPanning","maximumGraphBounds","minimumGraphSize","minimumContainerSize","maximumContainerSize","resizeContainer","allowNegativeCoordinates","constrainChildren","constrainRelativeChildren","extendParents","extendParentsOnAdd","extendParentsOnMove","recursiveResize","collapseToPreferredSize","zoomFactor","keepSelectionVisibleOnZoom","centerZoom","resetViewOnRootChange","resetEdgesOnResize","resetEdgesOnMove","resetEdgesOnConnect","allowLoops","multigraph","connectableEdges","allowDanglingEdges","cloneInvalidEdges","disconnectOnMove","labelsVisible","htmlLabels","swimlaneSelectionEnabled","swimlaneNesting","minFitScale","maxFitScale","collapsedImage","expandedImage","warningImage","alreadyConnectedResource","containsValidationErrorsResource","collapseExpandResource","createCellEditor","relatedTarget","createTooltipHandler","createSelectionCellsHandler","connectionHandler","createConnectionHandler","createGraphHandler","panningHandler","createPanningHandler","panningEnabled","createPopupMenuHandler","getStylesheet","getSelectionCellsForChanges","ignoreFn","processChange","updateSelection","removeSelectionCells","setDefaultParent","removeStateForCell","newParent","home","addCellOverlay","removeCellOverlay","removeCellOverlays","clearCellOverlays","setCellWarning","warning","isSelect","setSelectionCell","startEditingAtCell","getSelectionCell","isCellEditable","convertValueToString","cellLabelChanged","isAutoSizeCell","cellSizeUpdated","click","mxe","isTransparentClickEvent","isCellSelected","isSwimlaneSelectionEnabled","getSwimlaneAt","isToggleEvent","reverse","selectCellForEvent","isSiblingSelected","tapAndHold","panningTrigger","marker","currentColor","markedState","mark","createEdgeState","panningManager","createPanningManager","getBorderSizes","borderLeftStyle","borderLeftWidth","paddingTop","borderTopStyle","borderTopWidth","borderRightStyle","borderRightWidth","paddingBottom","borderBottomStyle","borderBottomWidth","getPreferredPageSize","page","hCount","vCount","keepOrigin","ignoreWidth","ignoreHeight","getBorder","cssBorder","w1","h1","w2","h2","s2","doResizeContainer","updatePageBreaks","gb","horizontalCount","verticalCount","horizontalPageBreaks","verticalPageBreaks","drawPageBreaks","breaks","pageBreak","ignoreState","postProcessCellStyle","getImageFromBundles","encodeURIComponent","comma","setCellStyle","toggleCellStyle","toggleCellStyles","toggleCellStyleFlags","alignCells","param","flipEdge","addImageBundle","bundle","removeImageBundle","orderCells","back","cellsOrdered","groupCells","getCellsForGroup","createGroupCell","getBoundsForGroup","ungroupCells","getCellsForUngroup","removeCellsAfterUngroup","cellsRemoved","addAllEdges","removeCellsFromParent","moveGroup","getActualStartSize","allowInvalidEdges","keepPosition","trans","getEdgeValidationError","createVertex","createEdge","addEdge","absolute","constrain","parentState","zero","oldState","isAllowNegativeCoordinates","autoSizeCell","isExtendParentsOnAdd","isExtendParent","extendParent","constrainChild","cellConnected","updateCellSize","getDeletableCells","getAllEdges","disconnectTerminal","connected","tstate","splitEdge","newEdge","toggleCells","cellsToggled","checkFoldable","getFoldableCells","cellsFolded","isCellFoldable","swapBounds","willCollapse","updateAlternateBounds","getPreferredSizeForCell","allCells","ignoreChildren","cellStyle","gs2","resizeCells","isRecursiveResize","cellResized","ignoreRelative","resizeChildCells","constrainChildCells","scaleCell","isCellResizable","origCells","isCloneInvalidEdges","setAllowNegativeCoordinates","isDisconnectOnMove","isAllowDanglingEdges","isExtendParentsOnMove","disconnect","disconnectGraph","translateCell","getCellContainmentArea","getMaximumGraphBounds","sizeFirst","isConstrainRelativeChildren","isConstrainChild","overlap","getOverlap","getOutlineConstraint","getAllConnectionConstraints","setConnectionConstraint","connectCell","isPortsEnabled","getTerminalForPort","isCellDisconnectable","getCurrentRoot","enterGroup","isValidRoot","exitGroup","includeDescendants","addPoint","ignoreGrid","ignoreHorizontal","ignoreVertical","shiftPreview1","shiftPreview2","zoomIn","zoomOut","zoomActual","zoomTo","cw","sh","scrollRectToVisible","zoomToRect","scaleX","scaleY","aspectFactor","rectRight","rectBottom","newHeight","deltaHeightBuffer","upperBuffer","newWidth","deltaWidthBuffer","newScale","scrollCellToVisible","tr2","isChanged","widthLimit","heightLimit","ddx","ddy","isCellConnectable","isLoop","isConstrainedEvent","isIgnoreTerminalEvent","validationAlert","isEdgeValid","isValidConnection","sourceOut","targetIn","validateEdge","validateGraph","isValid","getCellValidationError","outCount","inCount","rule","setBackgroundImage","isHtmlLabels","setHtmlLabels","getTooltip","tip","getHandler","getTooltipForNode","getTooltipForCell","getCursorForMouseEvent","getCursorForCell","swimlane","getSwimlaneDirection","isTransparentState","setBorder","isResizeContainer","setResizeContainer","isEscapeEnabled","setEscapeEnabled","setInvokesStopCellEditing","setEnterStopsCellEditing","isCellLocked","isCellsLocked","setCellsLocked","getCloneableCells","isCellCloneable","setCellsCloneable","canExportCell","canImportCell","isCellsSelectable","setCellsSelectable","isCellDeletable","isCellsDeletable","setCellsDeletable","isLabelMovable","isCellRotatable","getMovableCells","isCellsMovable","setCellsMovable","setPortsEnabled","getGridSize","setGridSize","getTolerance","setTolerance","isVertexLabelsMovable","setVertexLabelsMovable","isEdgeLabelsMovable","setEdgeLabelsMovable","isSwimlaneNesting","setSwimlaneNesting","setSwimlaneSelectionEnabled","isMultigraph","setMultigraph","isAllowLoops","setAllowDanglingEdges","setConnectableEdges","isConnectableEdges","setCloneInvalidEdges","setAllowLoops","setDisconnectOnMove","setDropEnabled","isSplitEnabled","setSplitEnabled","isCellsResizable","setCellsResizable","isTerminalPointMovable","isCellBendable","isCellsBendable","setCellsBendable","isCellsEditable","setCellsEditable","isCellsDisconnectable","setCellsDisconnectable","isValidSource","isValidTarget","setTooltips","setPanning","isAutoSizeCells","setAutoSizeCells","isExtendParents","setExtendParents","setExtendParentsOnAdd","setExtendParentsOnMove","setRecursiveResize","isConstrainChildren","setConstrainChildren","setConstrainRelativeChildren","isAllowOverlapParent","isValidDropTarget","isSplitTarget","hitsSwimlaneContent","getPointForEvent","addOffset","getCellsBeyond","rightHalfpane","bottomHalfpane","isolate","isSelectionEmpty","getSelectionCount","addSelectionCell","addSelectionCells","removeSelectionCell","selectRegion","selectCellsForEvent","selectNextCell","selectCell","selectPreviousCell","selectParentCell","selectChildCell","isNext","isParent","isChild","sel","selectAll","descendants","selectVertices","selectGroups","selectCells","selectEdges","createHandler","createEdgeHandler","createVertexHandler","createElbowEdgeHandler","createEdgeSegmentHandler","updateMouseEvent","getStateForTouchEvent","isEventIgnored","mouseEvent","lastEvent","mouseMoveRedirect","mouseUpRedirect","isSyntheticEventIgnored","detail","lastMouseX","lastMouseY","ignoreMouseEvents","isEventSourceIgnored","candidate","getEventState","currentTime","fireDoubleClick","lastTouchEvent","lastTouchX","doubleClickCounter","doubleClickFired","lastTouchCell","valid","tapAndHoldThread","consumeMouseEvent","graphRenderHint","showViewport","sizerSize","updateOnPan","sizerImage","forceVmlHandles","outlineGraphModelChanged","selectionBorder","redirect","redirect2","sizer","createSizer","setZoomEnabled","getSourceContainerSize","getOutlineOffset","getSourceGraphBounds","sourceScale","scaledGraphBounds","unscaledGraphBounds","unscaledFinderBounds","union","completeWidth","completeHeight","outlineScale","navView","scale2","scale3","allowHandleBoundsCheck","getTranslateForEvent","viewRatio","checkTerminal","checkNeighbors","sourceValue","targetValue","checkType","attrValue","bubbling","isBubbling","setBubbling","hasLayout","getLayout","executeLayoutForCells","getCellsForChanges","getCellsForChange","addCellsWithLayout","addDescendantsWithLayout","addAncestorsWithLayout","sorted","layoutCells","bubble","executeLayout","setHorizontal","setAddEnabled","setResizeEnabled","isSwimlaneIgnored","isCellHorizontal","swimlaneAdded","parentHorizontal","resizeSwimlane","addEdges","translateState","revalidateState","maxCells","highlightEnabled","cloneEnabled","moveEnabled","handlesVisible","updateCursor","selectEnabled","removeEmptyParents","connectOnDrop","scrollOnMove","previewColor","htmlPreview","scaleGrid","rotationEnabled","maxLivePreview","allowLivePreview","setCloneEnabled","isMoveEnabled","setMoveEnabled","isSelectEnabled","setSelectEnabled","isRemoveCellsFromParent","setRemoveCellsFromParent","isPropagateSelectionCell","getInitialCellForEvent","isDelayedSelection","isHandled","selectDelayed","delayedSelection","cellWasClicked","initialCell","createPreviewShape","cellCount","addStates","ignore","opps","isCellMoving","useGuidesForEvent","vector","removeHint","roundLength","livePreviewActive","resetLivePreview","setHighlightColor","remote","updateLivePreview","updatePreviewShape","realState","tempState","originalPointerEvents","pt0","ptn","redrawHandles","resetPreviewStates","suspend","resume","setHandlesVisible","destroyShapes","guides","shouldRemoveCellsFromParent","shouldRemoveParent","useLeftButtonForPanning","usePopupTrigger","ignoreCell","previewEnabled","useGrid","pinchEnabled","maxScale","isPanningEnabled","setPanningEnabled","setPinchEnabled","isPanningTrigger","consumePanningTrigger","selectOnPopup","clearSelectionOnBackground","triggerX","triggerY","screenX","screenY","isSelectOnPopup","popupTrigger","getCellForPopupEvent","hotspotEnabled","validState","setHotspot","getHotspot","setHotspotEnabled","isHotspotEnabled","hasValidState","getValidState","getMarkedState","unmark","setCurrentState","isValidState","getMarkerColor","markCell","getStateToMark","maxHandlers","oldHandlers","isHandlerActive","updateParentHighlight","moveIconFront","moveIconBack","connectImage","targetConnectImage","createTarget","constraintHandler","waypointsEnabled","ignoreMouseDown","connectIconOffset","drillHandler","mouseDownCounter","movePreviewAway","outlineConnect","insertBeforeSource","isInsertBefore","isCreateTarget","setCreateTarget","iconState","redrawIcons","icons","isConnectableCell","isConnecting","validateConnection","getConnectImage","isMoveIconToFrontForState","createIcons","currentState","getIconPosition","destroyIcons","selectedIcon","isStartEvent","currentConstraint","sourceConstraint","waypoints","isImmediateConnectSource","isOutlineConnectEvent","clientLeft","clientTop","gridX","gridY","isHighlightAt","updateCurrentState","isCellEnabled","setFocus","convertWaypoint","snapToPreview","pt2","getTargetPerimeterPoint","getSourcePerimeterPoint","originalPoint","drawPreview","hitsIcon","updateIcons","realPoints","targetPerimeter","sourcePerimeter","isStopEvent","addWaypointForEvent","checkConstraints","getEdgeColor","terminalInserted","createTargetVertex","getAlignmentTolerance","pointImage","focusIcons","focusHighlight","currentFocusArea","focusPoints","getImageForConstraint","destroyFocusHighlight","isKeepFocusEvent","getCellForEvent","existingEdge","mouseleaveHandler","grid","mouse","minDistSq","hl","createHighlightShape","cp","defaultOpacity","sharedDiv","currentY","createMouseEvent","getPosition","setPosition","copyStyle","processEvent","getTotalRotation","flipPoint","snapPoint","isHtmlRequired","initShape","singleSizer","handleImage","parentHighlightEnabled","rotationRaster","rotationCursor","movePreviewToFront","manageSizers","constrainGroupByChildren","rotationHandleVSpacing","horizontalOffset","verticalOffset","selectionBounds","getSelectionBounds","createSelectionShape","sizers","labelShape","isRotationHandleVisible","rotationShape","customHandles","createCustomHandles","updateMinBounds","isCenteredEvent","minBounds","createParentHighlightShape","getSelectionColor","getSelectionStrokeWidth","isSelectionDashed","createSizerShape","isSizerVisible","moveSizerTo","getHandleForEvent","checkShape","isCustomHandleEvent","handle","isLivePreviewBorder","childOffsetX","childOffsetY","isGhostPreview","ghostPreview","createGhostPreview","preview","getRotationHandlePosition","startAngle","atan","startDist","hideSizers","edgeHandlers","checkTolerance","roundAngle","moveToFront","moveLabel","rotateVertex","resizeVertex","currentAlpha","raster","unscaledBounds","dx3","dy3","dx4","dy4","dx5","dy5","rotateCell","rotateClick","constrained","moveChildren","centered","cdx","cdy","ignoreHandles","getHandlePadding","getSizerBounds","isCustomHandleVisible","crs","da","isParentHighlightVisible","isDestroyed","parentHighlight","getSelectionBorderBounds","bends","removeEnabled","dblClickRemoveEnabled","mergeRemoveEnabled","straightRemoveEnabled","virtualBendsEnabled","virtualBendOpacity","preferHtml","snapToTerminals","manageLabelHandle","abspoints","getSelectionPoints","targetState","createBends","isVirtualBendsEnabled","virtualBends","createVirtualBends","createLabelHandleShape","initBend","isAddPointEvent","isRemovePointEvent","otherCell","isHandleVisible","bend","createHandleShape","removePoint","isHandleEnabled","labelHandleImage","isAddVirtualBendEvent","isTarget","isLabel","clonePreviewState","getSnapToTerminalTolerance","isSnapToTerminalsEvent","snapToPoint","snapToTerminal","getPreviewTerminalState","getPreviewPoints","checkRemove","updatePreviewState","targetConstraint","setPreviewColor","changeTerminalPoint","changePoints","isClone","addPointAt","getHandleFillColor","checkLabelHandle","xn","yn","bn","redrawInnerBends","destroyBends","flipEnabled","doubleClickOrientationResource","createVirtualBend","dblClickHandler","getCursorForBend","getCurrentPoints","pt1","rpts","straight","bindKey","code","bindShiftKey","bindControlKey","bindControlShiftKey","getFunction","isGraphEvent","ignoreTouchEvents","hideOnHover","setHideOnHover","getStateForEvent","stateSource","resetTimer","restart","keepOnTop","drawHighlight","getStrokeWidth","bindAction","createMenu","conditions","createConditions","addItems","as","enabledCond","addAction","isCell","condNodes","insertFunction","pressed","addActionOption","setMode","addPrototype","ptype","installDropHandler","addVertex","horizontalFlow","edgeGeometry","sprite","loader","askZoomResource","lastSavedResource","currentFileResource","propertiesResource","tasksResource","helpResource","outlineResource","dblClickAction","swimlaneRequired","forcedInserting","templates","defaultEdge","defaultEdgeStyle","defaultGroup","groupBorderSize","filename","postParameterName","escapePostData","urlPost","urlImage","layoutDiagram","swimlaneSpacing","maintainSwimlanes","layoutSwimlanes","cycleAttributeIndex","tasks","tasksWindowImage","tasksTop","help","helpWindowImage","urlHelp","helpWidth","helpHeight","propertiesWidth","propertiesHeight","movePropertiesDialog","validating","isModified","setModified","getUrlImage","showProperties","showTasks","showHelp","showOutline","dec","decode","resetHistory","resetFirstTime","cookie","actionname","addTemplate","template","getTemplate","installDblClickHandler","installUndoHandler","installDrillHandler","installChangeHandler","installInsertHandler","createPopupMenu","createSwimlaneManager","createLayoutManager","swimlaneMgr","layoutMgr","swimlaneLayout","createSwimlaneLayout","diagramLayout","createDiagramLayout","setGraphContainer","rubberband","insertHandler","gs","setToolbarContainer","setStatusContainer","tstamp","toLocaleString","setStatus","setTitleContainer","getTitle","treeLayout","getRootTitle","createGroup","readGraphModel","getUrlPost","writeGraphModel","postDiagram","swapStyles","createProperties","isPropertiesVisible","yField","xField","widthField","heightField","texts","okFunction","cancelFunction","createTasks","refreshTasks","frame","modename","consumeCycleAttribute","cycleAttribute","isConstrainedMoving","mxCodecRegistry","codecs","aliases","register","codec","classname","addAlias","codecname","getCodec","mxObjectCodec","objects","idrefs","elements","encodeDefaults","putObject","getObject","updateElements","addElement","Error","reference","into","encodeCell","isCellCodec","decodeCell","restoreStructures","decoder","insertIntoGraph","cloneTemplate","getFieldName","attributename","mapped","getAttributeName","fieldname","isExcluded","isReference","beforeEncode","encodeObject","afterEncode","encodeValue","writeAttribute","writePrimitiveAttribute","writeComplexAttribute","convertAttributeToXml","isBooleanAttribute","convertAttributeFromXml","isNumericAttribute","beforeDecode","decodeNode","afterDecode","decodeAttributes","decodeChildren","decodeAttribute","isIgnoredAttribute","processInclude","decodeChild","getFieldTemplate","addObjectValue","isWrite","mxCellCodec","rootNode","decodeRoot","rootCell","mxModelCodec","mxRootChangeCodec","childRef","mxChildChangeCodec","mxTerminalChangeCodec","mxGenericChangeCodec","variable","mxGraphCodec","mxGraphViewCodec","mxStylesheetCodec","styleNode","getStringValue","mxDefaultKeyHandlerCodec","mxDefaultToolbarCodec","act","inc","mxDefaultPopupMenuCodec","role","decodeTemplates","decodeUi","setMapContainer","mxEditorCodec","newPromiseCapability","promiseCapability","NASHORN_BUG","1","aPossiblePrototype","CORRECT_SETTER","TAG","globalThis","DOMIterables","ArrayIteratorMethods","ArrayValues","COLLECTION_NAME","Collection","CollectionPrototype","METHOD_NAME","NativeSymbol","EmptyStringDescriptionStore","SymbolWrapper","symbolPrototype","symbolToString","native","regexp","CORRECT_PROTOTYPE_GETTER","addToUnscopables","ARRAY_ITERATOR","kind","Arguments","Internal","OwnPromiseCapability","PromiseWrapper","nativeThen","redefineAll","setSpecies","anInstance","iterate","checkCorrectnessOfIteration","microtask","hostReportErrors","newPromiseCapabilityModule","perform","V8_VERSION","PROMISE","getInternalPromiseState","PromiseConstructor","$fetch","newGenericPromiseCapability","DISPATCH_EVENT","NATIVE_REJECTION_EVENT","PromiseRejectionEvent","UNHANDLED_REJECTION","REJECTION_HANDLED","PENDING","FULFILLED","REJECTED","HANDLED","UNHANDLED","GLOBAL_CORE_JS_PROMISE","FakePromise","INCORRECT_ITERATION","all","isThenable","isReject","notified","chain","reactions","ok","exited","reaction","fail","rejection","onHandleUnhandled","onUnhandled","IS_UNHANDLED","isUnhandled","unwrap","internalReject","internalResolve","wrapper","executor","onFulfilled","onRejected","fetch","capability","$promiseResolve","remaining","alreadyCalled","race","PromiseCapability","$$resolve","$$reject","classofRaw","CORRECT_ARGUMENTS","tryGet","callee","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList"],"mappings":"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","file":"js/chunk-vendors.4f1a0a8d.js","sourcesContent":["var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyNames = require('../internals/object-get-own-property-names').f;\n\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return nativeGetOwnPropertyNames(it);\n  } catch (error) {\n    return windowNames.slice();\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]'\n    ? getWindowNames(it)\n    : nativeGetOwnPropertyNames(toIndexedObject(it));\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return nativeGetOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","module.exports = function (it, Constructor, name) {\n  if (!(it instanceof Constructor)) {\n    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');\n  } return it;\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n","var userAgent = require('../internals/engine-user-agent');\n\nmodule.exports = /(iphone|ipod|ipad).*applewebkit/i.test(userAgent);\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var anObject = require('../internals/an-object');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar iteratorClose = require('../internals/iterator-close');\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nmodule.exports = function (iterable, unboundFunction, options) {\n  var that = options && options.that;\n  var AS_ENTRIES = !!(options && options.AS_ENTRIES);\n  var IS_ITERATOR = !!(options && options.IS_ITERATOR);\n  var INTERRUPTED = !!(options && options.INTERRUPTED);\n  var fn = bind(unboundFunction, that, 1 + AS_ENTRIES + INTERRUPTED);\n  var iterator, iterFn, index, length, result, next, step;\n\n  var stop = function (condition) {\n    if (iterator) iteratorClose(iterator);\n    return new Result(true, condition);\n  };\n\n  var callFn = function (value) {\n    if (AS_ENTRIES) {\n      anObject(value);\n      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);\n    } return INTERRUPTED ? fn(value, stop) : fn(value);\n  };\n\n  if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = toLength(iterable.length); length > index; index++) {\n        result = callFn(iterable[index]);\n        if (result && result instanceof Result) return result;\n      } return new Result(false);\n    }\n    iterator = iterFn.call(iterable);\n  }\n\n  next = iterator.next;\n  while (!(step = next.call(iterator)).done) {\n    try {\n      result = callFn(step.value);\n    } catch (error) {\n      iteratorClose(iterator);\n      throw error;\n    }\n    if (typeof result == 'object' && result && result instanceof Result) return result;\n  } return new Result(false);\n};\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar definePropertyModule = require('../internals/object-define-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (CONSTRUCTOR_NAME) {\n  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n  var defineProperty = definePropertyModule.f;\n\n  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n    defineProperty(Constructor, SPECIES, {\n      configurable: true,\n      get: function () { return this; }\n    });\n  }\n};\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var anObject = require('../internals/an-object');\n\nmodule.exports = function (iterator) {\n  var returnMethod = iterator['return'];\n  if (returnMethod !== undefined) {\n    return anObject(returnMethod.call(iterator)).value;\n  }\n};\n","/*!\n * Vue.js v2.6.12\n * (c) 2014-2020 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if (process.env.NODE_ENV !== 'production' && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nfunction popTarget () {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false)\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n      // issue #9511\n      // avoid catch triggering multiple times when nested calls\n      res._handled = true;\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar isUsingMicroTask = false;\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n  isUsingMicroTask = true;\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n  isUsingMicroTask = true;\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Technically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals. ' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var hasNormalSlots = Object.keys(normalSlots).length > 0;\n  var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    !hasNormalSlots &&\n    !prevSlots.$hasNormal\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  def(res, '$hasNormal', hasNormalSlots);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    return res && (\n      res.length === 0 ||\n      (res.length === 1 && res[0].isComment) // #9658\n    ) ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        var hyphenatedKey = hyphenate(key);\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if (process.env.NODE_ENV !== 'production' && key !== '' && key !== null) {\n      // null is a special value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (process.env.NODE_ENV !== 'production') {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      if (process.env.NODE_ENV !== 'production' && isDef(data) && isDef(data.nativeOn)) {\n        warn(\n          (\"The .native modifier for v-on is only valid on components but it was used on <\" + tag + \">.\"),\n          context\n        );\n      }\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack because all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production' && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  var owner = currentRenderingInstance;\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true;\n    var timerLoading = null;\n    var timerTimeout = null\n\n    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading);\n          timerLoading = null;\n        }\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout);\n          timerTimeout = null;\n        }\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            timerLoading = setTimeout(function () {\n              timerLoading = null;\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(function () {\n            timerTimeout = null;\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before () {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\nif (inBrowser && !isIE) {\n  var performance = window.performance;\n  if (\n    performance &&\n    typeof performance.now === 'function' &&\n    getNow() > document.createEvent('Event').timeStamp\n  ) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = function () { return performance.now(); };\n  }\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if (process.env.NODE_ENV !== 'production' && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.12';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');\n\nvar convertEnumeratedValue = function (key, value) {\n  return isFalsyAttrValue(value) || value === 'false'\n    ? 'false'\n    // allow arbitrary string value for contenteditable\n    : key === 'contenteditable' && isValidContentEditableValue(value)\n      ? value\n      : 'true'\n};\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\nvar nodeOps = /*#__PURE__*/Object.freeze({\n  createElement: createElement$1,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  createComment: createComment,\n  insertBefore: insertBefore,\n  removeChild: removeChild,\n  appendChild: appendChild,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent,\n  setStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        insert(parentElm, vnode.elm, refElm);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (nodeOps.parentNode(ref$$1) === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (\n    oldVnode,\n    vnode,\n    insertedVnodeQueue,\n    ownerArray,\n    index,\n    removeOnly\n  ) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkDuplicateKeys(ch);\n        }\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm)) {\n          removeVnodes([oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      dir.oldArg = oldDir.arg;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, convertEnumeratedValue(key, value));\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && value !== '' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler$1 (event, handler, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\n// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp\n// implementation and does not fire microtasks in between event propagation, so\n// safe to exclude.\nvar useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);\n\nfunction add$1 (\n  name,\n  handler,\n  capture,\n  passive\n) {\n  // async edge case #6566: inner click event triggers patch, event handler\n  // attached to outer element during patch, and triggered again. This\n  // happens because browsers fire microtask ticks between event propagation.\n  // the solution is simple: we save the timestamp when a handler is attached,\n  // and the handler would only fire if the event passed to it was fired\n  // AFTER it was attached.\n  if (useMicrotaskFix) {\n    var attachedTimestamp = currentFlushTimestamp;\n    var original = handler;\n    handler = original._wrapper = function (e) {\n      if (\n        // no bubbling, should always fire.\n        // this is just a safety net in case event.timeStamp is unreliable in\n        // certain weird environments...\n        e.target === e.currentTarget ||\n        // event is fired after handler attachment\n        e.timeStamp >= attachedTimestamp ||\n        // bail for environments that have buggy event.timeStamp implementations\n        // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState\n        // #9681 QtWebEngine event.timeStamp is negative value\n        e.timeStamp <= 0 ||\n        // #9448 bail if event is fired in another document in a multi-page\n        // electron/nw.js app, since event.timeStamp will be using a different\n        // starting reference\n        e.target.ownerDocument !== document\n      ) {\n        return original.apply(this, arguments)\n      }\n    };\n  }\n  target$1.addEventListener(\n    name,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  name,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    name,\n    handler._wrapper || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nvar svgContainer;\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (!(key in props)) {\n      elm[key] = '';\n    }\n  }\n\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value' && elm.tagName !== 'PROGRESS') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {\n      // IE doesn't support innerHTML for SVG elements\n      svgContainer = svgContainer || document.createElement('div');\n      svgContainer.innerHTML = \"<svg>\" + cur + \"</svg>\";\n      var svg = svgContainer.firstChild;\n      while (elm.firstChild) {\n        elm.removeChild(elm.firstChild);\n      }\n      while (svg.firstChild) {\n        elm.appendChild(svg.firstChild);\n      }\n    } else if (\n      // skip the update if old and new VDOM state is the same.\n      // `value` is handled separately because the DOM value may be temporarily\n      // out of sync with VDOM state due to focus, composition and modifiers.\n      // This  #4521 by skipping the unnecessary `checked` update.\n      cur !== oldProps[key]\n    ) {\n      // some property updates can throw\n      // e.g. `value` on <progress> w/ non-finite value\n      try {\n        elm[key] = cur;\n      } catch (e) {}\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\nvar whitespaceRE = /\\s+/;\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  // JSDOM may return undefined for transition properties\n  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');\n  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');\n  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\nfunction toMs (s) {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    context = transitionNode.context;\n    transitionNode = transitionNode.parent;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show && el.parentNode) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n\n/*  */\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };\n\nvar isVShowDirective = function (d) { return d.name === 'show'; };\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(isNotTextNode);\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  beforeMount: function beforeMount () {\n    var this$1 = this;\n\n    var update = this._update;\n    this._update = function (vnode, hydrating) {\n      var restoreActiveInstance = setActiveInstance(this$1);\n      // force removing pass\n      this$1.__patch__(\n        this$1._vnode,\n        this$1.kept,\n        false, // hydrating\n        true // removeOnly (!important, avoids unnecessary moves)\n      );\n      this$1._vnode = this$1.kept;\n      restoreActiveInstance();\n      update.call(this$1, vnode, hydrating);\n    };\n  },\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test'\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nexport default Vue;\n","var global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar bind = require('../internals/function-bind-context');\nvar html = require('../internals/html');\nvar createElement = require('../internals/document-create-element');\nvar IS_IOS = require('../internals/engine-is-ios');\nvar IS_NODE = require('../internals/engine-is-node');\n\nvar location = global.location;\nvar set = global.setImmediate;\nvar clear = global.clearImmediate;\nvar process = global.process;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\n\nvar run = function (id) {\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\n\nvar runner = function (id) {\n  return function () {\n    run(id);\n  };\n};\n\nvar listener = function (event) {\n  run(event.data);\n};\n\nvar post = function (id) {\n  // old engines have not location.origin\n  global.postMessage(id + '', location.protocol + '//' + location.host);\n};\n\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!set || !clear) {\n  set = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clear = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (IS_NODE) {\n    defer = function (id) {\n      process.nextTick(runner(id));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(runner(id));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  // except iOS - https://github.com/zloirock/core-js/issues/624\n  } else if (MessageChannel && !IS_IOS) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = bind(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (\n    global.addEventListener &&\n    typeof postMessage == 'function' &&\n    !global.importScripts &&\n    location && location.protocol !== 'file:' &&\n    !fails(post)\n  ) {\n    defer = post;\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in createElement('script')) {\n    defer = function (id) {\n      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(runner(id), 0);\n    };\n  }\n}\n\nmodule.exports = {\n  set: set,\n  clear: clear\n};\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  version = match[0] + match[1];\n} else if (userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = match[1];\n  }\n}\n\nmodule.exports = version && +version;\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var classof = require('../internals/classof');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","module.exports = {};\n","var global = require('../internals/global');\n\nmodule.exports = global;\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","var global = require('../internals/global');\n\nmodule.exports = function (a, b) {\n  var console = global.console;\n  if (console && console.error) {\n    arguments.length === 1 ? console.error(a) : console.error(a, b);\n  }\n};\n","var anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  // eslint-disable-next-line no-undef\n  return !String(Symbol());\n});\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.8.3',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2021 Denis Pushkarev (zloirock.ru)'\n});\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var classof = require('../internals/classof-raw');\nvar global = require('../internals/global');\n\nmodule.exports = classof(global.process) == 'process';\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\n\nvar nativeAssign = Object.assign;\nvar defineProperty = Object.defineProperty;\n\n// `Object.assign` method\n// https://tc39.es/ecma262/#sec-object.assign\nmodule.exports = !nativeAssign || fails(function () {\n  // should have correct order of operations (Edge bug)\n  if (DESCRIPTORS && nativeAssign({ b: 1 }, nativeAssign(defineProperty({}, 'a', {\n    enumerable: true,\n    get: function () {\n      defineProperty(this, 'b', {\n        value: 3,\n        enumerable: false\n      });\n    }\n  }), { b: 2 })).b !== 1) return true;\n  // should work with symbols and should have deterministic property order (V8 bug)\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var symbol = Symbol();\n  var alphabet = 'abcdefghijklmnopqrst';\n  A[symbol] = 7;\n  alphabet.split('').forEach(function (chr) { B[chr] = chr; });\n  return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var argumentsLength = arguments.length;\n  var index = 1;\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  var propertyIsEnumerable = propertyIsEnumerableModule.f;\n  while (argumentsLength > index) {\n    var S = IndexedObject(arguments[index++]);\n    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : nativeAssign;\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP) {\n  var store = shared.state || (shared.state = new WeakMap());\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    metadata.facade = it;\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  var state;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) {\n      createNonEnumerableProperty(value, 'name', key);\n    }\n    state = enforceInternalState(value);\n    if (!state.source) {\n      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');\n    }\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n","exports.f = Object.getOwnPropertySymbols;\n","var path = require('../internals/path');\nvar has = require('../internals/has');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","var global = require('../internals/global');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var store = require('../internals/shared-store');\n\nvar functionToString = Function.toString;\n\n// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper\nif (typeof store.inspectSource != 'function') {\n  store.inspectSource = function (it) {\n    return functionToString.call(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\nvar nativeDefineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return nativeDefineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","var userAgent = require('../internals/engine-user-agent');\n\nmodule.exports = /web0s(?!.*chrome)/i.test(userAgent);\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/define-well-known-symbol');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\nvar WellKnownSymbolsStore = shared('wks');\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar isSymbol = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return Object(it) instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPrimitive(P, true);\n  anObject(Attributes);\n  if (has(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPrimitive(V, true);\n  var enumerable = nativePropertyIsEnumerable.call(this, P);\n  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPrimitive(P, true);\n  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {\n      result.push(AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.es/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  redefine($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Symbol.for` method\n  // https://tc39.es/ecma262/#sec-symbol.for\n  'for': function (key) {\n    var string = String(key);\n    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = $Symbol(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  },\n  // `Symbol.keyFor` method\n  // https://tc39.es/ecma262/#sec-symbol.keyfor\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');\n    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  },\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.es/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.es/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.es/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // `Object.getOwnPropertySymbols` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertysymbols\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\n$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return getOwnPropertySymbolsModule.f(toObject(it));\n  }\n});\n\n// `JSON.stringify` method behavior with symbols\n// https://tc39.es/ecma262/#sec-json.stringify\nif ($stringify) {\n  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {\n    var symbol = $Symbol();\n    // MS Edge converts symbol values to JSON as {}\n    return $stringify([symbol]) != '[null]'\n      // WebKit converts symbol values to JSON as null\n      || $stringify({ a: symbol }) != '{}'\n      // V8 throws on boxed symbols\n      || $stringify(Object(symbol)) != '{}';\n  });\n\n  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {\n    // eslint-disable-next-line no-unused-vars\n    stringify: function stringify(it, replacer, space) {\n      var args = [it];\n      var index = 1;\n      var $replacer;\n      while (arguments.length > index) args.push(arguments[index++]);\n      $replacer = replacer;\n      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n      if (!isArray(replacer)) replacer = function (key, value) {\n        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n        if (!isSymbol(value)) return value;\n      };\n      args[1] = replacer;\n      return $stringify.apply(null, args);\n    }\n  });\n}\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\nif (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {\n  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n}\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.es/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar fails = require('../internals/fails');\nvar getBuiltIn = require('../internals/get-built-in');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\nvar redefine = require('../internals/redefine');\n\n// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\nvar NON_GENERIC = !!NativePromise && fails(function () {\n  NativePromise.prototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });\n});\n\n// `Promise.prototype.finally` method\n// https://tc39.es/ecma262/#sec-promise.prototype.finally\n$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = typeof onFinally == 'function';\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n\n// patch native Promise.prototype for native async functions\nif (!IS_PURE && typeof NativePromise == 'function' && !NativePromise.prototype['finally']) {\n  redefine(NativePromise.prototype, 'finally', getBuiltIn('Promise').prototype['finally']);\n}\n","'use strict';\nvar fails = require('../internals/fails');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nvar NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {\n  var test = {};\n  // FF44- legacy iterators case\n  return IteratorPrototype[ITERATOR].call(test) !== test;\n});\n\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nif ((!IS_PURE || NEW_ITERATOR_PROTOTYPE) && !has(IteratorPrototype, ITERATOR)) {\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classof = require('../internals/classof');\n\n// `Object.prototype.toString` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.es/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar macrotask = require('../internals/task').set;\nvar IS_IOS = require('../internals/engine-is-ios');\nvar IS_WEBOS_WEBKIT = require('../internals/engine-is-webos-webkit');\nvar IS_NODE = require('../internals/engine-is-node');\n\nvar MutationObserver = global.MutationObserver || global.WebKitMutationObserver;\nvar document = global.document;\nvar process = global.process;\nvar Promise = global.Promise;\n// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`\nvar queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');\nvar queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;\n\nvar flush, head, last, notify, toggle, node, promise, then;\n\n// modern engines have queueMicrotask method\nif (!queueMicrotask) {\n  flush = function () {\n    var parent, fn;\n    if (IS_NODE && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (error) {\n        if (head) notify();\n        else last = undefined;\n        throw error;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339\n  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898\n  if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document) {\n    toggle = true;\n    node = document.createTextNode('');\n    new MutationObserver(flush).observe(node, { characterData: true });\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    promise = Promise.resolve(undefined);\n    then = promise.then;\n    notify = function () {\n      then.call(promise, flush);\n    };\n  // Node.js without promises\n  } else if (IS_NODE) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n}\n\nmodule.exports = queueMicrotask || function (fn) {\n  var task = { fn: fn, next: undefined };\n  if (last) last.next = task;\n  if (!head) {\n    head = task;\n    notify();\n  } last = task;\n};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar has = require('../internals/has');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name)) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];\n    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","var bind = require('../internals/function-bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterOut }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var IS_FILTER_OUT = TYPE == 7;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_OUT ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else switch (TYPE) {\n          case 4: return false;             // every\n          case 7: push.call(target, value); // filterOut\n        }\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.es/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.es/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.es/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.es/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6),\n  // `Array.prototype.filterOut` method\n  // https://github.com/tc39/proposal-array-filtering\n  filterOut: createMethod(7)\n};\n","var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","module.exports = false;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var $ = require('../internals/export');\nvar assign = require('../internals/object-assign');\n\n// `Object.assign` method\n// https://tc39.es/ecma262/#sec-object.assign\n$({ target: 'Object', stat: true, forced: Object.assign !== assign }, {\n  assign: assign\n});\n","(function (root, factory) {\nif (typeof define === 'function' && define.amd) {\ndefine([], factory);\n} else if (typeof module === 'object' && module.exports) {\nmodule.exports = factory();\n} else {\nroot.mxgraph = factory();\n}\n}(this, function () {\nreturn function (opts) {\nfor (var name in opts) { this[name] = opts[name]; }\nvar __mxOutput = {};\n/**\n * Copyright (c) 2006-2017, JGraph Ltd\n * Copyright (c) 2006-2017, Gaudenz Alder\n */\nvar mxClient =\n{\n\t/**\n\t * Class: mxClient\n\t *\n\t * Bootstrapping mechanism for the mxGraph thin client. The production version\n\t * of this file contains all code required to run the mxGraph thin client, as\n\t * well as global constants to identify the browser and operating system in\n\t * use. You may have to load chrome://global/content/contentAreaUtils.js in\n\t * your page to disable certain security restrictions in Mozilla.\n\t * \n\t * Variable: VERSION\n\t *\n\t * Contains the current version of the mxGraph library. The strings that\n\t * communicate versions of mxGraph use the following format.\n\t * \n\t * versionMajor.versionMinor.buildNumber.revisionNumber\n\t * \n\t * Current version is 4.2.2.\n\t */\n\tVERSION: '4.2.2',\n\n\t/**\n\t * Variable: IS_IE\n\t *\n\t * True if the current browser is Internet Explorer 10 or below. Use <mxClient.IS_IE11>\n\t * to detect IE 11.\n\t */\n\tIS_IE: navigator.userAgent != null && navigator.userAgent.indexOf('MSIE') >= 0,\n\n\t/**\n\t * Variable: IS_IE6\n\t *\n\t * True if the current browser is Internet Explorer 6.x.\n\t */\n\tIS_IE6: navigator.userAgent != null && navigator.userAgent.indexOf('MSIE 6') >= 0,\n\n\t/**\n\t * Variable: IS_IE11\n\t *\n\t * True if the current browser is Internet Explorer 11.x.\n\t */\n\tIS_IE11: navigator.userAgent != null && !!navigator.userAgent.match(/Trident\\/7\\./),\n\n\t/**\n\t * Variable: IS_EDGE\n\t *\n\t * True if the current browser is Microsoft Edge.\n\t */\n\tIS_EDGE: navigator.userAgent != null && !!navigator.userAgent.match(/Edge\\//),\n\n\t/**\n\t * Variable: IS_QUIRKS\n\t *\n\t * True if the current browser is Internet Explorer and it is in quirks mode.\n\t */\n\tIS_QUIRKS: navigator.userAgent != null && navigator.userAgent.indexOf('MSIE') >= 0 &&\n\t\t(document.documentMode == null || document.documentMode == 5),\n\n\t/**\n\t * Variable: IS_EM\n\t * \n\t * True if the browser is IE11 in enterprise mode (IE8 standards mode).\n\t */\n\tIS_EM: 'spellcheck' in document.createElement('textarea') && document.documentMode == 8,\n\n\t/**\n\t * Variable: VML_PREFIX\n\t * \n\t * Prefix for VML namespace in node names. Default is 'v'.\n\t */\n\tVML_PREFIX: 'v',\n\n\t/**\n\t * Variable: OFFICE_PREFIX\n\t * \n\t * Prefix for VML office namespace in node names. Default is 'o'.\n\t */\n\tOFFICE_PREFIX: 'o',\n\n\t/**\n\t * Variable: IS_NS\n\t *\n\t * True if the current browser is Netscape (including Firefox).\n\t */\n  \tIS_NS: navigator.userAgent != null &&\n  \t\tnavigator.userAgent.indexOf('Mozilla/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('MSIE') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Edge/') < 0,\n\n\t/**\n\t * Variable: IS_OP\n\t *\n\t * True if the current browser is Opera.\n\t */\n  \tIS_OP: navigator.userAgent != null &&\n  \t\t(navigator.userAgent.indexOf('Opera/') >= 0 ||\n  \t\tnavigator.userAgent.indexOf('OPR/') >= 0),\n\n\t/**\n\t * Variable: IS_OT\n\t *\n\t * True if -o-transform is available as a CSS style, ie for Opera browsers\n\t * based on a Presto engine with version 2.5 or later.\n\t */\n  \tIS_OT: navigator.userAgent != null &&\n  \t\tnavigator.userAgent.indexOf('Presto/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.4.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.3.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.2.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.1.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.0.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/1.') < 0,\n  \t\n\t/**\n\t * Variable: IS_SF\n\t *\n\t * True if the current browser is Safari.\n\t */\n  \tIS_SF: /Apple Computer, Inc/.test(navigator.vendor),\n\n\t/**\n\t * Variable: IS_ANDROID\n\t * \n\t * Returns true if the user agent contains Android.\n\t */\n  \tIS_ANDROID: navigator.appVersion.indexOf('Android') >= 0,\n\n\t/**\n\t * Variable: IS_IOS\n\t * \n\t * Returns true if the user agent is an iPad, iPhone or iPod.\n\t */\n  \tIS_IOS: (/iP(hone|od|ad)/.test(navigator.platform)),\n\n\t/**\n\t * Variable: IS_GC\n\t *\n\t * True if the current browser is Google Chrome.\n\t */\n  \tIS_GC: /Google Inc/.test(navigator.vendor),\n\t\n\t/**\n\t * Variable: IS_CHROMEAPP\n\t *\n\t * True if the this is running inside a Chrome App.\n\t */\n  \tIS_CHROMEAPP: window.chrome != null && chrome.app != null && chrome.app.runtime != null,\n\n\t/**\n\t * Variable: IS_FF\n\t *\n\t * True if the current browser is Firefox.\n\t */\n  \tIS_FF: typeof InstallTrigger !== 'undefined',\n  \t\n\t/**\n\t * Variable: IS_MT\n\t *\n\t * True if -moz-transform is available as a CSS style. This is the case\n\t * for all Firefox-based browsers newer than or equal 3, such as Camino,\n\t * Iceweasel, Seamonkey and Iceape.\n\t */\n  \tIS_MT: (navigator.userAgent.indexOf('Firefox/') >= 0 &&\n\t\tnavigator.userAgent.indexOf('Firefox/1.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Firefox/2.') < 0) ||\n  \t\t(navigator.userAgent.indexOf('Iceweasel/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('Iceweasel/1.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Iceweasel/2.') < 0) ||\n  \t\t(navigator.userAgent.indexOf('SeaMonkey/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('SeaMonkey/1.') < 0) ||\n  \t\t(navigator.userAgent.indexOf('Iceape/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('Iceape/1.') < 0),\n\n\t/**\n\t * Variable: IS_VML\n\t *\n\t * True if the browser supports VML.\n\t */\n  \tIS_VML: navigator.appName.toUpperCase() == 'MICROSOFT INTERNET EXPLORER',\n\n\t/**\n\t * Variable: IS_SVG\n\t *\n\t * True if the browser supports SVG.\n\t */\n  \tIS_SVG: navigator.appName.toUpperCase() != 'MICROSOFT INTERNET EXPLORER',\n\n\t/**\n\t * Variable: NO_FO\n\t *\n\t * True if foreignObject support is not available. This is the case for\n\t * Opera, older SVG-based browsers and all versions of IE.\n\t */\n  \tNO_FO: !document.createElementNS || document.createElementNS('http://www.w3.org/2000/svg',\n  \t\t'foreignObject') != '[object SVGForeignObjectElement]' || navigator.userAgent.indexOf('Opera/') >= 0,\n\n\t/**\n\t * Variable: IS_WIN\n\t *\n\t * True if the client is a Windows.\n\t */\n  \tIS_WIN: navigator.appVersion.indexOf('Win') > 0,\n\n\t/**\n\t * Variable: IS_MAC\n\t *\n\t * True if the client is a Mac.\n\t */\n  \tIS_MAC: navigator.appVersion.indexOf('Mac') > 0,\n\t\n\t/**\n\t * Variable: IS_CHROMEOS\n\t *\n\t * True if the client is a Chrome OS.\n\t */\n  \tIS_CHROMEOS: /\\bCrOS\\b/.test(navigator.appVersion),\n\n\t/**\n\t * Variable: IS_TOUCH\n\t * \n\t * True if this device supports touchstart/-move/-end events (Apple iOS,\n\t * Android, Chromebook and Chrome Browser on touch-enabled devices).\n\t */\n  \tIS_TOUCH: 'ontouchstart' in document.documentElement,\n\n\t/**\n\t * Variable: IS_POINTER\n\t * \n\t * True if this device supports Microsoft pointer events (always false on Macs).\n\t */\n  \tIS_POINTER: window.PointerEvent != null && !(navigator.appVersion.indexOf('Mac') > 0),\n\n\t/**\n\t * Variable: IS_LOCAL\n\t *\n\t * True if the documents location does not start with http:// or https://.\n\t */\n  \tIS_LOCAL: document.location.href.indexOf('http://') < 0 &&\n  \t\t\t  document.location.href.indexOf('https://') < 0,\n\n\t/**\n\t * Variable: defaultBundles\n\t * \n\t * Contains the base names of the default bundles if mxLoadResources is false.\n\t */\n  \tdefaultBundles: [],\n\n\t/**\n\t * Function: isBrowserSupported\n\t *\n\t * Returns true if the current browser is supported, that is, if\n\t * <mxClient.IS_VML> or <mxClient.IS_SVG> is true.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * if (!mxClient.isBrowserSupported())\n\t * {\n\t *   mxUtils.error('Browser is not supported!', 200, false);\n\t * }\n\t * (end)\n\t */\n\tisBrowserSupported: function()\n\t{\n\t\treturn mxClient.IS_VML || mxClient.IS_SVG;\n\t},\n\n\t/**\n\t * Function: link\n\t *\n\t * Adds a link node to the head of the document. Use this\n\t * to add a stylesheet to the page as follows:\n\t *\n\t * (code)\n\t * mxClient.link('stylesheet', filename);\n\t * (end)\n\t *\n\t * where filename is the (relative) URL of the stylesheet. The charset\n\t * is hardcoded to ISO-8859-1 and the type is text/css.\n\t * \n\t * Parameters:\n\t * \n\t * rel - String that represents the rel attribute of the link node.\n\t * href - String that represents the href attribute of the link node.\n\t * doc - Optional parent document of the link node.\n\t * id - unique id for the link element to check if it already exists\n\t */\n\tlink: function(rel, href, doc, id)\n\t{\n\t\tdoc = doc || document;\n\n\t\t// Workaround for Operation Aborted in IE6 if base tag is used in head\n\t\tif (mxClient.IS_IE6)\n\t\t{\n\t\t\tdoc.write('<link rel=\"' + rel + '\" href=\"' + href + '\" charset=\"UTF-8\" type=\"text/css\"/>');\n\t\t}\n\t\telse\n\t\t{\t\n\t\t\tvar link = doc.createElement('link');\n\t\t\t\n\t\t\tlink.setAttribute('rel', rel);\n\t\t\tlink.setAttribute('href', href);\n\t\t\tlink.setAttribute('charset', 'UTF-8');\n\t\t\tlink.setAttribute('type', 'text/css');\n\t\t\t\n\t\t\tif (id)\n\t\t\t{\n\t\t\t\tlink.setAttribute('id', id);\n\t\t\t}\n\t\t\t\n\t\t\tvar head = doc.getElementsByTagName('head')[0];\n\t   \t\thead.appendChild(link);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: loadResources\n\t * \n\t * Helper method to load the default bundles if mxLoadResources is false.\n\t * \n\t * Parameters:\n\t * \n\t * fn - Function to call after all resources have been loaded.\n\t * lan - Optional string to pass to <mxResources.add>.\n\t */\n\tloadResources: function(fn, lan)\n\t{\n\t\tvar pending = mxClient.defaultBundles.length;\n\t\t\n\t\tfunction callback()\n\t\t{\n\t\t\tif (--pending == 0)\n\t\t\t{\n\t\t\t\tfn();\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < mxClient.defaultBundles.length; i++)\n\t\t{\n\t\t\tmxResources.add(mxClient.defaultBundles[i], lan, callback);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: include\n\t *\n\t * Dynamically adds a script node to the document header.\n\t * \n\t * In production environments, the includes are resolved in the mxClient.js\n\t * file to reduce the number of requests required for client startup. This\n\t * function should only be used in development environments, but not in\n\t * production systems.\n\t */\n\tinclude: function(src)\n\t{\n\t\tdocument.write('<script src=\"'+src+'\"></script>');\n\t}\n};\n\n/**\n * Variable: mxLoadResources\n * \n * Optional global config variable to toggle loading of the two resource files\n * in <mxGraph> and <mxEditor>. Default is true. NOTE: This is a global variable,\n * not a variable of mxClient. If this is false, you can use <mxClient.loadResources>\n * with its callback to load the default bundles asynchronously.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxLoadResources = false;\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxLoadResources) == 'undefined')\n{\n\tmxLoadResources = true;\n}\n\n/**\n * Variable: mxForceIncludes\n * \n * Optional global config variable to force loading the JavaScript files in\n * development mode. Default is undefined. NOTE: This is a global variable,\n * not a variable of mxClient.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxLoadResources = true;\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxForceIncludes) == 'undefined')\n{\n\tmxForceIncludes = false;\n}\n\n/**\n * Variable: mxResourceExtension\n * \n * Optional global config variable to specify the extension of resource files.\n * Default is true. NOTE: This is a global variable, not a variable of mxClient.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxResourceExtension = '.txt';\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxResourceExtension) == 'undefined')\n{\n\tmxResourceExtension = '.txt';\n}\n\n/**\n * Variable: mxLoadStylesheets\n * \n * Optional global config variable to toggle loading of the CSS files when\n * the library is initialized. Default is true. NOTE: This is a global variable,\n * not a variable of mxClient.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxLoadStylesheets = false;\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxLoadStylesheets) == 'undefined')\n{\n\tmxLoadStylesheets = true;\n}\n\n/**\n * Variable: basePath\n *\n * Basepath for all URLs in the core without trailing slash. Default is '.'.\n * Set mxBasePath prior to loading the mxClient library as follows to override\n * this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxBasePath = '/path/to/core/directory';\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n * \n * When using a relative path, the path is relative to the URL of the page that\n * contains the assignment. Trailing slashes are automatically removed.\n */\nif (typeof(mxBasePath) != 'undefined' && mxBasePath.length > 0)\n{\n\t// Adds a trailing slash if required\n\tif (mxBasePath.substring(mxBasePath.length - 1) == '/')\n\t{\n\t\tmxBasePath = mxBasePath.substring(0, mxBasePath.length - 1);\n\t}\n\n\tmxClient.basePath = mxBasePath;\n}\nelse\n{\n\tmxClient.basePath = '.';\n}\n\n/**\n * Variable: imageBasePath\n *\n * Basepath for all images URLs in the core without trailing slash. Default is\n * <mxClient.basePath> + '/images'. Set mxImageBasePath prior to loading the\n * mxClient library as follows to override this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxImageBasePath = '/path/to/image/directory';\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n * \n * When using a relative path, the path is relative to the URL of the page that\n * contains the assignment. Trailing slashes are automatically removed.\n */\nif (typeof(mxImageBasePath) != 'undefined' && mxImageBasePath.length > 0)\n{\n\t// Adds a trailing slash if required\n\tif (mxImageBasePath.substring(mxImageBasePath.length - 1) == '/')\n\t{\n\t\tmxImageBasePath = mxImageBasePath.substring(0, mxImageBasePath.length - 1);\n\t}\n\n\tmxClient.imageBasePath = mxImageBasePath;\n}\nelse\n{\n\tmxClient.imageBasePath = mxClient.basePath + '/images';\t\n}\n\n/**\n * Variable: language\n *\n * Defines the language of the client, eg. en for english, de for german etc.\n * The special value 'none' will disable all built-in internationalization and\n * resource loading. See <mxResources.getSpecialBundle> for handling identifiers\n * with and without a dash.\n * \n * Set mxLanguage prior to loading the mxClient library as follows to override\n * this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxLanguage = 'en';\n * </script>\n * <script type=\"text/javascript\" src=\"js/mxClient.js\"></script>\n * (end)\n * \n * If internationalization is disabled, then the following variables should be\n * overridden to reflect the current language of the system. These variables are\n * cleared when i18n is disabled.\n * <mxEditor.askZoomResource>, <mxEditor.lastSavedResource>,\n * <mxEditor.currentFileResource>, <mxEditor.propertiesResource>,\n * <mxEditor.tasksResource>, <mxEditor.helpResource>, <mxEditor.outlineResource>,\n * <mxElbowEdgeHandler.doubleClickOrientationResource>, <mxUtils.errorResource>,\n * <mxUtils.closeResource>, <mxGraphSelectionModel.doneResource>,\n * <mxGraphSelectionModel.updatingSelectionResource>, <mxGraphView.doneResource>,\n * <mxGraphView.updatingDocumentResource>, <mxCellRenderer.collapseExpandResource>,\n * <mxGraph.containsValidationErrorsResource> and\n * <mxGraph.alreadyConnectedResource>.\n */\nif (typeof(mxLanguage) != 'undefined' && mxLanguage != null)\n{\n\tmxClient.language = mxLanguage;\n}\nelse\n{\n\tmxClient.language = (mxClient.IS_IE) ? navigator.userLanguage : navigator.language;\n}\n\n/**\n * Variable: defaultLanguage\n * \n * Defines the default language which is used in the common resource files. Any\n * resources for this language will only load the common resource file, but not\n * the language-specific resource file. Default is 'en'.\n * \n * Set mxDefaultLanguage prior to loading the mxClient library as follows to override\n * this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxDefaultLanguage = 'de';\n * </script>\n * <script type=\"text/javascript\" src=\"js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxDefaultLanguage) != 'undefined' && mxDefaultLanguage != null)\n{\n\tmxClient.defaultLanguage = mxDefaultLanguage;\n}\nelse\n{\n\tmxClient.defaultLanguage = 'en';\n}\n\n// Adds all required stylesheets and namespaces\nif (mxLoadStylesheets)\n{\n\tmxClient.link('stylesheet', mxClient.basePath + '/css/common.css');\n}\n\n/**\n * Variable: languages\n *\n * Defines the optional array of all supported language extensions. The default\n * language does not have to be part of this list. See\n * <mxResources.isLanguageSupported>.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxLanguages = ['de', 'it', 'fr'];\n * </script>\n * <script type=\"text/javascript\" src=\"js/mxClient.js\"></script>\n * (end)\n * \n * This is used to avoid unnecessary requests to language files, ie. if a 404\n * will be returned.\n */\nif (typeof(mxLanguages) != 'undefined' && mxLanguages != null)\n{\n\tmxClient.languages = mxLanguages;\n}\n\n// Adds required namespaces, stylesheets and memory handling for older IE browsers\nif (mxClient.IS_VML)\n{\n\tif (mxClient.IS_SVG)\n\t{\n\t\tmxClient.IS_VML = false;\n\t}\n\telse\n\t{\n\t\t// Enables support for IE8 standards mode. Note that this requires all attributes for VML\n\t\t// elements to be set using direct notation, ie. node.attr = value, not setAttribute.\n\t\tif (document.namespaces != null)\n\t\t{\n\t\t\tif (document.documentMode == 8)\n\t\t\t{\n\t\t\t\tdocument.namespaces.add(mxClient.VML_PREFIX, 'urn:schemas-microsoft-com:vml', '#default#VML');\n\t\t\t\tdocument.namespaces.add(mxClient.OFFICE_PREFIX, 'urn:schemas-microsoft-com:office:office', '#default#VML');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdocument.namespaces.add(mxClient.VML_PREFIX, 'urn:schemas-microsoft-com:vml');\n\t\t\t\tdocument.namespaces.add(mxClient.OFFICE_PREFIX, 'urn:schemas-microsoft-com:office:office');\n\t\t\t}\n\t\t}\n\n\t\t// Workaround for limited number of stylesheets in IE (does not work in standards mode)\n\t\tif (mxClient.IS_QUIRKS && document.styleSheets.length >= 30)\n\t\t{\n\t\t\t(function()\n\t\t\t{\n\t\t\t\tvar node = document.createElement('style');\n\t\t\t\tnode.type = 'text/css';\n\t\t\t\tnode.styleSheet.cssText = mxClient.VML_PREFIX + '\\\\:*{behavior:url(#default#VML)}' +\n\t\t        \tmxClient.OFFICE_PREFIX + '\\\\:*{behavior:url(#default#VML)}';\n\t\t        document.getElementsByTagName('head')[0].appendChild(node);\n\t\t\t})();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.createStyleSheet().cssText = mxClient.VML_PREFIX + '\\\\:*{behavior:url(#default#VML)}' +\n\t\t    \tmxClient.OFFICE_PREFIX + '\\\\:*{behavior:url(#default#VML)}';\n\t\t}\n\t    \n\t    if (mxLoadStylesheets)\n\t    {\n\t    \tmxClient.link('stylesheet', mxClient.basePath + '/css/explorer.css');\n\t    }\n\t}\n}\n\n// PREPROCESSOR-REMOVE-START\n// If script is loaded via CommonJS, do not write <script> tags to the page\n// for dependencies. These are already included in the build.\nif (mxForceIncludes || !(typeof module === 'object' && module.exports != null))\n{\n// PREPROCESSOR-REMOVE-END\n\tmxClient.include(mxClient.basePath+'/js/util/mxLog.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxObjectIdentity.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxDictionary.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxResources.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxPoint.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxRectangle.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxEffects.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxUtils.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxConstants.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxEventObject.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxMouseEvent.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxEventSource.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxEvent.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxXmlRequest.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxClipboard.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxWindow.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxForm.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxImage.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxDivResizer.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxDragSource.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxToolbar.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxUndoableEdit.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxUndoManager.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxUrlConverter.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxPanningManager.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxPopupMenu.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxAutoSaveManager.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxAnimation.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxMorphing.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxImageBundle.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxImageExport.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxAbstractCanvas2D.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxXmlCanvas2D.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxSvgCanvas2D.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxVmlCanvas2D.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxGuide.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxShape.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxStencil.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxStencilRegistry.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxMarker.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxActor.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxCloud.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxRectangleShape.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxEllipse.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxDoubleEllipse.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxRhombus.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxPolyline.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxArrow.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxArrowConnector.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxText.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxTriangle.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxHexagon.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxLine.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxImageShape.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxLabel.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxCylinder.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxConnector.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxSwimlane.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxGraphLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxStackLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxPartitionLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxCompactTreeLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxRadialTreeLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxFastOrganicLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxCircleLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxParallelEdgeLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxCompositeLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxEdgeLabelLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/model/mxGraphAbstractHierarchyCell.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/model/mxGraphHierarchyNode.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/model/mxGraphHierarchyEdge.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/model/mxGraphHierarchyModel.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/model/mxSwimlaneModel.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/stage/mxHierarchicalLayoutStage.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/stage/mxMedianHybridCrossingReduction.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/stage/mxMinimumCycleRemover.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/stage/mxCoordinateAssignment.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/stage/mxSwimlaneOrdering.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/mxHierarchicalLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/mxSwimlaneLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/model/mxGraphModel.js');\n\tmxClient.include(mxClient.basePath+'/js/model/mxCell.js');\n\tmxClient.include(mxClient.basePath+'/js/model/mxGeometry.js');\n\tmxClient.include(mxClient.basePath+'/js/model/mxCellPath.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxPerimeter.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxPrintPreview.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxStylesheet.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxCellState.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxGraphSelectionModel.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxCellEditor.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxCellRenderer.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxEdgeStyle.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxStyleRegistry.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxGraphView.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxGraph.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxCellOverlay.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxOutline.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxMultiplicity.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxLayoutManager.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxSwimlaneManager.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxTemporaryCellStates.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxCellStatePreview.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxConnectionConstraint.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxGraphHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxPanningHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxPopupMenuHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxCellMarker.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxSelectionCellsHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxConnectionHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxConstraintHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxRubberband.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxHandle.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxVertexHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxEdgeHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxElbowEdgeHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxEdgeSegmentHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxKeyHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxTooltipHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxCellTracker.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxCellHighlight.js');\n\tmxClient.include(mxClient.basePath+'/js/editor/mxDefaultKeyHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/editor/mxDefaultPopupMenu.js');\n\tmxClient.include(mxClient.basePath+'/js/editor/mxDefaultToolbar.js');\n\tmxClient.include(mxClient.basePath+'/js/editor/mxEditor.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxCodecRegistry.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxObjectCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxCellCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxModelCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxRootChangeCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxChildChangeCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxTerminalChangeCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxGenericChangeCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxGraphCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxGraphViewCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxStylesheetCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxDefaultKeyHandlerCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxDefaultToolbarCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxDefaultPopupMenuCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxEditorCodec.js');\n// PREPROCESSOR-REMOVE-START\n}\n// PREPROCESSOR-REMOVE-END\n\n__mxOutput.mxClient = typeof mxClient !== 'undefined' ? mxClient : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxLog =\n{\n\t/**\n\t * Class: mxLog\n\t * \n\t * A singleton class that implements a simple console.\n\t * \n\t * Variable: consoleName\n\t * \n\t * Specifies the name of the console window. Default is 'Console'.\n\t */\n\tconsoleName: 'Console',\n\t\n\t/**\n\t * Variable: TRACE\n\t * \n\t * Specified if the output for <enter> and <leave> should be visible in the\n\t * console. Default is false.\n\t */\n\tTRACE: false,\n\n\t/**\n\t * Variable: DEBUG\n\t * \n\t * Specifies if the output for <debug> should be visible in the console.\n\t * Default is true.\n\t */\n\tDEBUG: true,\n\n\t/**\n\t * Variable: WARN\n\t * \n\t * Specifies if the output for <warn> should be visible in the console.\n\t * Default is true.\n\t */\n\tWARN: true,\n\n\t/**\n\t * Variable: buffer\n\t * \n\t * Buffer for pre-initialized content.\n\t */\n\tbuffer: '',\n\t\n\t/**\n\t * Function: init\n\t *\n\t * Initializes the DOM node for the console. This requires document.body to\n\t * point to a non-null value. This is called from within <setVisible> if the\n\t * log has not yet been initialized.\n\t */\n\tinit: function()\n\t{\n\t\tif (mxLog.window == null && document.body != null)\n\t\t{\n\t\t\tvar title = mxLog.consoleName + ' - mxGraph ' + mxClient.VERSION;\n\n\t\t\t// Creates a table that maintains the layout\n\t\t\tvar table = document.createElement('table');\n\t\t\ttable.setAttribute('width', '100%');\n\t\t\ttable.setAttribute('height', '100%');\n\n\t\t\tvar tbody = document.createElement('tbody');\n\t\t\tvar tr = document.createElement('tr');\n\t\t\tvar td = document.createElement('td');\n\t\t\ttd.style.verticalAlign = 'top';\n\t\t\t\t\n\t\t\t// Adds the actual console as a textarea\n\t\t\tmxLog.textarea = document.createElement('textarea');\n\t\t\tmxLog.textarea.setAttribute('wrap', 'off');\n\t\t\tmxLog.textarea.setAttribute('readOnly', 'true');\n\t\t\tmxLog.textarea.style.height = '100%';\n\t\t\tmxLog.textarea.style.resize = 'none';\n\t\t\tmxLog.textarea.value = mxLog.buffer;\n\n\t\t\t// Workaround for wrong width in standards mode\n\t\t\tif (mxClient.IS_NS && document.compatMode != 'BackCompat')\n\t\t\t{\n\t\t\t\tmxLog.textarea.style.width = '99%';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxLog.textarea.style.width = '100%';\n\t\t\t}\n\t\t\t\n\t\t\ttd.appendChild(mxLog.textarea);\n\t\t\ttr.appendChild(td);\n\t\t\ttbody.appendChild(tr);\n\n\t\t\t// Creates the container div\n\t\t\ttr = document.createElement('tr');\n\t\t\tmxLog.td = document.createElement('td');\n\t\t\tmxLog.td.style.verticalAlign = 'top';\n\t\t\tmxLog.td.setAttribute('height', '30px');\n\t\t\t\n\t\t\ttr.appendChild(mxLog.td);\n\t\t\ttbody.appendChild(tr);\n\t\t\ttable.appendChild(tbody);\n\n\t\t\t// Adds various debugging buttons\n\t\t\tmxLog.addButton('Info', function (evt)\n\t\t\t{\n\t\t\t\tmxLog.info();\n\t\t\t});\n\t\t\n\t\t\tmxLog.addButton('DOM', function (evt)\n\t\t\t{\n\t\t\t\tvar content = mxUtils.getInnerHtml(document.body);\n\t\t\t\tmxLog.debug(content);\n\t\t\t});\n\t\n\t\t\tmxLog.addButton('Trace', function (evt)\n\t\t\t{\n\t\t\t\tmxLog.TRACE = !mxLog.TRACE;\n\t\t\t\t\n\t\t\t\tif (mxLog.TRACE)\n\t\t\t\t{\n\t\t\t\t\tmxLog.debug('Tracing enabled');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmxLog.debug('Tracing disabled');\n\t\t\t\t}\n\t\t\t});\t\n\n\t\t\tmxLog.addButton('Copy', function (evt)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tmxUtils.copy(mxLog.textarea.value);\n\t\t\t\t}\n\t\t\t\tcatch (err)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.alert(err);\n\t\t\t\t}\n\t\t\t});\t\t\t\n\n\t\t\tmxLog.addButton('Show', function (evt)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tmxUtils.popup(mxLog.textarea.value);\n\t\t\t\t}\n\t\t\t\tcatch (err)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.alert(err);\n\t\t\t\t}\n\t\t\t});\t\n\t\t\t\n\t\t\tmxLog.addButton('Clear', function (evt)\n\t\t\t{\n\t\t\t\tmxLog.textarea.value = '';\n\t\t\t});\n\n\t\t\t// Cross-browser code to get window size\n\t\t\tvar h = 0;\n\t\t\tvar w = 0;\n\t\t\t\n\t\t\tif (typeof(window.innerWidth) === 'number')\n\t\t\t{\n\t\t\t\th = window.innerHeight;\n\t\t\t\tw = window.innerWidth;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\th = (document.documentElement.clientHeight || document.body.clientHeight);\n\t\t\t\tw = document.body.clientWidth;\n\t\t\t}\n\n\t\t\tmxLog.window = new mxWindow(title, table, Math.max(0, w - 320), Math.max(0, h - 210), 300, 160);\n\t\t\tmxLog.window.setMaximizable(true);\n\t\t\tmxLog.window.setScrollable(false);\n\t\t\tmxLog.window.setResizable(true);\n\t\t\tmxLog.window.setClosable(true);\n\t\t\tmxLog.window.destroyOnClose = false;\n\t\t\t\n\t\t\t// Workaround for ignored textarea height in various setups\n\t\t\tif (((mxClient.IS_NS || mxClient.IS_IE) && !mxClient.IS_GC &&\n\t\t\t\t!mxClient.IS_SF && document.compatMode != 'BackCompat') ||\n\t\t\t\tdocument.documentMode == 11)\n\t\t\t{\n\t\t\t\tvar elt = mxLog.window.getElement();\n\t\t\t\t\n\t\t\t\tvar resizeHandler = function(sender, evt)\n\t\t\t\t{\n\t\t\t\t\tmxLog.textarea.style.height = Math.max(0, elt.offsetHeight - 70) + 'px';\n\t\t\t\t}; \n\t\t\t\t\n\t\t\t\tmxLog.window.addListener(mxEvent.RESIZE_END, resizeHandler);\n\t\t\t\tmxLog.window.addListener(mxEvent.MAXIMIZE, resizeHandler);\n\t\t\t\tmxLog.window.addListener(mxEvent.NORMALIZE, resizeHandler);\n\n\t\t\t\tmxLog.textarea.style.height = '92px';\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: info\n\t * \n\t * Writes the current navigator information to the console.\n\t */\n\tinfo: function()\n\t{\n\t\tmxLog.writeln(mxUtils.toString(navigator));\n\t},\n\t\t\t\n\t/**\n\t * Function: addButton\n\t * \n\t * Adds a button to the console using the given label and function.\n\t */\n\taddButton: function(lab, funct)\n\t{\n\t\tvar button = document.createElement('button');\n\t\tmxUtils.write(button, lab);\n\t\tmxEvent.addListener(button, 'click', funct);\n\t\tmxLog.td.appendChild(button);\n\t},\n\t\t\t\t\n\t/**\n\t * Function: isVisible\n\t * \n\t * Returns true if the console is visible.\n\t */\n\tisVisible: function()\n\t{\n\t\tif (mxLog.window != null)\n\t\t{\n\t\t\treturn mxLog.window.isVisible();\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n\t\n\n\t/**\n\t * Function: show\n\t * \n\t * Shows the console.\n\t */\n\tshow: function()\n\t{\n\t\tmxLog.setVisible(true);\n\t},\n\n\t/**\n\t * Function: setVisible\n\t * \n\t * Shows or hides the console.\n\t */\n\tsetVisible: function(visible)\n\t{\n\t\tif (mxLog.window == null)\n\t\t{\n\t\t\tmxLog.init();\n\t\t}\n\n\t\tif (mxLog.window != null)\n\t\t{\n\t\t\tmxLog.window.setVisible(visible);\n\t\t}\n\t},\n\n\t/**\n\t * Function: enter\n\t * \n\t * Writes the specified string to the console\n\t * if <TRACE> is true and returns the current \n\t * time in milliseconds.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxLog.show();\n\t * var t0 = mxLog.enter('Hello');\n\t * // Do something\n\t * mxLog.leave('World!', t0);\n\t * (end)\n\t */\n\tenter: function(string)\n\t{\n\t\tif (mxLog.TRACE)\n\t\t{\n\t\t\tmxLog.writeln('Entering '+string);\n\t\t\t\n\t\t\treturn new Date().getTime();\n\t\t}\n\t},\n\n\t/**\n\t * Function: leave\n\t * \n\t * Writes the specified string to the console\n\t * if <TRACE> is true and computes the difference\n\t * between the current time and t0 in milliseconds.\n\t * See <enter> for an example.\n\t */\n\tleave: function(string, t0)\n\t{\n\t\tif (mxLog.TRACE)\n\t\t{\n\t\t\tvar dt = (t0 != 0) ? ' ('+(new Date().getTime() - t0)+' ms)' : '';\n\t\t\tmxLog.writeln('Leaving '+string+dt);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: debug\n\t * \n\t * Adds all arguments to the console if <DEBUG> is enabled.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxLog.show();\n\t * mxLog.debug('Hello, World!');\n\t * (end)\n\t */\n\tdebug: function()\n\t{\n\t\tif (mxLog.DEBUG)\n\t\t{\n\t\t\tmxLog.writeln.apply(this, arguments);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: warn\n\t * \n\t * Adds all arguments to the console if <WARN> is enabled.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxLog.show();\n\t * mxLog.warn('Hello, World!');\n\t * (end)\n\t */\n\twarn: function()\n\t{\n\t\tif (mxLog.WARN)\n\t\t{\n\t\t\tmxLog.writeln.apply(this, arguments);\n\t\t}\n\t},\n\n\t/**\n\t * Function: write\n\t * \n\t * Adds the specified strings to the console.\n\t */\n\twrite: function()\n\t{\n\t\tvar string = '';\n\t\t\n\t\tfor (var i = 0; i < arguments.length; i++)\n\t\t{\n\t\t\tstring += arguments[i];\n\t\t\t\n\t\t\tif (i < arguments.length - 1)\n\t\t\t{\n\t\t\t\tstring += ' ';\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (mxLog.textarea != null)\n\t\t{\n\t\t\tmxLog.textarea.value = mxLog.textarea.value + string;\n\n\t\t\t// Workaround for no update in Presto 2.5.22 (Opera 10.5)\n\t\t\tif (navigator.userAgent != null &&\n\t\t\t\tnavigator.userAgent.indexOf('Presto/2.5') >= 0)\n\t\t\t{\n\t\t\t\tmxLog.textarea.style.visibility = 'hidden';\n\t\t\t\tmxLog.textarea.style.visibility = 'visible';\n\t\t\t}\n\t\t\t\n\t\t\tmxLog.textarea.scrollTop = mxLog.textarea.scrollHeight;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxLog.buffer += string;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: writeln\n\t * \n\t * Adds the specified strings to the console, appending a linefeed at the\n\t * end of each string.\n\t */\n\twriteln: function()\n\t{\n\t\tvar string = '';\n\t\t\n\t\tfor (var i = 0; i < arguments.length; i++)\n\t\t{\n\t\t\tstring += arguments[i];\n\t\t\t\n\t\t\tif (i < arguments.length - 1)\n\t\t\t{\n\t\t\t\tstring += ' ';\n\t\t\t}\n\t\t}\n\n\t\tmxLog.write(string + '\\n');\n\t}\n\t\n};\n\n__mxOutput.mxLog = typeof mxLog !== 'undefined' ? mxLog : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxObjectIdentity =\n{\n\t/**\n\t * Class: mxObjectIdentity\n\t * \n\t * Identity for JavaScript objects and functions. This is implemented using\n\t * a simple incrementing counter which is stored in each object under\n\t * <FIELD_NAME>.\n\t * \n\t * The identity for an object does not change during its lifecycle.\n\t * \n\t * Variable: FIELD_NAME\n\t * \n\t * Name of the field to be used to store the object ID. Default is\n\t * <code>mxObjectId</code>.\n\t */\n\tFIELD_NAME: 'mxObjectId',\n\n\t/**\n\t * Variable: counter\n\t * \n\t * Current counter.\n\t */\n\tcounter: 0,\n\n\t/**\n\t * Function: get\n\t * \n\t * Returns the ID for the given object or function or null if no object\n\t * is specified.\n\t */\n\tget: function(obj)\n\t{\n\t\tif (obj != null)\n\t\t{\n\t\t\tif (obj[mxObjectIdentity.FIELD_NAME] == null)\n\t\t\t{\n\t\t\t\tif (typeof obj === 'object')\n\t\t\t\t{\n\t\t\t\t\tvar ctor = mxUtils.getFunctionName(obj.constructor);\n\t\t\t\t\tobj[mxObjectIdentity.FIELD_NAME] = ctor + '#' + mxObjectIdentity.counter++;\n\t\t\t\t}\n\t\t\t\telse if (typeof obj === 'function')\n\t\t\t\t{\n\t\t\t\t\tobj[mxObjectIdentity.FIELD_NAME] = 'Function#' + mxObjectIdentity.counter++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn obj[mxObjectIdentity.FIELD_NAME];\n\t\t}\n\t\t\n\t\treturn null;\n\t},\n\n\t/**\n\t * Function: clear\n\t * \n\t * Deletes the ID from the given object or function.\n\t */\n\tclear: function(obj)\n\t{\n\t\tif (typeof(obj) === 'object' || typeof obj === 'function')\n\t\t{\n\t\t\tdelete obj[mxObjectIdentity.FIELD_NAME];\n\t\t}\n\t}\n\n};\n\n__mxOutput.mxObjectIdentity = typeof mxObjectIdentity !== 'undefined' ? mxObjectIdentity : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDictionary\n *\n * A wrapper class for an associative array with object keys. Note: This\n * implementation uses <mxObjectIdentitiy> to turn object keys into strings.\n * \n * Constructor: mxEventSource\n *\n * Constructs a new dictionary which allows object to be used as keys.\n */\nfunction mxDictionary()\n{\n\tthis.clear();\n};\n\n/**\n * Function: map\n *\n * Stores the (key, value) pairs in this dictionary.\n */\nmxDictionary.prototype.map = null;\n\n/**\n * Function: clear\n *\n * Clears the dictionary.\n */\nmxDictionary.prototype.clear = function()\n{\n\tthis.map = {};\n};\n\n/**\n * Function: get\n *\n * Returns the value for the given key.\n */\nmxDictionary.prototype.get = function(key)\n{\n\tvar id = mxObjectIdentity.get(key);\n\t\n\treturn this.map[id];\n};\n\n/**\n * Function: put\n *\n * Stores the value under the given key and returns the previous\n * value for that key.\n */\nmxDictionary.prototype.put = function(key, value)\n{\n\tvar id = mxObjectIdentity.get(key);\n\tvar previous = this.map[id];\n\tthis.map[id] = value;\n\t\n\treturn previous;\n};\n\n/**\n * Function: remove\n *\n * Removes the value for the given key and returns the value that\n * has been removed.\n */\nmxDictionary.prototype.remove = function(key)\n{\n\tvar id = mxObjectIdentity.get(key);\n\tvar previous = this.map[id];\n\tdelete this.map[id];\n\t\n\treturn previous;\n};\n\n/**\n * Function: getKeys\n *\n * Returns all keys as an array.\n */\nmxDictionary.prototype.getKeys = function()\n{\n\tvar result = [];\n\t\n\tfor (var key in this.map)\n\t{\n\t\tresult.push(key);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getValues\n *\n * Returns all values as an array.\n */\nmxDictionary.prototype.getValues = function()\n{\n\tvar result = [];\n\t\n\tfor (var key in this.map)\n\t{\n\t\tresult.push(this.map[key]);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: visit\n *\n * Visits all entries in the dictionary using the given function with the\n * following signature: function(key, value) where key is a string and\n * value is an object.\n * \n * Parameters:\n * \n * visitor - A function that takes the key and value as arguments.\n */\nmxDictionary.prototype.visit = function(visitor)\n{\n\tfor (var key in this.map)\n\t{\n\t\tvisitor(key, this.map[key]);\n\t}\n};\n\n__mxOutput.mxDictionary = typeof mxDictionary !== 'undefined' ? mxDictionary : undefined;\n\n/**\n * Copyright (c) 2006-2016, JGraph Ltd\n * Copyright (c) 2006-2016, Gaudenz Alder\n */\nvar mxResources =\n{\n\t/**\n\t * Class: mxResources\n\t * \n\t * Implements internationalization. You can provide any number of \n\t * resource files on the server using the following format for the \n\t * filename: name[-en].properties. The en stands for any lowercase \n\t * 2-character language shortcut (eg. de for german, fr for french).\n\t *\n\t * If the optional language extension is omitted, then the file is used as a \n\t * default resource which is loaded in all cases. If a properties file for a \n\t * specific language exists, then it is used to override the settings in the \n\t * default resource. All entries in the file are of the form key=value. The\n\t * values may then be accessed in code via <get>. Lines without \n\t * equal signs in the properties files are ignored.\n\t *\n\t * Resource files may either be added programmatically using\n\t * <add> or via a resource tag in the UI section of the \n\t * editor configuration file, eg:\n\t * \n\t * (code)\n\t * <mxEditor>\n\t *   <ui>\n\t *     <resource basename=\"examples/resources/mxWorkflow\"/>\n\t * (end)\n\t * \n\t * The above element will load examples/resources/mxWorkflow.properties as well\n\t * as the language specific file for the current language, if it exists.\n\t * \n\t * Values may contain placeholders of the form {1}...{n} where each placeholder\n\t * is replaced with the value of the corresponding array element in the params\n\t * argument passed to <mxResources.get>. The placeholder {1} maps to the first\n\t * element in the array (at index 0).\n\t * \n\t * See <mxClient.language> for more information on specifying the default\n\t * language or disabling all loading of resources.\n\t * \n\t * Lines that start with a # sign will be ignored.\n\t * \n\t * Special characters\n\t * \n\t * To use unicode characters, use the standard notation (eg. \\u8fd1) or %u as a\n\t * prefix (eg. %u20AC will display a Euro sign). For normal hex encoded strings,\n\t * use % as a prefix, eg. %F6 will display a \"o umlaut\" (&ouml;).\n\t * \n\t * See <resourcesEncoded> to disable this. If you disable this, make sure that\n\t * your files are UTF-8 encoded.\n\t * \n\t * Asynchronous loading\n\t * \n\t * By default, the core adds two resource files synchronously at load time.\n\t * To load these files asynchronously, set <mxLoadResources> to false\n\t * before loading mxClient.js and use <mxResources.loadResources> instead.\n\t * \n\t * Variable: resources\n\t * \n\t * Object that maps from keys to values.\n\t */\n\tresources: {},\n\n\t/**\n\t * Variable: extension\n\t * \n\t * Specifies the extension used for language files. Default is <mxResourceExtension>.\n\t */\n\textension: mxResourceExtension,\n\n\t/**\n\t * Variable: resourcesEncoded\n\t * \n\t * Specifies whether or not values in resource files are encoded with \\u or\n\t * percentage. Default is false.\n\t */\n\tresourcesEncoded: false,\n\n\t/**\n\t * Variable: loadDefaultBundle\n\t * \n\t * Specifies if the default file for a given basename should be loaded.\n\t * Default is true.\n\t */\n\tloadDefaultBundle: true,\n\n\t/**\n\t * Variable: loadDefaultBundle\n\t * \n\t * Specifies if the specific language file file for a given basename should\n\t * be loaded. Default is true.\n\t */\n\tloadSpecialBundle: true,\n\n\t/**\n\t * Function: isLanguageSupported\n\t * \n\t * Hook for subclassers to disable support for a given language. This\n\t * implementation returns true if lan is in <mxClient.languages>.\n\t * \n\t * Parameters:\n\t *\n\t * lan - The current language.\n\t */\n\tisLanguageSupported: function(lan)\n\t{\n\t\tif (mxClient.languages != null)\n\t\t{\n\t\t\treturn mxUtils.indexOf(mxClient.languages, lan) >= 0;\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\n\t/**\n\t * Function: getDefaultBundle\n\t * \n\t * Hook for subclassers to return the URL for the special bundle. This\n\t * implementation returns basename + <extension> or null if\n\t * <loadDefaultBundle> is false.\n\t * \n\t * Parameters:\n\t * \n\t * basename - The basename for which the file should be loaded.\n\t * lan - The current language.\n\t */\n\tgetDefaultBundle: function(basename, lan)\n\t{\n\t\tif (mxResources.loadDefaultBundle || !mxResources.isLanguageSupported(lan))\n\t\t{\n\t\t\treturn basename + mxResources.extension;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t},\n\n\t/**\n\t * Function: getSpecialBundle\n\t * \n\t * Hook for subclassers to return the URL for the special bundle. This\n\t * implementation returns basename + '_' + lan + <extension> or null if\n\t * <loadSpecialBundle> is false or lan equals <mxClient.defaultLanguage>.\n\t * \n\t * If <mxResources.languages> is not null and <mxClient.language> contains\n\t * a dash, then this method checks if <isLanguageSupported> returns true\n\t * for the full language (including the dash). If that returns false the\n\t * first part of the language (up to the dash) will be tried as an extension.\n\t * \n\t * If <mxResources.language> is null then the first part of the language is\n\t * used to maintain backwards compatibility.\n\t * \n\t * Parameters:\n\t * \n\t * basename - The basename for which the file should be loaded.\n\t * lan - The language for which the file should be loaded.\n\t */\n\tgetSpecialBundle: function(basename, lan)\n\t{\n\t\tif (mxClient.languages == null || !this.isLanguageSupported(lan))\n\t\t{\n\t\t\tvar dash = lan.indexOf('-');\n\t\t\t\n\t\t\tif (dash > 0)\n\t\t\t{\n\t\t\t\tlan = lan.substring(0, dash);\n\t\t\t}\n\t\t}\n\n\t\tif (mxResources.loadSpecialBundle && mxResources.isLanguageSupported(lan) && lan != mxClient.defaultLanguage)\n\t\t{\n\t\t\treturn basename + '_' + lan + mxResources.extension;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t},\n\n\t/**\n\t * Function: add\n\t * \n\t * Adds the default and current language properties file for the specified\n\t * basename. Existing keys are overridden as new files are added. If no\n\t * callback is used then the request is synchronous.\n\t *\n\t * Example:\n\t * \n\t * At application startup, additional resources may be \n\t * added using the following code:\n\t * \n\t * (code)\n\t * mxResources.add('resources/editor');\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * basename - The basename for which the file should be loaded.\n\t * lan - The language for which the file should be loaded.\n\t * callback - Optional callback for asynchronous loading.\n\t */\n\tadd: function(basename, lan, callback)\n\t{\n\t\tlan = (lan != null) ? lan : ((mxClient.language != null) ?\n\t\t\tmxClient.language.toLowerCase() : mxConstants.NONE);\n\t\t\n\t\tif (lan != mxConstants.NONE)\n\t\t{\n\t\t\tvar defaultBundle = mxResources.getDefaultBundle(basename, lan);\n\t\t\tvar specialBundle = mxResources.getSpecialBundle(basename, lan);\n\t\t\t\n\t\t\tvar loadSpecialBundle = function()\n\t\t\t{\n\t\t\t\tif (specialBundle != null)\n\t\t\t\t{\n\t\t\t\t\tif (callback)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxUtils.get(specialBundle, function(req)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxResources.parse(req.getText());\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t}, function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t   \t\tvar req = mxUtils.load(specialBundle);\n\t\t\t\t\t   \t\t\n\t\t\t\t\t   \t\tif (req.isReady())\n\t\t\t\t\t   \t\t{\n\t\t\t\t\t \t   \t\tmxResources.parse(req.getText());\n\t\t\t\t\t   \t\t}\n\t\t\t\t   \t\t}\n\t\t\t\t   \t\tcatch (e)\n\t\t\t\t   \t\t{\n\t\t\t\t   \t\t\t// ignore\n\t\t\t\t\t   \t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (callback != null)\n\t\t\t\t{\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (defaultBundle != null)\n\t\t\t{\n\t\t\t\tif (callback)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.get(defaultBundle, function(req)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxResources.parse(req.getText());\n\t\t\t\t\t\tloadSpecialBundle();\n\t\t\t\t\t}, function()\n\t\t\t\t\t{\n\t\t\t\t\t\tloadSpecialBundle();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t   \t\tvar req = mxUtils.load(defaultBundle);\n\t\t\t\t   \t\t\n\t\t\t\t   \t\tif (req.isReady())\n\t\t\t\t   \t\t{\n\t\t\t\t \t   \t\tmxResources.parse(req.getText());\n\t\t\t\t   \t\t}\n\t\t\t\t   \t\t\n\t\t\t\t   \t\tloadSpecialBundle();\n\t\t\t\t  \t}\n\t\t\t\t  \tcatch (e)\n\t\t\t\t  \t{\n\t\t\t\t  \t\t// ignore\n\t\t\t\t  \t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Overlays the language specific file (_lan-extension)\n\t\t\t\tloadSpecialBundle();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: parse\n\t * \n\t * Parses the key, value pairs in the specified\n\t * text and stores them as local resources.\n\t */\n\tparse: function(text)\n\t{\n\t\tif (text != null)\n\t\t{\n\t\t\tvar lines = text.split('\\n');\n\t\t\t\n\t\t\tfor (var i = 0; i < lines.length; i++)\n\t\t\t{\n\t\t\t\tif (lines[i].charAt(0) != '#')\n\t\t\t\t{\n\t\t\t\t\tvar index = lines[i].indexOf('=');\n\t\t\t\t\t\n\t\t\t\t\tif (index > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar key = lines[i].substring(0, index);\n\t\t\t\t\t\tvar idx = lines[i].length;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (lines[i].charCodeAt(idx - 1) == 13)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tidx--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar value = lines[i].substring(index + 1, idx);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.resourcesEncoded)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue = value.replace(/\\\\(?=u[a-fA-F\\d]{4})/g,\"%\");\n\t\t\t\t\t\t\tmxResources.resources[key] = unescape(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxResources.resources[key] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: get\n\t * \n\t * Returns the value for the specified resource key.\n\t *\n\t * Example:\n\t * To read the value for 'welomeMessage', use the following:\n\t * (code)\n\t * var result = mxResources.get('welcomeMessage') || '';\n\t * (end)\n\t *\n\t * This would require an entry of the following form in\n\t * one of the English language resource files:\n\t * (code)\n\t * welcomeMessage=Welcome to mxGraph!\n\t * (end)\n\t * \n\t * The part behind the || is the string value to be used if the given\n\t * resource is not available.\n\t * \n\t * Parameters:\n\t * \n\t * key - String that represents the key of the resource to be returned.\n\t * params - Array of the values for the placeholders of the form {1}...{n}\n\t * to be replaced with in the resulting string.\n\t * defaultValue - Optional string that specifies the default return value.\n\t */\n\tget: function(key, params, defaultValue)\n\t{\n\t\tvar value = mxResources.resources[key];\n\t\t\n\t\t// Applies the default value if no resource was found\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\t\n\t\t// Replaces the placeholders with the values in the array\n\t\tif (value != null && params != null)\n\t\t{\n\t\t\tvalue = mxResources.replacePlaceholders(value, params);\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: replacePlaceholders\n\t * \n\t * Replaces the given placeholders with the given parameters.\n\t * \n\t * Parameters:\n\t * \n\t * value - String that contains the placeholders.\n\t * params - Array of the values for the placeholders of the form {1}...{n}\n\t * to be replaced with in the resulting string.\n\t */\n\treplacePlaceholders: function(value, params)\n\t{\n\t\tvar result = [];\n\t\tvar index = null;\n\t\t\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t{\n\t\t\tvar c = value.charAt(i);\n\n\t\t\tif (c == '{')\n\t\t\t{\n\t\t\t\tindex = '';\n\t\t\t}\n\t\t\telse if (index != null && \tc == '}')\n\t\t\t{\n\t\t\t\tindex = parseInt(index)-1;\n\t\t\t\t\n\t\t\t\tif (index >= 0 && index < params.length)\n\t\t\t\t{\n\t\t\t\t\tresult.push(params[index]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tindex = null;\n\t\t\t}\n\t\t\telse if (index != null)\n\t\t\t{\n\t\t\t\tindex += c;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.push(c);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join('');\n\t},\n\n\t/**\n\t * Function: loadResources\n\t * \n\t * Loads all required resources asynchronously. Use this to load the graph and\n\t * editor resources if <mxLoadResources> is false.\n\t * \n\t * Parameters:\n\t * \n\t * callback - Callback function for asynchronous loading.\n\t */\n\tloadResources: function(callback)\n\t{\n\t\tmxResources.add(mxClient.basePath+'/resources/editor', null, function()\n\t\t{\n\t\t\tmxResources.add(mxClient.basePath+'/resources/graph', null, callback);\n\t\t});\n\t}\n\n};\n\n__mxOutput.mxResources = typeof mxResources !== 'undefined' ? mxResources : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPoint\n *\n * Implements a 2-dimensional vector with double precision coordinates.\n * \n * Constructor: mxPoint\n *\n * Constructs a new point for the optional x and y coordinates. If no\n * coordinates are given, then the default values for <x> and <y> are used.\n */\nfunction mxPoint(x, y)\n{\n\tthis.x = (x != null) ? x : 0;\n\tthis.y = (y != null) ? y : 0;\n};\n\n/**\n * Variable: x\n *\n * Holds the x-coordinate of the point. Default is 0.\n */\nmxPoint.prototype.x = null;\n\n/**\n * Variable: y\n *\n * Holds the y-coordinate of the point. Default is 0.\n */\nmxPoint.prototype.y = null;\n\n/**\n * Function: equals\n * \n * Returns true if the given object equals this point.\n */\nmxPoint.prototype.equals = function(obj)\n{\n\treturn obj != null && obj.x == this.x && obj.y == this.y;\n};\n\n/**\n * Function: clone\n *\n * Returns a clone of this <mxPoint>.\n */\nmxPoint.prototype.clone = function()\n{\n\t// Handles subclasses as well\n\treturn mxUtils.clone(this);\n};\n\n__mxOutput.mxPoint = typeof mxPoint !== 'undefined' ? mxPoint : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRectangle\n *\n * Extends <mxPoint> to implement a 2-dimensional rectangle with double\n * precision coordinates.\n * \n * Constructor: mxRectangle\n *\n * Constructs a new rectangle for the optional parameters. If no parameters\n * are given then the respective default values are used.\n */\nfunction mxRectangle(x, y, width, height)\n{\n\tmxPoint.call(this, x, y);\n\n\tthis.width = (width != null) ? width : 0;\n\tthis.height = (height != null) ? height : 0;\n};\n\n/**\n * Extends mxPoint.\n */\nmxRectangle.prototype = new mxPoint();\nmxRectangle.prototype.constructor = mxRectangle;\n\n/**\n * Variable: width\n *\n * Holds the width of the rectangle. Default is 0.\n */\nmxRectangle.prototype.width = null;\n\n/**\n * Variable: height\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxRectangle.prototype.height = null;\n\n/**\n * Function: setRect\n * \n * Sets this rectangle to the specified values\n */\nmxRectangle.prototype.setRect = function(x, y, w, h)\n{\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n};\n\n/**\n * Function: getCenterX\n * \n * Returns the x-coordinate of the center point.\n */\nmxRectangle.prototype.getCenterX = function ()\n{\n\treturn this.x + this.width/2;\n};\n\n/**\n * Function: getCenterY\n * \n * Returns the y-coordinate of the center point.\n */\nmxRectangle.prototype.getCenterY = function ()\n{\n\treturn this.y + this.height/2;\n};\n\n/**\n * Function: add\n *\n * Adds the given rectangle to this rectangle.\n */\nmxRectangle.prototype.add = function(rect)\n{\n\tif (rect != null)\n\t{\n\t\tvar minX = Math.min(this.x, rect.x);\n\t\tvar minY = Math.min(this.y, rect.y);\n\t\tvar maxX = Math.max(this.x + this.width, rect.x + rect.width);\n\t\tvar maxY = Math.max(this.y + this.height, rect.y + rect.height);\n\t\t\n\t\tthis.x = minX;\n\t\tthis.y = minY;\n\t\tthis.width = maxX - minX;\n\t\tthis.height = maxY - minY;\n\t}\n};\n\n/**\n * Function: intersect\n * \n * Changes this rectangle to where it overlaps with the given rectangle.\n */\nmxRectangle.prototype.intersect = function(rect)\n{\n\tif (rect != null)\n\t{\n\t\tvar r1 = this.x + this.width;\n\t\tvar r2 = rect.x + rect.width;\n\t\t\n\t\tvar b1 = this.y + this.height;\n\t\tvar b2 = rect.y + rect.height;\n\t\t\n\t\tthis.x = Math.max(this.x, rect.x);\n\t\tthis.y = Math.max(this.y, rect.y);\n\t\tthis.width = Math.min(r1, r2) - this.x;\n\t\tthis.height = Math.min(b1, b2) - this.y;\n\t}\n};\n\n/**\n * Function: grow\n *\n * Grows the rectangle by the given amount, that is, this method subtracts\n * the given amount from the x- and y-coordinates and adds twice the amount\n * to the width and height.\n */\nmxRectangle.prototype.grow = function(amount)\n{\n\tthis.x -= amount;\n\tthis.y -= amount;\n\tthis.width += 2 * amount;\n\tthis.height += 2 * amount;\n\t\n\treturn this;\n};\n\n/**\n * Function: getPoint\n * \n * Returns the top, left corner as a new <mxPoint>.\n */\nmxRectangle.prototype.getPoint = function()\n{\n\treturn new mxPoint(this.x, this.y);\n};\n\n/**\n * Function: rotate90\n * \n * Rotates this rectangle by 90 degree around its center point.\n */\nmxRectangle.prototype.rotate90 = function()\n{\n\tvar t = (this.width - this.height) / 2;\n\tthis.x += t;\n\tthis.y -= t;\n\tvar tmp = this.width;\n\tthis.width = this.height;\n\tthis.height = tmp;\n};\n\n/**\n * Function: equals\n * \n * Returns true if the given object equals this rectangle.\n */\nmxRectangle.prototype.equals = function(obj)\n{\n\treturn obj != null && obj.x == this.x && obj.y == this.y &&\n\t\tobj.width == this.width && obj.height == this.height;\n};\n\n/**\n * Function: fromRectangle\n * \n * Returns a new <mxRectangle> which is a copy of the given rectangle.\n */\nmxRectangle.fromRectangle = function(rect)\n{\n\treturn new mxRectangle(rect.x, rect.y, rect.width, rect.height);\n};\n\n__mxOutput.mxRectangle = typeof mxRectangle !== 'undefined' ? mxRectangle : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxEffects =\n{\n\n\t/**\n\t * Class: mxEffects\n\t * \n\t * Provides animation effects.\n\t */\n\n\t/**\n\t * Function: animateChanges\n\t * \n\t * Asynchronous animated move operation. See also: <mxMorphing>.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * graph.model.addListener(mxEvent.CHANGE, function(sender, evt)\n\t * {\n\t *   var changes = evt.getProperty('edit').changes;\n\t * \n\t *   if (changes.length < 10)\n\t *   {\n\t *     mxEffects.animateChanges(graph, changes);\n\t *   }\n\t * });\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that received the changes.\n\t * changes - Array of changes to be animated.\n\t * done - Optional function argument that is invoked after the\n\t * last step of the animation.\n\t */\n\tanimateChanges: function(graph, changes, done)\n\t{\n\t\tvar maxStep = 10;\n\t\tvar step = 0;\n\n\t\tvar animate = function() \n\t\t{\n\t\t\tvar isRequired = false;\n\t\t\t\n\t\t\tfor (var i = 0; i < changes.length; i++)\n\t\t\t{\n\t\t\t\tvar change = changes[i];\n\t\t\t\t\n\t\t\t\tif (change instanceof mxGeometryChange ||\n\t\t\t\t\tchange instanceof mxTerminalChange ||\n\t\t\t\t\tchange instanceof mxValueChange ||\n\t\t\t\t\tchange instanceof mxChildChange ||\n\t\t\t\t\tchange instanceof mxStyleChange)\n\t\t\t\t{\n\t\t\t\t\tvar state = graph.getView().getState(change.cell || change.child, false);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tisRequired = true;\n\t\t\t\t\t\n\t\t\t\t\t\tif (change.constructor != mxGeometryChange || graph.model.isEdge(change.cell))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxUtils.setOpacity(state.shape.node, 100 * step / maxStep);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar scale = graph.getView().scale;\t\t\t\t\t\n\n\t\t\t\t\t\t\tvar dx = (change.geometry.x - change.previous.x) * scale;\n\t\t\t\t\t\t\tvar dy = (change.geometry.y - change.previous.y) * scale;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar sx = (change.geometry.width - change.previous.width) * scale;\n\t\t\t\t\t\t\tvar sy = (change.geometry.height - change.previous.height) * scale;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (step == 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate.x -= dx;\n\t\t\t\t\t\t\t\tstate.y -= dy;\n\t\t\t\t\t\t\t\tstate.width -= sx;\n\t\t\t\t\t\t\t\tstate.height -= sy;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate.x += dx / maxStep;\n\t\t\t\t\t\t\t\tstate.y += dy / maxStep;\n\t\t\t\t\t\t\t\tstate.width += sx / maxStep;\n\t\t\t\t\t\t\t\tstate.height += sy / maxStep;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tgraph.cellRenderer.redraw(state);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Fades all connected edges and children\n\t\t\t\t\t\t\tmxEffects.cascadeOpacity(graph, change.cell, 100 * step / maxStep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (step < maxStep && isRequired)\n\t\t\t{\n\t\t\t\tstep++;\n\t\t\t\twindow.setTimeout(animate, delay);\n\t\t\t}\n\t\t\telse if (done != null)\n\t\t\t{\n\t\t\t\tdone();\n\t\t\t}\n\t\t};\n\t\t\n\t\tvar delay = 30;\n\t\tanimate();\n\t},\n    \n\t/**\n\t * Function: cascadeOpacity\n\t * \n\t * Sets the opacity on the given cell and its descendants.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells.\n\t * cell - <mxCell> to set the opacity for.\n\t * opacity - New value for the opacity in %.\n\t */\n    cascadeOpacity: function(graph, cell, opacity)\n\t{\n\t\t// Fades all children\n\t\tvar childCount = graph.model.getChildCount(cell);\n\t\t\n\t\tfor (var i=0; i<childCount; i++)\n\t\t{\n\t\t\tvar child = graph.model.getChildAt(cell, i);\n\t\t\tvar childState = graph.getView().getState(child);\n\t\t\t\n\t\t\tif (childState != null)\n\t\t\t{\n\t\t\t\tmxUtils.setOpacity(childState.shape.node, opacity);\n\t\t\t\tmxEffects.cascadeOpacity(graph, child, opacity);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Fades all connected edges\n\t\tvar edges = graph.model.getEdges(cell);\n\t\t\n\t\tif (edges != null)\n\t\t{\n\t\t\tfor (var i=0; i<edges.length; i++)\n\t\t\t{\n\t\t\t\tvar edgeState = graph.getView().getState(edges[i]);\n\t\t\t\t\n\t\t\t\tif (edgeState != null)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.setOpacity(edgeState.shape.node, opacity);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: fadeOut\n\t * \n\t * Asynchronous fade-out operation.\n\t */\n\tfadeOut: function(node, from, remove, step, delay, isEnabled)\n\t{\n\t\tstep = step || 40;\n\t\tdelay = delay || 30;\n\t\t\n\t\tvar opacity = from || 100;\n\t\t\n\t\tmxUtils.setOpacity(node, opacity);\n\t\t\n\t\tif (isEnabled || isEnabled == null)\n\t\t{\n\t\t\tvar f = function()\n\t\t\t{\n\t\t\t    opacity = Math.max(opacity-step, 0);\n\t\t\t\tmxUtils.setOpacity(node, opacity);\n\t\t\t\t\n\t\t\t\tif (opacity > 0)\n\t\t\t\t{\n\t\t\t\t\twindow.setTimeout(f, delay);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnode.style.visibility = 'hidden';\n\t\t\t\t\t\n\t\t\t\t\tif (remove && node.parentNode)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\twindow.setTimeout(f, delay);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.style.visibility = 'hidden';\n\t\t\t\n\t\t\tif (remove && node.parentNode)\n\t\t\t{\n\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t}\n\t\t}\n\t}\n\n};\n\n__mxOutput.mxEffects = typeof mxEffects !== 'undefined' ? mxEffects : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxUtils =\n{\n\t/**\n\t * Class: mxUtils\n\t * \n\t * A singleton class that provides cross-browser helper methods.\n\t * This is a global functionality. To access the functions in this\n\t * class, use the global classname appended by the functionname.\n\t * You may have to load chrome://global/content/contentAreaUtils.js\n\t * to disable certain security restrictions in Mozilla for the <open>,\n\t * <save>, <saveAs> and <copy> function.\n\t * \n\t * For example, the following code displays an error message:\n\t * \n\t * (code)\n\t * mxUtils.error('Browser is not supported!', 200, false);\n\t * (end)\n\t * \n\t * Variable: errorResource\n\t * \n\t * Specifies the resource key for the title of the error window. If the\n\t * resource for this key does not exist then the value is used as\n\t * the title. Default is 'error'.\n\t */\n\terrorResource: (mxClient.language != 'none') ? 'error' : '',\n\t\n\t/**\n\t * Variable: closeResource\n\t * \n\t * Specifies the resource key for the label of the close button. If the\n\t * resource for this key does not exist then the value is used as\n\t * the label. Default is 'close'.\n\t */\n\tcloseResource: (mxClient.language != 'none') ? 'close' : '',\n\n\t/**\n\t * Variable: errorImage\n\t * \n\t * Defines the image used for error dialogs.\n\t */\n\terrorImage: mxClient.imageBasePath + '/error.gif',\n\t\n\t/**\n\t * Function: removeCursors\n\t * \n\t * Removes the cursors from the style of the given DOM node and its\n\t * descendants.\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM node to remove the cursor style from.\n\t */\n\tremoveCursors: function(element)\n\t{\n\t\tif (element.style != null)\n\t\t{\n\t\t\telement.style.cursor = '';\n\t\t}\n\t\t\n\t\tvar children = element.childNodes;\n\t\t\n\t\tif (children != null)\n\t\t{\n\t        var childCount = children.length;\n\t        \n\t        for (var i = 0; i < childCount; i += 1)\n\t        {\n\t            mxUtils.removeCursors(children[i]);\n\t        }\n\t    }\n\t},\n\n\t/**\n\t * Function: getCurrentStyle\n\t * \n\t * Returns the current style of the specified element.\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM node whose current style should be returned.\n\t */\n\tgetCurrentStyle: function()\n\t{\n\t\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode < 9))\n\t\t{\n\t\t\treturn function(element)\n\t\t\t{\n\t\t\t\treturn (element != null) ? element.currentStyle : null;\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(element)\n\t\t\t{\n\t\t\t\treturn (element != null) ?\n\t\t\t\t\twindow.getComputedStyle(element, '') :\n\t\t\t\t\tnull;\n\t\t\t};\n\t\t}\n\t}(),\n\t\n\t/**\n\t * Function: parseCssNumber\n\t * \n\t * Parses the given CSS numeric value adding handling for the values thin,\n\t * medium and thick (2, 4 and 6).\n\t */\n\tparseCssNumber: function(value)\n\t{\n\t\tif (value == 'thin')\n\t\t{\n\t\t\tvalue = '2';\n\t\t}\n\t\telse if (value == 'medium')\n\t\t{\n\t\t\tvalue = '4';\n\t\t}\n\t\telse if (value == 'thick')\n\t\t{\n\t\t\tvalue = '6';\n\t\t}\n\t\t\n\t\tvalue = parseFloat(value);\n\t\t\n\t\tif (isNaN(value))\n\t\t{\n\t\t\tvalue = 0;\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: setPrefixedStyle\n\t * \n\t * Adds the given style with the standard name and an optional vendor prefix for the current\n\t * browser.\n\t * \n\t * (code)\n\t * mxUtils.setPrefixedStyle(node.style, 'transformOrigin', '0% 0%');\n\t * (end)\n\t */\n\tsetPrefixedStyle: function()\n\t{\n\t\tvar prefix = null;\n\t\t\n\t\tif (mxClient.IS_OT)\n\t\t{\n\t\t\tprefix = 'O';\n\t\t}\n\t\telse if (mxClient.IS_SF || mxClient.IS_GC)\n\t\t{\n\t\t\tprefix = 'Webkit';\n\t\t}\n\t\telse if (mxClient.IS_MT)\n\t\t{\n\t\t\tprefix = 'Moz';\n\t\t}\n\t\telse if (mxClient.IS_IE && document.documentMode >= 9 && document.documentMode < 10)\n\t\t{\n\t\t\tprefix = 'ms';\n\t\t}\n\n\t\treturn function(style, name, value)\n\t\t{\n\t\t\tstyle[name] = value;\n\t\t\t\n\t\t\tif (prefix != null && name.length > 0)\n\t\t\t{\n\t\t\t\tname = prefix + name.substring(0, 1).toUpperCase() + name.substring(1);\n\t\t\t\tstyle[name] = value;\n\t\t\t}\n\t\t};\n\t}(),\n\t\n\t/**\n\t * Function: hasScrollbars\n\t * \n\t * Returns true if the overflow CSS property of the given node is either\n\t * scroll or auto.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose style should be checked for scrollbars.\n\t */\n\thasScrollbars: function(node)\n\t{\n\t\tvar style = mxUtils.getCurrentStyle(node);\n\n\t\treturn style != null && (style.overflow == 'scroll' || style.overflow == 'auto');\n\t},\n\t\n\t/**\n\t * Function: bind\n\t * \n\t * Returns a wrapper function that locks the execution scope of the given\n\t * function to the specified scope. Inside funct, the \"this\" keyword\n\t * becomes a reference to that scope.\n\t */\n\tbind: function(scope, funct)\n\t{\n\t\treturn function()\n\t\t{\n\t\t\treturn funct.apply(scope, arguments);\n\t\t};\n\t},\n\t\n\t/**\n\t * Function: eval\n\t * \n\t * Evaluates the given expression using eval and returns the JavaScript\n\t * object that represents the expression result. Supports evaluation of\n\t * expressions that define functions and returns the function object for\n\t * these expressions.\n\t * \n\t * Parameters:\n\t * \n\t * expr - A string that represents a JavaScript expression.\n\t */\n\teval: function(expr)\n\t{\n\t\tvar result = null;\n\n\t\tif (expr.indexOf('function') >= 0)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\teval('var _mxJavaScriptExpression='+expr);\n\t\t\t\tresult = _mxJavaScriptExpression;\n\t\t\t\t// TODO: Use delete here?\n\t\t\t\t_mxJavaScriptExpression = null;\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tmxLog.warn(e.message + ' while evaluating ' + expr);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tresult = eval(expr);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tmxLog.warn(e.message + ' while evaluating ' + expr);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: findNode\n\t * \n\t * Returns the first node where attr equals value.\n\t * This implementation does not use XPath.\n\t */\n\tfindNode: function(node, attr, value)\n\t{\n\t\tif (node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\tvar tmp = node.getAttribute(attr);\n\t\n\t\t\tif (tmp != null && tmp == value)\n\t\t\t{\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t\n\t\tnode = node.firstChild;\n\t\t\n\t\twhile (node != null)\n\t\t{\n\t\t\tvar result = mxUtils.findNode(node, attr, value);\n\t\t\t\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t\t\n\t\treturn null;\n\t},\n\n\t/**\n\t * Function: getFunctionName\n\t * \n\t * Returns the name for the given function.\n\t * \n\t * Parameters:\n\t * \n\t * f - JavaScript object that represents a function.\n\t */\n\tgetFunctionName: function(f)\n\t{\n\t\tvar str = null;\n\n\t\tif (f != null)\n\t\t{\n\t\t\tif (f.name != null)\n\t\t\t{\n\t\t\t\tstr = f.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstr = mxUtils.trim(f.toString());\n\t\t\t\t\n\t\t\t\tif (/^function\\s/.test(str))\n\t\t\t\t{\n\t\t\t\t\tstr = mxUtils.ltrim(str.substring(9));\n\t\t\t\t\tvar idx2 = str.indexOf('(');\n\t\t\t\t\t\n\t\t\t\t\tif (idx2 > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tstr = str.substring(0, idx2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn str;\n\t},\n\n\t/**\n\t * Function: indexOf\n\t * \n\t * Returns the index of obj in array or -1 if the array does not contain\n\t * the given object.\n\t * \n\t * Parameters:\n\t * \n\t * array - Array to check for the given obj.\n\t * obj - Object to find in the given array.\n\t */\n\tindexOf: function(array, obj)\n\t{\n\t\tif (array != null && obj != null)\n\t\t{\n\t\t\tfor (var i = 0; i < array.length; i++)\n\t\t\t{\n\t\t\t\tif (array[i] == obj)\n\t\t\t\t{\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn -1;\n\t},\n\n\t/**\n\t * Function: forEach\n\t * \n\t * Calls the given function for each element of the given array and returns\n\t * the array.\n\t * \n\t * Parameters:\n\t * \n\t * array - Array that contains the elements.\n\t * fn - Function to be called for each object.\n\t */\n\tforEach: function(array, fn)\n\t{\n\t\tif (array != null && fn != null)\n\t\t{\n\t\t\tfor (var i = 0; i < array.length; i++)\n\t\t\t{\n\t\t\t\tfn(array[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn array;\n\t},\n\n\t/**\n\t * Function: remove\n\t * \n\t * Removes all occurrences of the given object in the given array or\n\t * object. If there are multiple occurrences of the object, be they\n\t * associative or as an array entry, all occurrences are removed from\n\t * the array or deleted from the object. By removing the object from\n\t * the array, all elements following the removed element are shifted\n\t * by one step towards the beginning of the array.\n\t * \n\t * The length of arrays is not modified inside this function.\n\t * \n\t * Parameters:\n\t * \n\t * obj - Object to find in the given array.\n\t * array - Array to check for the given obj.\n\t */\n\tremove: function(obj, array)\n\t{\n\t\tvar result = null;\n\t\t\n\t\tif (typeof(array) == 'object')\n\t\t{\n\t\t\tvar index = mxUtils.indexOf(array, obj);\n\t\t\t\n\t\t\twhile (index >= 0)\n\t\t\t{\n\t\t\t\tarray.splice(index, 1);\n\t\t\t\tresult = obj;\n\t\t\t\tindex = mxUtils.indexOf(array, obj);\n\t\t\t}\n\t\t}\n\n\t\tfor (var key in array)\n\t\t{\n\t\t\tif (array[key] == obj)\n\t\t\t{\n\t\t\t\tdelete array[key];\n\t\t\t\tresult = obj;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: isNode\n\t * \n\t * Returns true if the given value is an XML node with the node name\n\t * and if the optional attribute has the specified value.\n\t * \n\t * This implementation assumes that the given value is a DOM node if the\n\t * nodeType property is numeric, that is, if isNaN returns false for\n\t * value.nodeType.\n\t * \n\t * Parameters:\n\t * \n\t * value - Object that should be examined as a node.\n\t * nodeName - String that specifies the node name.\n\t * attributeName - Optional attribute name to check.\n\t * attributeValue - Optional attribute value to check.\n\t */\n\t isNode: function(value, nodeName, attributeName, attributeValue)\n\t {\n\t \tif (value != null && !isNaN(value.nodeType) && (nodeName == null ||\n\t \t\tvalue.nodeName.toLowerCase() == nodeName.toLowerCase()))\n \t\t{\n \t\t\treturn attributeName == null ||\n \t\t\t\tvalue.getAttribute(attributeName) == attributeValue;\n \t\t}\n\t \t\n\t \treturn false;\n\t },\n\t\n\t/**\n\t * Function: isAncestorNode\n\t * \n\t * Returns true if the given ancestor is an ancestor of the\n\t * given DOM node in the DOM. This also returns true if the\n\t * child is the ancestor.\n\t * \n\t * Parameters:\n\t * \n\t * ancestor - DOM node that represents the ancestor.\n\t * child - DOM node that represents the child.\n\t */\n\t isAncestorNode: function(ancestor, child)\n\t {\n\t \tvar parent = child;\n\t \t\n\t \twhile (parent != null)\n\t \t{\n\t \t\tif (parent == ancestor)\n\t \t\t{\n\t \t\t\treturn true;\n\t \t\t}\n\n\t \t\tparent = parent.parentNode;\n\t \t}\n\t \t\n\t \treturn false;\n\t },\n\n\t/**\n\t * Function: getChildNodes\n\t * \n\t * Returns an array of child nodes that are of the given node type.\n\t * \n\t * Parameters:\n\t * \n\t * node - Parent DOM node to return the children from.\n\t * nodeType - Optional node type to return. Default is\n\t * <mxConstants.NODETYPE_ELEMENT>.\n\t */\n\tgetChildNodes: function(node, nodeType)\n\t{\n\t\tnodeType = nodeType || mxConstants.NODETYPE_ELEMENT;\n\t\t\n\t\tvar children = [];\n\t\tvar tmp = node.firstChild;\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp.nodeType == nodeType)\n\t\t\t{\n\t\t\t\tchildren.push(tmp);\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\n\t\t\n\t\treturn children;\n\t},\n\n\t/**\n\t * Function: importNode\n\t * \n\t * Cross browser implementation for document.importNode. Uses document.importNode\n\t * in all browsers but IE, where the node is cloned by creating a new node and\n\t * copying all attributes and children into it using importNode, recursively.\n\t * \n\t * Parameters:\n\t * \n\t * doc - Document to import the node into.\n\t * node - Node to be imported.\n\t * allChildren - If all children should be imported.\n\t */\n\timportNode: function(doc, node, allChildren)\n\t{\n\t\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode < 10))\n\t\t{\n\t\t\treturn mxUtils.importNodeImplementation(doc, node, allChildren);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn doc.importNode(node, allChildren);\n\t\t}\n\t},\n\n\t/**\n\t * Function: importNodeImplementation\n\t * \n\t * Full DOM API implementation for importNode without using importNode API call.\n\t * \n\t * Parameters:\n\t * \n\t * doc - Document to import the node into.\n\t * node - Node to be imported.\n\t * allChildren - If all children should be imported.\n\t */\n\timportNodeImplementation: function(doc, node, allChildren)\n\t{\n\t\tswitch (node.nodeType)\n\t\t{\n\t\t\tcase 1: /* element */\n\t\t\t{\n\t\t\t\tvar newNode = doc.createElement(node.nodeName);\n\t\t\t\t\n\t\t\t\tif (node.attributes && node.attributes.length > 0)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < node.attributes.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewNode.setAttribute(node.attributes[i].nodeName,\n\t\t\t\t\t\t\tnode.getAttribute(node.attributes[i].nodeName));\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (allChildren && node.childNodes && node.childNodes.length > 0)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < node.childNodes.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewNode.appendChild(mxUtils.importNodeImplementation(doc, node.childNodes[i], allChildren));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn newNode;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 3: /* text */\n\t\t    case 4: /* cdata-section */\n\t\t    case 8: /* comment */\n\t\t    {\n\t\t    \treturn doc.createTextNode((node.nodeValue != null) ? node.nodeValue : node.value);\n\t\t    \tbreak;\n\t\t    }\n\t\t};\n\t},\n\n\t/**\n\t * Function: createXmlDocument\n\t * \n\t * Returns a new, empty XML document.\n\t */\n\tcreateXmlDocument: function()\n\t{\n\t\tvar doc = null;\n\t\t\n\t\tif (document.implementation && document.implementation.createDocument)\n\t\t{\n\t\t\tdoc = document.implementation.createDocument('', '', null);\n\t\t}\n\t\telse if (\"ActiveXObject\" in window)\n\t\t{\n\t\t\tdoc = mxUtils.createMsXmlDocument();\n\t \t}\n\t \t\n\t \treturn doc;\n\t},\n\n\t/**\n\t * Function: createMsXmlDocument\n\t * \n\t * Returns a new, empty Microsoft.XMLDOM document using ActiveXObject.\n\t */\n\tcreateMsXmlDocument: function()\n\t{\n\t\tvar doc = new ActiveXObject('Microsoft.XMLDOM');\n\t\tdoc.async = false;\n\n\t\t// Workaround for parsing errors with SVG DTD\n\t\tdoc.validateOnParse = false;\n\t\tdoc.resolveExternals = false;\n\t \t\n\t \treturn doc;\n\t},\n\n\t/**\n\t * Function: parseXml\n\t * \n\t * Parses the specified XML string into a new XML document and returns the\n\t * new document.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var doc = mxUtils.parseXml(\n\t *   '<mxGraphModel><root><MyDiagram id=\"0\"><mxCell/></MyDiagram>'+\n\t *   '<MyLayer id=\"1\"><mxCell parent=\"0\" /></MyLayer><MyObject id=\"2\">'+\n\t *   '<mxCell style=\"strokeColor=blue;fillColor=red\" parent=\"1\" vertex=\"1\">'+\n\t *   '<mxGeometry x=\"10\" y=\"10\" width=\"80\" height=\"30\" as=\"geometry\"/>'+\n\t *   '</mxCell></MyObject></root></mxGraphModel>');\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * xml - String that contains the XML data.\n\t */\n\tparseXml: function()\n\t{\n\t\tif (window.DOMParser)\n\t\t{\n\t\t\treturn function(xml)\n\t\t\t{\n\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\n\t\t\t\treturn parser.parseFromString(xml, 'text/xml');\n\t\t\t};\n\t\t}\n\t\telse // IE<=9\n\t\t{\n\t\t\treturn function(xml)\n\t\t\t{\n\t\t\t\tvar doc = mxUtils.createMsXmlDocument();\n\t\t\t\tdoc.loadXML(xml);\n\t\t\t\t\n\t\t\t\treturn doc;\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: clearSelection\n\t * \n\t * Clears the current selection in the page.\n\t */\n\tclearSelection: function()\n\t{\n\t\tif (document.selection)\n\t\t{\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tdocument.selection.empty();\n\t\t\t};\n\t\t}\n\t\telse if (window.getSelection)\n\t\t{\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tif (window.getSelection().empty)\n\t\t\t\t{\n\t\t\t\t\twindow.getSelection().empty();\n\t\t\t\t}\n\t\t\t\telse if (window.getSelection().removeAllRanges)\n\t\t\t\t{\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function() { };\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: removeWhitespace\n\t * \n\t * Removes the sibling text nodes for the given node that only consists\n\t * of tabs, newlines and spaces.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose siblings should be removed.\n\t * before - Optional boolean that specifies the direction of the traversal.\n\t */\n\tremoveWhitespace: function(node, before)\n\t{\n\t\tvar tmp = (before) ? node.previousSibling : node.nextSibling;\n\t\t\n\t\twhile (tmp != null && tmp.nodeType == mxConstants.NODETYPE_TEXT)\n\t\t{\n\t\t\tvar next = (before) ? tmp.previousSibling : tmp.nextSibling;\n\t\t\tvar text = mxUtils.getTextContent(tmp);\n\t\t\t\n\t\t\tif (mxUtils.trim(text).length == 0)\n\t\t\t{\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t}\n\t\t\t\n\t\t\ttmp = next;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: htmlEntities\n\t * \n\t * Replaces characters (less than, greater than, newlines and quotes) with\n\t * their HTML entities in the given string and returns the result.\n\t * \n\t * Parameters:\n\t * \n\t * s - String that contains the characters to be converted.\n\t * newline - If newlines should be replaced. Default is true.\n\t */\n\thtmlEntities: function(s, newline)\n\t{\n\t\ts = String(s || '');\n\t\t\n\t\ts = s.replace(/&/g,'&amp;'); // 38 26\n\t\ts = s.replace(/\"/g,'&quot;'); // 34 22\n\t\ts = s.replace(/\\'/g,'&#39;'); // 39 27\n\t\ts = s.replace(/</g,'&lt;'); // 60 3C\n\t\ts = s.replace(/>/g,'&gt;'); // 62 3E\n\n\t\tif (newline == null || newline)\n\t\t{\n\t\t\ts = s.replace(/\\n/g, '&#xa;');\n\t\t}\n\t\t\n\t\treturn s;\n\t},\n\t\n\t/**\n\t * Function: isVml\n\t * \n\t * Returns true if the given node is in the VML namespace.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose tag urn should be checked.\n\t */\n\tisVml: function(node)\n\t{\n\t\treturn node != null && node.tagUrn == 'urn:schemas-microsoft-com:vml';\n\t},\n\n\t/**\n\t * Function: getXml\n\t * \n\t * Returns the XML content of the specified node. For Internet Explorer,\n\t * all \\r\\n\\t[\\t]* are removed from the XML string and the remaining \\r\\n\n\t * are replaced by \\n. All \\n are then replaced with linefeed, or &#xa; if\n\t * no linefeed is defined.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the XML for.\n\t * linefeed - Optional string that linefeeds are converted into. Default is\n\t * &#xa;\n\t */\n\tgetXml: function(node, linefeed)\n\t{\n\t\tvar xml = '';\n\t\t\n\t\tif (mxClient.IS_IE || mxClient.IS_IE11)\n\t\t{\n\t\t\txml = mxUtils.getPrettyXml(node, '', '', '');\n\t\t}\n\t\telse if (window.XMLSerializer != null)\n\t\t{\n\t\t\tvar xmlSerializer = new XMLSerializer();\n\t\t\txml = xmlSerializer.serializeToString(node);     \n\t\t}\n\t\telse if (node.xml != null)\n\t\t{\n\t\t\txml = node.xml.replace(/\\r\\n\\t[\\t]*/g, '').\n\t\t\t\treplace(/>\\r\\n/g, '>').\n\t\t\t\treplace(/\\r\\n/g, '\\n');\n\t\t}\n\n\t\t// Replaces linefeeds with HTML Entities.\n\t\tlinefeed = linefeed || '&#xa;';\n\t\txml = xml.replace(/\\n/g, linefeed);\n\t\t  \n\t\treturn xml;\n\t},\n\t\n\t/**\n\t * Function: getPrettyXML\n\t * \n\t * Returns a pretty printed string that represents the XML tree for the\n\t * given node. This method should only be used to print XML for reading,\n\t * use <getXml> instead to obtain a string for processing.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the XML for.\n\t * tab - Optional string that specifies the indentation for one level.\n\t * Default is two spaces.\n\t * indent - Optional string that represents the current indentation.\n\t * Default is an empty string.\n\t * newline - Option string that represents a linefeed. Default is '\\n'.\n\t */\n\tgetPrettyXml: function(node, tab, indent, newline, ns)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (node != null)\n\t\t{\n\t\t\ttab = (tab != null) ? tab : '  ';\n\t\t\tindent = (indent != null) ? indent : '';\n\t\t\tnewline = (newline != null) ? newline : '\\n';\n\t\t\t\n\t\t\tif (node.namespaceURI != null && node.namespaceURI != ns)\n\t\t\t{\n\t\t\t\tns = node.namespaceURI;\n\t\t\t\t\n\t\t\t\tif (node.getAttribute('xmlns') == null)\n\t\t\t\t{\n\t\t\t\t\tnode.setAttribute('xmlns', node.namespaceURI);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (node.nodeType == mxConstants.NODETYPE_DOCUMENT)\n\t\t\t{\n\t\t\t\tresult.push(mxUtils.getPrettyXml(node.documentElement, tab, indent, newline, ns));\n\t\t\t}\n\t\t\telse if (node.nodeType == mxConstants.NODETYPE_DOCUMENT_FRAGMENT)\n\t\t\t{\n\t\t\t\tvar tmp = node.firstChild;\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\twhile (tmp != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(mxUtils.getPrettyXml(tmp, tab, indent, newline, ns));\n\t\t\t\t\t\ttmp = tmp.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (node.nodeType == mxConstants.NODETYPE_COMMENT)\n\t\t\t{\n\t\t\t\tvar value = mxUtils.getTextContent(node);\n\t\t\t\t\n\t\t\t\tif (value.length > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(indent + '<!--' + value + '-->' + newline);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (node.nodeType == mxConstants.NODETYPE_TEXT)\n\t\t\t{\n\t\t\t\tvar value = mxUtils.trim(mxUtils.getTextContent(node));\n\t\t\t\t\n\t\t\t\tif (value.length > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(indent + mxUtils.htmlEntities(value, false) + newline);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (node.nodeType == mxConstants.NODETYPE_CDATA)\n\t\t\t{\n\t\t\t\tvar value = mxUtils.getTextContent(node);\n\t\t\t\t\n\t\t\t\tif (value.length > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(indent + '<![CDATA[' + value + ']]' + newline);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.push(indent + '<' + node.nodeName);\n\t\t\t\t\n\t\t\t\t// Creates the string with the node attributes\n\t\t\t\t// and converts all HTML entities in the values\n\t\t\t\tvar attrs = node.attributes;\n\t\t\t\t\n\t\t\t\tif (attrs != null)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar val = mxUtils.htmlEntities(attrs[i].value);\n\t\t\t\t\t\tresult.push(' ' + attrs[i].nodeName + '=\"' + val + '\"');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Recursively creates the XML string for each child\n\t\t\t\t// node and appends it here with an indentation\n\t\t\t\tvar tmp = node.firstChild;\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tresult.push('>' + newline);\n\t\t\t\t\t\n\t\t\t\t\twhile (tmp != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(mxUtils.getPrettyXml(tmp, tab, indent + tab, newline, ns));\n\t\t\t\t\t\ttmp = tmp.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tresult.push(indent + '</'+ node.nodeName + '>' + newline);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult.push(' />' + newline);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join('');\n\t},\n\t\n\t/**\n\t * Function: extractTextWithWhitespace\n\t * \n\t * Returns the text content of the specified node.\n\t * \n\t * Parameters:\n\t * \n\t * elems - DOM nodes to return the text for.\n\t */\n\textractTextWithWhitespace: function(elems)\n\t{\n\t    // Known block elements for handling linefeeds (list is not complete)\n\t\tvar blocks = ['BLOCKQUOTE', 'DIV', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'OL', 'P', 'PRE', 'TABLE', 'UL'];\n\t\tvar ret = [];\n\t\t\n\t\tfunction doExtract(elts)\n\t\t{\n\t\t\t// Single break should be ignored\n\t\t\tif (elts.length == 1 && (elts[0].nodeName == 'BR' ||\n\t\t\t\telts[0].innerHTML == '\\n'))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t    for (var i = 0; i < elts.length; i++)\n\t\t    {\n\t\t        var elem = elts[i];\n\n\t\t\t\t// DIV with a br or linefeed forces a linefeed\n\t\t\t\tif (elem.nodeName == 'BR' || elem.innerHTML == '\\n' ||\n\t\t\t\t\t((elts.length == 1 || i == 0) && (elem.nodeName == 'DIV' &&\n\t\t\t\t\telem.innerHTML.toLowerCase() == '<br>')))\n\t\t    \t{\n\t    \t\t\tret.push('\\n');\n\t\t    \t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t        if (elem.nodeType === 3 || elem.nodeType === 4)\n\t\t\t        {\n\t\t\t        \tif (elem.nodeValue.length > 0)\n\t\t\t        \t{\n\t\t\t        \t\tret.push(elem.nodeValue);\n\t\t\t        \t}\n\t\t\t        }\n\t\t\t        else if (elem.nodeType !== 8 && elem.childNodes.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoExtract(elem.childNodes);\n\t\t\t\t\t}\n\t\t\t        \n\t        \t\tif (i < elts.length - 1 && mxUtils.indexOf(blocks, elts[i + 1].nodeName) >= 0)\n\t        \t\t{\n\t        \t\t\tret.push('\\n');\t\t\n\t        \t\t}\n\t\t\t\t}\n\t\t    }\n\t\t};\n\t\t\n\t\tdoExtract(elems);\n\t    \n\t    return ret.join('');\n\t},\n\n\t/**\n\t * Function: replaceTrailingNewlines\n\t * \n\t * Replaces each trailing newline with the given pattern.\n\t */\n\treplaceTrailingNewlines: function(str, pattern)\n\t{\n\t\t// LATER: Check is this can be done with a regular expression\n\t\tvar postfix = '';\n\t\t\n\t\twhile (str.length > 0 && str.charAt(str.length - 1) == '\\n')\n\t\t{\n\t\t\tstr = str.substring(0, str.length - 1);\n\t\t\tpostfix += pattern;\n\t\t}\n\t\t\n\t\treturn str + postfix;\n\t},\n\n\t/**\n\t * Function: getTextContent\n\t * \n\t * Returns the text content of the specified node.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the text content for.\n\t */\n\tgetTextContent: function(node)\n\t{\n\t\t// Only IE10-\n\t\tif (mxClient.IS_IE && node.innerText !== undefined)\n\t\t{\n\t\t\treturn node.innerText;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn (node != null) ? node[(node.textContent === undefined) ? 'text' : 'textContent'] : '';\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: setTextContent\n\t * \n\t * Sets the text content of the specified node.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to set the text content for.\n\t * text - String that represents the text content.\n\t */\n\tsetTextContent: function(node, text)\n\t{\n\t\tif (node.innerText !== undefined)\n\t\t{\n\t\t\tnode.innerText = text;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode[(node.textContent === undefined) ? 'text' : 'textContent'] = text;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: getInnerHtml\n\t * \n\t * Returns the inner HTML for the given node as a string or an empty string\n\t * if no node was specified. The inner HTML is the text representing all\n\t * children of the node, but not the node itself.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the inner HTML for.\n\t */\n\tgetInnerHtml: function()\n\t{\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\treturn node.innerHTML;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tvar serializer = new XMLSerializer();\n\t\t\t\t\treturn serializer.serializeToString(node);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: getOuterHtml\n\t * \n\t * Returns the outer HTML for the given node as a string or an empty\n\t * string if no node was specified. The outer HTML is the text representing\n\t * all children of the node including the node itself.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the outer HTML for.\n\t */\n\tgetOuterHtml: function()\n\t{\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tif (node.outerHTML != null)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn node.outerHTML;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp = [];\n\t\t\t\t\t\ttmp.push('<'+node.nodeName);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar attrs = node.attributes;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (attrs != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar value = attrs[i].value;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (value != null && value.length > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmp.push(' ');\n\t\t\t\t\t\t\t\t\ttmp.push(attrs[i].nodeName);\n\t\t\t\t\t\t\t\t\ttmp.push('=\"');\n\t\t\t\t\t\t\t\t\ttmp.push(value);\n\t\t\t\t\t\t\t\t\ttmp.push('\"');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (node.innerHTML.length == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmp.push('/>');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmp.push('>');\n\t\t\t\t\t\t\ttmp.push(node.innerHTML);\n\t\t\t\t\t\t\ttmp.push('</'+node.nodeName+'>');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn tmp.join('');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tvar serializer = new XMLSerializer();\n\t\t\t\t\treturn serializer.serializeToString(node);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t}(),\n\t\n\t/**\n\t * Function: write\n\t * \n\t * Creates a text node for the given string and appends it to the given\n\t * parent. Returns the text node.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the text node to.\n\t * text - String representing the text to be added.\n\t */\n\twrite: function(parent, text)\n\t{\n\t\tvar doc = parent.ownerDocument;\n\t\tvar node = doc.createTextNode(text);\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(node);\n\t\t}\n\t\t\n\t\treturn node;\n\t},\n\t\n\t/**\n\t * Function: writeln\n\t * \n\t * Creates a text node for the given string and appends it to the given\n\t * parent with an additional linefeed. Returns the text node.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the text node to.\n\t * text - String representing the text to be added.\n\t */\n\twriteln: function(parent, text)\n\t{\n\t\tvar doc = parent.ownerDocument;\n\t\tvar node = doc.createTextNode(text);\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(node);\n\t\t\tparent.appendChild(document.createElement('br'));\n\t\t}\n\t\t\n\t\treturn node;\n\t},\n\t\n\t/**\n\t * Function: br\n\t * \n\t * Appends a linebreak to the given parent and returns the linebreak.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the linebreak to.\n\t */\n\tbr: function(parent, count)\n\t{\n\t\tcount = count || 1;\n\t\tvar br = null;\n\t\t\n\t\tfor (var i = 0; i < count; i++)\n\t\t{\n\t\t\tif (parent != null)\n\t\t\t{\n\t\t\t\tbr = parent.ownerDocument.createElement('br');\n\t\t\t\tparent.appendChild(br);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn br;\n\t},\n\t\t\n\t/**\n\t * Function: button\n\t * \n\t * Returns a new button with the given level and function as an onclick\n\t * event handler.\n\t * \n\t * (code)\n\t * document.body.appendChild(mxUtils.button('Test', function(evt)\n\t * {\n\t *   alert('Hello, World!');\n\t * }));\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * label - String that represents the label of the button.\n\t * funct - Function to be called if the button is pressed.\n\t * doc - Optional document to be used for creating the button. Default is the\n\t * current document.\n\t */\n\tbutton: function(label, funct, doc)\n\t{\n\t\tdoc = (doc != null) ? doc : document;\n\t\t\n\t\tvar button = doc.createElement('button');\n\t\tmxUtils.write(button, label);\n\n\t\tmxEvent.addListener(button, 'click', function(evt)\n\t\t{\n\t\t\tfunct(evt);\n\t\t});\n\t\t\n\t\treturn button;\n\t},\n\t\n\t/**\n\t * Function: para\n\t * \n\t * Appends a new paragraph with the given text to the specified parent and\n\t * returns the paragraph.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the text node to.\n\t * text - String representing the text for the new paragraph.\n\t */\n\tpara: function(parent, text)\n\t{\n\t\tvar p = document.createElement('p');\n\t\tmxUtils.write(p, text);\n\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(p);\n\t\t}\n\t\t\n\t\treturn p;\n\t},\n\n\t/**\n\t * Function: addTransparentBackgroundFilter\n\t * \n\t * Adds a transparent background to the filter of the given node. This\n\t * background can be used in IE8 standards mode (native IE8 only) to pass\n\t * events through the node.\n\t */\n\taddTransparentBackgroundFilter: function(node)\n\t{\n\t\tnode.style.filter += 'progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\\'' +\n\t\t\tmxClient.imageBasePath + '/transparent.gif\\', sizingMethod=\\'scale\\')';\n\t},\n\n\t/**\n\t * Function: linkAction\n\t * \n\t * Adds a hyperlink to the specified parent that invokes action on the\n\t * specified editor.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to contain the new link.\n\t * text - String that is used as the link label.\n\t * editor - <mxEditor> that will execute the action.\n\t * action - String that defines the name of the action to be executed.\n\t * pad - Optional left-padding for the link. Default is 0.\n\t */\n\tlinkAction: function(parent, text, editor, action, pad)\n\t{\n\t\treturn mxUtils.link(parent, text, function()\n\t\t{\n\t\t\teditor.execute(action);\n\t\t}, pad);\n\t},\n\n\t/**\n\t * Function: linkInvoke\n\t * \n\t * Adds a hyperlink to the specified parent that invokes the specified\n\t * function on the editor passing along the specified argument. The\n\t * function name is the name of a function of the editor instance,\n\t * not an action name.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to contain the new link.\n\t * text - String that is used as the link label.\n\t * editor - <mxEditor> instance to execute the function on.\n\t * functName - String that represents the name of the function.\n\t * arg - Object that represents the argument to the function.\n\t * pad - Optional left-padding for the link. Default is 0.\n\t */\n\tlinkInvoke: function(parent, text, editor, functName, arg, pad)\n\t{\n\t\treturn mxUtils.link(parent, text, function()\n\t\t{\n\t\t\teditor[functName](arg);\n\t\t}, pad);\n\t},\n\t\n\t/**\n\t * Function: link\n\t * \n\t * Adds a hyperlink to the specified parent and invokes the given function\n\t * when the link is clicked.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to contain the new link.\n\t * text - String that is used as the link label.\n\t * funct - Function to execute when the link is clicked.\n\t * pad - Optional left-padding for the link. Default is 0.\n\t */\n\tlink: function(parent, text, funct, pad)\n\t{\n\t\tvar a = document.createElement('span');\n\t\t\n\t\ta.style.color = 'blue';\n\t\ta.style.textDecoration = 'underline';\n\t\ta.style.cursor = 'pointer';\n\t\t\n\t\tif (pad != null)\n\t\t{\n\t\t\ta.style.paddingLeft = pad+'px';\n\t\t}\n\t\t\n\t\tmxEvent.addListener(a, 'click', funct);\n\t\tmxUtils.write(a, text);\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(a);\n\t\t}\n\t\t\n\t\treturn a;\n\t},\n\n\t/**\n\t * Function: getDocumentSize\n\t * \n\t * Returns the client size for the current document as an <mxRectangle>.\n\t */\n\tgetDocumentSize: function()\n\t{\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\t\t\n\t\ttry\n\t\t{\n\t\t\treturn new mxRectangle(0, 0, b.clientWidth || d.clientWidth, Math.max(b.clientHeight || 0, d.clientHeight));\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\treturn new mxRectangle();\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: fit\n\t * \n\t * Makes sure the given node is inside the visible area of the window. This\n\t * is done by setting the left and top in the style. \n\t */\n\tfit: function(node)\n\t{\n\t\tvar ds = mxUtils.getDocumentSize();\n\t\tvar left = parseInt(node.offsetLeft);\n\t\tvar width = parseInt(node.offsetWidth);\n\t\t\t\n\t\tvar offset = mxUtils.getDocumentScrollOrigin(node.ownerDocument);\n\t\tvar sl = offset.x;\n\t\tvar st = offset.y;\n\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\t\tvar right = (sl) + ds.width;\n\t\t\n\t\tif (left + width > right)\n\t\t{\n\t\t\tnode.style.left = Math.max(sl, right - width) + 'px';\n\t\t}\n\t\t\n\t\tvar top = parseInt(node.offsetTop);\n\t\tvar height = parseInt(node.offsetHeight);\n\t\t\n\t\tvar bottom = st + ds.height;\n\t\t\n\t\tif (top + height > bottom)\n\t\t{\n\t\t\tnode.style.top = Math.max(st, bottom - height) + 'px';\n\t\t}\n\t},\n\n\t/**\n\t * Function: load\n\t * \n\t * Loads the specified URL *synchronously* and returns the <mxXmlRequest>.\n\t * Throws an exception if the file cannot be loaded. See <mxUtils.get> for\n\t * an asynchronous implementation.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * try\n\t * {\n\t *   var req = mxUtils.load(filename);\n\t *   var root = req.getDocumentElement();\n\t *   // Process XML DOM...\n\t * }\n\t * catch (ex)\n\t * {\n\t *   mxUtils.alert('Cannot load '+filename+': '+ex);\n\t * }\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t */\n\tload: function(url)\n\t{\n\t\tvar req = new mxXmlRequest(url, null, 'GET', false);\n\t\treq.send();\n\t\t\n\t\treturn req;\n\t},\n\n\t/**\n\t * Function: get\n\t * \n\t * Loads the specified URL *asynchronously* and invokes the given functions\n\t * depending on the request status. Returns the <mxXmlRequest> in use. Both\n\t * functions take the <mxXmlRequest> as the only parameter. See\n\t * <mxUtils.load> for a synchronous implementation.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxUtils.get(url, function(req)\n\t * {\n\t *    var node = req.getDocumentElement();\n\t *    // Process XML DOM...\n\t * });\n\t * (end)\n\t * \n\t * So for example, to load a diagram into an existing graph model, the\n\t * following code is used.\n\t * \n\t * (code)\n\t * mxUtils.get(url, function(req)\n\t * {\n\t *   var node = req.getDocumentElement();\n\t *   var dec = new mxCodec(node.ownerDocument);\n\t *   dec.decode(node, graph.getModel());\n\t * });\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * onload - Optional function to execute for a successful response.\n\t * onerror - Optional function to execute on error.\n\t * binary - Optional boolean parameter that specifies if the request is\n\t * binary.\n\t * timeout - Optional timeout in ms before calling ontimeout.\n\t * ontimeout - Optional function to execute on timeout.\n\t * headers - Optional with headers, eg. {'Authorization': 'token xyz'}\n\t */\n\tget: function(url, onload, onerror, binary, timeout, ontimeout, headers)\n\t{\n\t\tvar req = new mxXmlRequest(url, null, 'GET');\n\t\tvar setRequestHeaders = req.setRequestHeaders;\n\t\t\n\t\tif (headers)\n\t\t{\n\t\t\treq.setRequestHeaders = function(request, params)\n\t\t\t{\n\t\t\t\tsetRequestHeaders.apply(this, arguments);\n\t\t\t\t\n\t\t\t\tfor (var key in headers)\n\t\t\t\t{\n\t\t\t\t\trequest.setRequestHeader(key, headers[key]);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\t\n\t\tif (binary != null)\n\t\t{\n\t\t\treq.setBinary(binary);\n\t\t}\n\t\t\n\t\treq.send(onload, onerror, timeout, ontimeout);\n\t\t\n\t\treturn req;\n\t},\n\n\t/**\n\t * Function: getAll\n\t * \n\t * Loads the URLs in the given array *asynchronously* and invokes the given function\n\t * if all requests returned with a valid 2xx status. The error handler is invoked\n\t * once on the first error or invalid response.\n\t *\n\t * Parameters:\n\t * \n\t * urls - Array of URLs to be loaded.\n\t * onload - Callback with array of <mxXmlRequests>.\n\t * onerror - Optional function to execute on error.\n\t */\n\tgetAll: function(urls, onload, onerror)\n\t{\n\t\tvar remain = urls.length;\n\t\tvar result = [];\n\t\tvar errors = 0;\n\t\tvar err = function()\n\t\t{\n\t\t\tif (errors == 0 && onerror != null)\n\t\t\t{\n\t\t\t\tonerror();\n\t\t\t}\n\n\t\t\terrors++;\n\t\t};\n\t\t\n\t\tfor (var i = 0; i < urls.length; i++)\n\t\t{\n\t\t\t(function(url, index)\n\t\t\t{\n\t\t\t\tmxUtils.get(url, function(req)\n\t\t\t\t{\n\t\t\t\t\tvar status = req.getStatus();\n\t\t\t\t\t\n\t\t\t\t\tif (status < 200 || status > 299)\n\t\t\t\t\t{\n\t\t\t\t\t\terr();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult[index] = req;\n\t\t\t\t\t\tremain--;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (remain == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonload(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, err);\n\t\t\t})(urls[i], i);\n\t\t}\n\t\t\n\t\tif (remain == 0)\n\t\t{\n\t\t\tonload(result);\t\t\t\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: post\n\t * \n\t * Posts the specified params to the given URL *asynchronously* and invokes\n\t * the given functions depending on the request status. Returns the\n\t * <mxXmlRequest> in use. Both functions take the <mxXmlRequest> as the\n\t * only parameter. Make sure to use encodeURIComponent for the parameter\n\t * values.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxUtils.post(url, 'key=value', function(req)\n\t * {\n\t * \tmxUtils.alert('Ready: '+req.isReady()+' Status: '+req.getStatus());\n\t *  // Process req.getDocumentElement() using DOM API if OK...\n\t * });\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * params - Parameters for the post request.\n\t * onload - Optional function to execute for a successful response.\n\t * onerror - Optional function to execute on error.\n\t */\n\tpost: function(url, params, onload, onerror)\n\t{\n\t\treturn new mxXmlRequest(url, params).send(onload, onerror);\n\t},\n\t\n\t/**\n\t * Function: submit\n\t * \n\t * Submits the given parameters to the specified URL using\n\t * <mxXmlRequest.simulate> and returns the <mxXmlRequest>.\n\t * Make sure to use encodeURIComponent for the parameter\n\t * values.\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * params - Parameters for the form.\n\t * doc - Document to create the form in.\n\t * target - Target to send the form result to.\n\t */\n\tsubmit: function(url, params, doc, target)\n\t{\n\t\treturn new mxXmlRequest(url, params).simulate(doc, target);\n\t},\n\t\n\t/**\n\t * Function: loadInto\n\t * \n\t * Loads the specified URL *asynchronously* into the specified document,\n\t * invoking onload after the document has been loaded. This implementation\n\t * does not use <mxXmlRequest>, but the document.load method.\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * doc - The document to load the URL into.\n\t * onload - Function to execute when the URL has been loaded.\n\t */\n\tloadInto: function(url, doc, onload)\n\t{\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tdoc.onreadystatechange = function ()\n\t\t\t{\n\t\t\t\tif (doc.readyState == 4)\n\t\t\t\t{\n\t\t\t\t\tonload();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdoc.addEventListener('load', onload, false);\n\t\t}\n\t\t\n\t\tdoc.load(url);\n\t},\n\t\n\t/**\n\t * Function: getValue\n\t * \n\t * Returns the value for the given key in the given associative array or\n\t * the given default value if the value is null.\n\t * \n\t * Parameters:\n\t * \n\t * array - Associative array that contains the value for the key.\n\t * key - Key whose value should be returned.\n\t * defaultValue - Value to be returned if the value for the given\n\t * key is null.\n\t */\n\tgetValue: function(array, key, defaultValue)\n\t{\n\t\tvar value = (array != null) ? array[key] : null;\n\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue;\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\t\n\t/**\n\t * Function: getNumber\n\t * \n\t * Returns the numeric value for the given key in the given associative\n\t * array or the given default value (or 0) if the value is null. The value\n\t * is converted to a numeric value using the Number function.\n\t * \n\t * Parameters:\n\t * \n\t * array - Associative array that contains the value for the key.\n\t * key - Key whose value should be returned.\n\t * defaultValue - Value to be returned if the value for the given\n\t * key is null. Default is 0.\n\t */\n\tgetNumber: function(array, key, defaultValue)\n\t{\n\t\tvar value = (array != null) ? array[key] : null;\n\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue || 0;\t\t\t\n\t\t}\n\t\t\n\t\treturn Number(value);\n\t},\n\t\n\t/**\n\t * Function: getColor\n\t * \n\t * Returns the color value for the given key in the given associative\n\t * array or the given default value if the value is null. If the value\n\t * is <mxConstants.NONE> then null is returned.\n\t * \n\t * Parameters:\n\t * \n\t * array - Associative array that contains the value for the key.\n\t * key - Key whose value should be returned.\n\t * defaultValue - Value to be returned if the value for the given\n\t * key is null. Default is null.\n\t */\n\tgetColor: function(array, key, defaultValue)\n\t{\n\t\tvar value = (array != null) ? array[key] : null;\n\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\telse if (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: clone\n\t * \n\t * Recursively clones the specified object ignoring all fieldnames in the\n\t * given array of transient fields. <mxObjectIdentity.FIELD_NAME> is always\n\t * ignored by this function.\n\t * \n\t * Parameters:\n\t * \n\t * obj - Object to be cloned.\n\t * transients - Optional array of strings representing the fieldname to be\n\t * ignored.\n\t * shallow - Optional boolean argument to specify if a shallow clone should\n\t * be created, that is, one where all object references are not cloned or,\n\t * in other words, one where only atomic (strings, numbers) values are\n\t * cloned. Default is false.\n\t */\n\tclone: function(obj, transients, shallow)\n\t{\n\t\tshallow = (shallow != null) ? shallow : false;\n\t\tvar clone = null;\n\t\t\n\t\tif (obj != null && typeof(obj.constructor) == 'function')\n\t\t{\n\t\t\tclone = new obj.constructor();\n\t\t\t\n\t\t    for (var i in obj)\n\t\t    {\n\t\t    \tif (i != mxObjectIdentity.FIELD_NAME && (transients == null ||\n\t\t    \t\tmxUtils.indexOf(transients, i) < 0))\n\t\t    \t{\n\t\t\t    \tif (!shallow && typeof(obj[i]) == 'object')\n\t\t\t    \t{\n\t\t\t            clone[i] = mxUtils.clone(obj[i]);\n\t\t\t        }\n\t\t\t        else\n\t\t\t        {\n\t\t\t            clone[i] = obj[i];\n\t\t\t        }\n\t\t\t\t}\n\t\t    }\n\t\t}\n\t\t\n\t    return clone;\n\t},\n\n\t/**\n\t * Function: equalPoints\n\t * \n\t * Compares all mxPoints in the given lists.\n\t * \n\t * Parameters:\n\t * \n\t * a - Array of <mxPoints> to be compared.\n\t * b - Array of <mxPoints> to be compared.\n\t */\n\tequalPoints: function(a, b)\n\t{\n\t\tif ((a == null && b != null) || (a != null && b == null) ||\n\t\t\t(a != null && b != null && a.length != b.length))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse if (a != null && b != null)\n\t\t{\n\t\t\tfor (var i = 0; i < a.length; i++)\n\t\t\t{\n\t\t\t\tif ((a[i] != null && b[i] == null) ||\n\t\t\t\t\t(a[i] == null && b[i] != null) ||\n\t\t\t\t\t(a[i] != null && b[i] != null &&\n\t\t\t\t\t(a[i].x != b[i].x || a[i].y != b[i].y)))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\n\t/**\n\t * Function: equalEntries\n\t * \n\t * Returns true if all properties of the given objects are equal. Values\n\t * with NaN are equal to NaN and unequal to any other value.\n\t * \n\t * Parameters:\n\t * \n\t * a - First object to be compared.\n\t * b - Second object to be compared.\n\t */\n\tequalEntries: function(a, b)\n\t{\n\t\t// Counts keys in b to check if all values have been compared\n\t\tvar count = 0;\n\n\t\tif ((a == null && b != null) || (a != null && b == null) ||\n\t\t\t(a != null && b != null && a.length != b.length))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse if (a != null && b != null)\n\t\t{\n\t\t\tfor (var key in b)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\t\n\t\t\tfor (var key in a)\n\t\t\t{\n\t\t\t\tcount--\n\t\t\t\t\n\t\t\t\tif ((!mxUtils.isNaN(a[key]) || !mxUtils.isNaN(b[key])) && a[key] != b[key])\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn count == 0;\n\t},\n\t\n\t/**\n\t * Function: removeDuplicates\n\t * \n\t * Removes all duplicates from the given array.\n\t */\n\tremoveDuplicates: function(arr)\n\t{\n\t\tvar dict = new mxDictionary();\n\t\tvar result = [];\n\t\t\n\t\tfor (var i = 0; i < arr.length; i++)\n\t\t{\n\t\t\tif (!dict.get(arr[i]))\n\t\t\t{\n\t\t\t\tresult.push(arr[i]);\n\t\t\t\tdict.put(arr[i], true);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: isNaN\n\t *\n\t * Returns true if the given value is of type number and isNaN returns true.\n\t */\n\tisNaN: function(value)\n\t{\n\t\treturn typeof(value) == 'number' && isNaN(value);\n\t},\n\t\n\t/**\n\t * Function: extend\n\t *\n\t * Assigns a copy of the superclass prototype to the subclass prototype.\n\t * Note that this does not call the constructor of the superclass at this\n\t * point, the superclass constructor should be called explicitely in the\n\t * subclass constructor. Below is an example.\n\t * \n\t * (code)\n\t * MyGraph = function(container, model, renderHint, stylesheet)\n\t * {\n\t *   mxGraph.call(this, container, model, renderHint, stylesheet);\n\t * }\n\t * \n\t * mxUtils.extend(MyGraph, mxGraph);\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * ctor - Constructor of the subclass.\n\t * superCtor - Constructor of the superclass.\n\t */\n\textend: function(ctor, superCtor)\n\t{\n\t\tvar f = function() {};\n\t\tf.prototype = superCtor.prototype;\n\t\t\n\t\tctor.prototype = new f();\n\t\tctor.prototype.constructor = ctor;\n\t},\n\n\t/**\n\t * Function: toString\n\t * \n\t * Returns a textual representation of the specified object.\n\t * \n\t * Parameters:\n\t * \n\t * obj - Object to return the string representation for.\n\t */\n\ttoString: function(obj)\n\t{\n\t    var output = '';\n\t    \n\t    for (var i in obj)\n\t    {\n\t    \ttry\n\t    \t{\n\t\t\t    if (obj[i] == null)\n\t\t\t    {\n\t\t            output += i + ' = [null]\\n';\n\t\t\t    }\n\t\t\t    else if (typeof(obj[i]) == 'function')\n\t\t\t    {\n\t\t            output += i + ' => [Function]\\n';\n\t\t        }\n\t\t        else if (typeof(obj[i]) == 'object')\n\t\t        {\n\t\t        \tvar ctor = mxUtils.getFunctionName(obj[i].constructor); \n\t\t            output += i + ' => [' + ctor + ']\\n';\n\t\t        }\n\t\t        else\n\t\t        {\n\t\t            output += i + ' = ' + obj[i] + '\\n';\n\t\t        }\n\t    \t}\n\t    \tcatch (e)\n\t    \t{\n\t    \t\toutput += i + '=' + e.message;\n\t    \t}\n\t    }\n\t    \n\t    return output;\n\t},\n\n\t/**\n\t * Function: toRadians\n\t * \n\t * Converts the given degree to radians.\n\t */\n\ttoRadians: function(deg)\n\t{\n\t\treturn Math.PI * deg / 180;\n\t},\n\n\t/**\n\t * Function: toDegree\n\t * \n\t * Converts the given radians to degree.\n\t */\n\ttoDegree: function(rad)\n\t{\n\t\treturn rad * 180 / Math.PI;\n\t},\n\t\n\t/**\n\t * Function: arcToCurves\n\t * \n\t * Converts the given arc to a series of curves.\n\t */\n\tarcToCurves: function(x0, y0, r1, r2, angle, largeArcFlag, sweepFlag, x, y)\n\t{\n\t\tx -= x0;\n\t\ty -= y0;\n\t\t\n        if (r1 === 0 || r2 === 0) \n        {\n        \treturn result;\n        }\n        \n        var fS = sweepFlag;\n        var psai = angle;\n        r1 = Math.abs(r1);\n        r2 = Math.abs(r2);\n        var ctx = -x / 2;\n        var cty = -y / 2;\n        var cpsi = Math.cos(psai * Math.PI / 180);\n        var spsi = Math.sin(psai * Math.PI / 180);\n        var rxd = cpsi * ctx + spsi * cty;\n        var ryd = -1 * spsi * ctx + cpsi * cty;\n        var rxdd = rxd * rxd;\n        var rydd = ryd * ryd;\n        var r1x = r1 * r1;\n        var r2y = r2 * r2;\n        var lamda = rxdd / r1x + rydd / r2y;\n        var sds;\n        \n        if (lamda > 1) \n        {\n        \tr1 = Math.sqrt(lamda) * r1;\n        \tr2 = Math.sqrt(lamda) * r2;\n        \tsds = 0;\n        }  \n        else\n        {\n        \tvar seif = 1;\n            \n        \tif (largeArcFlag === fS) \n        \t{\n        \t\tseif = -1;\n        \t}\n            \n        \tsds = seif * Math.sqrt((r1x * r2y - r1x * rydd - r2y * rxdd) / (r1x * rydd + r2y * rxdd));\n        }\n        \n        var txd = sds * r1 * ryd / r2;\n        var tyd = -1 * sds * r2 * rxd / r1;\n        var tx = cpsi * txd - spsi * tyd + x / 2;\n        var ty = spsi * txd + cpsi * tyd + y / 2;\n        var rad = Math.atan2((ryd - tyd) / r2, (rxd - txd) / r1) - Math.atan2(0, 1);\n        var s1 = (rad >= 0) ? rad : 2 * Math.PI + rad;\n        rad = Math.atan2((-ryd - tyd) / r2, (-rxd - txd) / r1) - Math.atan2((ryd - tyd) / r2, (rxd - txd) / r1);\n        var dr = (rad >= 0) ? rad : 2 * Math.PI + rad;\n        \n        if (fS == 0 && dr > 0) \n        {\n        \tdr -= 2 * Math.PI;\n        }\n        else if (fS != 0 && dr < 0) \n        {\n        \tdr += 2 * Math.PI;\n        }\n        \n        var sse = dr * 2 / Math.PI;\n        var seg = Math.ceil(sse < 0 ? -1 * sse : sse);\n        var segr = dr / seg;\n        var t = 8/3 * Math.sin(segr / 4) * Math.sin(segr / 4) / Math.sin(segr / 2);\n        var cpsir1 = cpsi * r1;\n        var cpsir2 = cpsi * r2;\n        var spsir1 = spsi * r1;\n        var spsir2 = spsi * r2;\n        var mc = Math.cos(s1);\n        var ms = Math.sin(s1);\n        var x2 = -t * (cpsir1 * ms + spsir2 * mc);\n        var y2 = -t * (spsir1 * ms - cpsir2 * mc);\n        var x3 = 0;\n        var y3 = 0;\n\n\t\tvar result = [];\n        \n        for (var n = 0; n < seg; ++n) \n        {\n            s1 += segr;\n            mc = Math.cos(s1);\n            ms = Math.sin(s1);\n            \n            x3 = cpsir1 * mc - spsir2 * ms + tx;\n            y3 = spsir1 * mc + cpsir2 * ms + ty;\n            var dx = -t * (cpsir1 * ms + spsir2 * mc);\n            var dy = -t * (spsir1 * ms - cpsir2 * mc);\n            \n            // CurveTo updates x0, y0 so need to restore it\n            var index = n * 6;\n            result[index] = Number(x2 + x0);\n            result[index + 1] = Number(y2 + y0);\n            result[index + 2] = Number(x3 - dx + x0);\n            result[index + 3] = Number(y3 - dy + y0);\n            result[index + 4] = Number(x3 + x0);\n            result[index + 5] = Number(y3 + y0);\n            \n\t\t\tx2 = x3 + dx;\n            y2 = y3 + dy;\n        }\n        \n        return result;\n\t},\n\n\t/**\n\t * Function: getBoundingBox\n\t * \n\t * Returns the bounding box for the rotated rectangle.\n\t * \n\t * Parameters:\n\t * \n\t * rect - <mxRectangle> to be rotated.\n\t * angle - Number that represents the angle (in degrees).\n\t * cx - Optional <mxPoint> that represents the rotation center. If no\n\t * rotation center is given then the center of rect is used.\n\t */\n\tgetBoundingBox: function(rect, rotation, cx)\n\t{\n        var result = null;\n\n        if (rect != null && rotation != null && rotation != 0)\n        {\n            var rad = mxUtils.toRadians(rotation);\n            var cos = Math.cos(rad);\n            var sin = Math.sin(rad);\n\n            cx = (cx != null) ? cx : new mxPoint(rect.x + rect.width / 2, rect.y + rect.height / 2);\n\n            var p1 = new mxPoint(rect.x, rect.y);\n            var p2 = new mxPoint(rect.x + rect.width, rect.y);\n            var p3 = new mxPoint(p2.x, rect.y + rect.height);\n            var p4 = new mxPoint(rect.x, p3.y);\n\n            p1 = mxUtils.getRotatedPoint(p1, cos, sin, cx);\n            p2 = mxUtils.getRotatedPoint(p2, cos, sin, cx);\n            p3 = mxUtils.getRotatedPoint(p3, cos, sin, cx);\n            p4 = mxUtils.getRotatedPoint(p4, cos, sin, cx);\n\n            result = new mxRectangle(p1.x, p1.y, 0, 0);\n            result.add(new mxRectangle(p2.x, p2.y, 0, 0));\n            result.add(new mxRectangle(p3.x, p3.y, 0, 0));\n            result.add(new mxRectangle(p4.x, p4.y, 0, 0));\n        }\n\n        return result;\n\t},\n\n\t/**\n\t * Function: getRotatedPoint\n\t * \n\t * Rotates the given point by the given cos and sin.\n\t */\n\tgetRotatedPoint: function(pt, cos, sin, c)\n\t{\n\t\tc = (c != null) ? c : new mxPoint();\n\t\tvar x = pt.x - c.x;\n\t\tvar y = pt.y - c.y;\n\n\t\tvar x1 = x * cos - y * sin;\n\t\tvar y1 = y * cos + x * sin;\n\n\t\treturn new mxPoint(x1 + c.x, y1 + c.y);\n\t},\n\t\n\t/**\n\t * Returns an integer mask of the port constraints of the given map\n\t * @param dict the style map to determine the port constraints for\n\t * @param defaultValue Default value to return if the key is undefined.\n\t * @return the mask of port constraint directions\n\t * \n\t * Parameters:\n\t * \n\t * terminal - <mxCelState> that represents the terminal.\n\t * edge - <mxCellState> that represents the edge.\n\t * source - Boolean that specifies if the terminal is the source terminal.\n\t * defaultValue - Default value to be returned.\n\t */\n\tgetPortConstraints: function(terminal, edge, source, defaultValue)\n\t{\n\t\tvar value = mxUtils.getValue(terminal.style, mxConstants.STYLE_PORT_CONSTRAINT,\n\t\t\tmxUtils.getValue(edge.style, (source) ? mxConstants.STYLE_SOURCE_PORT_CONSTRAINT :\n\t\t\t\tmxConstants.STYLE_TARGET_PORT_CONSTRAINT, null));\n\t\t\n\t\tif (value == null)\n\t\t{\n\t\t\treturn defaultValue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar directions = value.toString();\n\t\t\tvar returnValue = mxConstants.DIRECTION_MASK_NONE;\n\t\t\tvar constraintRotationEnabled = mxUtils.getValue(terminal.style, mxConstants.STYLE_PORT_CONSTRAINT_ROTATION, 0);\n\t\t\tvar rotation = 0;\n\t\t\t\n\t\t\tif (constraintRotationEnabled == 1)\n\t\t\t{\n\t\t\t\trotation = mxUtils.getValue(terminal.style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t}\n\t\t\t\n\t\t\tvar quad = 0;\n\n\t\t\tif (rotation > 45)\n\t\t\t{\n\t\t\t\tquad = 1;\n\t\t\t\t\n\t\t\t\tif (rotation >= 135)\n\t\t\t\t{\n\t\t\t\t\tquad = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (rotation < -45)\n\t\t\t{\n\t\t\t\tquad = 3;\n\t\t\t\t\n\t\t\t\tif (rotation <= -135)\n\t\t\t\t{\n\t\t\t\t\tquad = 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_NORTH) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_WEST) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_SOUTH) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_EAST) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn returnValue;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: reversePortConstraints\n\t * \n\t * Reverse the port constraint bitmask. For example, north | east\n\t * becomes south | west\n\t */\n\treversePortConstraints: function(constraint)\n\t{\n\t\tvar result = 0;\n\t\t\n\t\tresult = (constraint & mxConstants.DIRECTION_MASK_WEST) << 3;\n\t\tresult |= (constraint & mxConstants.DIRECTION_MASK_NORTH) << 1;\n\t\tresult |= (constraint & mxConstants.DIRECTION_MASK_SOUTH) >> 1;\n\t\tresult |= (constraint & mxConstants.DIRECTION_MASK_EAST) >> 3;\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: findNearestSegment\n\t * \n\t * Finds the index of the nearest segment on the given cell state for\n\t * the specified coordinate pair.\n\t */\n\tfindNearestSegment: function(state, x, y)\n\t{\n\t\tvar index = -1;\n\t\t\n\t\tif (state.absolutePoints.length > 0)\n\t\t{\n\t\t\tvar last = state.absolutePoints[0];\n\t\t\tvar min = null;\n\t\t\t\n\t\t\tfor (var i = 1; i < state.absolutePoints.length; i++)\n\t\t\t{\n\t\t\t\tvar current = state.absolutePoints[i];\n\t\t\t\tvar dist = mxUtils.ptSegDistSq(last.x, last.y,\n\t\t\t\t\tcurrent.x, current.y, x, y);\n\t\t\t\t\n\t\t\t\tif (min == null || dist < min)\n\t\t\t\t{\n\t\t\t\t\tmin = dist;\n\t\t\t\t\tindex = i - 1;\n\t\t\t\t}\n\n\t\t\t\tlast = current;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn index;\n\t},\n\n\t/**\n\t * Function: getDirectedBounds\n\t * \n\t * Adds the given margins to the given rectangle and rotates and flips the\n\t * rectangle according to the respective styles in style.\n\t */\n\tgetDirectedBounds: function (rect, m, style, flipH, flipV)\n\t{\n\t\tvar d = mxUtils.getValue(style, mxConstants.STYLE_DIRECTION, mxConstants.DIRECTION_EAST);\n\t\tflipH = (flipH != null) ? flipH : mxUtils.getValue(style, mxConstants.STYLE_FLIPH, false);\n\t\tflipV = (flipV != null) ? flipV : mxUtils.getValue(style, mxConstants.STYLE_FLIPV, false);\n\n\t\tm.x = Math.round(Math.max(0, Math.min(rect.width, m.x)));\n\t\tm.y = Math.round(Math.max(0, Math.min(rect.height, m.y)));\n\t\tm.width = Math.round(Math.max(0, Math.min(rect.width, m.width)));\n\t\tm.height = Math.round(Math.max(0, Math.min(rect.height, m.height)));\n\t\t\n\t\tif ((flipV && (d == mxConstants.DIRECTION_SOUTH || d == mxConstants.DIRECTION_NORTH)) ||\n\t\t\t(flipH && (d == mxConstants.DIRECTION_EAST || d == mxConstants.DIRECTION_WEST)))\n\t\t{\n\t\t\tvar tmp = m.x;\n\t\t\tm.x = m.width;\n\t\t\tm.width = tmp;\n\t\t}\n\t\t\t\n\t\tif ((flipH && (d == mxConstants.DIRECTION_SOUTH || d == mxConstants.DIRECTION_NORTH)) ||\n\t\t\t(flipV && (d == mxConstants.DIRECTION_EAST || d == mxConstants.DIRECTION_WEST)))\n\t\t{\n\t\t\tvar tmp = m.y;\n\t\t\tm.y = m.height;\n\t\t\tm.height = tmp;\n\t\t}\n\t\t\n\t\tvar m2 = mxRectangle.fromRectangle(m);\n\t\t\n\t\tif (d == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tm2.y = m.x;\n\t\t\tm2.x = m.height;\n\t\t\tm2.width = m.y;\n\t\t\tm2.height = m.width;\n\t\t}\n\t\telse if (d == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tm2.y = m.height;\n\t\t\tm2.x = m.width;\n\t\t\tm2.width = m.x;\n\t\t\tm2.height = m.y;\n\t\t}\n\t\telse if (d == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tm2.y = m.width;\n\t\t\tm2.x = m.y;\n\t\t\tm2.width = m.height;\n\t\t\tm2.height = m.x;\n\t\t}\n\t\t\n\t\treturn new mxRectangle(rect.x + m2.x, rect.y + m2.y, rect.width - m2.width - m2.x, rect.height - m2.height - m2.y);\n\t},\n\n\t/**\n\t * Function: getPerimeterPoint\n\t * \n\t * Returns the intersection between the polygon defined by the array of\n\t * points and the line between center and point.\n\t */\n\tgetPerimeterPoint: function (pts, center, point)\n\t{\n\t\tvar min = null;\n\t\t\n\t\tfor (var i = 0; i < pts.length - 1; i++)\n\t\t{\n\t\t\tvar pt = mxUtils.intersection(pts[i].x, pts[i].y, pts[i + 1].x, pts[i + 1].y,\n\t\t\t\tcenter.x, center.y, point.x, point.y);\n\t\t\t\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tvar dx = point.x - pt.x;\n\t\t\t\tvar dy = point.y - pt.y;\n\t\t\t\tvar ip = {p: pt, distSq: dy * dy + dx * dx};\n\t\t\t\t\n\t\t\t\tif (ip != null && (min == null || min.distSq > ip.distSq))\n\t\t\t\t{\n\t\t\t\t\tmin = ip;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn (min != null) ? min.p : null;\n\t},\n\n\t/**\n\t * Function: rectangleIntersectsSegment\n\t * \n\t * Returns true if the given rectangle intersects the given segment.\n\t * \n\t * Parameters:\n\t * \n\t * bounds - <mxRectangle> that represents the rectangle.\n\t * p1 - <mxPoint> that represents the first point of the segment.\n\t * p2 - <mxPoint> that represents the second point of the segment.\n\t */\n\trectangleIntersectsSegment: function(bounds, p1, p2)\n\t{\n\t\tvar top = bounds.y;\n\t\tvar left = bounds.x;\n\t\tvar bottom = top + bounds.height;\n\t\tvar right = left + bounds.width;\n\t\t\t\n\t\t// Find min and max X for the segment\n\t\tvar minX = p1.x;\n\t\tvar maxX = p2.x;\n\t\t\n\t\tif (p1.x > p2.x)\n\t\t{\n\t\t  minX = p2.x;\n\t\t  maxX = p1.x;\n\t\t}\n\t\t\n\t\t// Find the intersection of the segment's and rectangle's x-projections\n\t\tif (maxX > right)\n\t\t{\n\t\t  maxX = right;\n\t\t}\n\t\t\n\t\tif (minX < left)\n\t\t{\n\t\t  minX = left;\n\t\t}\n\t\t\n\t\tif (minX > maxX) // If their projections do not intersect return false\n\t\t{\n\t\t  return false;\n\t\t}\n\t\t\n\t\t// Find corresponding min and max Y for min and max X we found before\n\t\tvar minY = p1.y;\n\t\tvar maxY = p2.y;\n\t\tvar dx = p2.x - p1.x;\n\t\t\n\t\tif (Math.abs(dx) > 0.0000001)\n\t\t{\n\t\t  var a = (p2.y - p1.y) / dx;\n\t\t  var b = p1.y - a * p1.x;\n\t\t  minY = a * minX + b;\n\t\t  maxY = a * maxX + b;\n\t\t}\n\t\t\n\t\tif (minY > maxY)\n\t\t{\n\t\t  var tmp = maxY;\n\t\t  maxY = minY;\n\t\t  minY = tmp;\n\t\t}\n\t\t\n\t\t// Find the intersection of the segment's and rectangle's y-projections\n\t\tif (maxY > bottom)\n\t\t{\n\t\t  maxY = bottom;\n\t\t}\n\t\t\n\t\tif (minY < top)\n\t\t{\n\t\t  minY = top;\n\t\t}\n\t\t\n\t\tif (minY > maxY) // If Y-projections do not intersect return false\n\t\t{\n\t\t  return false;\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\t\n\t/**\n\t * Function: contains\n\t * \n\t * Returns true if the specified point (x, y) is contained in the given rectangle.\n\t * \n\t * Parameters:\n\t * \n\t * bounds - <mxRectangle> that represents the area.\n\t * x - X-coordinate of the point.\n\t * y - Y-coordinate of the point.\n\t */\n\tcontains: function(bounds, x, y)\n\t{\n\t\treturn (bounds.x <= x && bounds.x + bounds.width >= x &&\n\t\t\t\tbounds.y <= y && bounds.y + bounds.height >= y);\n\t},\n\n\t/**\n\t * Function: intersects\n\t * \n\t * Returns true if the two rectangles intersect.\n\t * \n\t * Parameters:\n\t * \n\t * a - <mxRectangle> to be checked for intersection.\n\t * b - <mxRectangle> to be checked for intersection.\n\t */\n\tintersects: function(a, b)\n\t{\n\t\tvar tw = a.width;\n\t\tvar th = a.height;\n\t\tvar rw = b.width;\n\t\tvar rh = b.height;\n\t\t\n\t\tif (rw <= 0 || rh <= 0 || tw <= 0 || th <= 0)\n\t\t{\n\t\t    return false;\n\t\t}\n\t\t\n\t\tvar tx = a.x;\n\t\tvar ty = a.y;\n\t\tvar rx = b.x;\n\t\tvar ry = b.y;\n\t\t\n\t\trw += rx;\n\t\trh += ry;\n\t\ttw += tx;\n\t\tth += ty;\n\n\t\treturn ((rw < rx || rw > tx) &&\n\t\t\t(rh < ry || rh > ty) &&\n\t\t\t(tw < tx || tw > rx) &&\n\t\t\t(th < ty || th > ry));\n\t},\n\n\t/**\n\t * Function: intersectsHotspot\n\t * \n\t * Returns true if the state and the hotspot intersect.\n\t * \n\t * Parameters:\n\t * \n\t * state - <mxCellState>\n\t * x - X-coordinate.\n\t * y - Y-coordinate.\n\t * hotspot - Optional size of the hostpot.\n\t * min - Optional min size of the hostpot.\n\t * max - Optional max size of the hostpot.\n\t */\n\tintersectsHotspot: function(state, x, y, hotspot, min, max)\n\t{\n\t\thotspot = (hotspot != null) ? hotspot : 1;\n\t\tmin = (min != null) ? min : 0;\n\t\tmax = (max != null) ? max : 0;\n\t\t\n\t\tif (hotspot > 0)\n\t\t{\n\t\t\tvar cx = state.getCenterX();\n\t\t\tvar cy = state.getCenterY();\n\t\t\tvar w = state.width;\n\t\t\tvar h = state.height;\n\t\t\t\n\t\t\tvar start = mxUtils.getValue(state.style, mxConstants.STYLE_STARTSIZE) * state.view.scale;\n\n\t\t\tif (start > 0)\n\t\t\t{\n\t\t\t\tif (mxUtils.getValue(state.style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t\t\t{\n\t\t\t\t\tcy = state.y + start / 2;\n\t\t\t\t\th = start;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcx = state.x + start / 2;\n\t\t\t\t\tw = start;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tw = Math.max(min, w * hotspot);\n\t\t\th = Math.max(min, h * hotspot);\n\t\t\t\n\t\t\tif (max > 0)\n\t\t\t{\n\t\t\t\tw = Math.min(w, max);\n\t\t\t\th = Math.min(h, max);\n\t\t\t}\n\t\t\t\n\t\t\tvar rect = new mxRectangle(cx - w / 2, cy - h / 2, w, h);\n\t\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\tvar cx = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(x, y), cos, sin, cx);\n\t\t\t\tx = pt.x;\n\t\t\t\ty = pt.y;\n\t\t\t}\n\t\t\t\n\t\t\treturn mxUtils.contains(rect, x, y);\t\t\t\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\n\t/**\n\t * Function: getOffset\n\t * \n\t * Returns the offset for the specified container as an <mxPoint>. The\n\t * offset is the distance from the top left corner of the container to the\n\t * top left corner of the document.\n\t * \n\t * Parameters:\n\t * \n\t * container - DOM node to return the offset for.\n\t * scollOffset - Optional boolean to add the scroll offset of the document.\n\t * Default is false.\n\t */\n\tgetOffset: function(container, scrollOffset)\n\t{\n\t\tvar offsetLeft = 0;\n\t\tvar offsetTop = 0;\n\t\t\n\t\t// Ignores document scroll origin for fixed elements\n\t\tvar fixed = false;\n\t\tvar node = container;\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\n\t\twhile (node != null && node != b && node != d && !fixed)\n\t\t{\n\t\t\tvar style = mxUtils.getCurrentStyle(node);\n\t\t\t\n\t\t\tif (style != null)\n\t\t\t{\n\t\t\t\tfixed = fixed || style.position == 'fixed';\n\t\t\t}\n\t\t\t\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\t\n\t\tif (!scrollOffset && !fixed)\n\t\t{\n\t\t\tvar offset = mxUtils.getDocumentScrollOrigin(container.ownerDocument);\n\t\t\toffsetLeft += offset.x;\n\t\t\toffsetTop += offset.y;\n\t\t}\n\t\t\n\t\tvar r = container.getBoundingClientRect();\n\t\t\n\t\tif (r != null)\n\t\t{\n\t\t\toffsetLeft += r.left;\n\t\t\toffsetTop += r.top;\n\t\t}\n\t\t\n\t\treturn new mxPoint(offsetLeft, offsetTop);\n\t},\n\n\t/**\n\t * Function: getDocumentScrollOrigin\n\t * \n\t * Returns the scroll origin of the given document or the current document\n\t * if no document is given.\n\t */\n\tgetDocumentScrollOrigin: function(doc)\n\t{\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\treturn new mxPoint(doc.body.scrollLeft, doc.body.scrollTop);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar wnd = doc.defaultView || doc.parentWindow;\n\t\t\t\n\t\t\tvar x = (wnd != null && window.pageXOffset !== undefined) ? window.pageXOffset : (document.documentElement || document.body.parentNode || document.body).scrollLeft;\n\t\t\tvar y = (wnd != null && window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n\t\t\t\n\t\t\treturn new mxPoint(x, y);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: getScrollOrigin\n\t * \n\t * Returns the top, left corner of the viewrect as an <mxPoint>.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose scroll origin should be returned.\n\t * includeAncestors - Whether the scroll origin of the ancestors should be\n\t * included. Default is false.\n\t * includeDocument - Whether the scroll origin of the document should be\n\t * included. Default is true.\n\t */\n\tgetScrollOrigin: function(node, includeAncestors, includeDocument)\n\t{\n\t\tincludeAncestors = (includeAncestors != null) ? includeAncestors : false;\n\t\tincludeDocument = (includeDocument != null) ? includeDocument : true;\n\t\t\n\t\tvar doc = (node != null) ? node.ownerDocument : document;\n\t\tvar b = doc.body;\n\t\tvar d = doc.documentElement;\n\t\tvar result = new mxPoint();\n\t\tvar fixed = false;\n\n\t\twhile (node != null && node != b && node != d)\n\t\t{\n\t\t\tif (!isNaN(node.scrollLeft) && !isNaN(node.scrollTop))\n\t\t\t{\n\t\t\t\tresult.x += node.scrollLeft;\n\t\t\t\tresult.y += node.scrollTop;\n\t\t\t}\n\t\t\t\n\t\t\tvar style = mxUtils.getCurrentStyle(node);\n\t\t\t\n\t\t\tif (style != null)\n\t\t\t{\n\t\t\t\tfixed = fixed || style.position == 'fixed';\n\t\t\t}\n\n\t\t\tnode = (includeAncestors) ? node.parentNode : null;\n\t\t}\n\n\t\tif (!fixed && includeDocument)\n\t\t{\n\t\t\tvar origin = mxUtils.getDocumentScrollOrigin(doc);\n\n\t\t\tresult.x += origin.x;\n\t\t\tresult.y += origin.y;\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\n\t/**\n\t * Function: convertPoint\n\t * \n\t * Converts the specified point (x, y) using the offset of the specified\n\t * container and returns a new <mxPoint> with the result.\n\t * \n\t * (code)\n\t * var pt = mxUtils.convertPoint(graph.container,\n\t *   mxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * container - DOM node to use for the offset.\n\t * x - X-coordinate of the point to be converted.\n\t * y - Y-coordinate of the point to be converted.\n\t */\n\tconvertPoint: function(container, x, y)\n\t{\n\t\tvar origin = mxUtils.getScrollOrigin(container, false);\n\t\tvar offset = mxUtils.getOffset(container);\n\n\t\toffset.x -= origin.x;\n\t\toffset.y -= origin.y;\n\t\t\n\t\treturn new mxPoint(x - offset.x, y - offset.y);\n\t},\n\t\n\t/**\n\t * Function: ltrim\n\t * \n\t * Strips all whitespaces from the beginning of the string. Without the\n\t * second parameter, this will trim these characters:\n\t * \n\t * - \" \" (ASCII 32 (0x20)), an ordinary space\n\t * - \"\\t\" (ASCII 9 (0x09)), a tab\n\t * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n\t * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n\t * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n\t * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n\t */\n\tltrim: function(str, chars)\n\t{\n\t\tchars = chars || \"\\\\s\";\n\t\t\n\t\treturn (str != null) ? str.replace(new RegExp(\"^[\" + chars + \"]+\", \"g\"), \"\") : null;\n\t},\n\t\n\t/**\n\t * Function: rtrim\n\t * \n\t * Strips all whitespaces from the end of the string. Without the second\n\t * parameter, this will trim these characters:\n\t * \n\t * - \" \" (ASCII 32 (0x20)), an ordinary space\n\t * - \"\\t\" (ASCII 9 (0x09)), a tab\n\t * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n\t * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n\t * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n\t * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n\t */\n\trtrim: function(str, chars)\n\t{\n\t\tchars = chars || \"\\\\s\";\n\t\t\n\t\treturn (str != null) ? str.replace(new RegExp(\"[\" + chars + \"]+$\", \"g\"), \"\") : null;\n\t},\n\t\n\t/**\n\t * Function: trim\n\t * \n\t * Strips all whitespaces from both end of the string.\n\t * Without the second parameter, Javascript function will trim these\n\t * characters:\n\t * \n\t * - \" \" (ASCII 32 (0x20)), an ordinary space\n\t * - \"\\t\" (ASCII 9 (0x09)), a tab\n\t * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n\t * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n\t * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n\t * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n\t */\n\ttrim: function(str, chars)\n\t{\n\t\treturn mxUtils.ltrim(mxUtils.rtrim(str, chars), chars);\n\t},\n\t\n\t/**\n\t * Function: isNumeric\n\t * \n\t * Returns true if the specified value is numeric, that is, if it is not\n\t * null, not an empty string, not a HEX number and isNaN returns false.\n\t * \n\t * Parameters:\n\t * \n\t * n - String representing the possibly numeric value.\n\t */\n\tisNumeric: function(n)\n\t{\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n) && (typeof(n) != 'string' || n.toLowerCase().indexOf('0x') < 0);\n\t},\n\n\t/**\n\t * Function: isInteger\n\t * \n\t * Returns true if the given value is an valid integer number.\n\t * \n\t * Parameters:\n\t * \n\t * n - String representing the possibly numeric value.\n\t */\n\tisInteger: function(n)\n\t{\n\t\treturn String(parseInt(n)) === String(n);\n\t},\n\n\t/**\n\t * Function: mod\n\t * \n\t * Returns the remainder of division of n by m. You should use this instead\n\t * of the built-in operation as the built-in operation does not properly\n\t * handle negative numbers.\n\t */\n\tmod: function(n, m)\n\t{\n\t\treturn ((n % m) + m) % m;\n\t},\n\n\t/**\n\t * Function: intersection\n\t * \n\t * Returns the intersection of two lines as an <mxPoint>.\n\t * \n\t * Parameters:\n\t * \n\t * x0 - X-coordinate of the first line's startpoint.\n\t * y0 - X-coordinate of the first line's startpoint.\n\t * x1 - X-coordinate of the first line's endpoint.\n\t * y1 - Y-coordinate of the first line's endpoint.\n\t * x2 - X-coordinate of the second line's startpoint.\n\t * y2 - Y-coordinate of the second line's startpoint.\n\t * x3 - X-coordinate of the second line's endpoint.\n\t * y3 - Y-coordinate of the second line's endpoint.\n\t */\n\tintersection: function (x0, y0, x1, y1, x2, y2, x3, y3)\n\t{\n\t\tvar denom = ((y3 - y2) * (x1 - x0)) - ((x3 - x2) * (y1 - y0));\n\t\tvar nume_a = ((x3 - x2) * (y0 - y2)) - ((y3 - y2) * (x0 - x2));\n\t\tvar nume_b = ((x1 - x0) * (y0 - y2)) - ((y1 - y0) * (x0 - x2));\n\n\t\tvar ua = nume_a / denom;\n\t\tvar ub = nume_b / denom;\n\t\t\n\t\tif(ua >= 0.0 && ua <= 1.0 && ub >= 0.0 && ub <= 1.0)\n\t\t{\n\t\t\t// Get the intersection point\n\t\t\tvar x = x0 + ua * (x1 - x0);\n\t\t\tvar y = y0 + ua * (y1 - y0);\n\t\t\t\n\t\t\treturn new mxPoint(x, y);\n\t\t}\n\t\t\n\t\t// No intersection\n\t\treturn null;\n\t},\n\t\n\t/**\n\t * Function: ptSegDistSq\n\t * \n\t * Returns the square distance between a segment and a point. To get the\n\t * distance between a point and a line (with infinite length) use\n\t * <mxUtils.ptLineDist>.\n\t * \n\t * Parameters:\n\t * \n\t * x1 - X-coordinate of the startpoint of the segment.\n\t * y1 - Y-coordinate of the startpoint of the segment.\n\t * x2 - X-coordinate of the endpoint of the segment.\n\t * y2 - Y-coordinate of the endpoint of the segment.\n\t * px - X-coordinate of the point.\n\t * py - Y-coordinate of the point.\n\t */\n\tptSegDistSq: function(x1, y1, x2, y2, px, py)\n    {\n\t\tx2 -= x1;\n\t\ty2 -= y1;\n\n\t\tpx -= x1;\n\t\tpy -= y1;\n\n\t\tvar dotprod = px * x2 + py * y2;\n\t\tvar projlenSq;\n\n\t\tif (dotprod <= 0.0)\n\t\t{\n\t\t    projlenSq = 0.0;\n\t\t}\n\t\telse\n\t\t{\n\t\t    px = x2 - px;\n\t\t    py = y2 - py;\n\t\t    dotprod = px * x2 + py * y2;\n\n\t\t    if (dotprod <= 0.0)\n\t\t    {\n\t\t\t\tprojlenSq = 0.0;\n\t\t    }\n\t\t    else\n\t\t    {\n\t\t\t\tprojlenSq = dotprod * dotprod / (x2 * x2 + y2 * y2);\n\t\t    }\n\t\t}\n\n\t\tvar lenSq = px * px + py * py - projlenSq;\n\t\t\n\t\tif (lenSq < 0)\n\t\t{\n\t\t    lenSq = 0;\n\t\t}\n\t\t\n\t\treturn lenSq;\n    },\n\t\n\t/**\n\t * Function: ptLineDist\n\t * \n\t * Returns the distance between a line defined by two points and a point.\n\t * To get the distance between a point and a segment (with a specific\n\t * length) use <mxUtils.ptSeqDistSq>.\n\t * \n\t * Parameters:\n\t * \n\t * x1 - X-coordinate of point 1 of the line.\n\t * y1 - Y-coordinate of point 1 of the line.\n\t * x2 - X-coordinate of point 1 of the line.\n\t * y2 - Y-coordinate of point 1 of the line.\n\t * px - X-coordinate of the point.\n\t * py - Y-coordinate of the point.\n\t */\n    ptLineDist: function(x1, y1, x2, y2, px, py)\n    {\n\t\treturn Math.abs((y2 - y1) * px - (x2 - x1) * py + x2 * y1 - y2 * x1) /\n\t\t\tMath.sqrt((y2 - y1) * (y2 - y1) + (x2 - x1) * (x2 - x1));\n    },\n    \t\n\t/**\n\t * Function: relativeCcw\n\t * \n\t * Returns 1 if the given point on the right side of the segment, 0 if its\n\t * on the segment, and -1 if the point is on the left side of the segment.\n\t * \n\t * Parameters:\n\t * \n\t * x1 - X-coordinate of the startpoint of the segment.\n\t * y1 - Y-coordinate of the startpoint of the segment.\n\t * x2 - X-coordinate of the endpoint of the segment.\n\t * y2 - Y-coordinate of the endpoint of the segment.\n\t * px - X-coordinate of the point.\n\t * py - Y-coordinate of the point.\n\t */\n\trelativeCcw: function(x1, y1, x2, y2, px, py)\n    {\n\t\tx2 -= x1;\n\t\ty2 -= y1;\n\t\tpx -= x1;\n\t\tpy -= y1;\n\t\tvar ccw = px * y2 - py * x2;\n\t\t\n\t\tif (ccw == 0.0)\n\t\t{\n\t\t    ccw = px * x2 + py * y2;\n\t\t    \n\t\t    if (ccw > 0.0)\n\t\t    {\n\t\t\t\tpx -= x2;\n\t\t\t\tpy -= y2;\n\t\t\t\tccw = px * x2 + py * y2;\n\t\t\t\t\n\t\t\t\tif (ccw < 0.0)\n\t\t\t\t{\n\t\t\t\t    ccw = 0.0;\n\t\t\t\t}\n\t\t    }\n\t\t}\n\t\t\n\t\treturn (ccw < 0.0) ? -1 : ((ccw > 0.0) ? 1 : 0);\n    },\n    \n\t/**\n\t * Function: animateChanges\n\t * \n\t * See <mxEffects.animateChanges>. This is for backwards compatibility and\n\t * will be removed later.\n\t */\n\tanimateChanges: function(graph, changes)\n\t{\n\t\t// LATER: Deprecated, remove this function\n    \tmxEffects.animateChanges.apply(this, arguments);\n\t},\n    \n\t/**\n\t * Function: cascadeOpacity\n\t * \n\t * See <mxEffects.cascadeOpacity>. This is for backwards compatibility and\n\t * will be removed later.\n\t */\n    cascadeOpacity: function(graph, cell, opacity)\n\t{\n\t\tmxEffects.cascadeOpacity.apply(this, arguments);\n\t},\n\n\t/**\n\t * Function: fadeOut\n\t * \n\t * See <mxEffects.fadeOut>. This is for backwards compatibility and\n\t * will be removed later.\n\t */\n\tfadeOut: function(node, from, remove, step, delay, isEnabled)\n\t{\n\t\tmxEffects.fadeOut.apply(this, arguments);\n\t},\n\t\n\t/**\n\t * Function: setOpacity\n\t * \n\t * Sets the opacity of the specified DOM node to the given value in %.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to set the opacity for.\n\t * value - Opacity in %. Possible values are between 0 and 100.\n\t */\n\tsetOpacity: function(node, value)\n\t{\n\t\tif (mxUtils.isVml(node))\n\t\t{\n\t    \tif (value >= 100)\n\t    \t{\n\t    \t\tnode.style.filter = '';\n\t    \t}\n\t    \telse\n\t    \t{\n\t    \t\t// TODO: Why is the division by 5 needed in VML?\n\t\t\t    node.style.filter = 'alpha(opacity=' + (value/5) + ')';\n\t    \t}\n\t\t}\n\t\telse if (mxClient.IS_IE && (typeof(document.documentMode) === 'undefined' || document.documentMode < 9))\n\t    {\n\t    \tif (value >= 100)\n\t    \t{\n\t    \t\tnode.style.filter = '';\n\t    \t}\n\t    \telse\n\t    \t{\n\t\t\t    node.style.filter = 'alpha(opacity=' + value + ')';\n\t    \t}\n\t\t}\n\t\telse\n\t\t{\n\t\t    node.style.opacity = (value / 100);\n\t\t}\n\t},\n\n\t/**\n\t * Function: createImage\n\t * \n\t * Creates and returns an image (IMG node) or VML image (v:image) in IE6 in\n\t * quirks mode.\n\t * \n\t * Parameters:\n\t * \n\t * src - URL that points to the image to be displayed.\n\t */\n\tcreateImage: function(src)\n\t{\n        var imageNode = null;\n        \n\t\tif (mxClient.IS_IE6 && document.compatMode != 'CSS1Compat')\n\t\t{\n        \timageNode = document.createElement(mxClient.VML_PREFIX + ':image');\n        \timageNode.setAttribute('src', src);\n        \timageNode.style.borderStyle = 'none';\n        }\n\t\telse\n\t\t{\n\t\t\timageNode = document.createElement('img');\n\t\t\timageNode.setAttribute('src', src);\n\t\t\timageNode.setAttribute('border', '0');\n\t\t}\n\t\t\n\t\treturn imageNode;\n\t},\n\n\t/**\n\t * Function: sortCells\n\t * \n\t * Sorts the given cells according to the order in the cell hierarchy.\n\t * Ascending is optional and defaults to true.\n\t */\n\tsortCells: function(cells, ascending)\n\t{\n\t\tascending = (ascending != null) ? ascending : true;\n\t\tvar lookup = new mxDictionary();\n\t\tcells.sort(function(o1, o2)\n\t\t{\n\t\t\tvar p1 = lookup.get(o1);\n\t\t\t\n\t\t\tif (p1 == null)\n\t\t\t{\n\t\t\t\tp1 = mxCellPath.create(o1).split(mxCellPath.PATH_SEPARATOR);\n\t\t\t\tlookup.put(o1, p1);\n\t\t\t}\n\t\t\t\n\t\t\tvar p2 = lookup.get(o2);\n\t\t\t\n\t\t\tif (p2 == null)\n\t\t\t{\n\t\t\t\tp2 = mxCellPath.create(o2).split(mxCellPath.PATH_SEPARATOR);\n\t\t\t\tlookup.put(o2, p2);\n\t\t\t}\n\t\t\t\n\t\t\tvar comp = mxCellPath.compare(p1, p2);\n\t\t\t\n\t\t\treturn (comp == 0) ? 0 : (((comp > 0) == ascending) ? 1 : -1);\n\t\t});\n\t\t\n\t\treturn cells;\n\t},\n\n\t/**\n\t * Function: getStylename\n\t * \n\t * Returns the stylename in a style of the form [(stylename|key=value);] or\n\t * an empty string if the given style does not contain a stylename.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t */\n\tgetStylename: function(style)\n\t{\n\t\tif (style != null)\n\t\t{\n\t\t\tvar pairs = style.split(';');\n\t\t\tvar stylename = pairs[0];\n\t\t\t\n\t\t\tif (stylename.indexOf('=') < 0)\n\t\t\t{\n\t\t\t\treturn stylename;\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\treturn '';\n\t},\n\n\t/**\n\t * Function: getStylenames\n\t * \n\t * Returns the stylenames in a style of the form [(stylename|key=value);]\n\t * or an empty array if the given style does not contain any stylenames.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t */\n\tgetStylenames: function(style)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvar pairs = style.split(';');\n\t\t\t\n\t\t\tfor (var i = 0; i < pairs.length; i++)\n\t\t\t{\n\t\t\t\tif (pairs[i].indexOf('=') < 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(pairs[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\treturn result;\n\t},\n\n\t/**\n\t * Function: indexOfStylename\n\t * \n\t * Returns the index of the given stylename in the given style. This\n\t * returns -1 if the given stylename does not occur (as a stylename) in the\n\t * given style, otherwise it returns the index of the first character.\n\t */\n\tindexOfStylename: function(style, stylename)\n\t{\n\t\tif (style != null && stylename != null)\n\t\t{\n\t\t\tvar tokens = style.split(';');\n\t\t\tvar pos = 0;\n\t\t\t\n\t\t\tfor (var i = 0; i < tokens.length; i++)\n\t\t\t{\n\t\t\t\tif (tokens[i] == stylename)\n\t\t\t\t{\n\t\t\t\t\treturn pos;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpos += tokens[i].length + 1;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t},\n\t\n\t/**\n\t * Function: addStylename\n\t * \n\t * Adds the specified stylename to the given style if it does not already\n\t * contain the stylename.\n\t */\n\taddStylename: function(style, stylename)\n\t{\n\t\tif (mxUtils.indexOfStylename(style, stylename) < 0)\n\t\t{\n\t\t\tif (style == null)\n\t\t\t{\n\t\t\t\tstyle = '';\n\t\t\t}\n\t\t\telse if (style.length > 0 && style.charAt(style.length - 1) != ';')\n\t\t\t{\n\t\t\t\tstyle += ';';\n\t\t\t}\n\t\t\t\n\t\t\tstyle += stylename;\n\t\t}\n\t\t\n\t\treturn style;\n\t},\n\t\n\t/**\n\t * Function: removeStylename\n\t * \n\t * Removes all occurrences of the specified stylename in the given style\n\t * and returns the updated style. Trailing semicolons are not preserved.\n\t */\n\tremoveStylename: function(style, stylename)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvar tokens = style.split(';');\n\t\t\t\n\t\t\tfor (var i = 0; i < tokens.length; i++)\n\t\t\t{\n\t\t\t\tif (tokens[i] != stylename)\n\t\t\t\t{\n\t\t\t\t\tresult.push(tokens[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join(';');\n\t},\n\t\n\t/**\n\t * Function: removeAllStylenames\n\t * \n\t * Removes all stylenames from the given style and returns the updated\n\t * style.\n\t */\n\tremoveAllStylenames: function(style)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvar tokens = style.split(';');\n\t\t\t\n\t\t\tfor (var i = 0; i < tokens.length; i++)\n\t\t\t{\n\t\t\t\t// Keeps the key, value assignments\n\t\t\t\tif (tokens[i].indexOf('=') >= 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(tokens[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join(';');\n\t},\n\n\t/**\n\t * Function: setCellStyles\n\t * \n\t * Assigns the value for the given key in the styles of the given cells, or\n\t * removes the key from the styles if the value is null.\n\t * \n\t * Parameters:\n\t * \n\t * model - <mxGraphModel> to execute the transaction in.\n\t * cells - Array of <mxCells> to be updated.\n\t * key - Key of the style to be changed.\n\t * value - New value for the given key.\n\t */\n\tsetCellStyles: function(model, cells, key, value)\n\t{\n\t\tif (cells != null && cells.length > 0)\n\t\t{\n\t\t\tmodel.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (cells[i] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar style = mxUtils.setStyle(model.getStyle(cells[i]), key, value);\n\t\t\t\t\t\tmodel.setStyle(cells[i], style);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tmodel.endUpdate();\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: setStyle\n\t * \n\t * Adds or removes the given key, value pair to the style and returns the\n\t * new style. If value is null or zero length then the key is removed from\n\t * the style. This is for cell styles, not for CSS styles.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t * key - Key of the style to be changed.\n\t * value - New value for the given key.\n\t */\n\tsetStyle: function(style, key, value)\n\t{\n\t\tvar isValue = value != null && (typeof(value.length) == 'undefined' || value.length > 0);\n\t\t\n\t\tif (style == null || style.length == 0)\n\t\t{\n\t\t\tif (isValue)\n\t\t\t{\n\t\t\t\tstyle = key + '=' + value + ';';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (style.substring(0, key.length + 1) == key + '=')\n\t\t\t{\n\t\t\t\tvar next = style.indexOf(';');\n\t\t\t\t\n\t\t\t\tif (isValue)\n\t\t\t\t{\n\t\t\t\t\tstyle = key + '=' + value + ((next < 0) ? ';' : style.substring(next));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstyle = (next < 0 || next == style.length - 1) ? '' : style.substring(next + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar index = style.indexOf(';' + key + '=');\n\t\t\t\t\n\t\t\t\tif (index < 0)\n\t\t\t\t{\n\t\t\t\t\tif (isValue)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar sep = (style.charAt(style.length - 1) == ';') ? '' : ';';\n\t\t\t\t\t\tstyle = style + sep + key + '=' + value + ';';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar next = style.indexOf(';', index + 1);\n\t\t\t\t\t\n\t\t\t\t\tif (isValue)\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle = style.substring(0, index + 1) + key + '=' + value + ((next < 0) ? ';' : style.substring(next));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle = style.substring(0, index) + ((next < 0) ? ';' : style.substring(next));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn style;\n\t},\n\n\t/**\n\t * Function: setCellStyleFlags\n\t * \n\t * Sets or toggles the flag bit for the given key in the cell's styles.\n\t * If value is null then the flag is toggled.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var cells = graph.getSelectionCells();\n\t * mxUtils.setCellStyleFlags(graph.model,\n\t * \t\t\tcells,\n\t * \t\t\tmxConstants.STYLE_FONTSTYLE,\n\t * \t\t\tmxConstants.FONT_BOLD);\n\t * (end)\n\t * \n\t * Toggles the bold font style.\n\t * \n\t * Parameters:\n\t * \n\t * model - <mxGraphModel> that contains the cells.\n\t * cells - Array of <mxCells> to change the style for.\n\t * key - Key of the style to be changed.\n\t * flag - Integer for the bit to be changed.\n\t * value - Optional boolean value for the flag.\n\t */\n\tsetCellStyleFlags: function(model, cells, key, flag, value)\n\t{\n\t\tif (cells != null && cells.length > 0)\n\t\t{\n\t\t\tmodel.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (cells[i] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar style = mxUtils.setStyleFlag(\n\t\t\t\t\t\t\tmodel.getStyle(cells[i]),\n\t\t\t\t\t\t\tkey, flag, value);\n\t\t\t\t\t\tmodel.setStyle(cells[i], style);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tmodel.endUpdate();\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: setStyleFlag\n\t * \n\t * Sets or removes the given key from the specified style and returns the\n\t * new style. If value is null then the flag is toggled.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t * key - Key of the style to be changed.\n\t * flag - Integer for the bit to be changed.\n\t * value - Optional boolean value for the given flag.\n\t */\n\tsetStyleFlag: function(style, key, flag, value)\n\t{\n\t\tif (style == null || style.length == 0)\n\t\t{\n\t\t\tif (value || value == null)\n\t\t\t{\n\t\t\t\tstyle = key+'='+flag;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstyle = key+'=0';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar index = style.indexOf(key+'=');\n\t\t\t\n\t\t\tif (index < 0)\n\t\t\t{\n\t\t\t\tvar sep = (style.charAt(style.length-1) == ';') ? '' : ';';\n\n\t\t\t\tif (value || value == null)\n\t\t\t\t{\n\t\t\t\t\tstyle = style + sep + key + '=' + flag;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstyle = style + sep + key + '=0';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar cont = style.indexOf(';', index);\n\t\t\t\tvar tmp = '';\n\t\t\t\t\n\t\t\t\tif (cont < 0)\n\t\t\t\t{\n\t\t\t\t\ttmp  = style.substring(index+key.length+1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmp = style.substring(index+key.length+1, cont);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (value == null)\n\t\t\t\t{\n\t\t\t\t\ttmp = parseInt(tmp) ^ flag;\n\t\t\t\t}\n\t\t\t\telse if (value)\n\t\t\t\t{\n\t\t\t\t\ttmp = parseInt(tmp) | flag;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmp = parseInt(tmp) & ~flag;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstyle = style.substring(0, index) + key + '=' + tmp +\n\t\t\t\t\t((cont >= 0) ? style.substring(cont) : '');\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn style;\n\t},\n\t\n\t/**\n\t * Function: getAlignmentAsPoint\n\t * \n\t * Returns an <mxPoint> that represents the horizontal and vertical alignment\n\t * for numeric computations. X is -0.5 for center, -1 for right and 0 for\n\t * left alignment. Y is -0.5 for middle, -1 for bottom and 0 for top\n\t * alignment. Default values for missing arguments is top, left.\n\t */\n\tgetAlignmentAsPoint: function(align, valign)\n\t{\n\t\tvar dx = -0.5;\n\t\tvar dy = -0.5;\n\t\t\n\t\t// Horizontal alignment\n\t\tif (align == mxConstants.ALIGN_LEFT)\n\t\t{\n\t\t\tdx = 0;\n\t\t}\n\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t{\n\t\t\tdx = -1;\n\t\t}\n\n\t\t// Vertical alignment\n\t\tif (valign == mxConstants.ALIGN_TOP)\n\t\t{\n\t\t\tdy = 0;\n\t\t}\n\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t{\n\t\t\tdy = -1;\n\t\t}\n\t\t\n\t\treturn new mxPoint(dx, dy);\n\t},\n\t\n\t/**\n\t * Function: getSizeForString\n\t * \n\t * Returns an <mxRectangle> with the size (width and height in pixels) of\n\t * the given string. The string may contain HTML markup. Newlines should be\n\t * converted to <br> before calling this method. The caller is responsible\n\t * for sanitizing the HTML markup.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var label = graph.getLabel(cell).replace(/\\n/g, \"<br>\");\n\t * var size = graph.getSizeForString(label);\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * text - String whose size should be returned.\n\t * fontSize - Integer that specifies the font size in pixels. Default is\n\t * <mxConstants.DEFAULT_FONTSIZE>.\n\t * fontFamily - String that specifies the name of the font family. Default\n\t * is <mxConstants.DEFAULT_FONTFAMILY>.\n\t * textWidth - Optional width for text wrapping.\n\t * fontStyle - Optional font style.\n\t */\n\tgetSizeForString: function(text, fontSize, fontFamily, textWidth, fontStyle)\n\t{\n\t\tfontSize = (fontSize != null) ? fontSize : mxConstants.DEFAULT_FONTSIZE;\n\t\tfontFamily = (fontFamily != null) ? fontFamily : mxConstants.DEFAULT_FONTFAMILY;\n\t\tvar div = document.createElement('div');\n\t\t\n\t\t// Sets the font size and family\n\t\tdiv.style.fontFamily = fontFamily;\n\t\tdiv.style.fontSize = Math.round(fontSize) + 'px';\n\t\tdiv.style.lineHeight = Math.round(fontSize * mxConstants.LINE_HEIGHT) + 'px';\n\t\t\n\t\t// Sets the font style\n\t\tif (fontStyle != null)\n\t\t{\n\t\t\tif ((fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t\t\t{\n\t\t\t\tdiv.style.fontWeight = 'bold';\n\t\t\t}\n\t\t\t\n\t\t\tif ((fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t\t\t{\n\t\t\t\tdiv.style.fontStyle = 'italic';\n\t\t\t}\n\t\t\t\n\t\t\tvar txtDecor = [];\n\t\t\t\n\t\t\tif ((fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t\t\t{\n\t\t\t\ttxtDecor.push('underline');\n\t\t\t}\n\t\t\t\n\t\t\tif ((fontStyle & mxConstants.FONT_STRIKETHROUGH) == mxConstants.FONT_STRIKETHROUGH)\n\t\t\t{\n\t\t\t\ttxtDecor.push('line-through');\n\t\t\t}\n\t\t\t\n\t\t\tif (txtDecor.length > 0)\n\t\t\t{\n\t\t\t\tdiv.style.textDecoration = txtDecor.join(' ');\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Disables block layout and outside wrapping and hides the div\n\t\tdiv.style.position = 'absolute';\n\t\tdiv.style.visibility = 'hidden';\n\t\tdiv.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\tdiv.style.zoom = '1';\n\t\t\n\t\tif (textWidth != null)\n\t\t{\n\t\t\tdiv.style.width = textWidth + 'px';\n\t\t\tdiv.style.whiteSpace = 'normal';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t}\n\t\t\n\t\t// Adds the text and inserts into DOM for updating of size\n\t\tdiv.innerHTML = text;\n\t\tdocument.body.appendChild(div);\n\t\t\n\t\t// Gets the size and removes from DOM\n\t\tvar size = new mxRectangle(0, 0, div.offsetWidth, div.offsetHeight);\n\t\tdocument.body.removeChild(div);\n\t\t\n\t\treturn size;\n\t},\n\t\n\t/**\n\t * Function: getViewXml\n\t */\n\tgetViewXml: function(graph, scale, cells, x0, y0)\n\t{\n\t\tx0 = (x0 != null) ? x0 : 0;\n\t\ty0 = (y0 != null) ? y0 : 0;\n\t\tscale = (scale != null) ? scale : 1;\n\n\t\tif (cells == null)\n\t\t{\n\t\t\tvar model = graph.getModel();\n\t\t\tcells = [model.getRoot()];\n\t\t}\n\t\t\n\t\tvar view = graph.getView();\n\t\tvar result = null;\n\n\t\t// Disables events on the view\n\t\tvar eventsEnabled = view.isEventsEnabled();\n\t\tview.setEventsEnabled(false);\n\n\t\t// Workaround for label bounds not taken into account for image export.\n\t\t// Creates a temporary draw pane which is used for rendering the text.\n\t\t// Text rendering is required for finding the bounds of the labels.\n\t\tvar drawPane = view.drawPane;\n\t\tvar overlayPane = view.overlayPane;\n\n\t\tif (graph.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\tview.drawPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\t\t\tview.canvas.appendChild(view.drawPane);\n\n\t\t\t// Redirects cell overlays into temporary container\n\t\t\tview.overlayPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\t\t\tview.canvas.appendChild(view.overlayPane);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tview.drawPane = view.drawPane.cloneNode(false);\n\t\t\tview.canvas.appendChild(view.drawPane);\n\t\t\t\n\t\t\t// Redirects cell overlays into temporary container\n\t\t\tview.overlayPane = view.overlayPane.cloneNode(false);\n\t\t\tview.canvas.appendChild(view.overlayPane);\n\t\t}\n\n\t\t// Resets the translation\n\t\tvar translate = view.getTranslate();\n\t\tview.translate = new mxPoint(x0, y0);\n\n\t\t// Creates the temporary cell states in the view\n\t\tvar temp = new mxTemporaryCellStates(graph.getView(), scale, cells);\n\n\t\ttry\n\t\t{\n\t\t\tvar enc = new mxCodec();\n\t\t\tresult = enc.encode(graph.getView());\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\ttemp.destroy();\n\t\t\tview.translate = translate;\n\t\t\tview.canvas.removeChild(view.drawPane);\n\t\t\tview.canvas.removeChild(view.overlayPane);\n\t\t\tview.drawPane = drawPane;\n\t\t\tview.overlayPane = overlayPane;\n\t\t\tview.setEventsEnabled(eventsEnabled);\n\t\t}\n\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: getScaleForPageCount\n\t * \n\t * Returns the scale to be used for printing the graph with the given\n\t * bounds across the specifies number of pages with the given format. The\n\t * scale is always computed such that it given the given amount or fewer\n\t * pages in the print output. See <mxPrintPreview> for an example.\n\t * \n\t * Parameters:\n\t * \n\t * pageCount - Specifies the number of pages in the print output.\n\t * graph - <mxGraph> that should be printed.\n\t * pageFormat - Optional <mxRectangle> that specifies the page format.\n\t * Default is <mxConstants.PAGE_FORMAT_A4_PORTRAIT>.\n\t * border - The border along each side of every page.\n\t */\n\tgetScaleForPageCount: function(pageCount, graph, pageFormat, border)\n\t{\n\t\tif (pageCount < 1)\n\t\t{\n\t\t\t// We can't work with less than 1 page, return no scale\n\t\t\t// change\n\t\t\treturn 1;\n\t\t}\n\t\t\n\t\tpageFormat = (pageFormat != null) ? pageFormat : mxConstants.PAGE_FORMAT_A4_PORTRAIT;\n\t\tborder = (border != null) ? border : 0;\n\t\t\n\t\tvar availablePageWidth = pageFormat.width - (border * 2);\n\t\tvar availablePageHeight = pageFormat.height - (border * 2);\n\n\t\t// Work out the number of pages required if the\n\t\t// graph is not scaled.\n\t\tvar graphBounds = graph.getGraphBounds().clone();\n\t\tvar sc = graph.getView().getScale();\n\t\tgraphBounds.width /= sc;\n\t\tgraphBounds.height /= sc;\n\t\tvar graphWidth = graphBounds.width;\n\t\tvar graphHeight = graphBounds.height;\n\n\t\tvar scale = 1;\n\t\t\n\t\t// The ratio of the width/height for each printer page\n\t\tvar pageFormatAspectRatio = availablePageWidth / availablePageHeight;\n\t\t// The ratio of the width/height for the graph to be printer\n\t\tvar graphAspectRatio = graphWidth / graphHeight;\n\t\t\n\t\t// The ratio of horizontal pages / vertical pages for this \n\t\t// graph to maintain its aspect ratio on this page format\n\t\tvar pagesAspectRatio = graphAspectRatio / pageFormatAspectRatio;\n\t\t\n\t\t// Factor the square root of the page count up and down \n\t\t// by the pages aspect ratio to obtain a horizontal and \n\t\t// vertical page count that adds up to the page count\n\t\t// and has the correct aspect ratio\n\t\tvar pageRoot = Math.sqrt(pageCount);\n\t\tvar pagesAspectRatioSqrt = Math.sqrt(pagesAspectRatio);\n\t\tvar numRowPages = pageRoot * pagesAspectRatioSqrt;\n\t\tvar numColumnPages = pageRoot / pagesAspectRatioSqrt;\n\n\t\t// These value are rarely more than 2 rounding downs away from\n\t\t// a total that meets the page count. In cases of one being less \n\t\t// than 1 page, the other value can be too high and take more iterations \n\t\t// In this case, just change that value to be the page count, since \n\t\t// we know the other value is 1\n\t\tif (numRowPages < 1 && numColumnPages > pageCount)\n\t\t{\n\t\t\tvar scaleChange = numColumnPages / pageCount;\n\t\t\tnumColumnPages = pageCount;\n\t\t\tnumRowPages /= scaleChange;\n\t\t}\n\t\t\n\t\tif (numColumnPages < 1 && numRowPages > pageCount)\n\t\t{\n\t\t\tvar scaleChange = numRowPages / pageCount;\n\t\t\tnumRowPages = pageCount;\n\t\t\tnumColumnPages /= scaleChange;\n\t\t}\t\t\n\n\t\tvar currentTotalPages = Math.ceil(numRowPages) * Math.ceil(numColumnPages);\n\n\t\tvar numLoops = 0;\n\t\t\n\t\t// Iterate through while the rounded up number of pages comes to\n\t\t// a total greater than the required number\n\t\twhile (currentTotalPages > pageCount)\n\t\t{\n\t\t\t// Round down the page count (rows or columns) that is\n\t\t\t// closest to its next integer down in percentage terms.\n\t\t\t// i.e. Reduce the page total by reducing the total\n\t\t\t// page area by the least possible amount\n\n\t\t\tvar roundRowDownProportion = Math.floor(numRowPages) / numRowPages;\n\t\t\tvar roundColumnDownProportion = Math.floor(numColumnPages) / numColumnPages;\n\t\t\t\n\t\t\t// If the round down proportion is, work out the proportion to\n\t\t\t// round down to 1 page less\n\t\t\tif (roundRowDownProportion == 1)\n\t\t\t{\n\t\t\t\troundRowDownProportion = Math.floor(numRowPages-1) / numRowPages;\n\t\t\t}\n\t\t\tif (roundColumnDownProportion == 1)\n\t\t\t{\n\t\t\t\troundColumnDownProportion = Math.floor(numColumnPages-1) / numColumnPages;\n\t\t\t}\n\t\t\t\n\t\t\t// Check which rounding down is smaller, but in the case of very small roundings\n\t\t\t// try the other dimension instead\n\t\t\tvar scaleChange = 1;\n\t\t\t\n\t\t\t// Use the higher of the two values\n\t\t\tif (roundRowDownProportion > roundColumnDownProportion)\n\t\t\t{\n\t\t\t\tscaleChange = roundRowDownProportion;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tscaleChange = roundColumnDownProportion;\n\t\t\t}\n\n\t\t\tnumRowPages = numRowPages * scaleChange;\n\t\t\tnumColumnPages = numColumnPages * scaleChange;\n\t\t\tcurrentTotalPages = Math.ceil(numRowPages) * Math.ceil(numColumnPages);\n\t\t\t\n\t\t\tnumLoops++;\n\t\t\t\n\t\t\tif (numLoops > 10)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Work out the scale from the number of row pages required\n\t\t// The column pages will give the same value\n\t\tvar posterWidth = availablePageWidth * numRowPages;\n\t\tscale = posterWidth / graphWidth;\n\t\t\n\t\t// Allow for rounding errors\n\t\treturn scale * 0.99999;\n\t},\n\t\n\t/**\n\t * Function: show\n\t * \n\t * Copies the styles and the markup from the graph's container into the\n\t * given document and removes all cursor styles. The document is returned.\n\t * \n\t * This function should be called from within the document with the graph.\n\t * If you experience problems with missing stylesheets in IE then try adding\n\t * the domain to the trusted sites.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> to be copied.\n\t * doc - Document where the new graph is created.\n\t * x0 - X-coordinate of the graph view origin. Default is 0.\n\t * y0 - Y-coordinate of the graph view origin. Default is 0.\n\t * w - Optional width of the graph view.\n\t * h - Optional height of the graph view.\n\t */\n\tshow: function(graph, doc, x0, y0, w, h)\n\t{\n\t\tx0 = (x0 != null) ? x0 : 0;\n\t\ty0 = (y0 != null) ? y0 : 0;\n\t\t\n\t\tif (doc == null)\n\t\t{\n\t\t\tvar wnd = window.open();\n\t\t\tdoc = wnd.document;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdoc.open();\n\t\t}\n\n\t\t// Workaround for missing print output in IE9 standards\n\t\tif (document.documentMode == 9)\n\t\t{\n\t\t\tdoc.writeln('<!--[if IE]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=9\"><![endif]-->');\n\t\t}\n\t\t\n\t\tvar bounds = graph.getGraphBounds();\n\t\tvar dx = Math.ceil(x0 - bounds.x);\n\t\tvar dy = Math.ceil(y0 - bounds.y);\n\t\t\n\t\tif (w == null)\n\t\t{\n\t\t\tw = Math.ceil(bounds.width + x0) + Math.ceil(Math.ceil(bounds.x) - bounds.x);\n\t\t}\n\t\t\n\t\tif (h == null)\n\t\t{\n\t\t\th = Math.ceil(bounds.height + y0) + Math.ceil(Math.ceil(bounds.y) - bounds.y);\n\t\t}\n\t\t\n\t\t// Needs a special way of creating the page so that no click is required\n\t\t// to refresh the contents after the external CSS styles have been loaded.\n\t\t// To avoid a click or programmatic refresh, the styleSheets[].cssText\n\t\t// property is copied over from the original document.\n\t\tif (mxClient.IS_IE || document.documentMode == 11)\n\t\t{\n\t\t\tvar html = '<html><head>';\n\n\t\t\tvar base = document.getElementsByTagName('base');\n\t\t\t\n\t\t\tfor (var i = 0; i < base.length; i++)\n\t\t\t{\n\t\t\t\thtml += base[i].outerHTML;\n\t\t\t}\n\n\t\t\thtml += '<style>';\n\n\t\t\t// Copies the stylesheets without having to load them again\n\t\t\tfor (var i = 0; i < document.styleSheets.length; i++)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\thtml += document.styleSheets[i].cssText;\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\t// ignore security exception\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</style></head><body style=\"margin:0px;\">';\n\t\t\t\n\t\t\t// Copies the contents of the graph container\n\t\t\thtml += '<div style=\"position:absolute;overflow:hidden;width:' + w + 'px;height:' + h + 'px;\"><div style=\"position:relative;left:' + dx + 'px;top:' + dy + 'px;\">';\n\t\t\thtml += graph.container.innerHTML;\n\t\t\thtml += '</div></div></body><html>';\n\n\t\t\tdoc.writeln(html);\n\t\t\tdoc.close();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdoc.writeln('<html><head>');\n\t\t\t\n\t\t\tvar base = document.getElementsByTagName('base');\n\t\t\t\n\t\t\tfor (var i = 0; i < base.length; i++)\n\t\t\t{\n\t\t\t\tdoc.writeln(mxUtils.getOuterHtml(base[i]));\n\t\t\t}\n\t\t\t\n\t\t\tvar links = document.getElementsByTagName('link');\n\t\t\t\n\t\t\tfor (var i = 0; i < links.length; i++)\n\t\t\t{\n\t\t\t\tdoc.writeln(mxUtils.getOuterHtml(links[i]));\n\t\t\t}\n\t\n\t\t\tvar styles = document.getElementsByTagName('style');\n\t\t\t\n\t\t\tfor (var i = 0; i < styles.length; i++)\n\t\t\t{\n\t\t\t\tdoc.writeln(mxUtils.getOuterHtml(styles[i]));\n\t\t\t}\n\n\t\t\tdoc.writeln('</head><body style=\"margin:0px;\"></body></html>');\n\t\t\tdoc.close();\n\n\t\t\tvar outer = doc.createElement('div');\n\t\t\touter.position = 'absolute';\n\t\t\touter.overflow = 'hidden';\n\t\t\touter.style.width = w + 'px';\n\t\t\touter.style.height = h + 'px';\n\n\t\t\t// Required for HTML labels if foreignObjects are disabled\n\t\t\tvar div = doc.createElement('div');\n\t\t\tdiv.style.position = 'absolute';\n\t\t\tdiv.style.left = dx + 'px';\n\t\t\tdiv.style.top = dy + 'px';\n\n\t\t\tvar node = graph.container.firstChild;\n\t\t\tvar svg = null;\n\t\t\t\n\t\t\twhile (node != null)\n\t\t\t{\n\t\t\t\tvar clone = node.cloneNode(true);\n\t\t\t\t\n\t\t\t\tif (node == graph.view.drawPane.ownerSVGElement)\n\t\t\t\t{\n\t\t\t\t\touter.appendChild(clone);\n\t\t\t\t\tsvg = clone;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdiv.appendChild(clone);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnode = node.nextSibling;\n\t\t\t}\n\n\t\t\tdoc.body.appendChild(outer);\n\t\t\t\n\t\t\tif (div.firstChild != null)\n\t\t\t{\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t}\n\t\t\t\t\t\t\n\t\t\tif (svg != null)\n\t\t\t{\n\t\t\t\tsvg.style.minWidth = '';\n\t\t\t\tsvg.style.minHeight = '';\n\t\t\t\tsvg.firstChild.setAttribute('transform', 'translate(' + dx + ',' + dy + ')');\n\t\t\t}\n\t\t}\n\t\t\n\t\tmxUtils.removeCursors(doc.body);\n\t\n\t\treturn doc;\n\t},\n\t\n\t/**\n\t * Function: printScreen\n\t * \n\t * Prints the specified graph using a new window and the built-in print\n\t * dialog.\n\t * \n\t * This function should be called from within the document with the graph.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> to be printed.\n\t */\n\tprintScreen: function(graph)\n\t{\n\t\tvar wnd = window.open();\n\t\tvar bounds = graph.getGraphBounds();\n\t\tmxUtils.show(graph, wnd.document);\n\t\t\n\t\tvar print = function()\n\t\t{\n\t\t\twnd.focus();\n\t\t\twnd.print();\n\t\t\twnd.close();\n\t\t};\n\t\t\n\t\t// Workaround for Google Chrome which needs a bit of a\n\t\t// delay in order to render the SVG contents\n\t\tif (mxClient.IS_GC)\n\t\t{\n\t\t\twnd.setTimeout(print, 500);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint();\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: popup\n\t * \n\t * Shows the specified text content in a new <mxWindow> or a new browser\n\t * window if isInternalWindow is false.\n\t * \n\t * Parameters:\n\t * \n\t * content - String that specifies the text to be displayed.\n\t * isInternalWindow - Optional boolean indicating if an mxWindow should be\n\t * used instead of a new browser window. Default is false.\n\t */\n\tpopup: function(content, isInternalWindow)\n\t{\n\t   \tif (isInternalWindow)\n\t   \t{\n\t\t\tvar div = document.createElement('div');\n\t\t\t\n\t\t\tdiv.style.overflow = 'scroll';\n\t\t\tdiv.style.width = '636px';\n\t\t\tdiv.style.height = '460px';\n\t\t\t\n\t\t\tvar pre = document.createElement('pre');\n\t\t    pre.innerHTML = mxUtils.htmlEntities(content, false).\n\t\t    \treplace(/\\n/g,'<br>').replace(/ /g, '&nbsp;');\n\t\t\t\n\t\t\tdiv.appendChild(pre);\n\t\t\t\n\t\t\tvar w = document.body.clientWidth;\n\t\t\tvar h = Math.max(document.body.clientHeight || 0, document.documentElement.clientHeight)\n\t\t\tvar wnd = new mxWindow('Popup Window', div,\n\t\t\t\tw/2-320, h/2-240, 640, 480, false, true);\n\n\t\t\twnd.setClosable(true);\n\t\t\twnd.setVisible(true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Wraps up the XML content in a textarea\n\t\t\tif (mxClient.IS_NS)\n\t\t\t{\n\t\t\t    var wnd = window.open();\n\t\t\t\twnd.document.writeln('<pre>'+mxUtils.htmlEntities(content)+'</pre');\n\t\t\t   \twnd.document.close();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t    var wnd = window.open();\n\t\t\t    var pre = wnd.document.createElement('pre');\n\t\t\t    pre.innerHTML = mxUtils.htmlEntities(content, false).\n\t\t\t    \treplace(/\\n/g,'<br>').replace(/ /g, '&nbsp;');\n\t\t\t   \twnd.document.body.appendChild(pre);\n\t\t\t}\n\t   \t}\n\t},\n\t\n\t/**\n\t * Function: alert\n\t * \n\t * Displayss the given alert in a new dialog. This implementation uses the\n\t * built-in alert function. This is used to display validation errors when\n\t * connections cannot be changed or created.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t */\n\talert: function(message)\n\t{\n\t\talert(message);\n\t},\n\t\n\t/**\n\t * Function: prompt\n\t * \n\t * Displays the given message in a prompt dialog. This implementation uses\n\t * the built-in prompt function.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t * defaultValue - Optional string specifying the default value.\n\t */\n\tprompt: function(message, defaultValue)\n\t{\n\t\treturn prompt(message, (defaultValue != null) ? defaultValue : '');\n\t},\n\t\n\t/**\n\t * Function: confirm\n\t * \n\t * Displays the given message in a confirm dialog. This implementation uses\n\t * the built-in confirm function.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t */\n\tconfirm: function(message)\n\t{\n\t\treturn confirm(message);\n\t},\n\n\t/**\n\t * Function: error\n\t * \n\t * Displays the given error message in a new <mxWindow> of the given width.\n\t * If close is true then an additional close button is added to the window.\n\t * The optional icon specifies the icon to be used for the window. Default\n\t * is <mxUtils.errorImage>.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t * width - Integer specifying the width of the window.\n\t * close - Optional boolean indicating whether to add a close button.\n\t * icon - Optional icon for the window decoration.\n\t */\n\terror: function(message, width, close, icon)\n\t{\n\t\tvar div = document.createElement('div');\n\t\tdiv.style.padding = '20px';\n\n\t\tvar img = document.createElement('img');\n\t\timg.setAttribute('src', icon || mxUtils.errorImage);\n\t\timg.setAttribute('valign', 'bottom');\n\t\timg.style.verticalAlign = 'middle';\n\t\tdiv.appendChild(img);\n\n\t\tdiv.appendChild(document.createTextNode('\\u00a0')); // &nbsp;\n\t\tdiv.appendChild(document.createTextNode('\\u00a0')); // &nbsp;\n\t\tdiv.appendChild(document.createTextNode('\\u00a0')); // &nbsp;\n\t\tmxUtils.write(div, message);\n\n\t\tvar w = document.body.clientWidth;\n\t\tvar h = (document.body.clientHeight || document.documentElement.clientHeight);\n\t\tvar warn = new mxWindow(mxResources.get(mxUtils.errorResource) ||\n\t\t\tmxUtils.errorResource, div, (w-width)/2, h/4, width, null,\n\t\t\tfalse, true);\n\n\t\tif (close)\n\t\t{\n\t\t\tmxUtils.br(div);\n\t\t\t\n\t\t\tvar tmp = document.createElement('p');\n\t\t\tvar button = document.createElement('button');\n\n\t\t\tif (mxClient.IS_IE)\n\t\t\t{\n\t\t\t\tbutton.style.cssText = 'float:right';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbutton.setAttribute('style', 'float:right');\n\t\t\t}\n\n\t\t\tmxEvent.addListener(button, 'click', function(evt)\n\t\t\t{\n\t\t\t\twarn.destroy();\n\t\t\t});\n\n\t\t\tmxUtils.write(button, mxResources.get(mxUtils.closeResource) ||\n\t\t\t\tmxUtils.closeResource);\n\t\t\t\n\t\t\ttmp.appendChild(button);\n\t\t\tdiv.appendChild(tmp);\n\t\t\t\n\t\t\tmxUtils.br(div);\n\t\t\t\n\t\t\twarn.setClosable(true);\n\t\t}\n\t\t\n\t\twarn.setVisible(true);\n\t\t\n\t\treturn warn;\n\t},\n\n\t/**\n\t * Function: makeDraggable\n\t * \n\t * Configures the given DOM element to act as a drag source for the\n\t * specified graph. Returns a a new <mxDragSource>. If\n\t * <mxDragSource.guideEnabled> is enabled then the x and y arguments must\n\t * be used in funct to match the preview location.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var funct = function(graph, evt, cell, x, y)\n\t * {\n\t *   if (graph.canImportCell(cell))\n\t *   {\n\t *     var parent = graph.getDefaultParent();\n\t *     var vertex = null;\n\t *     \n\t *     graph.getModel().beginUpdate();\n\t *     try\n\t *     {\n\t * \t     vertex = graph.insertVertex(parent, null, 'Hello', x, y, 80, 30);\n\t *     }\n\t *     finally\n\t *     {\n\t *       graph.getModel().endUpdate();\n\t *     }\n\t *\n\t *     graph.setSelectionCell(vertex);\n\t *   }\n\t * }\n\t * \n\t * var img = document.createElement('img');\n\t * img.setAttribute('src', 'editors/images/rectangle.gif');\n\t * img.style.position = 'absolute';\n\t * img.style.left = '0px';\n\t * img.style.top = '0px';\n\t * img.style.width = '16px';\n\t * img.style.height = '16px';\n\t * \n\t * var dragImage = img.cloneNode(true);\n\t * dragImage.style.width = '32px';\n\t * dragImage.style.height = '32px';\n\t * mxUtils.makeDraggable(img, graph, funct, dragImage);\n\t * document.body.appendChild(img);\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM element to make draggable.\n\t * graphF - <mxGraph> that acts as the drop target or a function that takes a\n\t * mouse event and returns the current <mxGraph>.\n\t * funct - Function to execute on a successful drop.\n\t * dragElement - Optional DOM node to be used for the drag preview.\n\t * dx - Optional horizontal offset between the cursor and the drag\n\t * preview.\n\t * dy - Optional vertical offset between the cursor and the drag\n\t * preview.\n\t * autoscroll - Optional boolean that specifies if autoscroll should be\n\t * used. Default is mxGraph.autoscroll.\n\t * scalePreview - Optional boolean that specifies if the preview element\n\t * should be scaled according to the graph scale. If this is true, then\n\t * the offsets will also be scaled. Default is false.\n\t * highlightDropTargets - Optional boolean that specifies if dropTargets\n\t * should be highlighted. Default is true.\n\t * getDropTarget - Optional function to return the drop target for a given\n\t * location (x, y). Default is mxGraph.getCellAt.\n\t */\n\tmakeDraggable: function(element, graphF, funct, dragElement, dx, dy, autoscroll,\n\t\t\tscalePreview, highlightDropTargets, getDropTarget)\n\t{\n\t\tvar dragSource = new mxDragSource(element, funct);\n\t\tdragSource.dragOffset = new mxPoint((dx != null) ? dx : 0,\n\t\t\t(dy != null) ? dy : mxConstants.TOOLTIP_VERTICAL_OFFSET);\n\t\tdragSource.autoscroll = autoscroll;\n\t\t\n\t\t// Cannot enable this by default. This needs to be enabled in the caller\n\t\t// if the funct argument uses the new x- and y-arguments.\n\t\tdragSource.setGuidesEnabled(false);\n\t\t\n\t\tif (highlightDropTargets != null)\n\t\t{\n\t\t\tdragSource.highlightDropTargets = highlightDropTargets;\n\t\t}\n\t\t\n\t\t// Overrides function to find drop target cell\n\t\tif (getDropTarget != null)\n\t\t{\n\t\t\tdragSource.getDropTarget = getDropTarget;\n\t\t}\n\t\t\n\t\t// Overrides function to get current graph\n\t\tdragSource.getGraphForEvent = function(evt)\n\t\t{\n\t\t\treturn (typeof(graphF) == 'function') ? graphF(evt) : graphF;\n\t\t};\n\t\t\n\t\t// Translates switches into dragSource customizations\n\t\tif (dragElement != null)\n\t\t{\n\t\t\tdragSource.createDragElement = function()\n\t\t\t{\n\t\t\t\treturn dragElement.cloneNode(true);\n\t\t\t};\n\t\t\t\n\t\t\tif (scalePreview)\n\t\t\t{\n\t\t\t\tdragSource.createPreviewElement = function(graph)\n\t\t\t\t{\n\t\t\t\t\tvar elt = dragElement.cloneNode(true);\n\n\t\t\t\t\tvar w = parseInt(elt.style.width);\n\t\t\t\t\tvar h = parseInt(elt.style.height);\n\t\t\t\t\telt.style.width = Math.round(w * graph.view.scale) + 'px';\n\t\t\t\t\telt.style.height = Math.round(h * graph.view.scale) + 'px';\n\t\t\t\t\t\n\t\t\t\t\treturn elt;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn dragSource;\n\t}\n\n};\n\n__mxOutput.mxUtils = typeof mxUtils !== 'undefined' ? mxUtils : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n var mxConstants =\n {\n\t/**\n\t * Class: mxConstants\n\t * \n\t * Defines various global constants.\n\t * \n\t * Variable: DEFAULT_HOTSPOT\n\t * \n\t * Defines the portion of the cell which is to be used as a connectable\n\t * region. Default is 0.3. Possible values are 0 < x <= 1. \n\t */\n\tDEFAULT_HOTSPOT: 0.3,\n\n\t/**\n\t * Variable: MIN_HOTSPOT_SIZE\n\t * \n\t * Defines the minimum size in pixels of the portion of the cell which is\n\t * to be used as a connectable region. Default is 8.\n\t */\n\tMIN_HOTSPOT_SIZE: 8,\n\n\t/**\n\t * Variable: MAX_HOTSPOT_SIZE\n\t * \n\t * Defines the maximum size in pixels of the portion of the cell which is\n\t * to be used as a connectable region. Use 0 for no maximum. Default is 0.\n\t */\n\tMAX_HOTSPOT_SIZE: 0,\n\n\t/**\n\t * Variable: RENDERING_HINT_EXACT\n\t * \n\t * Defines the exact rendering hint.\n\t */\n\tRENDERING_HINT_EXACT: 'exact',\n\n\t/**\n\t * Variable: RENDERING_HINT_FASTER\n\t * \n\t * Defines the faster rendering hint.\n\t */\n\tRENDERING_HINT_FASTER: 'faster',\n\n\t/**\n\t * Variable: RENDERING_HINT_FASTEST\n\t * \n\t * Defines the fastest rendering hint.\n\t */\n\tRENDERING_HINT_FASTEST: 'fastest',\n\n\t/**\n\t * Variable: DIALECT_SVG\n\t * \n\t * Defines the SVG display dialect name.\n\t */\n\tDIALECT_SVG: 'svg',\n\n\t/**\n\t * Variable: DIALECT_VML\n\t * \n\t * Defines the VML display dialect name.\n\t */\n\tDIALECT_VML: 'vml',\n\n\t/**\n\t * Variable: DIALECT_MIXEDHTML\n\t * \n\t * Defines the mixed HTML display dialect name.\n\t */\n\tDIALECT_MIXEDHTML: 'mixedHtml',\n\n\t/**\n\t * Variable: DIALECT_PREFERHTML\n\t * \n\t * Defines the preferred HTML display dialect name.\n\t */\n\tDIALECT_PREFERHTML: 'preferHtml',\n\n\t/**\n\t * Variable: DIALECT_STRICTHTML\n\t * \n\t * Defines the strict HTML display dialect.\n\t */\n\tDIALECT_STRICTHTML: 'strictHtml',\n\n\t/**\n\t * Variable: NS_SVG\n\t * \n\t * Defines the SVG namespace.\n\t */\n\tNS_SVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * Variable: NS_XHTML\n\t * \n\t * Defines the XHTML namespace.\n\t */\n\tNS_XHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Variable: NS_XLINK\n\t * \n\t * Defines the XLink namespace.\n\t */\n\tNS_XLINK: 'http://www.w3.org/1999/xlink',\n\n\t/**\n\t * Variable: SHADOWCOLOR\n\t * \n\t * Defines the color to be used to draw shadows in shapes and windows.\n\t * Default is gray.\n\t */\n\tSHADOWCOLOR: 'gray',\n\n\t/**\n\t * Variable: VML_SHADOWCOLOR\n\t * \n\t * Used for shadow color in filters where transparency is not supported\n\t * (Microsoft Internet Explorer). Default is gray.\n\t */\n\tVML_SHADOWCOLOR: 'gray',\n\n\t/**\n\t * Variable: SHADOW_OFFSET_X\n\t * \n\t * Specifies the x-offset of the shadow. Default is 2.\n\t */\n\tSHADOW_OFFSET_X: 2,\n\n\t/**\n\t * Variable: SHADOW_OFFSET_Y\n\t * \n\t * Specifies the y-offset of the shadow. Default is 3.\n\t */\n\tSHADOW_OFFSET_Y: 3,\n\t\n\t/**\n\t * Variable: SHADOW_OPACITY\n\t * \n\t * Defines the opacity for shadows. Default is 1.\n\t */\n\tSHADOW_OPACITY: 1,\n \n\t/**\n\t * Variable: NODETYPE_ELEMENT\n\t * \n\t * DOM node of type ELEMENT.\n\t */\n\tNODETYPE_ELEMENT: 1,\n\n\t/**\n\t * Variable: NODETYPE_ATTRIBUTE\n\t * \n\t * DOM node of type ATTRIBUTE.\n\t */\n\tNODETYPE_ATTRIBUTE: 2,\n\n\t/**\n\t * Variable: NODETYPE_TEXT\n\t * \n\t * DOM node of type TEXT.\n\t */\n\tNODETYPE_TEXT: 3,\n\n\t/**\n\t * Variable: NODETYPE_CDATA\n\t * \n\t * DOM node of type CDATA.\n\t */\n\tNODETYPE_CDATA: 4,\n\t\n\t/**\n\t * Variable: NODETYPE_ENTITY_REFERENCE\n\t * \n\t * DOM node of type ENTITY_REFERENCE.\n\t */\n\tNODETYPE_ENTITY_REFERENCE: 5,\n\n\t/**\n\t * Variable: NODETYPE_ENTITY\n\t * \n\t * DOM node of type ENTITY.\n\t */\n\tNODETYPE_ENTITY: 6,\n\n\t/**\n\t * Variable: NODETYPE_PROCESSING_INSTRUCTION\n\t * \n\t * DOM node of type PROCESSING_INSTRUCTION.\n\t */\n\tNODETYPE_PROCESSING_INSTRUCTION: 7,\n\n\t/**\n\t * Variable: NODETYPE_COMMENT\n\t * \n\t * DOM node of type COMMENT.\n\t */\n\tNODETYPE_COMMENT: 8,\n\t\t\n\t/**\n\t * Variable: NODETYPE_DOCUMENT\n\t * \n\t * DOM node of type DOCUMENT.\n\t */\n\tNODETYPE_DOCUMENT: 9,\n\n\t/**\n\t * Variable: NODETYPE_DOCUMENTTYPE\n\t * \n\t * DOM node of type DOCUMENTTYPE.\n\t */\n\tNODETYPE_DOCUMENTTYPE: 10,\n\n\t/**\n\t * Variable: NODETYPE_DOCUMENT_FRAGMENT\n\t * \n\t * DOM node of type DOCUMENT_FRAGMENT.\n\t */\n\tNODETYPE_DOCUMENT_FRAGMENT: 11,\n\n\t/**\n\t * Variable: NODETYPE_NOTATION\n\t * \n\t * DOM node of type NOTATION.\n\t */\n\tNODETYPE_NOTATION: 12,\n\t\n\t/**\n\t * Variable: TOOLTIP_VERTICAL_OFFSET\n\t * \n\t * Defines the vertical offset for the tooltip.\n\t * Default is 16.\n\t */\n\tTOOLTIP_VERTICAL_OFFSET: 16,\n\n\t/**\n\t * Variable: DEFAULT_VALID_COLOR\n\t * \n\t * Specifies the default valid color. Default is #0000FF.\n\t */\n\tDEFAULT_VALID_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: DEFAULT_INVALID_COLOR\n\t * \n\t * Specifies the default invalid color. Default is #FF0000.\n\t */\n\tDEFAULT_INVALID_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: OUTLINE_HIGHLIGHT_COLOR\n\t * \n\t * Specifies the default highlight color for shape outlines.\n\t * Default is #0000FF. This is used in <mxEdgeHandler>.\n\t */\n\tOUTLINE_HIGHLIGHT_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: OUTLINE_HIGHLIGHT_COLOR\n\t * \n\t * Defines the strokewidth to be used for shape outlines.\n\t * Default is 5. This is used in <mxEdgeHandler>.\n\t */\n\tOUTLINE_HIGHLIGHT_STROKEWIDTH: 5,\n\n\t/**\n\t * Variable: HIGHLIGHT_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for the highlights.\n\t * Default is 3.\n\t */\n\tHIGHLIGHT_STROKEWIDTH: 3,\n\n\t/**\n\t * Variable: CONSTRAINT_HIGHLIGHT_SIZE\n\t * \n\t * Size of the constraint highlight (in px). Default is 2.\n\t */\n\tHIGHLIGHT_SIZE: 2,\n\t\n\t/**\n\t * Variable: HIGHLIGHT_OPACITY\n\t * \n\t * Opacity (in %) used for the highlights (including outline).\n\t * Default is 100.\n\t */\n\tHIGHLIGHT_OPACITY: 100,\n\t\n\t/**\n\t * Variable: CURSOR_MOVABLE_VERTEX\n\t * \n\t * Defines the cursor for a movable vertex. Default is 'move'.\n\t */\n\tCURSOR_MOVABLE_VERTEX: 'move',\n\t\n\t/**\n\t * Variable: CURSOR_MOVABLE_EDGE\n\t * \n\t * Defines the cursor for a movable edge. Default is 'move'.\n\t */\n\tCURSOR_MOVABLE_EDGE: 'move',\n\t\n\t/**\n\t * Variable: CURSOR_LABEL_HANDLE\n\t * \n\t * Defines the cursor for a movable label. Default is 'default'.\n\t */\n\tCURSOR_LABEL_HANDLE: 'default',\n\t\n\t/**\n\t * Variable: CURSOR_TERMINAL_HANDLE\n\t * \n\t * Defines the cursor for a terminal handle. Default is 'pointer'.\n\t */\n\tCURSOR_TERMINAL_HANDLE: 'pointer',\n\t\n\t/**\n\t * Variable: CURSOR_BEND_HANDLE\n\t * \n\t * Defines the cursor for a movable bend. Default is 'crosshair'.\n\t */\n\tCURSOR_BEND_HANDLE: 'crosshair',\n\n\t/**\n\t * Variable: CURSOR_VIRTUAL_BEND_HANDLE\n\t * \n\t * Defines the cursor for a movable bend. Default is 'crosshair'.\n\t */\n\tCURSOR_VIRTUAL_BEND_HANDLE: 'crosshair',\n\t\n\t/**\n\t * Variable: CURSOR_CONNECT\n\t * \n\t * Defines the cursor for a connectable state. Default is 'pointer'.\n\t */\n\tCURSOR_CONNECT: 'pointer',\n\n\t/**\n\t * Variable: HIGHLIGHT_COLOR\n\t * \n\t * Defines the color to be used for the cell highlighting.\n\t * Use 'none' for no color. Default is #00FF00.\n\t */\n\tHIGHLIGHT_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: TARGET_HIGHLIGHT_COLOR\n\t * \n\t * Defines the color to be used for highlighting a target cell for a new\n\t * or changed connection. Note that this may be either a source or\n\t * target terminal in the graph. Use 'none' for no color.\n\t * Default is #0000FF.\n\t */\n\tCONNECT_TARGET_COLOR: '#0000FF',\n\n\t/**\n\t * Variable: INVALID_CONNECT_TARGET_COLOR\n\t * \n\t * Defines the color to be used for highlighting a invalid target cells\n\t * for a new or changed connections. Note that this may be either a source\n\t * or target terminal in the graph. Use 'none' for no color. Default is\n\t * #FF0000.\n\t */\n\tINVALID_CONNECT_TARGET_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: DROP_TARGET_COLOR\n\t * \n\t * Defines the color to be used for the highlighting target parent cells\n\t * (for drag and drop). Use 'none' for no color. Default is #0000FF.\n\t */\n\tDROP_TARGET_COLOR: '#0000FF',\n\n\t/**\n\t * Variable: VALID_COLOR\n\t * \n\t * Defines the color to be used for the coloring valid connection\n\t * previews. Use 'none' for no color. Default is #FF0000.\n\t */\n\tVALID_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: INVALID_COLOR\n\t * \n\t * Defines the color to be used for the coloring invalid connection\n\t * previews. Use 'none' for no color. Default is #FF0000.\n\t */\n\tINVALID_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: EDGE_SELECTION_COLOR\n\t * \n\t * Defines the color to be used for the selection border of edges. Use\n\t * 'none' for no color. Default is #00FF00.\n\t */\n\tEDGE_SELECTION_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: VERTEX_SELECTION_COLOR\n\t * \n\t * Defines the color to be used for the selection border of vertices. Use\n\t * 'none' for no color. Default is #00FF00.\n\t */\n\tVERTEX_SELECTION_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: VERTEX_SELECTION_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for vertex selections.\n\t * Default is 1.\n\t */\n\tVERTEX_SELECTION_STROKEWIDTH: 1,\n\n\t/**\n\t * Variable: EDGE_SELECTION_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for edge selections.\n\t * Default is 1.\n\t */\n\tEDGE_SELECTION_STROKEWIDTH: 1,\n\n\t/**\n\t * Variable: SELECTION_DASHED\n\t * \n\t * Defines the dashed state to be used for the vertex selection\n\t * border. Default is true.\n\t */\n\tVERTEX_SELECTION_DASHED: true,\n\n\t/**\n\t * Variable: SELECTION_DASHED\n\t * \n\t * Defines the dashed state to be used for the edge selection\n\t * border. Default is true.\n\t */\n\tEDGE_SELECTION_DASHED: true,\n\n\t/**\n\t * Variable: GUIDE_COLOR\n\t * \n\t * Defines the color to be used for the guidelines in mxGraphHandler.\n\t * Default is #FF0000.\n\t */\n\tGUIDE_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: GUIDE_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for the guidelines in mxGraphHandler.\n\t * Default is 1.\n\t */\n\tGUIDE_STROKEWIDTH: 1,\n\n\t/**\n\t * Variable: OUTLINE_COLOR\n\t * \n\t * Defines the color to be used for the outline rectangle\n\t * border.  Use 'none' for no color. Default is #0099FF.\n\t */\n\tOUTLINE_COLOR: '#0099FF',\n\n\t/**\n\t * Variable: OUTLINE_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for the outline rectangle\n\t * stroke width. Default is 3.\n\t */\n\tOUTLINE_STROKEWIDTH: (mxClient.IS_IE) ? 2 : 3,\n\n\t/**\n\t * Variable: HANDLE_SIZE\n\t * \n\t * Defines the default size for handles. Default is 6.\n\t */\n\tHANDLE_SIZE: 6,\n\n\t/**\n\t * Variable: LABEL_HANDLE_SIZE\n\t * \n\t * Defines the default size for label handles. Default is 4.\n\t */\n\tLABEL_HANDLE_SIZE: 4,\n\n\t/**\n\t * Variable: HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the handle fill color. Use 'none' for\n\t * no color. Default is #00FF00 (green).\n\t */\n\tHANDLE_FILLCOLOR: '#00FF00',\n\n\t/**\n\t * Variable: HANDLE_STROKECOLOR\n\t * \n\t * Defines the color to be used for the handle stroke color. Use 'none' for\n\t * no color. Default is black.\n\t */\n\tHANDLE_STROKECOLOR: 'black',\n\n\t/**\n\t * Variable: LABEL_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the label handle fill color. Use 'none'\n\t * for no color. Default is yellow.\n\t */\n\tLABEL_HANDLE_FILLCOLOR: 'yellow',\n\n\t/**\n\t * Variable: CONNECT_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the connect handle fill color. Use\n\t * 'none' for no color. Default is #0000FF (blue).\n\t */\n\tCONNECT_HANDLE_FILLCOLOR: '#0000FF',\n\n\t/**\n\t * Variable: LOCKED_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the locked handle fill color. Use\n\t * 'none' for no color. Default is #FF0000 (red).\n\t */\n\tLOCKED_HANDLE_FILLCOLOR: '#FF0000',\n\n\t/**\n\t * Variable: OUTLINE_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the outline sizer fill color. Use\n\t * 'none' for no color. Default is #00FFFF.\n\t */\n\tOUTLINE_HANDLE_FILLCOLOR: '#00FFFF',\n\n\t/**\n\t * Variable: OUTLINE_HANDLE_STROKECOLOR\n\t * \n\t * Defines the color to be used for the outline sizer stroke color. Use\n\t * 'none' for no color. Default is #0033FF.\n\t */\n\tOUTLINE_HANDLE_STROKECOLOR: '#0033FF',\n\n\t/**\n\t * Variable: DEFAULT_FONTFAMILY\n\t * \n\t * Defines the default family for all fonts. Default is Arial,Helvetica.\n\t */\n\tDEFAULT_FONTFAMILY: 'Arial,Helvetica',\n\n\t/**\n\t * Variable: DEFAULT_FONTSIZE\n\t * \n\t * Defines the default size (in px). Default is 11.\n\t */\n\tDEFAULT_FONTSIZE: 11,\n\n\t/**\n\t * Variable: DEFAULT_TEXT_DIRECTION\n\t * \n\t * Defines the default value for the <STYLE_TEXT_DIRECTION> if no value is\n\t * defined for it in the style. Default value is an empty string which means\n\t * the default system setting is used and no direction is set.\n\t */\n\tDEFAULT_TEXT_DIRECTION: '',\n\n\t/**\n\t * Variable: LINE_HEIGHT\n\t * \n\t * Defines the default line height for text labels. Default is 1.2.\n\t */\n\tLINE_HEIGHT: 1.2,\n\n\t/**\n\t * Variable: WORD_WRAP\n\t * \n\t * Defines the CSS value for the word-wrap property. Default is \"normal\".\n\t * Change this to \"break-word\" to allow long words to be able to be broken\n\t * and wrap onto the next line.\n\t */\n\tWORD_WRAP: 'normal',\n\n\t/**\n\t * Variable: ABSOLUTE_LINE_HEIGHT\n\t * \n\t * Specifies if absolute line heights should be used (px) in CSS. Default\n\t * is false. Set this to true for backwards compatibility.\n\t */\n\tABSOLUTE_LINE_HEIGHT: false,\n\n\t/**\n\t * Variable: DEFAULT_FONTSTYLE\n\t * \n\t * Defines the default style for all fonts. Default is 0. This can be set\n\t * to any combination of font styles as follows.\n\t * \n\t * (code)\n\t * mxConstants.DEFAULT_FONTSTYLE = mxConstants.FONT_BOLD | mxConstants.FONT_ITALIC;\n\t * (end)\n\t */\n\tDEFAULT_FONTSTYLE: 0,\n\n\t/**\n\t * Variable: DEFAULT_STARTSIZE\n\t * \n\t * Defines the default start size for swimlanes. Default is 40.\n\t */\n\tDEFAULT_STARTSIZE: 40,\n\n\t/**\n\t * Variable: DEFAULT_MARKERSIZE\n\t * \n\t * Defines the default size for all markers. Default is 6.\n\t */\n\tDEFAULT_MARKERSIZE: 6,\n\n\t/**\n\t * Variable: DEFAULT_IMAGESIZE\n\t * \n\t * Defines the default width and height for images used in the\n\t * label shape. Default is 24.\n\t */\n\tDEFAULT_IMAGESIZE: 24,\n\n\t/**\n\t * Variable: ENTITY_SEGMENT\n\t * \n\t * Defines the length of the horizontal segment of an Entity Relation.\n\t * This can be overridden using <mxConstants.STYLE_SEGMENT> style.\n\t * Default is 30.\n\t */\n\tENTITY_SEGMENT: 30,\n\n\t/**\n\t * Variable: RECTANGLE_ROUNDING_FACTOR\n\t * \n\t * Defines the rounding factor for rounded rectangles in percent between\n\t * 0 and 1. Values should be smaller than 0.5. Default is 0.15.\n\t */\n\tRECTANGLE_ROUNDING_FACTOR: 0.15,\n\n\t/**\n\t * Variable: LINE_ARCSIZE\n\t * \n\t * Defines the size of the arcs for rounded edges. Default is 20.\n\t */\n\tLINE_ARCSIZE: 20,\n\n\t/**\n\t * Variable: ARROW_SPACING\n\t * \n\t * Defines the spacing between the arrow shape and its terminals. Default is 0.\n\t */\n\tARROW_SPACING: 0,\n\n\t/**\n\t * Variable: ARROW_WIDTH\n\t * \n\t * Defines the width of the arrow shape. Default is 30.\n\t */\n\tARROW_WIDTH: 30,\n\n\t/**\n\t * Variable: ARROW_SIZE\n\t * \n\t * Defines the size of the arrowhead in the arrow shape. Default is 30.\n\t */\n\tARROW_SIZE: 30,\n\n\t/**\n\t * Variable: PAGE_FORMAT_A4_PORTRAIT\n\t * \n\t * Defines the rectangle for the A4 portrait page format. The dimensions\n\t * of this page format are 826x1169 pixels.\n\t */\n\tPAGE_FORMAT_A4_PORTRAIT: new mxRectangle(0, 0, 827, 1169),\n\n\t/**\n\t * Variable: PAGE_FORMAT_A4_PORTRAIT\n\t * \n\t * Defines the rectangle for the A4 portrait page format. The dimensions\n\t * of this page format are 826x1169 pixels.\n\t */\n\tPAGE_FORMAT_A4_LANDSCAPE: new mxRectangle(0, 0, 1169, 827),\n\n\t/**\n\t * Variable: PAGE_FORMAT_LETTER_PORTRAIT\n\t * \n\t * Defines the rectangle for the Letter portrait page format. The\n\t * dimensions of this page format are 850x1100 pixels.\n\t */\n\tPAGE_FORMAT_LETTER_PORTRAIT: new mxRectangle(0, 0, 850, 1100),\n\n\t/**\n\t * Variable: PAGE_FORMAT_LETTER_PORTRAIT\n\t * \n\t * Defines the rectangle for the Letter portrait page format. The dimensions\n\t * of this page format are 850x1100 pixels.\n\t */\n\tPAGE_FORMAT_LETTER_LANDSCAPE: new mxRectangle(0, 0, 1100, 850),\n\n\t/**\n\t * Variable: NONE\n\t * \n\t * Defines the value for none. Default is \"none\".\n\t */\n\tNONE: 'none',\n\n\t/**\n\t * Variable: STYLE_PERIMETER\n\t * \n\t * Defines the key for the perimeter style. This is a function that defines\n\t * the perimeter around a particular shape. Possible values are the\n\t * functions defined in <mxPerimeter>. Alternatively, the constants in this\n\t * class that start with \"PERIMETER_\" may be used to access\n\t * perimeter styles in <mxStyleRegistry>. Value is \"perimeter\".\n\t */\n\tSTYLE_PERIMETER: 'perimeter',\n\t\n\t/**\n\t * Variable: STYLE_SOURCE_PORT\n\t * \n\t * Defines the ID of the cell that should be used for computing the\n\t * perimeter point of the source for an edge. This allows for graphically\n\t * connecting to a cell while keeping the actual terminal of the edge.\n\t * Value is \"sourcePort\".\n\t */\n\tSTYLE_SOURCE_PORT: 'sourcePort',\n\t\n\t/**\n\t * Variable: STYLE_TARGET_PORT\n\t * \n\t * Defines the ID of the cell that should be used for computing the\n\t * perimeter point of the target for an edge. This allows for graphically\n\t * connecting to a cell while keeping the actual terminal of the edge.\n\t * Value is \"targetPort\".\n\t */\n\tSTYLE_TARGET_PORT: 'targetPort',\n\n\t/**\n\t * Variable: STYLE_PORT_CONSTRAINT\n\t * \n\t * Defines the direction(s) that edges are allowed to connect to cells in.\n\t * Possible values are \"DIRECTION_NORTH, DIRECTION_SOUTH, \n\t * DIRECTION_EAST\" and \"DIRECTION_WEST\". Value is\n\t * \"portConstraint\".\n\t */\n\tSTYLE_PORT_CONSTRAINT: 'portConstraint',\n\n\t/**\n\t * Variable: STYLE_PORT_CONSTRAINT_ROTATION\n\t * \n\t * Define whether port constraint directions are rotated with vertex\n\t * rotation. 0 (default) causes port constraints to remain absolute, \n\t * relative to the graph, 1 causes the constraints to rotate with\n\t * the vertex. Value is \"portConstraintRotation\".\n\t */\n\tSTYLE_PORT_CONSTRAINT_ROTATION: 'portConstraintRotation',\n\n\t/**\n\t * Variable: STYLE_SOURCE_PORT_CONSTRAINT\n\t * \n\t * Defines the direction(s) that edges are allowed to connect to sources in.\n\t * Possible values are \"DIRECTION_NORTH, DIRECTION_SOUTH, DIRECTION_EAST\"\n\t * and \"DIRECTION_WEST\". Value is \"sourcePortConstraint\".\n\t */\n\tSTYLE_SOURCE_PORT_CONSTRAINT: 'sourcePortConstraint',\n\n\t/**\n\t * Variable: STYLE_TARGET_PORT_CONSTRAINT\n\t * \n\t * Defines the direction(s) that edges are allowed to connect to targets in.\n\t * Possible values are \"DIRECTION_NORTH, DIRECTION_SOUTH, DIRECTION_EAST\"\n\t * and \"DIRECTION_WEST\". Value is \"targetPortConstraint\".\n\t */\n\tSTYLE_TARGET_PORT_CONSTRAINT: 'targetPortConstraint',\n\n\t/**\n\t * Variable: STYLE_OPACITY\n\t * \n\t * Defines the key for the opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"opacity\".\n\t */\n\tSTYLE_OPACITY: 'opacity',\n\n\t/**\n\t * Variable: STYLE_FILL_OPACITY\n\t * \n\t * Defines the key for the fill opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"fillOpacity\".\n\t */\n\tSTYLE_FILL_OPACITY: 'fillOpacity',\n\n\t/**\n\t * Variable: STYLE_STROKE_OPACITY\n\t * \n\t * Defines the key for the stroke opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"strokeOpacity\".\n\t */\n\tSTYLE_STROKE_OPACITY: 'strokeOpacity',\n\n\t/**\n\t * Variable: STYLE_TEXT_OPACITY\n\t * \n\t * Defines the key for the text opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"textOpacity\".\n\t */\n\tSTYLE_TEXT_OPACITY: 'textOpacity',\n\n\t/**\n\t * Variable: STYLE_TEXT_DIRECTION\n\t * \n\t * Defines the key for the text direction style. Possible values are\n\t * \"TEXT_DIRECTION_DEFAULT, TEXT_DIRECTION_AUTO, TEXT_DIRECTION_LTR\"\n\t * and \"TEXT_DIRECTION_RTL\". Value is \"textDirection\".\n\t * The default value for the style is defined in <DEFAULT_TEXT_DIRECTION>.\n\t * It is used is no value is defined for this key in a given style. This is\n\t * an experimental style that is currently ignored in the backends.\n\t */\n\tSTYLE_TEXT_DIRECTION: 'textDirection',\n\n\t/**\n\t * Variable: STYLE_OVERFLOW\n\t * \n\t * Defines the key for the overflow style. Possible values are 'visible',\n\t * 'hidden', 'fill' and 'width'. The default value is 'visible'. This value\n\t * specifies how overlapping vertex labels are handled. A value of\n\t * 'visible' will show the complete label. A value of 'hidden' will clip\n\t * the label so that it does not overlap the vertex bounds. A value of\n\t * 'fill' will use the vertex bounds and a value of 'width' will use the\n\t * vertex width for the label. See <mxGraph.isLabelClipped>. Note that\n\t * the vertical alignment is ignored for overflow fill and for horizontal\n\t * alignment, left should be used to avoid pixel offsets in Internet Explorer\n\t * 11 and earlier or if foreignObjects are disabled. Value is \"overflow\".\n\t */\n\tSTYLE_OVERFLOW: 'overflow',\n\n\t/**\n\t * Variable: STYLE_ORTHOGONAL\n\t * \n\t * Defines if the connection points on either end of the edge should be\n\t * computed so that the edge is vertical or horizontal if possible and\n\t * if the point is not at a fixed location. Default is false. This is\n\t * used in <mxGraph.isOrthogonal>, which also returns true if the edgeStyle\n\t * of the edge is an elbow or entity. Value is \"orthogonal\".\n\t */\n\tSTYLE_ORTHOGONAL: 'orthogonal',\n\n\t/**\n\t * Variable: STYLE_EXIT_X\n\t * \n\t * Defines the key for the horizontal relative coordinate connection point\n\t * of an edge with its source terminal. Value is \"exitX\".\n\t */\n\tSTYLE_EXIT_X: 'exitX',\n\n\t/**\n\t * Variable: STYLE_EXIT_Y\n\t * \n\t * Defines the key for the vertical relative coordinate connection point\n\t * of an edge with its source terminal. Value is \"exitY\".\n\t */\n\tSTYLE_EXIT_Y: 'exitY',\n\n\t\n\t/**\n\t* Variable: STYLE_EXIT_DX\n\t* \n\t* Defines the key for the horizontal offset of the connection point\n\t* of an edge with its source terminal. Value is \"exitDx\".\n\t*/\n\tSTYLE_EXIT_DX: 'exitDx',\n\n\t/**\n\t* Variable: STYLE_EXIT_DY\n\t* \n\t* Defines the key for the vertical offset of the connection point\n\t* of an edge with its source terminal. Value is \"exitDy\".\n\t*/\n\tSTYLE_EXIT_DY: 'exitDy',\n\t\n\t/**\n\t * Variable: STYLE_EXIT_PERIMETER\n\t * \n\t * Defines if the perimeter should be used to find the exact entry point\n\t * along the perimeter of the source. Possible values are 0 (false) and\n\t * 1 (true). Default is 1 (true). Value is \"exitPerimeter\".\n\t */\n\tSTYLE_EXIT_PERIMETER: 'exitPerimeter',\n\n\t/**\n\t * Variable: STYLE_ENTRY_X\n\t * \n\t * Defines the key for the horizontal relative coordinate connection point\n\t * of an edge with its target terminal. Value is \"entryX\".\n\t */\n\tSTYLE_ENTRY_X: 'entryX',\n\n\t/**\n\t * Variable: STYLE_ENTRY_Y\n\t * \n\t * Defines the key for the vertical relative coordinate connection point\n\t * of an edge with its target terminal. Value is \"entryY\".\n\t */\n\tSTYLE_ENTRY_Y: 'entryY',\n\n\t/**\n\t * Variable: STYLE_ENTRY_DX\n\t * \n\t* Defines the key for the horizontal offset of the connection point\n\t* of an edge with its target terminal. Value is \"entryDx\".\n\t*/\n\tSTYLE_ENTRY_DX: 'entryDx',\n\n\t/**\n\t * Variable: STYLE_ENTRY_DY\n\t * \n\t* Defines the key for the vertical offset of the connection point\n\t* of an edge with its target terminal. Value is \"entryDy\".\n\t*/\n\tSTYLE_ENTRY_DY: 'entryDy',\n\n\t/**\n\t * Variable: STYLE_ENTRY_PERIMETER\n\t * \n\t * Defines if the perimeter should be used to find the exact entry point\n\t * along the perimeter of the target. Possible values are 0 (false) and\n\t * 1 (true). Default is 1 (true). Value is \"entryPerimeter\".\n\t */\n\tSTYLE_ENTRY_PERIMETER: 'entryPerimeter',\n\n\t/**\n\t * Variable: STYLE_WHITE_SPACE\n\t * \n\t * Defines the key for the white-space style. Possible values are 'nowrap'\n\t * and 'wrap'. The default value is 'nowrap'. This value specifies how\n\t * white-space inside a HTML vertex label should be handled. A value of\n\t * 'nowrap' means the text will never wrap to the next line until a\n\t * linefeed is encountered. A value of 'wrap' means text will wrap when\n\t * necessary. This style is only used for HTML labels.\n\t * See <mxGraph.isWrapping>. Value is \"whiteSpace\".\n\t */\n\tSTYLE_WHITE_SPACE: 'whiteSpace',\n\n\t/**\n\t * Variable: STYLE_ROTATION\n\t * \n\t * Defines the key for the rotation style. The type of the value is \n\t * numeric and the possible range is 0-360. Value is \"rotation\".\n\t */\n\tSTYLE_ROTATION: 'rotation',\n\n\t/**\n\t * Variable: STYLE_FILLCOLOR\n\t * \n\t * Defines the key for the fill color. Possible values are all HTML color\n\t * names or HEX codes, as well as special keywords such as 'swimlane,\n\t * 'inherit' or 'indicated' to use the color code of a related cell or the\n\t * indicator shape. Value is \"fillColor\".\n\t */\n\tSTYLE_FILLCOLOR: 'fillColor',\n\n\t/**\n\t * Variable: STYLE_POINTER_EVENTS\n\t * \n\t * Specifies if pointer events should be fired on transparent backgrounds.\n\t * This style is currently only supported in <mxRectangleShape>. Default\n\t * is true. Value is \"pointerEvents\". This is typically set to\n\t * false in groups where the transparent part should allow any underlying\n\t * cells to be clickable.\n\t */\n\tSTYLE_POINTER_EVENTS: 'pointerEvents',\n\n\t/**\n\t * Variable: STYLE_SWIMLANE_FILLCOLOR\n\t * \n\t * Defines the key for the fill color of the swimlane background. Possible\n\t * values are all HTML color names or HEX codes. Default is no background.\n\t * Value is \"swimlaneFillColor\".\n\t */\n\tSTYLE_SWIMLANE_FILLCOLOR: 'swimlaneFillColor',\n\n\t/**\n\t * Variable: STYLE_MARGIN\n\t * \n\t * Defines the key for the margin between the ellipses in the double ellipse shape.\n\t * Possible values are all positive numbers. Value is \"margin\".\n\t */\n\tSTYLE_MARGIN: 'margin',\n\n\t/**\n\t * Variable: STYLE_GRADIENTCOLOR\n\t * \n\t * Defines the key for the gradient color. Possible values are all HTML color\n\t * names or HEX codes, as well as special keywords such as 'swimlane,\n\t * 'inherit' or 'indicated' to use the color code of a related cell or the\n\t * indicator shape. This is ignored if no fill color is defined. Value is\n\t * \"gradientColor\".\n\t */\n\tSTYLE_GRADIENTCOLOR: 'gradientColor',\n\n\t/**\n\t * Variable: STYLE_GRADIENT_DIRECTION\n\t * \n\t * Defines the key for the gradient direction. Possible values are\n\t * <DIRECTION_EAST>, <DIRECTION_WEST>, <DIRECTION_NORTH> and\n\t * <DIRECTION_SOUTH>. Default is <DIRECTION_SOUTH>. Generally, and by\n\t * default in mxGraph, gradient painting is done from the value of\n\t * <STYLE_FILLCOLOR> to the value of <STYLE_GRADIENTCOLOR>. Taking the\n\t * example of <DIRECTION_NORTH>, this means <STYLE_FILLCOLOR> color at the \n\t * bottom of paint pattern and <STYLE_GRADIENTCOLOR> at top, with a\n\t * gradient in-between. Value is \"gradientDirection\".\n\t */\n\tSTYLE_GRADIENT_DIRECTION: 'gradientDirection',\n\n\t/**\n\t * Variable: STYLE_STROKECOLOR\n\t * \n\t * Defines the key for the strokeColor style. Possible values are all HTML\n\t * color names or HEX codes, as well as special keywords such as 'swimlane,\n\t * 'inherit', 'indicated' to use the color code of a related cell or the\n\t * indicator shape or 'none' for no color. Value is \"strokeColor\".\n\t */\n\tSTYLE_STROKECOLOR: 'strokeColor',\n\n\t/**\n\t * Variable: STYLE_SEPARATORCOLOR\n\t * \n\t * Defines the key for the separatorColor style. Possible values are all\n\t * HTML color names or HEX codes. This style is only used for\n\t * <SHAPE_SWIMLANE> shapes. Value is \"separatorColor\".\n\t */\n\tSTYLE_SEPARATORCOLOR: 'separatorColor',\n\n\t/**\n\t * Variable: STYLE_STROKEWIDTH\n\t * \n\t * Defines the key for the strokeWidth style. The type of the value is \n\t * numeric and the possible range is any non-negative value larger or equal\n\t * to 1. The value defines the stroke width in pixels. Note: To hide a\n\t * stroke use strokeColor none. Value is \"strokeWidth\".\n\t */\n\tSTYLE_STROKEWIDTH: 'strokeWidth',\n\n\t/**\n\t * Variable: STYLE_ALIGN\n\t * \n\t * Defines the key for the align style. Possible values are <ALIGN_LEFT>,\n\t * <ALIGN_CENTER> and <ALIGN_RIGHT>. This value defines how the lines of\n\t * the label are horizontally aligned. <ALIGN_LEFT> mean label text lines\n\t * are aligned to left of the label bounds, <ALIGN_RIGHT> to the right of\n\t * the label bounds and <ALIGN_CENTER> means the center of the text lines\n\t * are aligned in the center of the label bounds. Note this value doesn't\n\t * affect the positioning of the overall label bounds relative to the\n\t * vertex, to move the label bounds horizontally, use\n\t * <STYLE_LABEL_POSITION>. Value is \"align\".\n\t */\n\tSTYLE_ALIGN: 'align',\n\n\t/**\n\t * Variable: STYLE_VERTICAL_ALIGN\n\t * \n\t * Defines the key for the verticalAlign style. Possible values are\n\t * <ALIGN_TOP>, <ALIGN_MIDDLE> and <ALIGN_BOTTOM>. This value defines how\n\t * the lines of the label are vertically aligned. <ALIGN_TOP> means the\n\t * topmost label text line is aligned against the top of the label bounds,\n\t * <ALIGN_BOTTOM> means the bottom-most label text line is aligned against\n\t * the bottom of the label bounds and <ALIGN_MIDDLE> means there is equal\n\t * spacing between the topmost text label line and the top of the label\n\t * bounds and the bottom-most text label line and the bottom of the label\n\t * bounds. Note this value doesn't affect the positioning of the overall\n\t * label bounds relative to the vertex, to move the label bounds\n\t * vertically, use <STYLE_VERTICAL_LABEL_POSITION>. Value is \"verticalAlign\".\n\t */\n\tSTYLE_VERTICAL_ALIGN: 'verticalAlign',\n\n\t/**\n\t * Variable: STYLE_LABEL_WIDTH\n\t * \n\t * Defines the key for the width of the label if the label position is not\n\t * center. Value is \"labelWidth\".\n\t */\n\tSTYLE_LABEL_WIDTH: 'labelWidth',\n\n\t/**\n\t * Variable: STYLE_LABEL_POSITION\n\t * \n\t * Defines the key for the horizontal label position of vertices. Possible\n\t * values are <ALIGN_LEFT>, <ALIGN_CENTER> and <ALIGN_RIGHT>. Default is\n\t * <ALIGN_CENTER>. The label align defines the position of the label\n\t * relative to the cell. <ALIGN_LEFT> means the entire label bounds is\n\t * placed completely just to the left of the vertex, <ALIGN_RIGHT> means\n\t * adjust to the right and <ALIGN_CENTER> means the label bounds are\n\t * vertically aligned with the bounds of the vertex. Note this value\n\t * doesn't affect the positioning of label within the label bounds, to move\n\t * the label horizontally within the label bounds, use <STYLE_ALIGN>.\n\t * Value is \"labelPosition\".\n\t */\n\tSTYLE_LABEL_POSITION: 'labelPosition',\n\n\t/**\n\t * Variable: STYLE_VERTICAL_LABEL_POSITION\n\t * \n\t * Defines the key for the vertical label position of vertices. Possible\n\t * values are <ALIGN_TOP>, <ALIGN_BOTTOM> and <ALIGN_MIDDLE>. Default is\n\t * <ALIGN_MIDDLE>. The label align defines the position of the label\n\t * relative to the cell. <ALIGN_TOP> means the entire label bounds is\n\t * placed completely just on the top of the vertex, <ALIGN_BOTTOM> means\n\t * adjust on the bottom and <ALIGN_MIDDLE> means the label bounds are\n\t * horizontally aligned with the bounds of the vertex. Note this value\n\t * doesn't affect the positioning of label within the label bounds, to move\n\t * the label vertically within the label bounds, use\n\t * <STYLE_VERTICAL_ALIGN>. Value is \"verticalLabelPosition\".\n\t */\n\tSTYLE_VERTICAL_LABEL_POSITION: 'verticalLabelPosition',\n\t\n\t/**\n\t * Variable: STYLE_IMAGE_ASPECT\n\t * \n\t * Defines the key for the image aspect style. Possible values are 0 (do\n\t * not preserve aspect) or 1 (keep aspect). This is only used in\n\t * <mxImageShape>. Default is 1. Value is \"imageAspect\".\n\t */\n\tSTYLE_IMAGE_ASPECT: 'imageAspect',\n\n\t/**\n\t * Variable: STYLE_IMAGE_ALIGN\n\t * \n\t * Defines the key for the align style. Possible values are <ALIGN_LEFT>,\n\t * <ALIGN_CENTER> and <ALIGN_RIGHT>. The value defines how any image in the\n\t * vertex label is aligned horizontally within the label bounds of a\n\t * <SHAPE_LABEL> shape. Value is \"imageAlign\".\n\t */\n\tSTYLE_IMAGE_ALIGN: 'imageAlign',\n\n\t/**\n\t * Variable: STYLE_IMAGE_VERTICAL_ALIGN\n\t * \n\t * Defines the key for the verticalAlign style. Possible values are\n\t * <ALIGN_TOP>, <ALIGN_MIDDLE> and <ALIGN_BOTTOM>. The value defines how\n\t * any image in the vertex label is aligned vertically within the label\n\t * bounds of a <SHAPE_LABEL> shape. Value is \"imageVerticalAlign\".\n\t */\n\tSTYLE_IMAGE_VERTICAL_ALIGN: 'imageVerticalAlign',\n\n\t/**\n\t * Variable: STYLE_GLASS\n\t * \n\t * Defines the key for the glass style. Possible values are 0 (disabled) and\n\t * 1(enabled). The default value is 0. This is used in <mxLabel>. Value is\n\t * \"glass\".\n\t */\n\tSTYLE_GLASS: 'glass',\n\n\t/**\n\t * Variable: STYLE_IMAGE\n\t * \n\t * Defines the key for the image style. Possible values are any image URL,\n\t * the type of the value is String. This is the path to the image that is\n\t * to be displayed within the label of a vertex. Data URLs should use the\n\t * following format: data:image/png,xyz where xyz is the base64 encoded\n\t * data (without the \"base64\"-prefix). Note that Data URLs are only\n\t * supported in modern browsers. Value is \"image\".\n\t */\n\tSTYLE_IMAGE: 'image',\n\n\t/**\n\t * Variable: STYLE_IMAGE_WIDTH\n\t * \n\t * Defines the key for the imageWidth style. The type of this value is\n\t * int, the value is the image width in pixels and must be greater than 0.\n\t * Value is \"imageWidth\".\n\t */\n\tSTYLE_IMAGE_WIDTH: 'imageWidth',\n\n\t/**\n\t * Variable: STYLE_IMAGE_HEIGHT\n\t * \n\t * Defines the key for the imageHeight style. The type of this value is\n\t * int, the value is the image height in pixels and must be greater than 0.\n\t * Value is \"imageHeight\".\n\t */\n\tSTYLE_IMAGE_HEIGHT: 'imageHeight',\n\n\t/**\n\t * Variable: STYLE_IMAGE_BACKGROUND\n\t * \n\t * Defines the key for the image background color. This style is only used\n\t * in <mxImageShape>. Possible values are all HTML color names or HEX\n\t * codes. Value is \"imageBackground\".\n\t */\n\tSTYLE_IMAGE_BACKGROUND: 'imageBackground',\n\n\t/**\n\t * Variable: STYLE_IMAGE_BORDER\n\t * \n\t * Defines the key for the image border color. This style is only used in\n\t * <mxImageShape>. Possible values are all HTML color names or HEX codes.\n\t * Value is \"imageBorder\".\n\t */\n\tSTYLE_IMAGE_BORDER: 'imageBorder',\n\n\t/**\n\t * Variable: STYLE_FLIPH\n\t * \n\t * Defines the key for the horizontal image flip. This style is only used\n\t * in <mxImageShape>. Possible values are 0 and 1. Default is 0. Value is\n\t * \"flipH\".\n\t */\n\tSTYLE_FLIPH: 'flipH',\n\n\t/**\n\t * Variable: STYLE_FLIPV\n\t * \n\t * Defines the key for the vertical flip. Possible values are 0 and 1.\n\t * Default is 0. Value is \"flipV\".\n\t */\n\tSTYLE_FLIPV: 'flipV',\n\n\t/**\n\t * Variable: STYLE_NOLABEL\n\t * \n\t * Defines the key for the noLabel style. If this is true then no label is\n\t * visible for a given cell. Possible values are true or false (1 or 0).\n\t * Default is false. Value is \"noLabel\".\n\t */\n\tSTYLE_NOLABEL: 'noLabel',\n\n\t/**\n\t * Variable: STYLE_NOEDGESTYLE\n\t * \n\t * Defines the key for the noEdgeStyle style. If this is true then no edge\n\t * style is applied for a given edge. Possible values are true or false\n\t * (1 or 0). Default is false. Value is \"noEdgeStyle\".\n\t */\n\tSTYLE_NOEDGESTYLE: 'noEdgeStyle',\n\n\t/**\n\t * Variable: STYLE_LABEL_BACKGROUNDCOLOR\n\t * \n\t * Defines the key for the label background color. Possible values are all\n\t * HTML color names or HEX codes. Value is \"labelBackgroundColor\".\n\t */\n\tSTYLE_LABEL_BACKGROUNDCOLOR: 'labelBackgroundColor',\n\n\t/**\n\t * Variable: STYLE_LABEL_BORDERCOLOR\n\t * \n\t * Defines the key for the label border color. Possible values are all\n\t * HTML color names or HEX codes. Value is \"labelBorderColor\".\n\t */\n\tSTYLE_LABEL_BORDERCOLOR: 'labelBorderColor',\n\n\t/**\n\t * Variable: STYLE_LABEL_PADDING\n\t * \n\t * Defines the key for the label padding, ie. the space between the label\n\t * border and the label. Value is \"labelPadding\".\n\t */\n\tSTYLE_LABEL_PADDING: 'labelPadding',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_SHAPE\n\t * \n\t * Defines the key for the indicator shape used within an <mxLabel>.\n\t * Possible values are all SHAPE_* constants or the names of any new\n\t * shapes. The indicatorShape has precedence over the indicatorImage.\n\t * Value is \"indicatorShape\".\n\t */\n\tSTYLE_INDICATOR_SHAPE: 'indicatorShape',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_IMAGE\n\t * \n\t * Defines the key for the indicator image used within an <mxLabel>.\n\t * Possible values are all image URLs. The indicatorShape has\n\t * precedence over the indicatorImage. Value is \"indicatorImage\".\n\t */\n\tSTYLE_INDICATOR_IMAGE: 'indicatorImage',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_COLOR\n\t * \n\t * Defines the key for the indicatorColor style. Possible values are all\n\t * HTML color names or HEX codes, as well as the special 'swimlane' keyword\n\t * to refer to the color of the parent swimlane if one exists. Value is\n\t * \"indicatorColor\".\n\t */\n\tSTYLE_INDICATOR_COLOR: 'indicatorColor',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_STROKECOLOR\n\t * \n\t * Defines the key for the indicator stroke color in <mxLabel>.\n\t * Possible values are all color codes. Value is \"indicatorStrokeColor\".\n\t */\n\tSTYLE_INDICATOR_STROKECOLOR: 'indicatorStrokeColor',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_GRADIENTCOLOR\n\t * \n\t * Defines the key for the indicatorGradientColor style. Possible values\n\t * are all HTML color names or HEX codes. This style is only supported in\n\t * <SHAPE_LABEL> shapes. Value is \"indicatorGradientColor\".\n\t */\n\tSTYLE_INDICATOR_GRADIENTCOLOR: 'indicatorGradientColor',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_SPACING\n\t * \n\t * The defines the key for the spacing between the label and the\n\t * indicator in <mxLabel>. Possible values are in pixels. Value is\n\t * \"indicatorSpacing\".\n\t */\n\tSTYLE_INDICATOR_SPACING: 'indicatorSpacing',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_WIDTH\n\t * \n\t * Defines the key for the indicator width. Possible values start at 0 (in\n\t * pixels). Value is \"indicatorWidth\".\n\t */\n\tSTYLE_INDICATOR_WIDTH: 'indicatorWidth',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_HEIGHT\n\t * \n\t * Defines the key for the indicator height. Possible values start at 0 (in\n\t * pixels). Value is \"indicatorHeight\".\n\t */\n\tSTYLE_INDICATOR_HEIGHT: 'indicatorHeight',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_DIRECTION\n\t * \n\t * Defines the key for the indicatorDirection style. The direction style is\n\t * used to specify the direction of certain shapes (eg. <mxTriangle>).\n\t * Possible values are <DIRECTION_EAST> (default), <DIRECTION_WEST>,\n\t * <DIRECTION_NORTH> and <DIRECTION_SOUTH>. Value is \"indicatorDirection\".\n\t */\n\tSTYLE_INDICATOR_DIRECTION: 'indicatorDirection',\n\n\t/**\n\t * Variable: STYLE_SHADOW\n\t * \n\t * Defines the key for the shadow style. The type of the value is Boolean.\n\t * Value is \"shadow\".\n\t */\n\tSTYLE_SHADOW: 'shadow',\n\t\n\t/**\n\t * Variable: STYLE_SEGMENT\n\t * \n\t * Defines the key for the segment style. The type of this value is float\n\t * and the value represents the size of the horizontal segment of the\n\t * entity relation style. Default is ENTITY_SEGMENT. Value is \"segment\".\n\t */\n\tSTYLE_SEGMENT: 'segment',\n\t\n\t/**\n\t * Variable: STYLE_ENDARROW\n\t *\n\t * Defines the key for the end arrow marker. Possible values are all\n\t * constants with an ARROW-prefix. This is only used in <mxConnector>.\n\t * Value is \"endArrow\".\n\t *\n\t * Example:\n\t * (code)\n\t * style[mxConstants.STYLE_ENDARROW] = mxConstants.ARROW_CLASSIC;\n\t * (end)\n\t */\n\tSTYLE_ENDARROW: 'endArrow',\n\n\t/**\n\t * Variable: STYLE_STARTARROW\n\t * \n\t * Defines the key for the start arrow marker. Possible values are all\n\t * constants with an ARROW-prefix. This is only used in <mxConnector>.\n\t * See <STYLE_ENDARROW>. Value is \"startArrow\".\n\t */\n\tSTYLE_STARTARROW: 'startArrow',\n\n\t/**\n\t * Variable: STYLE_ENDSIZE\n\t * \n\t * Defines the key for the endSize style. The type of this value is numeric\n\t * and the value represents the size of the end marker in pixels. Value is\n\t * \"endSize\".\n\t */\n\tSTYLE_ENDSIZE: 'endSize',\n\n\t/**\n\t * Variable: STYLE_STARTSIZE\n\t * \n\t * Defines the key for the startSize style. The type of this value is\n\t * numeric and the value represents the size of the start marker or the\n\t * size of the swimlane title region depending on the shape it is used for.\n\t * Value is \"startSize\".\n\t */\n\tSTYLE_STARTSIZE: 'startSize',\n\n\t/**\n\t * Variable: STYLE_SWIMLANE_LINE\n\t * \n\t * Defines the key for the swimlaneLine style. This style specifies whether\n\t * the line between the title regio of a swimlane should be visible. Use 0\n\t * for hidden or 1 (default) for visible. Value is \"swimlaneLine\".\n\t */\n\tSTYLE_SWIMLANE_LINE: 'swimlaneLine',\n\n\t/**\n\t * Variable: STYLE_ENDFILL\n\t * \n\t * Defines the key for the endFill style. Use 0 for no fill or 1 (default)\n\t * for fill. (This style is only exported via <mxImageExport>.) Value is\n\t * \"endFill\".\n\t */\n\tSTYLE_ENDFILL: 'endFill',\n\n\t/**\n\t * Variable: STYLE_STARTFILL\n\t * \n\t * Defines the key for the startFill style. Use 0 for no fill or 1 (default)\n\t * for fill. (This style is only exported via <mxImageExport>.) Value is\n\t * \"startFill\".\n\t */\n\tSTYLE_STARTFILL: 'startFill',\n\n\t/**\n\t * Variable: STYLE_DASHED\n\t * \n\t * Defines the key for the dashed style. Use 0 (default) for non-dashed or 1\n\t * for dashed. Value is \"dashed\".\n\t */\n\tSTYLE_DASHED: 'dashed',\n\n\t/**\n\t * Variable: STYLE_DASH_PATTERN\n\t * \n\t * Defines the key for the dashed pattern style in SVG and image exports.\n\t * The type of this value is a space separated list of numbers that specify\n\t * a custom-defined dash pattern. Dash styles are defined in terms of the\n\t * length of the dash (the drawn part of the stroke) and the length of the\n\t * space between the dashes. The lengths are relative to the line width: a\n\t * length of \"1\" is equal to the line width. VML ignores this style and\n\t * uses dashStyle instead as defined in the VML specification. This style\n\t * is only used in the <mxConnector> shape. Value is \"dashPattern\".\n\t */\n\tSTYLE_DASH_PATTERN: 'dashPattern',\n\n\t/**\n\t * Variable: STYLE_FIX_DASH\n\t * \n\t * Defines the key for the fixDash style. Use 0 (default) for dash patterns\n\t * that depend on the linewidth and 1 for dash patterns that ignore the\n\t * line width. Value is \"fixDash\".\n\t */\n\tSTYLE_FIX_DASH: 'fixDash',\n\n\t/**\n\t * Variable: STYLE_ROUNDED\n\t * \n\t * Defines the key for the rounded style. The type of this value is\n\t * Boolean. For edges this determines whether or not joins between edges\n\t * segments are smoothed to a rounded finish. For vertices that have the\n\t * rectangle shape, this determines whether or not the rectangle is\n\t * rounded. Use 0 (default) for non-rounded or 1 for rounded. Value is\n\t * \"rounded\".\n\t */\n\tSTYLE_ROUNDED: 'rounded',\n\n\t/**\n\t * Variable: STYLE_CURVED\n\t * \n\t * Defines the key for the curved style. The type of this value is\n\t * Boolean. It is only applicable for connector shapes. Use 0 (default)\n\t * for non-curved or 1 for curved. Value is \"curved\".\n\t */\n\tSTYLE_CURVED: 'curved',\n\n\t/**\n\t * Variable: STYLE_ARCSIZE\n\t * \n\t * Defines the rounding factor for a rounded rectangle in percent (without\n\t * the percent sign). Possible values are between 0 and 100. If this value\n\t * is not specified then RECTANGLE_ROUNDING_FACTOR * 100 is used. For\n\t * edges, this defines the absolute size of rounded corners in pixels. If\n\t * this values is not specified then LINE_ARCSIZE is used.\n\t * (This style is only exported via <mxImageExport>.) Value is \"arcSize\".\n\t */\n\tSTYLE_ARCSIZE: 'arcSize',\n\n\t/**\n\t * Variable: STYLE_ABSOLUTE_ARCSIZE\n\t * \n\t * Defines the key for the absolute arc size style. This specifies if\n\t * arcSize for rectangles is abolute or relative. Possible values are 1\n\t * and 0 (default). Value is \"absoluteArcSize\".\n\t */\n\tSTYLE_ABSOLUTE_ARCSIZE: 'absoluteArcSize',\n\n\t/**\n\t * Variable: STYLE_SOURCE_PERIMETER_SPACING\n\t * \n\t * Defines the key for the source perimeter spacing. The type of this value\n\t * is numeric. This is the distance between the source connection point of\n\t * an edge and the perimeter of the source vertex in pixels. This style\n\t * only applies to edges. Value is \"sourcePerimeterSpacing\".\n\t */\n\tSTYLE_SOURCE_PERIMETER_SPACING: 'sourcePerimeterSpacing',\n\n\t/**\n\t * Variable: STYLE_TARGET_PERIMETER_SPACING\n\t * \n\t * Defines the key for the target perimeter spacing. The type of this value\n\t * is numeric. This is the distance between the target connection point of\n\t * an edge and the perimeter of the target vertex in pixels. This style\n\t * only applies to edges. Value is \"targetPerimeterSpacing\".\n\t */\n\tSTYLE_TARGET_PERIMETER_SPACING: 'targetPerimeterSpacing',\n\n\t/**\n\t * Variable: STYLE_PERIMETER_SPACING\n\t * \n\t * Defines the key for the perimeter spacing. This is the distance between\n\t * the connection point and the perimeter in pixels. When used in a vertex\n\t * style, this applies to all incoming edges to floating ports (edges that\n\t * terminate on the perimeter of the vertex). When used in an edge style,\n\t * this spacing applies to the source and target separately, if they\n\t * terminate in floating ports (on the perimeter of the vertex). Value is\n\t * \"perimeterSpacing\".\n\t */\n\tSTYLE_PERIMETER_SPACING: 'perimeterSpacing',\n\n\t/**\n\t * Variable: STYLE_SPACING\n\t * \n\t * Defines the key for the spacing. The value represents the spacing, in\n\t * pixels, added to each side of a label in a vertex (style applies to\n\t * vertices only). Value is \"spacing\".\n\t */\n\tSTYLE_SPACING: 'spacing',\n\n\t/**\n\t * Variable: STYLE_SPACING_TOP\n\t * \n\t * Defines the key for the spacingTop style. The value represents the\n\t * spacing, in pixels, added to the top side of a label in a vertex (style\n\t * applies to vertices only). Value is \"spacingTop\".\n\t */\n\tSTYLE_SPACING_TOP: 'spacingTop',\n\n\t/**\n\t * Variable: STYLE_SPACING_LEFT\n\t * \n\t * Defines the key for the spacingLeft style. The value represents the\n\t * spacing, in pixels, added to the left side of a label in a vertex (style\n\t * applies to vertices only). Value is \"spacingLeft\".\n\t */\n\tSTYLE_SPACING_LEFT: 'spacingLeft',\n\n\t/**\n\t * Variable: STYLE_SPACING_BOTTOM\n\t * \n\t * Defines the key for the spacingBottom style The value represents the\n\t * spacing, in pixels, added to the bottom side of a label in a vertex\n\t * (style applies to vertices only). Value is \"spacingBottom\".\n\t */\n\tSTYLE_SPACING_BOTTOM: 'spacingBottom',\n\n\t/**\n\t * Variable: STYLE_SPACING_RIGHT\n\t * \n\t * Defines the key for the spacingRight style The value represents the\n\t * spacing, in pixels, added to the right side of a label in a vertex (style\n\t * applies to vertices only). Value is \"spacingRight\".\n\t */\n\tSTYLE_SPACING_RIGHT: 'spacingRight',\n\n\t/**\n\t * Variable: STYLE_HORIZONTAL\n\t * \n\t * Defines the key for the horizontal style. Possible values are\n\t * true or false. This value only applies to vertices. If the <STYLE_SHAPE>\n\t * is \"SHAPE_SWIMLANE\" a value of false indicates that the\n\t * swimlane should be drawn vertically, true indicates to draw it\n\t * horizontally. If the shape style does not indicate that this vertex is a\n\t * swimlane, this value affects only whether the label is drawn\n\t * horizontally or vertically. Value is \"horizontal\".\n\t */\n\tSTYLE_HORIZONTAL: 'horizontal',\n\n\t/**\n\t * Variable: STYLE_DIRECTION\n\t * \n\t * Defines the key for the direction style. The direction style is used\n\t * to specify the direction of certain shapes (eg. <mxTriangle>).\n\t * Possible values are <DIRECTION_EAST> (default), <DIRECTION_WEST>,\n\t * <DIRECTION_NORTH> and <DIRECTION_SOUTH>. Value is \"direction\".\n\t */\n\tSTYLE_DIRECTION: 'direction',\n\n\t/**\n\t * Variable: STYLE_ANCHOR_POINT_DIRECTION\n\t * \n\t * Defines the key for the anchorPointDirection style. The defines if the\n\t * direction style should be taken into account when computing the fixed\n\t * point location for connected edges. Default is 1 (yes). Set this to 0\n\t * to ignore the direction style for fixed connection points. Value is\n\t * \"anchorPointDirection\".\n\t */\n\tSTYLE_ANCHOR_POINT_DIRECTION: 'anchorPointDirection',\n\n\t/**\n\t * Variable: STYLE_ELBOW\n\t * \n\t * Defines the key for the elbow style. Possible values are\n\t * <ELBOW_HORIZONTAL> and <ELBOW_VERTICAL>. Default is <ELBOW_HORIZONTAL>.\n\t * This defines how the three segment orthogonal edge style leaves its\n\t * terminal vertices. The vertical style leaves the terminal vertices at\n\t * the top and bottom sides. Value is \"elbow\".\n\t */\n\tSTYLE_ELBOW: 'elbow',\n\n\t/**\n\t * Variable: STYLE_FONTCOLOR\n\t * \n\t * Defines the key for the fontColor style. Possible values are all HTML\n\t * color names or HEX codes. Value is \"fontColor\".\n\t */\n\tSTYLE_FONTCOLOR: 'fontColor',\n\n\t/**\n\t * Variable: STYLE_FONTFAMILY\n\t * \n\t * Defines the key for the fontFamily style. Possible values are names such\n\t * as Arial; Dialog; Verdana; Times New Roman. The value is of type String.\n\t * Value is fontFamily.\n\t */\n\tSTYLE_FONTFAMILY: 'fontFamily',\n\n\t/**\n\t * Variable: STYLE_FONTSIZE\n\t * \n\t * Defines the key for the fontSize style (in px). The type of the value\n\t * is int. Value is \"fontSize\".\n\t */\n\tSTYLE_FONTSIZE: 'fontSize',\n\n\t/**\n\t * Variable: STYLE_FONTSTYLE\n\t * \n\t * Defines the key for the fontStyle style. Values may be any logical AND\n\t * (sum) of <FONT_BOLD>, <FONT_ITALIC> and <FONT_UNDERLINE>.\n\t * The type of the value is int. Value is \"fontStyle\".\n\t */\n\tSTYLE_FONTSTYLE: 'fontStyle',\n\t\n\t/**\n\t * Variable: STYLE_ASPECT\n\t * \n\t * Defines the key for the aspect style. Possible values are empty or fixed.\n\t * If fixed is used then the aspect ratio of the cell will be maintained\n\t * when resizing. Default is empty. Value is \"aspect\".\n\t */\n\tSTYLE_ASPECT: 'aspect',\n\n\t/**\n\t * Variable: STYLE_AUTOSIZE\n\t * \n\t * Defines the key for the autosize style. This specifies if a cell should be\n\t * resized automatically if the value has changed. Possible values are 0 or 1.\n\t * Default is 0. See <mxGraph.isAutoSizeCell>. This is normally combined with\n\t * <STYLE_RESIZABLE> to disable manual sizing. Value is \"autosize\".\n\t */\n\tSTYLE_AUTOSIZE: 'autosize',\n\n\t/**\n\t * Variable: STYLE_FOLDABLE\n\t * \n\t * Defines the key for the foldable style. This specifies if a cell is foldable\n\t * using a folding icon. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellFoldable>. Value is \"foldable\".\n\t */\n\tSTYLE_FOLDABLE: 'foldable',\n\n\t/**\n\t * Variable: STYLE_EDITABLE\n\t * \n\t * Defines the key for the editable style. This specifies if the value of\n\t * a cell can be edited using the in-place editor. Possible values are 0 or\n\t * 1. Default is 1. See <mxGraph.isCellEditable>. Value is \"editable\".\n\t */\n\tSTYLE_EDITABLE: 'editable',\n\n\t/**\n\t * Variable: STYLE_BACKGROUND_OUTLINE\n\t * \n\t * Defines the key for the backgroundOutline style. This specifies if a\n\t * only the background of a cell should be painted when it is highlighted.\n\t * Possible values are 0 or 1. Default is 0. Value is \"backgroundOutline\".\n\t */\n\tSTYLE_BACKGROUND_OUTLINE: 'backgroundOutline',\n\n\t/**\n\t * Variable: STYLE_BENDABLE\n\t * \n\t * Defines the key for the bendable style. This specifies if the control\n\t * points of an edge can be moved. Possible values are 0 or 1. Default is\n\t * 1. See <mxGraph.isCellBendable>. Value is \"bendable\".\n\t */\n\tSTYLE_BENDABLE: 'bendable',\n\n\t/**\n\t * Variable: STYLE_MOVABLE\n\t * \n\t * Defines the key for the movable style. This specifies if a cell can\n\t * be moved. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellMovable>. Value is \"movable\".\n\t */\n\tSTYLE_MOVABLE: 'movable',\n\n\t/**\n\t * Variable: STYLE_RESIZABLE\n\t * \n\t * Defines the key for the resizable style. This specifies if a cell can\n\t * be resized. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellResizable>. Value is \"resizable\".\n\t */\n\tSTYLE_RESIZABLE: 'resizable',\n\n\t/**\n\t * Variable: STYLE_RESIZE_WIDTH\n\t * \n\t * Defines the key for the resizeWidth style. This specifies if a cell's\n\t * width is resized if the parent is resized. If this is 1 then the width\n\t * will be resized even if the cell's geometry is relative. If this is 0\n\t * then the cell's width will not be resized. Default is not defined. Value\n\t * is \"resizeWidth\".\n\t */\n\tSTYLE_RESIZE_WIDTH: 'resizeWidth',\n\n\t/**\n\t * Variable: STYLE_RESIZE_WIDTH\n\t * \n\t * Defines the key for the resizeHeight style. This specifies if a cell's\n\t * height if resize if the parent is resized. If this is 1 then the height\n\t * will be resized even if the cell's geometry is relative. If this is 0\n\t * then the cell's height will not be resized. Default is not defined. Value\n\t * is \"resizeHeight\".\n\t */\n\tSTYLE_RESIZE_HEIGHT: 'resizeHeight',\n\n\t/**\n\t * Variable: STYLE_ROTATABLE\n\t * \n\t * Defines the key for the rotatable style. This specifies if a cell can\n\t * be rotated. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellRotatable>. Value is \"rotatable\".\n\t */\n\tSTYLE_ROTATABLE: 'rotatable',\n\n\t/**\n\t * Variable: STYLE_CLONEABLE\n\t * \n\t * Defines the key for the cloneable style. This specifies if a cell can\n\t * be cloned. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellCloneable>. Value is \"cloneable\".\n\t */\n\tSTYLE_CLONEABLE: 'cloneable',\n\n\t/**\n\t * Variable: STYLE_DELETABLE\n\t * \n\t * Defines the key for the deletable style. This specifies if a cell can be\n\t * deleted. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellDeletable>. Value is \"deletable\".\n\t */\n\tSTYLE_DELETABLE: 'deletable',\n\n\t/**\n\t * Variable: STYLE_SHAPE\n\t * \n\t * Defines the key for the shape. Possible values are all constants with\n\t * a SHAPE-prefix or any newly defined shape names. Value is \"shape\".\n\t */\n\tSTYLE_SHAPE: 'shape',\n\n\t/**\n\t * Variable: STYLE_EDGE\n\t * \n\t * Defines the key for the edge style. Possible values are the functions\n\t * defined in <mxEdgeStyle>. Value is \"edgeStyle\".\n\t */\n\tSTYLE_EDGE: 'edgeStyle',\n\n\t/**\n\t * Variable: STYLE_JETTY_SIZE\n\t * \n\t * Defines the key for the jetty size in <mxEdgeStyle.OrthConnector>.\n\t * Default is 10. Possible values are all numeric values or \"auto\".\n\t * Jetty size is the minimum length of the orthogonal segment before\n\t * it attaches to a shape.\n\t * Value is \"jettySize\".\n\t */\n\tSTYLE_JETTY_SIZE: 'jettySize',\n\n\t/**\n\t * Variable: STYLE_SOURCE_JETTY_SIZE\n\t * \n\t * Defines the key for the jetty size in <mxEdgeStyle.OrthConnector>.\n\t * Default is 10. Possible values are numeric values or \"auto\". This has\n\t * precedence over <STYLE_JETTY_SIZE>. Value is \"sourceJettySize\".\n\t */\n\tSTYLE_SOURCE_JETTY_SIZE: 'sourceJettySize',\n\n\t/**\n\t * Variable: targetJettySize\n\t * \n\t * Defines the key for the jetty size in <mxEdgeStyle.OrthConnector>.\n\t * Default is 10. Possible values are numeric values or \"auto\". This has\n\t * precedence over <STYLE_JETTY_SIZE>. Value is \"targetJettySize\".\n\t */\n\tSTYLE_TARGET_JETTY_SIZE: 'targetJettySize',\n\n\t/**\n\t * Variable: STYLE_LOOP\n\t * \n\t * Defines the key for the loop style. Possible values are the functions\n\t * defined in <mxEdgeStyle>. Value is \"loopStyle\". Default is\n\t * <mxGraph.defaultLoopStylean>.\n\t */\n\tSTYLE_LOOP: 'loopStyle',\n\n\t/**\n\t * Variable: STYLE_ORTHOGONAL_LOOP\n\t * \n\t * Defines the key for the orthogonal loop style. Possible values are 0 and\n\t * 1. Default is 0. Value is \"orthogonalLoop\". Use this style to specify\n\t * if loops with no waypoints and defined anchor points should be routed\n\t * using <STYLE_LOOP> or not routed.\n\t */\n\tSTYLE_ORTHOGONAL_LOOP: 'orthogonalLoop',\n\n\t/**\n\t * Variable: STYLE_ROUTING_CENTER_X\n\t * \n\t * Defines the key for the horizontal routing center. Possible values are\n\t * between -0.5 and 0.5. This is the relative offset from the center used\n\t * for connecting edges. The type of this value is numeric. Value is\n\t * \"routingCenterX\".\n\t */\n\tSTYLE_ROUTING_CENTER_X: 'routingCenterX',\n\n\t/**\n\t * Variable: STYLE_ROUTING_CENTER_Y\n\t * \n\t * Defines the key for the vertical routing center. Possible values are\n\t * between -0.5 and 0.5. This is the relative offset from the center used\n\t * for connecting edges. The type of this value is numeric. Value is\n\t * \"routingCenterY\".\n\t */\n\tSTYLE_ROUTING_CENTER_Y: 'routingCenterY',\n\n\t/**\n\t * Variable: FONT_BOLD\n\t * \n\t * Constant for bold fonts. Default is 1.\n\t */\n\tFONT_BOLD: 1,\n\n\t/**\n\t * Variable: FONT_ITALIC\n\t * \n\t * Constant for italic fonts. Default is 2.\n\t */\n\tFONT_ITALIC: 2,\n\n\t/**\n\t * Variable: FONT_UNDERLINE\n\t * \n\t * Constant for underlined fonts. Default is 4.\n\t */\n\tFONT_UNDERLINE: 4,\n\n\t/**\n\t * Variable: FONT_STRIKETHROUGH\n\t * \n\t * Constant for strikthrough fonts. Default is 8.\n\t */\n\tFONT_STRIKETHROUGH: 8,\n\t\n\t/**\n\t * Variable: SHAPE_RECTANGLE\n\t * \n\t * Name under which <mxRectangleShape> is registered in <mxCellRenderer>.\n\t * Default is rectangle.\n\t */\n\tSHAPE_RECTANGLE: 'rectangle',\n\n\t/**\n\t * Variable: SHAPE_ELLIPSE\n\t * \n\t * Name under which <mxEllipse> is registered in <mxCellRenderer>.\n\t * Default is ellipse.\n\t */\n\tSHAPE_ELLIPSE: 'ellipse',\n\n\t/**\n\t * Variable: SHAPE_DOUBLE_ELLIPSE\n\t * \n\t * Name under which <mxDoubleEllipse> is registered in <mxCellRenderer>.\n\t * Default is doubleEllipse.\n\t */\n\tSHAPE_DOUBLE_ELLIPSE: 'doubleEllipse',\n\n\t/**\n\t * Variable: SHAPE_RHOMBUS\n\t * \n\t * Name under which <mxRhombus> is registered in <mxCellRenderer>.\n\t * Default is rhombus.\n\t */\n\tSHAPE_RHOMBUS: 'rhombus',\n\n\t/**\n\t * Variable: SHAPE_LINE\n\t * \n\t * Name under which <mxLine> is registered in <mxCellRenderer>.\n\t * Default is line.\n\t */\n\tSHAPE_LINE: 'line',\n\n\t/**\n\t * Variable: SHAPE_IMAGE\n\t * \n\t * Name under which <mxImageShape> is registered in <mxCellRenderer>.\n\t * Default is image.\n\t */\n\tSHAPE_IMAGE: 'image',\n\t\n\t/**\n\t * Variable: SHAPE_ARROW\n\t * \n\t * Name under which <mxArrow> is registered in <mxCellRenderer>.\n\t * Default is arrow.\n\t */\n\tSHAPE_ARROW: 'arrow',\n\t\n\t/**\n\t * Variable: SHAPE_ARROW_CONNECTOR\n\t * \n\t * Name under which <mxArrowConnector> is registered in <mxCellRenderer>.\n\t * Default is arrowConnector.\n\t */\n\tSHAPE_ARROW_CONNECTOR: 'arrowConnector',\n\t\n\t/**\n\t * Variable: SHAPE_LABEL\n\t * \n\t * Name under which <mxLabel> is registered in <mxCellRenderer>.\n\t * Default is label.\n\t */\n\tSHAPE_LABEL: 'label',\n\t\n\t/**\n\t * Variable: SHAPE_CYLINDER\n\t * \n\t * Name under which <mxCylinder> is registered in <mxCellRenderer>.\n\t * Default is cylinder.\n\t */\n\tSHAPE_CYLINDER: 'cylinder',\n\t\n\t/**\n\t * Variable: SHAPE_SWIMLANE\n\t * \n\t * Name under which <mxSwimlane> is registered in <mxCellRenderer>.\n\t * Default is swimlane.\n\t */\n\tSHAPE_SWIMLANE: 'swimlane',\n\t\t\n\t/**\n\t * Variable: SHAPE_CONNECTOR\n\t * \n\t * Name under which <mxConnector> is registered in <mxCellRenderer>.\n\t * Default is connector.\n\t */\n\tSHAPE_CONNECTOR: 'connector',\n\n\t/**\n\t * Variable: SHAPE_ACTOR\n\t * \n\t * Name under which <mxActor> is registered in <mxCellRenderer>.\n\t * Default is actor.\n\t */\n\tSHAPE_ACTOR: 'actor',\n\t\t\n\t/**\n\t * Variable: SHAPE_CLOUD\n\t * \n\t * Name under which <mxCloud> is registered in <mxCellRenderer>.\n\t * Default is cloud.\n\t */\n\tSHAPE_CLOUD: 'cloud',\n\t\t\n\t/**\n\t * Variable: SHAPE_TRIANGLE\n\t * \n\t * Name under which <mxTriangle> is registered in <mxCellRenderer>.\n\t * Default is triangle.\n\t */\n\tSHAPE_TRIANGLE: 'triangle',\n\t\t\n\t/**\n\t * Variable: SHAPE_HEXAGON\n\t * \n\t * Name under which <mxHexagon> is registered in <mxCellRenderer>.\n\t * Default is hexagon.\n\t */\n\tSHAPE_HEXAGON: 'hexagon',\n\n\t/**\n\t * Variable: ARROW_CLASSIC\n\t * \n\t * Constant for classic arrow markers.\n\t */\n\tARROW_CLASSIC: 'classic',\n\n\t/**\n\t * Variable: ARROW_CLASSIC_THIN\n\t * \n\t * Constant for thin classic arrow markers.\n\t */\n\tARROW_CLASSIC_THIN: 'classicThin',\n\n\t/**\n\t * Variable: ARROW_BLOCK\n\t * \n\t * Constant for block arrow markers.\n\t */\n\tARROW_BLOCK: 'block',\n\n\t/**\n\t * Variable: ARROW_BLOCK_THIN\n\t * \n\t * Constant for thin block arrow markers.\n\t */\n\tARROW_BLOCK_THIN: 'blockThin',\n\n\t/**\n\t * Variable: ARROW_OPEN\n\t * \n\t * Constant for open arrow markers.\n\t */\n\tARROW_OPEN: 'open',\n\n\t/**\n\t * Variable: ARROW_OPEN_THIN\n\t * \n\t * Constant for thin open arrow markers.\n\t */\n\tARROW_OPEN_THIN: 'openThin',\n\n\t/**\n\t * Variable: ARROW_OVAL\n\t * \n\t * Constant for oval arrow markers.\n\t */\n\tARROW_OVAL: 'oval',\n\n\t/**\n\t * Variable: ARROW_DIAMOND\n\t * \n\t * Constant for diamond arrow markers.\n\t */\n\tARROW_DIAMOND: 'diamond',\n\n\t/**\n\t * Variable: ARROW_DIAMOND_THIN\n\t * \n\t * Constant for thin diamond arrow markers.\n\t */\n\tARROW_DIAMOND_THIN: 'diamondThin',\n\n\t/**\n\t * Variable: ALIGN_LEFT\n\t * \n\t * Constant for left horizontal alignment. Default is left.\n\t */\n\tALIGN_LEFT: 'left',\n\n\t/**\n\t * Variable: ALIGN_CENTER\n\t * \n\t * Constant for center horizontal alignment. Default is center.\n\t */\n\tALIGN_CENTER: 'center',\n\n\t/**\n\t * Variable: ALIGN_RIGHT\n\t * \n\t * Constant for right horizontal alignment. Default is right.\n\t */\n\tALIGN_RIGHT: 'right',\n\n\t/**\n\t * Variable: ALIGN_TOP\n\t * \n\t * Constant for top vertical alignment. Default is top.\n\t */\n\tALIGN_TOP: 'top',\n\n\t/**\n\t * Variable: ALIGN_MIDDLE\n\t * \n\t * Constant for middle vertical alignment. Default is middle.\n\t */\n\tALIGN_MIDDLE: 'middle',\n\n\t/**\n\t * Variable: ALIGN_BOTTOM\n\t * \n\t * Constant for bottom vertical alignment. Default is bottom.\n\t */\n\tALIGN_BOTTOM: 'bottom',\n\n\t/**\n\t * Variable: DIRECTION_NORTH\n\t * \n\t * Constant for direction north. Default is north.\n\t */\n\tDIRECTION_NORTH: 'north',\n\n\t/**\n\t * Variable: DIRECTION_SOUTH\n\t * \n\t * Constant for direction south. Default is south.\n\t */\n\tDIRECTION_SOUTH: 'south',\n\n\t/**\n\t * Variable: DIRECTION_EAST\n\t * \n\t * Constant for direction east. Default is east.\n\t */\n\tDIRECTION_EAST: 'east',\n\n\t/**\n\t * Variable: DIRECTION_WEST\n\t * \n\t * Constant for direction west. Default is west.\n\t */\n\tDIRECTION_WEST: 'west',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_DEFAULT\n\t * \n\t * Constant for text direction default. Default is an empty string. Use\n\t * this value to use the default text direction of the operating system. \n\t */\n\tTEXT_DIRECTION_DEFAULT: '',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_AUTO\n\t * \n\t * Constant for text direction automatic. Default is auto. Use this value\n\t * to find the direction for a given text with <mxText.getAutoDirection>. \n\t */\n\tTEXT_DIRECTION_AUTO: 'auto',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_LTR\n\t * \n\t * Constant for text direction left to right. Default is ltr. Use this\n\t * value for left to right text direction.\n\t */\n\tTEXT_DIRECTION_LTR: 'ltr',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_RTL\n\t * \n\t * Constant for text direction right to left. Default is rtl. Use this\n\t * value for right to left text direction.\n\t */\n\tTEXT_DIRECTION_RTL: 'rtl',\n\n\t/**\n\t * Variable: DIRECTION_MASK_NONE\n\t * \n\t * Constant for no direction.\n\t */\n\tDIRECTION_MASK_NONE: 0,\n\n\t/**\n\t * Variable: DIRECTION_MASK_WEST\n\t * \n\t * Bitwise mask for west direction.\n\t */\n\tDIRECTION_MASK_WEST: 1,\n\t\n\t/**\n\t * Variable: DIRECTION_MASK_NORTH\n\t * \n\t * Bitwise mask for north direction.\n\t */\n\tDIRECTION_MASK_NORTH: 2,\n\n\t/**\n\t * Variable: DIRECTION_MASK_SOUTH\n\t * \n\t * Bitwise mask for south direction.\n\t */\n\tDIRECTION_MASK_SOUTH: 4,\n\n\t/**\n\t * Variable: DIRECTION_MASK_EAST\n\t * \n\t * Bitwise mask for east direction.\n\t */\n\tDIRECTION_MASK_EAST: 8,\n\t\n\t/**\n\t * Variable: DIRECTION_MASK_ALL\n\t * \n\t * Bitwise mask for all directions.\n\t */\n\tDIRECTION_MASK_ALL: 15,\n\n\t/**\n\t * Variable: ELBOW_VERTICAL\n\t * \n\t * Constant for elbow vertical. Default is horizontal.\n\t */\n\tELBOW_VERTICAL: 'vertical',\n\n\t/**\n\t * Variable: ELBOW_HORIZONTAL\n\t * \n\t * Constant for elbow horizontal. Default is horizontal.\n\t */\n\tELBOW_HORIZONTAL: 'horizontal',\n\n\t/**\n\t * Variable: EDGESTYLE_ELBOW\n\t * \n\t * Name of the elbow edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_ELBOW: 'elbowEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_ENTITY_RELATION\n\t * \n\t * Name of the entity relation edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_ENTITY_RELATION: 'entityRelationEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_LOOP\n\t * \n\t * Name of the loop edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_LOOP: 'loopEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_SIDETOSIDE\n\t * \n\t * Name of the side to side edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_SIDETOSIDE: 'sideToSideEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_TOPTOBOTTOM\n\t * \n\t * Name of the top to bottom edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_TOPTOBOTTOM: 'topToBottomEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_ORTHOGONAL\n\t * \n\t * Name of the generic orthogonal edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_ORTHOGONAL: 'orthogonalEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_SEGMENT\n\t * \n\t * Name of the generic segment edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_SEGMENT: 'segmentEdgeStyle',\n \n\t/**\n\t * Variable: PERIMETER_ELLIPSE\n\t * \n\t * Name of the ellipse perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_ELLIPSE: 'ellipsePerimeter',\n\n\t/**\n\t * Variable: PERIMETER_RECTANGLE\n\t *\n\t * Name of the rectangle perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_RECTANGLE: 'rectanglePerimeter',\n\n\t/**\n\t * Variable: PERIMETER_RHOMBUS\n\t * \n\t * Name of the rhombus perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_RHOMBUS: 'rhombusPerimeter',\n\n\t/**\n\t * Variable: PERIMETER_HEXAGON\n\t * \n\t * Name of the hexagon perimeter. Can be used as a string value \n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_HEXAGON: 'hexagonPerimeter',\n\n\t/**\n\t * Variable: PERIMETER_TRIANGLE\n\t * \n\t * Name of the triangle perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_TRIANGLE: 'trianglePerimeter'\n};\n\n__mxOutput.mxConstants = typeof mxConstants !== 'undefined' ? mxConstants : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEventObject\n * \n * The mxEventObject is a wrapper for all properties of a single event.\n * Additionally, it also offers functions to consume the event and check if it\n * was consumed as follows:\n * \n * (code)\n * evt.consume();\n * INV: evt.isConsumed() == true\n * (end)\n * \n * Constructor: mxEventObject\n *\n * Constructs a new event object with the specified name. An optional\n * sequence of key, value pairs can be appended to define properties.\n * \n * Example:\n *\n * (code)\n * new mxEventObject(\"eventName\", key1, val1, .., keyN, valN)\n * (end)\n */\nfunction mxEventObject(name)\n{\n\tthis.name = name;\n\tthis.properties = [];\n\t\n\tfor (var i = 1; i < arguments.length; i += 2)\n\t{\n\t\tif (arguments[i + 1] != null)\n\t\t{\n\t\t\tthis.properties[arguments[i]] = arguments[i + 1];\n\t\t}\n\t}\n};\n\n/**\n * Variable: name\n *\n * Holds the name.\n */\nmxEventObject.prototype.name = null;\n\n/**\n * Variable: properties\n *\n * Holds the properties as an associative array.\n */\nmxEventObject.prototype.properties = null;\n\n/**\n * Variable: consumed\n *\n * Holds the consumed state. Default is false.\n */\nmxEventObject.prototype.consumed = false;\n\n/**\n * Function: getName\n * \n * Returns <name>.\n */\nmxEventObject.prototype.getName = function()\n{\n\treturn this.name;\n};\n\n/**\n * Function: getProperties\n * \n * Returns <properties>.\n */\nmxEventObject.prototype.getProperties = function()\n{\n\treturn this.properties;\n};\n\n/**\n * Function: getProperty\n * \n * Returns the property for the given key.\n */\nmxEventObject.prototype.getProperty = function(key)\n{\n\treturn this.properties[key];\n};\n\n/**\n * Function: isConsumed\n *\n * Returns true if the event has been consumed.\n */\nmxEventObject.prototype.isConsumed = function()\n{\n\treturn this.consumed;\n};\n\n/**\n * Function: consume\n *\n * Consumes the event.\n */\nmxEventObject.prototype.consume = function()\n{\n\tthis.consumed = true;\n};\n\n__mxOutput.mxEventObject = typeof mxEventObject !== 'undefined' ? mxEventObject : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMouseEvent\n * \n * Base class for all mouse events in mxGraph. A listener for this event should\n * implement the following methods:\n * \n * (code)\n * graph.addMouseListener(\n * {\n *   mouseDown: function(sender, evt)\n *   {\n *     mxLog.debug('mouseDown');\n *   },\n *   mouseMove: function(sender, evt)\n *   {\n *     mxLog.debug('mouseMove');\n *   },\n *   mouseUp: function(sender, evt)\n *   {\n *     mxLog.debug('mouseUp');\n *   }\n * });\n * (end)\n * \n * Constructor: mxMouseEvent\n *\n * Constructs a new event object for the given arguments.\n * \n * Parameters:\n * \n * evt - Native mouse event.\n * state - Optional <mxCellState> under the mouse.\n * \n */\nfunction mxMouseEvent(evt, state)\n{\n\tthis.evt = evt;\n\tthis.state = state;\n\tthis.sourceState = state;\n};\n\n/**\n * Variable: consumed\n *\n * Holds the consumed state of this event.\n */\nmxMouseEvent.prototype.consumed = false;\n\n/**\n * Variable: evt\n *\n * Holds the inner event object.\n */\nmxMouseEvent.prototype.evt = null;\n\n/**\n * Variable: graphX\n *\n * Holds the x-coordinate of the event in the graph. This value is set in\n * <mxGraph.fireMouseEvent>.\n */\nmxMouseEvent.prototype.graphX = null;\n\n/**\n * Variable: graphY\n *\n * Holds the y-coordinate of the event in the graph. This value is set in\n * <mxGraph.fireMouseEvent>.\n */\nmxMouseEvent.prototype.graphY = null;\n\n/**\n * Variable: state\n *\n * Holds the optional <mxCellState> associated with this event.\n */\nmxMouseEvent.prototype.state = null;\n\n/**\n * Variable: sourceState\n * \n * Holds the <mxCellState> that was passed to the constructor. This can be\n * different from <state> depending on the result of <mxGraph.getEventState>.\n */\nmxMouseEvent.prototype.sourceState = null;\n\n/**\n * Function: getEvent\n * \n * Returns <evt>.\n */\nmxMouseEvent.prototype.getEvent = function()\n{\n\treturn this.evt;\n};\n\n/**\n * Function: getSource\n * \n * Returns the target DOM element using <mxEvent.getSource> for <evt>.\n */\nmxMouseEvent.prototype.getSource = function()\n{\n\treturn mxEvent.getSource(this.evt);\n};\n\n/**\n * Function: isSource\n * \n * Returns true if the given <mxShape> is the source of <evt>.\n */\nmxMouseEvent.prototype.isSource = function(shape)\n{\n\tif (shape != null)\n\t{\n\t\treturn mxUtils.isAncestorNode(shape.node, this.getSource());\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getX\n * \n * Returns <evt.clientX>.\n */\nmxMouseEvent.prototype.getX = function()\n{\n\treturn mxEvent.getClientX(this.getEvent());\n};\n\n/**\n * Function: getY\n * \n * Returns <evt.clientY>.\n */\nmxMouseEvent.prototype.getY = function()\n{\n\treturn mxEvent.getClientY(this.getEvent());\n};\n\n/**\n * Function: getGraphX\n * \n * Returns <graphX>.\n */\nmxMouseEvent.prototype.getGraphX = function()\n{\n\treturn this.graphX;\n};\n\n/**\n * Function: getGraphY\n * \n * Returns <graphY>.\n */\nmxMouseEvent.prototype.getGraphY = function()\n{\n\treturn this.graphY;\n};\n\n/**\n * Function: getState\n * \n * Returns <state>.\n */\nmxMouseEvent.prototype.getState = function()\n{\n\treturn this.state;\n};\n\n/**\n * Function: getCell\n * \n * Returns the <mxCell> in <state> is not null.\n */\nmxMouseEvent.prototype.getCell = function()\n{\n\tvar state = this.getState();\n\t\n\tif (state != null)\n\t{\n\t\treturn state.cell;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: isPopupTrigger\n *\n * Returns true if the event is a popup trigger.\n */\nmxMouseEvent.prototype.isPopupTrigger = function()\n{\n\treturn mxEvent.isPopupTrigger(this.getEvent());\n};\n\n/**\n * Function: isConsumed\n *\n * Returns <consumed>.\n */\nmxMouseEvent.prototype.isConsumed = function()\n{\n\treturn this.consumed;\n};\n\n/**\n * Function: consume\n *\n * Sets <consumed> to true and invokes preventDefault on the native event\n * if such a method is defined. This is used mainly to avoid the cursor from\n * being changed to a text cursor in Webkit. You can use the preventDefault\n * flag to disable this functionality.\n * \n * Parameters:\n * \n * preventDefault - Specifies if the native event should be canceled. Default\n * is true.\n */\nmxMouseEvent.prototype.consume = function(preventDefault)\n{\n\tpreventDefault = (preventDefault != null) ? preventDefault :\n\t\t(this.evt.touches != null || mxEvent.isMouseEvent(this.evt));\n\t\n\tif (preventDefault && this.evt.preventDefault)\n\t{\n\t\tthis.evt.preventDefault();\n\t}\n\n\t// Workaround for images being dragged in IE\n\t// Does not change returnValue in Opera\n\tif (mxClient.IS_IE)\n\t{\n\t\tthis.evt.returnValue = true;\n\t}\n\n\t// Sets local consumed state\n\tthis.consumed = true;\n};\n\n__mxOutput.mxMouseEvent = typeof mxMouseEvent !== 'undefined' ? mxMouseEvent : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEventSource\n *\n * Base class for objects that dispatch named events. To create a subclass that\n * inherits from mxEventSource, the following code is used.\n *\n * (code)\n * function MyClass() { };\n *\n * MyClass.prototype = new mxEventSource();\n * MyClass.prototype.constructor = MyClass;\n * (end)\n *\n * Known Subclasses:\n *\n * <mxGraphModel>, <mxGraph>, <mxGraphView>, <mxEditor>, <mxCellOverlay>,\n * <mxToolbar>, <mxWindow>\n * \n * Constructor: mxEventSource\n *\n * Constructs a new event source.\n */\nfunction mxEventSource(eventSource)\n{\n\tthis.setEventSource(eventSource);\n};\n\n/**\n * Variable: eventListeners\n *\n * Holds the event names and associated listeners in an array. The array\n * contains the event name followed by the respective listener for each\n * registered listener.\n */\nmxEventSource.prototype.eventListeners = null;\n\n/**\n * Variable: eventsEnabled\n *\n * Specifies if events can be fired. Default is true.\n */\nmxEventSource.prototype.eventsEnabled = true;\n\n/**\n * Variable: eventSource\n *\n * Optional source for events. Default is null.\n */\nmxEventSource.prototype.eventSource = null;\n\n/**\n * Function: isEventsEnabled\n * \n * Returns <eventsEnabled>.\n */\nmxEventSource.prototype.isEventsEnabled = function()\n{\n\treturn this.eventsEnabled;\n};\n\n/**\n * Function: setEventsEnabled\n * \n * Sets <eventsEnabled>.\n */\nmxEventSource.prototype.setEventsEnabled = function(value)\n{\n\tthis.eventsEnabled = value;\n};\n\n/**\n * Function: getEventSource\n * \n * Returns <eventSource>.\n */\nmxEventSource.prototype.getEventSource = function()\n{\n\treturn this.eventSource;\n};\n\n/**\n * Function: setEventSource\n * \n * Sets <eventSource>.\n */\nmxEventSource.prototype.setEventSource = function(value)\n{\n\tthis.eventSource = value;\n};\n\n/**\n * Function: addListener\n *\n * Binds the specified function to the given event name. If no event name\n * is given, then the listener is registered for all events.\n * \n * The parameters of the listener are the sender and an <mxEventObject>.\n */\nmxEventSource.prototype.addListener = function(name, funct)\n{\n\tif (this.eventListeners == null)\n\t{\n\t\tthis.eventListeners = [];\n\t}\n\t\n\tthis.eventListeners.push(name);\n\tthis.eventListeners.push(funct);\n};\n\n/**\n * Function: removeListener\n *\n * Removes all occurrences of the given listener from <eventListeners>.\n */\nmxEventSource.prototype.removeListener = function(funct)\n{\n\tif (this.eventListeners != null)\n\t{\n\t\tvar i = 0;\n\t\t\n\t\twhile (i < this.eventListeners.length)\n\t\t{\n\t\t\tif (this.eventListeners[i+1] == funct)\n\t\t\t{\n\t\t\t\tthis.eventListeners.splice(i, 2);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ti += 2;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: fireEvent\n *\n * Dispatches the given event to the listeners which are registered for\n * the event. The sender argument is optional. The current execution scope\n * (\"this\") is used for the listener invocation (see <mxUtils.bind>).\n *\n * Example:\n *\n * (code)\n * fireEvent(new mxEventObject(\"eventName\", key1, val1, .., keyN, valN))\n * (end)\n * \n * Parameters:\n *\n * evt - <mxEventObject> that represents the event.\n * sender - Optional sender to be passed to the listener. Default value is\n * the return value of <getEventSource>.\n */\nmxEventSource.prototype.fireEvent = function(evt, sender)\n{\n\tif (this.eventListeners != null && this.isEventsEnabled())\n\t{\n\t\tif (evt == null)\n\t\t{\n\t\t\tevt = new mxEventObject();\n\t\t}\n\t\t\n\t\tif (sender == null)\n\t\t{\n\t\t\tsender = this.getEventSource();\n\t\t}\n\n\t\tif (sender == null)\n\t\t{\n\t\t\tsender = this;\n\t\t}\n\n\t\tvar args = [sender, evt];\n\t\t\n\t\tfor (var i = 0; i < this.eventListeners.length; i += 2)\n\t\t{\n\t\t\tvar listen = this.eventListeners[i];\n\t\t\t\n\t\t\tif (listen == null || listen == evt.getName())\n\t\t\t{\n\t\t\t\tthis.eventListeners[i+1].apply(this, args);\n\t\t\t}\n\t\t}\n\t}\n};\n\n__mxOutput.mxEventSource = typeof mxEventSource !== 'undefined' ? mxEventSource : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxEvent =\n{\n\n\t/**\n\t * Class: mxEvent\n\t * \n\t * Cross-browser DOM event support. For internal event handling,\n\t * <mxEventSource> and the graph event dispatch loop in <mxGraph> are used.\n\t * \n\t * Memory Leaks:\n\t * \n\t * Use this class for adding and removing listeners to/from DOM nodes. The\n\t * <removeAllListeners> function is provided to remove all listeners that\n\t * have been added using <addListener>. The function should be invoked when\n\t * the last reference is removed in the JavaScript code, typically when the\n\t * referenced DOM node is removed from the DOM.\n\t *\n\t * Function: addListener\n\t * \n\t * Binds the function to the specified event on the given element. Use\n\t * <mxUtils.bind> in order to bind the \"this\" keyword inside the function\n\t * to a given execution scope.\n\t */\n\taddListener: function()\n\t{\n\t\tvar updateListenerList = function(element, eventName, funct)\n\t\t{\n\t\t\tif (element.mxListenerList == null)\n\t\t\t{\n\t\t\t\telement.mxListenerList = [];\n\t\t\t}\n\t\t\t\n\t\t\tvar entry = {name: eventName, f: funct};\n\t\t\telement.mxListenerList.push(entry);\n\t\t};\n\t\t\n\t\tif (window.addEventListener)\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.addEventListener(eventName, funct, false);\n\t\t\t\tupdateListenerList(element, eventName, funct);\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.attachEvent('on' + eventName, funct);\n\t\t\t\tupdateListenerList(element, eventName, funct);\t\t\t\t\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: removeListener\n\t *\n\t * Removes the specified listener from the given element.\n\t */\n\tremoveListener: function()\n\t{\n\t\tvar updateListener = function(element, eventName, funct)\n\t\t{\n\t\t\tif (element.mxListenerList != null)\n\t\t\t{\n\t\t\t\tvar listenerCount = element.mxListenerList.length;\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < listenerCount; i++)\n\t\t\t\t{\n\t\t\t\t\tvar entry = element.mxListenerList[i];\n\t\t\t\t\t\n\t\t\t\t\tif (entry.f == funct)\n\t\t\t\t\t{\n\t\t\t\t\t\telement.mxListenerList.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (element.mxListenerList.length == 0)\n\t\t\t\t{\n\t\t\t\t\telement.mxListenerList = null;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tif (window.removeEventListener)\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.removeEventListener(eventName, funct, false);\n\t\t\t\tupdateListener(element, eventName, funct);\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.detachEvent('on' + eventName, funct);\n\t\t\t\tupdateListener(element, eventName, funct);\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: removeAllListeners\n\t * \n\t * Removes all listeners from the given element.\n\t */\n\tremoveAllListeners: function(element)\n\t{\n\t\tvar list = element.mxListenerList;\n\n\t\tif (list != null)\n\t\t{\n\t\t\twhile (list.length > 0)\n\t\t\t{\n\t\t\t\tvar entry = list[0];\n\t\t\t\tmxEvent.removeListener(element, entry.name, entry.f);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: addGestureListeners\n\t * \n\t * Adds the given listeners for touch, mouse and/or pointer events. If\n\t * <mxClient.IS_POINTER> is true then pointer events will be registered,\n\t * else the respective mouse events will be registered. If <mxClient.IS_POINTER>\n\t * is false and <mxClient.IS_TOUCH> is true then the respective touch events\n\t * will be registered as well as the mouse events.\n\t */\n\taddGestureListeners: function(node, startListener, moveListener, endListener)\n\t{\n\t\tif (startListener != null)\n\t\t{\n\t\t\tmxEvent.addListener(node, (mxClient.IS_POINTER) ? 'pointerdown' : 'mousedown', startListener);\n\t\t}\n\t\t\n\t\tif (moveListener != null)\n\t\t{\n\t\t\tmxEvent.addListener(node, (mxClient.IS_POINTER) ? 'pointermove' : 'mousemove', moveListener);\n\t\t}\n\t\t\n\t\tif (endListener != null)\n\t\t{\n\t\t\tmxEvent.addListener(node, (mxClient.IS_POINTER) ? 'pointerup' : 'mouseup', endListener);\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_POINTER && mxClient.IS_TOUCH)\n\t\t{\n\t\t\tif (startListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(node, 'touchstart', startListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (moveListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(node, 'touchmove', moveListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (endListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(node, 'touchend', endListener);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: removeGestureListeners\n\t * \n\t * Removes the given listeners from mousedown, mousemove, mouseup and the\n\t * respective touch events if <mxClient.IS_TOUCH> is true.\n\t */\n\tremoveGestureListeners: function(node, startListener, moveListener, endListener)\n\t{\n\t\tif (startListener != null)\n\t\t{\n\t\t\tmxEvent.removeListener(node, (mxClient.IS_POINTER) ? 'pointerdown' : 'mousedown', startListener);\n\t\t}\n\t\t\n\t\tif (moveListener != null)\n\t\t{\n\t\t\tmxEvent.removeListener(node, (mxClient.IS_POINTER) ? 'pointermove' : 'mousemove', moveListener);\n\t\t}\n\t\t\n\t\tif (endListener != null)\n\t\t{\n\t\t\tmxEvent.removeListener(node, (mxClient.IS_POINTER) ? 'pointerup' : 'mouseup', endListener);\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_POINTER && mxClient.IS_TOUCH)\n\t\t{\n\t\t\tif (startListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeListener(node, 'touchstart', startListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (moveListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeListener(node, 'touchmove', moveListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (endListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeListener(node, 'touchend', endListener);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: redirectMouseEvents\n\t *\n\t * Redirects the mouse events from the given DOM node to the graph dispatch\n\t * loop using the event and given state as event arguments. State can\n\t * either be an instance of <mxCellState> or a function that returns an\n\t * <mxCellState>. The down, move, up and dblClick arguments are optional\n\t * functions that take the trigger event as arguments and replace the\n\t * default behaviour.\n\t */\n\tredirectMouseEvents: function(node, graph, state, down, move, up, dblClick)\n\t{\n\t\tvar getState = function(evt)\n\t\t{\n\t\t\treturn (typeof(state) == 'function') ? state(evt) : state;\n\t\t};\n\t\t\n\t\tmxEvent.addGestureListeners(node, function (evt)\n\t\t{\n\t\t\tif (down != null)\n\t\t\t{\n\t\t\t\tdown(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t},\n\t\tfunction (evt)\n\t\t{\n\t\t\tif (move != null)\n\t\t\t{\n\t\t\t\tmove(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t},\n\t\tfunction (evt)\n\t\t{\n\t\t\tif (up != null)\n\t\t\t{\n\t\t\t\tup(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t});\n\n\t\tmxEvent.addListener(node, 'dblclick', function (evt)\n\t\t{\n\t\t\tif (dblClick != null)\n\t\t\t{\n\t\t\t\tdblClick(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tvar tmp = getState(evt);\n\t\t\t\tgraph.dblClick(evt, (tmp != null) ? tmp.cell : null);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Function: release\n\t * \n\t * Removes the known listeners from the given DOM node and its descendants.\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM node to remove the listeners from.\n\t */\n\trelease: function(element)\n\t{\n\t\ttry\n\t\t{\n\t\t\tif (element != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeAllListeners(element);\n\t\t\t\t\n\t\t\t\tvar children = element.childNodes;\n\t\t\t\t\n\t\t\t\tif (children != null)\n\t\t\t\t{\n\t\t\t        var childCount = children.length;\n\t\t\t        \n\t\t\t        for (var i = 0; i < childCount; i += 1)\n\t\t\t        {\n\t\t\t        \tmxEvent.release(children[i]);\n\t\t\t        }\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\t// ignores errors as this is typically called in cleanup code\n\t\t}\n\t},\n\n\t/**\n\t * Function: addMouseWheelListener\n\t * \n\t * Installs the given function as a handler for mouse wheel events. The\n\t * function has two arguments: the mouse event and a boolean that specifies\n\t * if the wheel was moved up or down.\n\t * \n\t * This has been tested with IE 6 and 7, Firefox (all versions), Opera and\n\t * Safari. It does currently not work on Safari for Mac.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * mxEvent.addMouseWheelListener(function (evt, up, pinch)\n\t * {\n\t *   mxLog.show();\n\t *   mxLog.debug('mouseWheel: up='+up);\n\t * });\n\t *(end)\n\t * \n\t * Parameters:\n\t * \n\t * funct - Handler function that takes the event argument, a boolean argument\n\t * for the mousewheel direction and a boolean to specify if the underlying\n\t * event was a pinch gesture on a touch device.\n\t * target - Target for installing the listener in Google Chrome. See \n\t * https://www.chromestatus.com/features/6662647093133312.\n\t */\n\taddMouseWheelListener: function(funct, target)\n\t{\n\t\tif (funct != null)\n\t\t{\n\t\t\tvar wheelHandler = function(evt)\n\t\t\t{\n\t\t\t\t// IE does not give an event object but the\n\t\t\t\t// global event object is the mousewheel event\n\t\t\t\t// at this point in time.\n\t\t\t\tif (evt == null)\n\t\t\t\t{\n\t\t\t\t\tevt = window.event;\n\t\t\t\t}\n\t\t\t\n\t\t\t\t//To prevent window zoom on trackpad pinch\n\t\t\t\tif (evt.ctrlKey) \n\t\t\t\t{\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t}\n\n\t\t\t\tvar delta = -evt.deltaY;\n\t\t\t\t\n\t\t\t\t// Handles the event using the given function\n\t\t\t\tif (Math.abs(evt.deltaX) > 0.5 || Math.abs(evt.deltaY) > 0.5)\n\t\t\t\t{\n\t\t\t\t\tfunct(evt, (evt.deltaY == 0) ?  -evt.deltaX > 0 : -evt.deltaY > 0);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\ttarget = target != null ? target : window;\n\t\t\t\t\t\n\t\t\tif (mxClient.IS_SF && !mxClient.IS_TOUCH)\n\t\t\t{\n\t\t\t\tvar scale = 1;\n\t\t\t\t\n\t\t\t\tmxEvent.addListener(target, 'gesturestart', function(evt)\n\t\t\t\t{\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\tscale = 1;\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tmxEvent.addListener(target, 'gesturechange', function(evt)\n\t\t\t\t{\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\tvar diff = scale - evt.scale;\n\t\t\t\t\t\n\t\t\t\t\tif (Math.abs(diff) > 0.2)\n\t\t\t\t\t{\n\t\t\t\t\t\tfunct(evt, diff < 0, true);\n\t\t\t\t\t\tscale = evt.scale;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tmxEvent.addListener(target, 'gestureend', function(evt)\n\t\t\t\t{\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar evtCache = [];\n\t\t\t\tvar dx0 = 0;\n\t\t\t\tvar dy0 = 0;\n\t\t\t\t\n\t\t\t\t// Adds basic listeners for graph event dispatching\n\t\t\t\tmxEvent.addGestureListeners(target, mxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tif (!mxEvent.isMouseEvent(evt) && evt.pointerId != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tevtCache.push(evt);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tif (!mxEvent.isMouseEvent(evt) && evtCache.length == 2)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Find this event in the cache and update its record with this event\n\t\t\t\t\t\tfor (var i = 0; i < evtCache.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (evt.pointerId == evtCache[i].pointerId)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tevtCache[i] = evt;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t   \t// Calculate the distance between the two pointers\n\t\t\t\t\t\tvar dx = Math.abs(evtCache[0].clientX - evtCache[1].clientX);\n\t\t\t\t\t\tvar dy = Math.abs(evtCache[0].clientY - evtCache[1].clientY);\n\t\t\t\t\t\tvar tx = Math.abs(dx - dx0);\n\t\t\t\t\t\tvar ty = Math.abs(dy - dy0);\n\t\t\t\t\t\n\t\t\t\t\t\tif (tx > mxEvent.PINCH_THRESHOLD || ty > mxEvent.PINCH_THRESHOLD)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar cx = evtCache[0].clientX + (evtCache[1].clientX - evtCache[0].clientX) / 2;\n\t\t\t\t\t\t\tvar cy = evtCache[0].clientY + (evtCache[1].clientY - evtCache[0].clientY) / 2;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfunct(evtCache[0], (tx > ty) ? dx > dx0 : dy > dy0, true, cx, cy);\n\t\t\t\t\t\t\n\t\t\t\t\t\t   \t// Cache the distance for the next move event \n\t\t\t\t\t\t\tdx0 = dx;\n\t\t\t\t\t\t\tdy0 = dy;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tevtCache = [];\n\t\t\t\t\tdx0 = 0;\n\t\t\t\t\tdy0 = 0;\n\t\t\t\t}));\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.addListener(target, 'wheel', wheelHandler);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: disableContextMenu\n\t *\n\t * Disables the context menu for the given element.\n\t */\n\tdisableContextMenu: function(element)\n\t{\n\t\tmxEvent.addListener(element, 'contextmenu', function(evt)\n\t\t{\n\t\t\tif (evt.preventDefault)\n\t\t\t{\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n\t\t});\n\t},\n\t\n\t/**\n\t * Function: getSource\n\t * \n\t * Returns the event's target or srcElement depending on the browser.\n\t */\n\tgetSource: function(evt)\n\t{\n\t\treturn (evt.srcElement != null) ? evt.srcElement : evt.target;\n\t},\n\n\t/**\n\t * Function: isConsumed\n\t * \n\t * Returns true if the event has been consumed using <consume>.\n\t */\n\tisConsumed: function(evt)\n\t{\n\t\treturn evt.isConsumed != null && evt.isConsumed;\n\t},\n\n\t/**\n\t * Function: isTouchEvent\n\t * \n\t * Returns true if the event was generated using a touch device (not a pen or mouse).\n\t */\n\tisTouchEvent: function(evt)\n\t{\n\t\treturn (evt.pointerType != null) ? (evt.pointerType == 'touch' || evt.pointerType ===\n\t\t\tevt.MSPOINTER_TYPE_TOUCH) : ((evt.mozInputSource != null) ?\n\t\t\t\t\tevt.mozInputSource == 5 : evt.type.indexOf('touch') == 0);\n\t},\n\n\t/**\n\t * Function: isPenEvent\n\t * \n\t * Returns true if the event was generated using a pen (not a touch device or mouse).\n\t */\n\tisPenEvent: function(evt)\n\t{\n\t\treturn (evt.pointerType != null) ? (evt.pointerType == 'pen' || evt.pointerType ===\n\t\t\tevt.MSPOINTER_TYPE_PEN) : ((evt.mozInputSource != null) ?\n\t\t\t\t\tevt.mozInputSource == 2 : evt.type.indexOf('pen') == 0);\n\t},\n\n\t/**\n\t * Function: isMultiTouchEvent\n\t * \n\t * Returns true if the event was generated using a touch device (not a pen or mouse).\n\t */\n\tisMultiTouchEvent: function(evt)\n\t{\n\t\treturn (evt.type != null && evt.type.indexOf('touch') == 0 && evt.touches != null && evt.touches.length > 1);\n\t},\n\n\t/**\n\t * Function: isMouseEvent\n\t * \n\t * Returns true if the event was generated using a mouse (not a pen or touch device).\n\t */\n\tisMouseEvent: function(evt)\n\t{\n\t\treturn (evt.pointerType != null) ? (evt.pointerType == 'mouse' || evt.pointerType ===\n\t\t\tevt.MSPOINTER_TYPE_MOUSE) : ((evt.mozInputSource != null) ?\n\t\t\t\tevt.mozInputSource == 1 : evt.type.indexOf('mouse') == 0);\n\t},\n\t\n\t/**\n\t * Function: isLeftMouseButton\n\t * \n\t * Returns true if the left mouse button is pressed for the given event.\n\t * To check if a button is pressed during a mouseMove you should use the\n\t * <mxGraph.isMouseDown> property. Note that this returns true in Firefox\n\t * for control+left-click on the Mac.\n\t */\n\tisLeftMouseButton: function(evt)\n\t{\n\t\t// Special case for mousemove and mousedown we check the buttons\n\t\t// if it exists because which is 0 even if no button is pressed\n\t\tif ('buttons' in evt && (evt.type == 'mousedown' || evt.type == 'mousemove'))\n\t\t{\n\t\t\treturn evt.buttons == 1;\n\t\t}\n\t\telse if ('which' in evt)\n\t\t{\n\t        return evt.which === 1;\n\t    }\n\t\telse\n\t\t{\n\t        return evt.button === 1;\n\t    }\n\t},\n\t\n\t/**\n\t * Function: isMiddleMouseButton\n\t * \n\t * Returns true if the middle mouse button is pressed for the given event.\n\t * To check if a button is pressed during a mouseMove you should use the\n\t * <mxGraph.isMouseDown> property.\n\t */\n\tisMiddleMouseButton: function(evt)\n\t{\n\t\tif ('which' in evt)\n\t\t{\n\t        return evt.which === 2;\n\t    }\n\t\telse\n\t\t{\n\t        return evt.button === 4;\n\t    }\n\t},\n\t\n\t/**\n\t * Function: isRightMouseButton\n\t * \n\t * Returns true if the right mouse button was pressed. Note that this\n\t * button might not be available on some systems. For handling a popup\n\t * trigger <isPopupTrigger> should be used.\n\t */\n\tisRightMouseButton: function(evt)\n\t{\n\t\tif ('which' in evt)\n\t\t{\n\t        return evt.which === 3;\n\t    }\n\t\telse\n\t\t{\n\t        return evt.button === 2;\n\t    }\n\t},\n\n\t/**\n\t * Function: isPopupTrigger\n\t * \n\t * Returns true if the event is a popup trigger. This implementation\n\t * returns true if the right button or the left button and control was\n\t * pressed on a Mac.\n\t */\n\tisPopupTrigger: function(evt)\n\t{\n\t\treturn mxEvent.isRightMouseButton(evt) || (mxClient.IS_MAC && mxEvent.isControlDown(evt) &&\n\t\t\t!mxEvent.isShiftDown(evt) && !mxEvent.isMetaDown(evt) && !mxEvent.isAltDown(evt));\n\t},\n\n\t/**\n\t * Function: isShiftDown\n\t * \n\t * Returns true if the shift key is pressed for the given event.\n\t */\n\tisShiftDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.shiftKey : false;\n\t},\n\n\t/**\n\t * Function: isAltDown\n\t * \n\t * Returns true if the alt key is pressed for the given event.\n\t */\n\tisAltDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.altKey : false;\n\t},\n\n\t/**\n\t * Function: isControlDown\n\t * \n\t * Returns true if the control key is pressed for the given event.\n\t */\n\tisControlDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.ctrlKey : false;\n\t},\n\n\t/**\n\t * Function: isMetaDown\n\t * \n\t * Returns true if the meta key is pressed for the given event.\n\t */\n\tisMetaDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.metaKey : false;\n\t},\n\n\t/**\n\t * Function: getMainEvent\n\t * \n\t * Returns the touch or mouse event that contains the mouse coordinates.\n\t */\n\tgetMainEvent: function(e)\n\t{\n\t\tif ((e.type == 'touchstart' || e.type == 'touchmove') && e.touches != null && e.touches[0] != null)\n\t\t{\n\t\t\te = e.touches[0];\n\t\t}\n\t\telse if (e.type == 'touchend' && e.changedTouches != null && e.changedTouches[0] != null)\n\t\t{\n\t\t\te = e.changedTouches[0];\n\t\t}\n\t\t\n\t\treturn e;\n\t},\n\t\n\t/**\n\t * Function: getClientX\n\t * \n\t * Returns true if the meta key is pressed for the given event.\n\t */\n\tgetClientX: function(e)\n\t{\n\t\treturn mxEvent.getMainEvent(e).clientX;\n\t},\n\n\t/**\n\t * Function: getClientY\n\t * \n\t * Returns true if the meta key is pressed for the given event.\n\t */\n\tgetClientY: function(e)\n\t{\n\t\treturn mxEvent.getMainEvent(e).clientY;\n\t},\n\n\t/**\n\t * Function: consume\n\t * \n\t * Consumes the given event.\n\t * \n\t * Parameters:\n\t * \n\t * evt - Native event to be consumed.\n\t * preventDefault - Optional boolean to prevent the default for the event.\n\t * Default is true.\n\t * stopPropagation - Option boolean to stop event propagation. Default is\n\t * true.\n\t */\n\tconsume: function(evt, preventDefault, stopPropagation)\n\t{\n\t\tpreventDefault = (preventDefault != null) ? preventDefault : true;\n\t\tstopPropagation = (stopPropagation != null) ? stopPropagation : true;\n\t\t\n\t\tif (preventDefault)\n\t\t{\n\t\t\tif (evt.preventDefault)\n\t\t\t{\n\t\t\t\tif (stopPropagation)\n\t\t\t\t{\n\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t\telse if (stopPropagation)\n\t\t\t{\n\t\t\t\tevt.cancelBubble = true;\n\t\t\t}\n\t\t}\n\n\t\t// Opera\n\t\tevt.isConsumed = true;\n\n\t\t// Other browsers\n\t\tif (!evt.preventDefault)\n\t\t{\n\t\t\tevt.returnValue = false;\n\t\t}\n\t},\n\t\n\t//\n\t// Special handles in mouse events\n\t//\n\t\n\t/**\n\t * Variable: LABEL_HANDLE\n\t * \n\t * Index for the label handle in an mxMouseEvent. This should be a negative\n\t * value that does not interfere with any possible handle indices. Default\n\t * is -1.\n\t */\n\tLABEL_HANDLE: -1,\n\t\n\t/**\n\t * Variable: ROTATION_HANDLE\n\t * \n\t * Index for the rotation handle in an mxMouseEvent. This should be a\n\t * negative value that does not interfere with any possible handle indices.\n\t * Default is -2.\n\t */\n\tROTATION_HANDLE: -2,\n\t\n\t/**\n\t * Variable: CUSTOM_HANDLE\n\t * \n\t * Start index for the custom handles in an mxMouseEvent. This should be a\n\t * negative value and is the start index which is decremented for each\n\t * custom handle. Default is -100.\n\t */\n\tCUSTOM_HANDLE: -100,\n\t\n\t/**\n\t * Variable: VIRTUAL_HANDLE\n\t * \n\t * Start index for the virtual handles in an mxMouseEvent. This should be a\n\t * negative value and is the start index which is decremented for each\n\t * virtual handle. Default is -100000. This assumes that there are no more\n\t * than VIRTUAL_HANDLE - CUSTOM_HANDLE custom handles.\n\t * \n\t */\n\tVIRTUAL_HANDLE: -100000,\n\t\n\t//\n\t// Event names\n\t//\n\t\n\t/**\n\t * Variable: MOUSE_DOWN\n\t *\n\t * Specifies the event name for mouseDown.\n\t */\n\tMOUSE_DOWN: 'mouseDown',\n\t\n\t/**\n\t * Variable: MOUSE_MOVE\n\t *\n\t * Specifies the event name for mouseMove. \n\t */\n\tMOUSE_MOVE: 'mouseMove',\n\t\n\t/**\n\t * Variable: MOUSE_UP\n\t *\n\t * Specifies the event name for mouseUp. \n\t */\n\tMOUSE_UP: 'mouseUp',\n\n\t/**\n\t * Variable: ACTIVATE\n\t *\n\t * Specifies the event name for activate.\n\t */\n\tACTIVATE: 'activate',\n\n\t/**\n\t * Variable: RESIZE_START\n\t *\n\t * Specifies the event name for resizeStart.\n\t */\n\tRESIZE_START: 'resizeStart',\n\n\t/**\n\t * Variable: RESIZE\n\t *\n\t * Specifies the event name for resize.\n\t */\n\tRESIZE: 'resize',\n\n\t/**\n\t * Variable: RESIZE_END\n\t *\n\t * Specifies the event name for resizeEnd.\n\t */\n\tRESIZE_END: 'resizeEnd',\n\n\t/**\n\t * Variable: MOVE_START\n\t *\n\t * Specifies the event name for moveStart.\n\t */\n\tMOVE_START: 'moveStart',\n\n\t/**\n\t * Variable: MOVE\n\t *\n\t * Specifies the event name for move.\n\t */\n\tMOVE: 'move',\n\n\t/**\n\t * Variable: MOVE_END\n\t *\n\t * Specifies the event name for moveEnd.\n\t */\n\tMOVE_END: 'moveEnd',\n\n\t/**\n\t * Variable: PAN_START\n\t *\n\t * Specifies the event name for panStart.\n\t */\n\tPAN_START: 'panStart',\n\n\t/**\n\t * Variable: PAN\n\t *\n\t * Specifies the event name for pan.\n\t */\n\tPAN: 'pan',\n\n\t/**\n\t * Variable: PAN_END\n\t *\n\t * Specifies the event name for panEnd.\n\t */\n\tPAN_END: 'panEnd',\n\n\t/**\n\t * Variable: MINIMIZE\n\t *\n\t * Specifies the event name for minimize.\n\t */\n\tMINIMIZE: 'minimize',\n\n\t/**\n\t * Variable: NORMALIZE\n\t *\n\t * Specifies the event name for normalize.\n\t */\n\tNORMALIZE: 'normalize',\n\n\t/**\n\t * Variable: MAXIMIZE\n\t *\n\t * Specifies the event name for maximize.\n\t */\n\tMAXIMIZE: 'maximize',\n\n\t/**\n\t * Variable: HIDE\n\t *\n\t * Specifies the event name for hide.\n\t */\n\tHIDE: 'hide',\n\n\t/**\n\t * Variable: SHOW\n\t *\n\t * Specifies the event name for show.\n\t */\n\tSHOW: 'show',\n\n\t/**\n\t * Variable: CLOSE\n\t *\n\t * Specifies the event name for close.\n\t */\n\tCLOSE: 'close',\n\n\t/**\n\t * Variable: DESTROY\n\t *\n\t * Specifies the event name for destroy.\n\t */\n\tDESTROY: 'destroy',\n\n\t/**\n\t * Variable: REFRESH\n\t *\n\t * Specifies the event name for refresh.\n\t */\n\tREFRESH: 'refresh',\n\n\t/**\n\t * Variable: SIZE\n\t *\n\t * Specifies the event name for size.\n\t */\n\tSIZE: 'size',\n\t\n\t/**\n\t * Variable: SELECT\n\t *\n\t * Specifies the event name for select.\n\t */\n\tSELECT: 'select',\n\n\t/**\n\t * Variable: FIRED\n\t *\n\t * Specifies the event name for fired.\n\t */\n\tFIRED: 'fired',\n\n\t/**\n\t * Variable: FIRE_MOUSE_EVENT\n\t *\n\t * Specifies the event name for fireMouseEvent.\n\t */\n\tFIRE_MOUSE_EVENT: 'fireMouseEvent',\n\n\t/**\n\t * Variable: GESTURE\n\t *\n\t * Specifies the event name for gesture.\n\t */\n\tGESTURE: 'gesture',\n\n\t/**\n\t * Variable: TAP_AND_HOLD\n\t *\n\t * Specifies the event name for tapAndHold.\n\t */\n\tTAP_AND_HOLD: 'tapAndHold',\n\n\t/**\n\t * Variable: GET\n\t *\n\t * Specifies the event name for get.\n\t */\n\tGET: 'get',\n\n\t/**\n\t * Variable: RECEIVE\n\t *\n\t * Specifies the event name for receive.\n\t */\n\tRECEIVE: 'receive',\n\n\t/**\n\t * Variable: CONNECT\n\t *\n\t * Specifies the event name for connect.\n\t */\n\tCONNECT: 'connect',\n\n\t/**\n\t * Variable: DISCONNECT\n\t *\n\t * Specifies the event name for disconnect.\n\t */\n\tDISCONNECT: 'disconnect',\n\n\t/**\n\t * Variable: SUSPEND\n\t *\n\t * Specifies the event name for suspend.\n\t */\n\tSUSPEND: 'suspend',\n\n\t/**\n\t * Variable: RESUME\n\t *\n\t * Specifies the event name for suspend.\n\t */\n\tRESUME: 'resume',\n\n\t/**\n\t * Variable: MARK\n\t *\n\t * Specifies the event name for mark.\n\t */\n\tMARK: 'mark',\n\n\t/**\n\t * Variable: ROOT\n\t *\n\t * Specifies the event name for root.\n\t */\n\tROOT: 'root',\n\n\t/**\n\t * Variable: POST\n\t *\n\t * Specifies the event name for post.\n\t */\n\tPOST: 'post',\n\n\t/**\n\t * Variable: OPEN\n\t *\n\t * Specifies the event name for open.\n\t */\n\tOPEN: 'open',\n\n\t/**\n\t * Variable: SAVE\n\t *\n\t * Specifies the event name for open.\n\t */\n\tSAVE: 'save',\n\n\t/**\n\t * Variable: BEFORE_ADD_VERTEX\n\t *\n\t * Specifies the event name for beforeAddVertex.\n\t */\n\tBEFORE_ADD_VERTEX: 'beforeAddVertex',\n\n\t/**\n\t * Variable: ADD_VERTEX\n\t *\n\t * Specifies the event name for addVertex.\n\t */\n\tADD_VERTEX: 'addVertex',\n\n\t/**\n\t * Variable: AFTER_ADD_VERTEX\n\t *\n\t * Specifies the event name for afterAddVertex.\n\t */\n\tAFTER_ADD_VERTEX: 'afterAddVertex',\n\n\t/**\n\t * Variable: DONE\n\t *\n\t * Specifies the event name for done.\n\t */\n\tDONE: 'done',\n\n\t/**\n\t * Variable: EXECUTE\n\t *\n\t * Specifies the event name for execute.\n\t */\n\tEXECUTE: 'execute',\n\n\t/**\n\t * Variable: EXECUTED\n\t *\n\t * Specifies the event name for executed.\n\t */\n\tEXECUTED: 'executed',\n\n\t/**\n\t * Variable: BEGIN_UPDATE\n\t *\n\t * Specifies the event name for beginUpdate.\n\t */\n\tBEGIN_UPDATE: 'beginUpdate',\n\n\t/**\n\t * Variable: START_EDIT\n\t *\n\t * Specifies the event name for startEdit.\n\t */\n\tSTART_EDIT: 'startEdit',\n\n\t/**\n\t * Variable: END_UPDATE\n\t *\n\t * Specifies the event name for endUpdate.\n\t */\n\tEND_UPDATE: 'endUpdate',\n\n\t/**\n\t * Variable: END_EDIT\n\t *\n\t * Specifies the event name for endEdit.\n\t */\n\tEND_EDIT: 'endEdit',\n\n\t/**\n\t * Variable: BEFORE_UNDO\n\t *\n\t * Specifies the event name for beforeUndo.\n\t */\n\tBEFORE_UNDO: 'beforeUndo',\n\n\t/**\n\t * Variable: UNDO\n\t *\n\t * Specifies the event name for undo.\n\t */\n\tUNDO: 'undo',\n\n\t/**\n\t * Variable: REDO\n\t *\n\t * Specifies the event name for redo.\n\t */\n\tREDO: 'redo',\n\n\t/**\n\t * Variable: CHANGE\n\t *\n\t * Specifies the event name for change.\n\t */\n\tCHANGE: 'change',\n\n\t/**\n\t * Variable: NOTIFY\n\t *\n\t * Specifies the event name for notify.\n\t */\n\tNOTIFY: 'notify',\n\n\t/**\n\t * Variable: LAYOUT_CELLS\n\t *\n\t * Specifies the event name for layoutCells.\n\t */\n\tLAYOUT_CELLS: 'layoutCells',\n\n\t/**\n\t * Variable: CLICK\n\t *\n\t * Specifies the event name for click.\n\t */\n\tCLICK: 'click',\n\n\t/**\n\t * Variable: SCALE\n\t *\n\t * Specifies the event name for scale.\n\t */\n\tSCALE: 'scale',\n\n\t/**\n\t * Variable: TRANSLATE\n\t *\n\t * Specifies the event name for translate.\n\t */\n\tTRANSLATE: 'translate',\n\n\t/**\n\t * Variable: SCALE_AND_TRANSLATE\n\t *\n\t * Specifies the event name for scaleAndTranslate.\n\t */\n\tSCALE_AND_TRANSLATE: 'scaleAndTranslate',\n\n\t/**\n\t * Variable: UP\n\t *\n\t * Specifies the event name for up.\n\t */\n\tUP: 'up',\n\n\t/**\n\t * Variable: DOWN\n\t *\n\t * Specifies the event name for down.\n\t */\n\tDOWN: 'down',\n\n\t/**\n\t * Variable: ADD\n\t *\n\t * Specifies the event name for add.\n\t */\n\tADD: 'add',\n\n\t/**\n\t * Variable: REMOVE\n\t *\n\t * Specifies the event name for remove.\n\t */\n\tREMOVE: 'remove',\n\t\n\t/**\n\t * Variable: CLEAR\n\t *\n\t * Specifies the event name for clear.\n\t */\n\tCLEAR: 'clear',\n\n\t/**\n\t * Variable: ADD_CELLS\n\t *\n\t * Specifies the event name for addCells.\n\t */\n\tADD_CELLS: 'addCells',\n\n\t/**\n\t * Variable: CELLS_ADDED\n\t *\n\t * Specifies the event name for cellsAdded.\n\t */\n\tCELLS_ADDED: 'cellsAdded',\n\n\t/**\n\t * Variable: MOVE_CELLS\n\t *\n\t * Specifies the event name for moveCells.\n\t */\n\tMOVE_CELLS: 'moveCells',\n\n\t/**\n\t * Variable: CELLS_MOVED\n\t *\n\t * Specifies the event name for cellsMoved.\n\t */\n\tCELLS_MOVED: 'cellsMoved',\n\n\t/**\n\t * Variable: RESIZE_CELLS\n\t *\n\t * Specifies the event name for resizeCells.\n\t */\n\tRESIZE_CELLS: 'resizeCells',\n\n\t/**\n\t * Variable: CELLS_RESIZED\n\t *\n\t * Specifies the event name for cellsResized.\n\t */\n\tCELLS_RESIZED: 'cellsResized',\n\n\t/**\n\t * Variable: TOGGLE_CELLS\n\t *\n\t * Specifies the event name for toggleCells.\n\t */\n\tTOGGLE_CELLS: 'toggleCells',\n\n\t/**\n\t * Variable: CELLS_TOGGLED\n\t *\n\t * Specifies the event name for cellsToggled.\n\t */\n\tCELLS_TOGGLED: 'cellsToggled',\n\n\t/**\n\t * Variable: ORDER_CELLS\n\t *\n\t * Specifies the event name for orderCells.\n\t */\n\tORDER_CELLS: 'orderCells',\n\n\t/**\n\t * Variable: CELLS_ORDERED\n\t *\n\t * Specifies the event name for cellsOrdered.\n\t */\n\tCELLS_ORDERED: 'cellsOrdered',\n\n\t/**\n\t * Variable: REMOVE_CELLS\n\t *\n\t * Specifies the event name for removeCells.\n\t */\n\tREMOVE_CELLS: 'removeCells',\n\n\t/**\n\t * Variable: CELLS_REMOVED\n\t *\n\t * Specifies the event name for cellsRemoved.\n\t */\n\tCELLS_REMOVED: 'cellsRemoved',\n\n\t/**\n\t * Variable: GROUP_CELLS\n\t *\n\t * Specifies the event name for groupCells.\n\t */\n\tGROUP_CELLS: 'groupCells',\n\n\t/**\n\t * Variable: UNGROUP_CELLS\n\t *\n\t * Specifies the event name for ungroupCells.\n\t */\n\tUNGROUP_CELLS: 'ungroupCells',\n\n\t/**\n\t * Variable: REMOVE_CELLS_FROM_PARENT\n\t *\n\t * Specifies the event name for removeCellsFromParent.\n\t */\n\tREMOVE_CELLS_FROM_PARENT: 'removeCellsFromParent',\n\n\t/**\n\t * Variable: FOLD_CELLS\n\t *\n\t * Specifies the event name for foldCells.\n\t */\n\tFOLD_CELLS: 'foldCells',\n\n\t/**\n\t * Variable: CELLS_FOLDED\n\t *\n\t * Specifies the event name for cellsFolded.\n\t */\n\tCELLS_FOLDED: 'cellsFolded',\n\n\t/**\n\t * Variable: ALIGN_CELLS\n\t *\n\t * Specifies the event name for alignCells.\n\t */\n\tALIGN_CELLS: 'alignCells',\n\n\t/**\n\t * Variable: LABEL_CHANGED\n\t *\n\t * Specifies the event name for labelChanged.\n\t */\n\tLABEL_CHANGED: 'labelChanged',\n\n\t/**\n\t * Variable: CONNECT_CELL\n\t *\n\t * Specifies the event name for connectCell.\n\t */\n\tCONNECT_CELL: 'connectCell',\n\n\t/**\n\t * Variable: CELL_CONNECTED\n\t *\n\t * Specifies the event name for cellConnected.\n\t */\n\tCELL_CONNECTED: 'cellConnected',\n\n\t/**\n\t * Variable: SPLIT_EDGE\n\t *\n\t * Specifies the event name for splitEdge.\n\t */\n\tSPLIT_EDGE: 'splitEdge',\n\n\t/**\n\t * Variable: FLIP_EDGE\n\t *\n\t * Specifies the event name for flipEdge.\n\t */\n\tFLIP_EDGE: 'flipEdge',\n\n\t/**\n\t * Variable: START_EDITING\n\t *\n\t * Specifies the event name for startEditing.\n\t */\n\tSTART_EDITING: 'startEditing',\n\n\t/**\n\t * Variable: EDITING_STARTED\n\t *\n\t * Specifies the event name for editingStarted.\n\t */\n\tEDITING_STARTED: 'editingStarted',\n\n\t/**\n\t * Variable: EDITING_STOPPED\n\t *\n\t * Specifies the event name for editingStopped.\n\t */\n\tEDITING_STOPPED: 'editingStopped',\n\n\t/**\n\t * Variable: ADD_OVERLAY\n\t *\n\t * Specifies the event name for addOverlay.\n\t */\n\tADD_OVERLAY: 'addOverlay',\n\n\t/**\n\t * Variable: REMOVE_OVERLAY\n\t *\n\t * Specifies the event name for removeOverlay.\n\t */\n\tREMOVE_OVERLAY: 'removeOverlay',\n\n\t/**\n\t * Variable: UPDATE_CELL_SIZE\n\t *\n\t * Specifies the event name for updateCellSize.\n\t */\n\tUPDATE_CELL_SIZE: 'updateCellSize',\n\n\t/**\n\t * Variable: ESCAPE\n\t *\n\t * Specifies the event name for escape.\n\t */\n\tESCAPE: 'escape',\n\n\t/**\n\t * Variable: DOUBLE_CLICK\n\t *\n\t * Specifies the event name for doubleClick.\n\t */\n\tDOUBLE_CLICK: 'doubleClick',\n\n\t/**\n\t * Variable: START\n\t *\n\t * Specifies the event name for start.\n\t */\n\tSTART: 'start',\n\n\t/**\n\t * Variable: RESET\n\t *\n\t * Specifies the event name for reset.\n\t */\n\tRESET: 'reset',\n\n\t/**\n\t * Variable: PINCH_THRESHOLD\n\t *\n\t * Threshold for pinch gestures to fire a mouse wheel event.\n\t * Default value is 10.\n\t */\n\tPINCH_THRESHOLD: 10\n\n};\n\n__mxOutput.mxEvent = typeof mxEvent !== 'undefined' ? mxEvent : undefined;\n\n/**\n * Copyright (c) 2006-2020, JGraph Ltd\n * Copyright (c) 2006-2020, draw.io AG\n */\n/**\n * Class: mxXmlRequest\n * \n * XML HTTP request wrapper. See also: <mxUtils.get>, <mxUtils.post> and\n * <mxUtils.load>. This class provides a cross-browser abstraction for Ajax\n * requests.\n * \n * Encoding:\n * \n * For encoding parameter values, the built-in encodeURIComponent JavaScript\n * method must be used. For automatic encoding of post data in <mxEditor> the\n * <mxEditor.escapePostData> switch can be set to true (default). The encoding\n * will be carried out using the conte type of the page. That is, the page\n * containting the editor should contain a meta tag in the header, eg.\n * <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n * \n * Example:\n * \n * (code)\n * var onload = function(req)\n * {\n *   mxUtils.alert(req.getDocumentElement());\n * }\n * \n * var onerror = function(req)\n * {\n *   mxUtils.alert('Error');\n * }\n * new mxXmlRequest(url, 'key=value').send(onload, onerror);\n * (end)\n * \n * Sends an asynchronous POST request to the specified URL.\n * \n * Example:\n * \n * (code)\n * var req = new mxXmlRequest(url, 'key=value', 'POST', false);\n * req.send();\n * mxUtils.alert(req.getDocumentElement());\n * (end)\n * \n * Sends a synchronous POST request to the specified URL.\n * \n * Example:\n * \n * (code)\n * var encoder = new mxCodec();\n * var result = encoder.encode(graph.getModel());\n * var xml = encodeURIComponent(mxUtils.getXml(result));\n * new mxXmlRequest(url, 'xml='+xml).send();\n * (end)\n * \n * Sends an encoded graph model to the specified URL using xml as the\n * parameter name. The parameter can then be retrieved in C# as follows:\n * \n * (code)\n * string xml = HttpUtility.UrlDecode(context.Request.Params[\"xml\"]);\n * (end)\n * \n * Or in Java as follows:\n * \n * (code)\n * String xml = URLDecoder.decode(request.getParameter(\"xml\"), \"UTF-8\").replace(\"\\n\", \"&#xa;\");\n * (end)\n *\n * Note that the linefeeds should only be replaced if the XML is\n * processed in Java, for example when creating an image.\n * \n * Constructor: mxXmlRequest\n * \n * Constructs an XML HTTP request.\n * \n * Parameters:\n * \n * url - Target URL of the request.\n * params - Form encoded parameters to send with a POST request.\n * method - String that specifies the request method. Possible values are\n * POST and GET. Default is POST.\n * async - Boolean specifying if an asynchronous request should be used.\n * Default is true.\n * username - String specifying the username to be used for the request.\n * password - String specifying the password to be used for the request.\n */\nfunction mxXmlRequest(url, params, method, async, username, password)\n{\n\tthis.url = url;\n\tthis.params = params;\n\tthis.method = method || 'POST';\n\tthis.async = (async != null) ? async : true;\n\tthis.username = username;\n\tthis.password = password;\n};\n\n/**\n * Variable: url\n * \n * Holds the target URL of the request.\n */\nmxXmlRequest.prototype.url = null;\n\n/**\n * Variable: params\n * \n * Holds the form encoded data for the POST request.\n */\nmxXmlRequest.prototype.params = null;\n\n/**\n * Variable: method\n * \n * Specifies the request method. Possible values are POST and GET. Default\n * is POST.\n */\nmxXmlRequest.prototype.method = null;\n\n/**\n * Variable: async\n * \n * Boolean indicating if the request is asynchronous.\n */\nmxXmlRequest.prototype.async = null;\n\n/**\n * Variable: binary\n * \n * Boolean indicating if the request is binary. This option is ignored in IE.\n * In all other browsers the requested mime type is set to\n * text/plain; charset=x-user-defined. Default is false.\n */\nmxXmlRequest.prototype.binary = false;\n\n/**\n * Variable: withCredentials\n * \n * Specifies if withCredentials should be used in HTML5-compliant browsers. Default is\n * false.\n */\nmxXmlRequest.prototype.withCredentials = false;\n\n/**\n * Variable: username\n * \n * Specifies the username to be used for authentication.\n */\nmxXmlRequest.prototype.username = null;\n\n/**\n * Variable: password\n * \n * Specifies the password to be used for authentication.\n */\nmxXmlRequest.prototype.password = null;\n\n/**\n * Variable: request\n * \n * Holds the inner, browser-specific request object.\n */\nmxXmlRequest.prototype.request = null;\n\n/**\n * Variable: decodeSimulateValues\n * \n * Specifies if request values should be decoded as URIs before setting the\n * textarea value in <simulate>. Defaults to false for backwards compatibility,\n * to avoid another decode on the server this should be set to true.\n */\nmxXmlRequest.prototype.decodeSimulateValues = false;\n\n/**\n * Function: isBinary\n * \n * Returns <binary>.\n */\nmxXmlRequest.prototype.isBinary = function()\n{\n\treturn this.binary;\n};\n\n/**\n * Function: setBinary\n * \n * Sets <binary>.\n */\nmxXmlRequest.prototype.setBinary = function(value)\n{\n\tthis.binary = value;\n};\n\n/**\n * Function: getText\n * \n * Returns the response as a string.\n */\nmxXmlRequest.prototype.getText = function()\n{\n\treturn this.request.responseText;\n};\n\n/**\n * Function: isReady\n * \n * Returns true if the response is ready.\n */\nmxXmlRequest.prototype.isReady = function()\n{\n\treturn this.request.readyState == 4;\n};\n\n/**\n * Function: getDocumentElement\n * \n * Returns the document element of the response XML document.\n */\nmxXmlRequest.prototype.getDocumentElement = function()\n{\n\tvar doc = this.getXml();\n\t\n\tif (doc != null)\n\t{\n\t\treturn doc.documentElement;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getXml\n * \n * Returns the response as an XML document. Use <getDocumentElement> to get\n * the document element of the XML document.\n */\nmxXmlRequest.prototype.getXml = function()\n{\n\tvar xml = this.request.responseXML;\n\t\n\t// Handles missing response headers in IE, the first condition handles\n\t// the case where responseXML is there, but using its nodes leads to\n\t// type errors in the mxCellCodec when putting the nodes into a new\n\t// document. This happens in IE9 standards mode and with XML user\n\t// objects only, as they are used directly as values in cells.\n\tif (document.documentMode >= 9 || xml == null || xml.documentElement == null)\n\t{\n\t\txml = mxUtils.parseXml(this.request.responseText);\n\t}\n\t\n\treturn xml;\n};\n\n/**\n * Function: getStatus\n * \n * Returns the status as a number, eg. 404 for \"Not found\" or 200 for \"OK\".\n * Note: The NS_ERROR_NOT_AVAILABLE for invalid responses cannot be cought.\n */\nmxXmlRequest.prototype.getStatus = function()\n{\n\treturn (this.request != null) ? this.request.status : null;\n};\n\n/**\n * Function: create\n * \n * Creates and returns the inner <request> object.\n */\nmxXmlRequest.prototype.create = function()\n{\n\tif (window.XMLHttpRequest)\n\t{\n\t\treturn function()\n\t\t{\n\t\t\tvar req = new XMLHttpRequest();\n\t\t\t\n\t\t\t// TODO: Check for overrideMimeType required here?\n\t\t\tif (this.isBinary() && req.overrideMimeType)\n\t\t\t{\n\t\t\t\treq.overrideMimeType('text/plain; charset=x-user-defined');\n\t\t\t}\n\n\t\t\treturn req;\n\t\t};\n\t}\n\telse if (typeof(ActiveXObject) != 'undefined')\n\t{\n\t\treturn function()\n\t\t{\n\t\t\t// TODO: Implement binary option\n\t\t\treturn new ActiveXObject('Microsoft.XMLHTTP');\n\t\t};\n\t}\n}();\n\n/**\n * Function: send\n * \n * Send the <request> to the target URL using the specified functions to\n * process the response asychronously.\n * \n * Note: Due to technical limitations, onerror is currently ignored.\n * \n * Parameters:\n * \n * onload - Function to be invoked if a successful response was received.\n * onerror - Function to be called on any error. Unused in this implementation, intended for overriden function.\n * timeout - Optional timeout in ms before calling ontimeout.\n * ontimeout - Optional function to execute on timeout.\n */\nmxXmlRequest.prototype.send = function(onload, onerror, timeout, ontimeout)\n{\n\tthis.request = this.create();\n\t\n\tif (this.request != null)\n\t{\n\t\tif (onload != null)\n\t\t{\n\t\t\tthis.request.onreadystatechange = mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tif (this.isReady())\n\t\t\t\t{\n\t\t\t\t\tonload(this);\n\t\t\t\t\tthis.request.onreadystatechange = null;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.request.open(this.method, this.url, this.async,\n\t\t\tthis.username, this.password);\n\t\tthis.setRequestHeaders(this.request, this.params);\n\t\t\n\t\tif (window.XMLHttpRequest && this.withCredentials)\n\t\t{\n\t\t\tthis.request.withCredentials = 'true';\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_QUIRKS && (document.documentMode == null || document.documentMode > 9) &&\n\t\t\twindow.XMLHttpRequest && timeout != null && ontimeout != null)\n\t\t{\n\t\t\tthis.request.timeout = timeout;\n\t\t\tthis.request.ontimeout = ontimeout;\n\t\t}\n\t\t\t\t\n\t\tthis.request.send(this.params);\n\t}\n};\n\n/**\n * Function: setRequestHeaders\n * \n * Sets the headers for the given request and parameters. This sets the\n * content-type to application/x-www-form-urlencoded if any params exist.\n * \n * Example:\n * \n * (code)\n * request.setRequestHeaders = function(request, params)\n * {\n *   if (params != null)\n *   {\n *     request.setRequestHeader('Content-Type',\n *             'multipart/form-data');\n *     request.setRequestHeader('Content-Length',\n *             params.length);\n *   }\n * };\n * (end)\n * \n * Use the code above before calling <send> if you require a\n * multipart/form-data request.   \n */\nmxXmlRequest.prototype.setRequestHeaders = function(request, params)\n{\n\tif (params != null)\n\t{\n\t\trequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\t}\n};\n\n/**\n * Function: simulate\n * \n * Creates and posts a request to the given target URL using a dynamically\n * created form inside the given document.\n * \n * Parameters:\n * \n * docs - Document that contains the form element.\n * target - Target to send the form result to.\n */\nmxXmlRequest.prototype.simulate = function(doc, target)\n{\n\tdoc = doc || document;\n\tvar old = null;\n\n\tif (doc == document)\n\t{\n\t\told = window.onbeforeunload;\t\t\n\t\twindow.onbeforeunload = null;\n\t}\n\t\t\t\n\tvar form = doc.createElement('form');\n\tform.setAttribute('method', this.method);\n\tform.setAttribute('action', this.url);\n\n\tif (target != null)\n\t{\n\t\tform.setAttribute('target', target);\n\t}\n\n\tform.style.display = 'none';\n\tform.style.visibility = 'hidden';\n\t\n\tvar pars = (this.params.indexOf('&') > 0) ?\n\t\tthis.params.split('&') :\n\t\tthis.params.split();\n\n\t// Adds the parameters as textareas to the form\n\tfor (var i=0; i<pars.length; i++)\n\t{\n\t\tvar pos = pars[i].indexOf('=');\n\t\t\n\t\tif (pos > 0)\n\t\t{\n\t\t\tvar name = pars[i].substring(0, pos);\n\t\t\tvar value = pars[i].substring(pos+1);\n\t\t\t\n\t\t\tif (this.decodeSimulateValues)\n\t\t\t{\n\t\t\t\tvalue = decodeURIComponent(value);\n\t\t\t}\n\t\t\t\n\t\t\tvar textarea = doc.createElement('textarea');\n\t\t\ttextarea.setAttribute('wrap', 'off');\n\t\t\ttextarea.setAttribute('name', name);\n\t\t\tmxUtils.write(textarea, value);\n\t\t\tform.appendChild(textarea);\n\t\t}\n\t}\n\t\n\tdoc.body.appendChild(form);\n\tform.submit();\n\t\n\tif (form.parentNode != null)\n\t{\n\t\tform.parentNode.removeChild(form);\n\t}\n\n\tif (old != null)\n\t{\t\t\n\t\twindow.onbeforeunload = old;\n\t}\n};\n\n__mxOutput.mxXmlRequest = typeof mxXmlRequest !== 'undefined' ? mxXmlRequest : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxClipboard =\n{\n\t/**\n\t * Class: mxClipboard\n\t * \n\t * Singleton that implements a clipboard for graph cells.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxClipboard.copy(graph);\n\t * mxClipboard.paste(graph2);\n\t * (end)\n\t *\n\t * This copies the selection cells from the graph to the clipboard and\n\t * pastes them into graph2.\n\t * \n\t * For fine-grained control of the clipboard data the <mxGraph.canExportCell>\n\t * and <mxGraph.canImportCell> functions can be overridden.\n\t * \n\t * To restore previous parents for pasted cells, the implementation for\n\t * <copy> and <paste> can be changed as follows.\n\t * \n\t * (code)\n\t * mxClipboard.copy = function(graph, cells)\n\t * {\n\t *   cells = cells || graph.getSelectionCells();\n\t *   var result = graph.getExportableCells(cells);\n\t *   \n\t *   mxClipboard.parents = new Object();\n\t *   \n\t *   for (var i = 0; i < result.length; i++)\n\t *   {\n\t *     mxClipboard.parents[i] = graph.model.getParent(cells[i]);\n\t *   }\n\t *   \n\t *   mxClipboard.insertCount = 1;\n\t *   mxClipboard.setCells(graph.cloneCells(result));\n\t *   \n\t *   return result;\n\t * };\n\t * \n\t * mxClipboard.paste = function(graph)\n\t * {\n\t *   if (!mxClipboard.isEmpty())\n\t *   {\n\t *     var cells = graph.getImportableCells(mxClipboard.getCells());\n\t *     var delta = mxClipboard.insertCount * mxClipboard.STEPSIZE;\n\t *     var parent = graph.getDefaultParent();\n\t *     \n\t *     graph.model.beginUpdate();\n\t *     try\n\t *     {\n\t *       for (var i = 0; i < cells.length; i++)\n\t *       {\n\t *         var tmp = (mxClipboard.parents != null && graph.model.contains(mxClipboard.parents[i])) ?\n\t *              mxClipboard.parents[i] : parent;\n\t *         cells[i] = graph.importCells([cells[i]], delta, delta, tmp)[0];\n\t *       }\n\t *     }\n\t *     finally\n\t *     {\n\t *       graph.model.endUpdate();\n\t *     }\n\t *     \n\t *     // Increments the counter and selects the inserted cells\n\t *     mxClipboard.insertCount++;\n\t *     graph.setSelectionCells(cells);\n\t *   }\n\t * };\n\t * (end)\n\t * \n\t * Variable: STEPSIZE\n\t * \n\t * Defines the step size to offset the cells after each paste operation.\n\t * Default is 10.\n\t */\n\tSTEPSIZE: 10,\n\n\t/**\n\t * Variable: insertCount\n\t * \n\t * Counts the number of times the clipboard data has been inserted.\n\t */\n\tinsertCount: 1,\n\n\t/**\n\t * Variable: cells\n\t * \n\t * Holds the array of <mxCells> currently in the clipboard.\n\t */\n\tcells: null,\n\n\t/**\n\t * Function: setCells\n\t * \n\t * Sets the cells in the clipboard. Fires a <mxEvent.CHANGE> event.\n\t */\n\tsetCells: function(cells)\n\t{\n\t\tmxClipboard.cells = cells;\n\t},\n\n\t/**\n\t * Function: getCells\n\t * \n\t * Returns  the cells in the clipboard.\n\t */\n\tgetCells: function()\n\t{\n\t\treturn mxClipboard.cells;\n\t},\n\t\n\t/**\n\t * Function: isEmpty\n\t * \n\t * Returns true if the clipboard currently has not data stored.\n\t */\n\tisEmpty: function()\n\t{\n\t\treturn mxClipboard.getCells() == null;\n\t},\n\t\n\t/**\n\t * Function: cut\n\t * \n\t * Cuts the given array of <mxCells> from the specified graph.\n\t * If cells is null then the selection cells of the graph will\n\t * be used. Returns the cells that have been cut from the graph.\n\t *\n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells to be cut.\n\t * cells - Optional array of <mxCells> to be cut.\n\t */\n\tcut: function(graph, cells)\n\t{\n\t\tcells = mxClipboard.copy(graph, cells);\n\t\tmxClipboard.insertCount = 0;\n\t\tmxClipboard.removeCells(graph, cells);\n\t\t\n\t\treturn cells;\n\t},\n\n\t/**\n\t * Function: removeCells\n\t * \n\t * Hook to remove the given cells from the given graph after\n\t * a cut operation.\n\t *\n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells to be cut.\n\t * cells - Array of <mxCells> to be cut.\n\t */\n\tremoveCells: function(graph, cells)\n\t{\n\t\tgraph.removeCells(cells);\n\t},\n\n\t/**\n\t * Function: copy\n\t * \n\t * Copies the given array of <mxCells> from the specified\n\t * graph to <cells>. Returns the original array of cells that has\n\t * been cloned. Descendants of cells in the array are ignored.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells to be copied.\n\t * cells - Optional array of <mxCells> to be copied.\n\t */\n\tcopy: function(graph, cells)\n\t{\n\t\tcells = cells || graph.getSelectionCells();\n\t\tvar result = graph.getExportableCells(graph.model.getTopmostCells(cells));\n\t\tmxClipboard.insertCount = 1;\n\t\tmxClipboard.setCells(graph.cloneCells(result));\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Function: paste\n\t * \n\t * Pastes the <cells> into the specified graph restoring\n\t * the relation to <parents>, if possible. If the parents\n\t * are no longer in the graph or invisible then the\n\t * cells are added to the graph's default or into the\n\t * swimlane under the cell's new location if one exists.\n\t * The cells are added to the graph using <mxGraph.importCells>\n\t * and returned.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> to paste the <cells> into.\n\t */\n\tpaste: function(graph)\n\t{\n\t\tvar cells = null;\n\t\t\n\t\tif (!mxClipboard.isEmpty())\n\t\t{\n\t\t\tcells = graph.getImportableCells(mxClipboard.getCells());\n\t\t\tvar delta = mxClipboard.insertCount * mxClipboard.STEPSIZE;\n\t\t\tvar parent = graph.getDefaultParent();\n\t\t\tcells = graph.importCells(cells, delta, delta, parent);\n\t\t\t\n\t\t\t// Increments the counter and selects the inserted cells\n\t\t\tmxClipboard.insertCount++;\n\t\t\tgraph.setSelectionCells(cells);\n\t\t}\n\t\t\n\t\treturn cells;\n\t}\n\n};\n\n__mxOutput.mxClipboard = typeof mxClipboard !== 'undefined' ? mxClipboard : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxWindow\n * \n * Basic window inside a document.\n * \n * Examples:\n * \n * Creating a simple window.\n *\n * (code)\n * var tb = document.createElement('div');\n * var wnd = new mxWindow('Title', tb, 100, 100, 200, 200, true, true);\n * wnd.setVisible(true); \n * (end)\n *\n * Creating a window that contains an iframe. \n * \n * (code)\n * var frame = document.createElement('iframe');\n * frame.setAttribute('width', '192px');\n * frame.setAttribute('height', '172px');\n * frame.setAttribute('src', 'http://www.example.com/');\n * frame.style.backgroundColor = 'white';\n * \n * var w = document.body.clientWidth;\n * var h = (document.body.clientHeight || document.documentElement.clientHeight);\n * var wnd = new mxWindow('Title', frame, (w-200)/2, (h-200)/3, 200, 200);\n * wnd.setVisible(true);\n * (end)\n * \n * To limit the movement of a window, eg. to keep it from being moved beyond\n * the top, left corner the following method can be overridden (recommended):\n * \n * (code)\n * wnd.setLocation = function(x, y)\n * {\n *   x = Math.max(0, x);\n *   y = Math.max(0, y);\n *   mxWindow.prototype.setLocation.apply(this, arguments);\n * };\n * (end)\n * \n * Or the following event handler can be used:\n * \n * (code)\n * wnd.addListener(mxEvent.MOVE, function(e)\n * {\n *   wnd.setLocation(Math.max(0, wnd.getX()), Math.max(0, wnd.getY()));\n * });\n * (end)\n * \n * To keep a window inside the current window:\n * \n * (code)\n * mxEvent.addListener(window, 'resize', mxUtils.bind(this, function()\n * {\n *   var iw = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n *   var ih = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n *   \n *   var x = this.window.getX();\n *   var y = this.window.getY();\n *   \n *   if (x + this.window.table.clientWidth > iw)\n *   {\n *     x = Math.max(0, iw - this.window.table.clientWidth);\n *   }\n *   \n *   if (y + this.window.table.clientHeight > ih)\n *   {\n *     y = Math.max(0, ih - this.window.table.clientHeight);\n *   }\n *   \n *   if (this.window.getX() != x || this.window.getY() != y)\n *   {\n *     this.window.setLocation(x, y);\n *   }\n * }));\n * (end)\n *\n * Event: mxEvent.MOVE_START\n *\n * Fires before the window is moved. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.MOVE\n *\n * Fires while the window is being moved. The <code>event</code> property\n * contains the corresponding mouse event.\n *\n * Event: mxEvent.MOVE_END\n *\n * Fires after the window is moved. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.RESIZE_START\n *\n * Fires before the window is resized. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.RESIZE\n *\n * Fires while the window is being resized. The <code>event</code> property\n * contains the corresponding mouse event.\n *\n * Event: mxEvent.RESIZE_END\n *\n * Fires after the window is resized. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.MAXIMIZE\n * \n * Fires after the window is maximized. The <code>event</code> property\n * contains the corresponding mouse event.\n * \n * Event: mxEvent.MINIMIZE\n * \n * Fires after the window is minimized. The <code>event</code> property\n * contains the corresponding mouse event.\n * \n * Event: mxEvent.NORMALIZE\n * \n * Fires after the window is normalized, that is, it returned from\n * maximized or minimized state. The <code>event</code> property contains the\n * corresponding mouse event.\n *  \n * Event: mxEvent.ACTIVATE\n * \n * Fires after a window is activated. The <code>previousWindow</code> property\n * contains the previous window. The event sender is the active window.\n * \n * Event: mxEvent.SHOW\n * \n * Fires after the window is shown. This event has no properties.\n * \n * Event: mxEvent.HIDE\n * \n * Fires after the window is hidden. This event has no properties.\n * \n * Event: mxEvent.CLOSE\n * \n * Fires before the window is closed. The <code>event</code> property contains\n * the corresponding mouse event.\n * \n * Event: mxEvent.DESTROY\n * \n * Fires before the window is destroyed. This event has no properties.\n * \n * Constructor: mxWindow\n * \n * Constructs a new window with the given dimension and title to display\n * the specified content. The window elements use the given style as a\n * prefix for the classnames of the respective window elements, namely,\n * the window title and window pane. The respective postfixes are appended\n * to the given stylename as follows:\n * \n *   style - Base style for the window.\n *   style+Title - Style for the window title.\n *   style+Pane - Style for the window pane.\n * \n * The default value for style is mxWindow, resulting in the following\n * classnames for the window elements: mxWindow, mxWindowTitle and\n * mxWindowPane.\n * \n * If replaceNode is given then the window replaces the given DOM node in\n * the document.\n * \n * Parameters:\n * \n * title - String that represents the title of the new window.\n * content - DOM node that is used as the window content.\n * x - X-coordinate of the window location.\n * y - Y-coordinate of the window location.\n * width - Width of the window.\n * height - Optional height of the window. Default is to match the height\n * of the content at the specified width.\n * minimizable - Optional boolean indicating if the window is minimizable.\n * Default is true.\n * movable - Optional boolean indicating if the window is movable. Default\n * is true.\n * replaceNode - Optional DOM node that the window should replace.\n * style - Optional base classname for the window elements. Default is\n * mxWindow.\n */\nfunction mxWindow(title, content, x, y, width, height, minimizable, movable, replaceNode, style)\n{\n\tif (content != null)\n\t{\n\t\tminimizable = (minimizable != null) ? minimizable : true;\n\t\tthis.content = content;\n\t\tthis.init(x, y, width, height, style);\n\t\t\n\t\tthis.installMaximizeHandler();\n\t\tthis.installMinimizeHandler();\n\t\tthis.installCloseHandler();\n\t\tthis.setMinimizable(minimizable);\n\t\tthis.setTitle(title);\n\t\t\n\t\tif (movable == null || movable)\n\t\t{\n\t\t\tthis.installMoveHandler();\n\t\t}\n\n\t\tif (replaceNode != null && replaceNode.parentNode != null)\n\t\t{\n\t\t\treplaceNode.parentNode.replaceChild(this.div, replaceNode);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.body.appendChild(this.div);\n\t\t}\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxWindow.prototype = new mxEventSource();\nmxWindow.prototype.constructor = mxWindow;\n\n/**\n * Variable: closeImage\n * \n * URL of the image to be used for the close icon in the titlebar.\n */\nmxWindow.prototype.closeImage = mxClient.imageBasePath + '/close.gif';\n\n/**\n * Variable: minimizeImage\n * \n * URL of the image to be used for the minimize icon in the titlebar.\n */\nmxWindow.prototype.minimizeImage = mxClient.imageBasePath + '/minimize.gif';\n\t\n/**\n * Variable: normalizeImage\n * \n * URL of the image to be used for the normalize icon in the titlebar.\n */\nmxWindow.prototype.normalizeImage = mxClient.imageBasePath + '/normalize.gif';\n\t\n/**\n * Variable: maximizeImage\n * \n * URL of the image to be used for the maximize icon in the titlebar.\n */\nmxWindow.prototype.maximizeImage = mxClient.imageBasePath + '/maximize.gif';\n\n/**\n * Variable: resizeImage\n * \n * URL of the image to be used for the resize icon.\n */\nmxWindow.prototype.resizeImage = mxClient.imageBasePath + '/resize.gif';\n\n/**\n * Variable: visible\n * \n * Boolean flag that represents the visible state of the window.\n */\nmxWindow.prototype.visible = false;\n\n/**\n * Variable: minimumSize\n * \n * <mxRectangle> that specifies the minimum width and height of the window.\n * Default is (50, 40).\n */\nmxWindow.prototype.minimumSize = new mxRectangle(0, 0, 50, 40);\n\n/**\n * Variable: destroyOnClose\n * \n * Specifies if the window should be destroyed when it is closed. If this\n * is false then the window is hidden using <setVisible>. Default is true.\n */\nmxWindow.prototype.destroyOnClose = true;\n\n/**\n * Variable: contentHeightCorrection\n * \n * Defines the correction factor for computing the height of the contentWrapper.\n * Default is 6 for IE 7/8 standards mode and 2 for all other browsers and modes.\n */\nmxWindow.prototype.contentHeightCorrection = (document.documentMode == 8 || document.documentMode == 7) ? 6 : 2;\n\n/**\n * Variable: title\n * \n * Reference to the DOM node (TD) that contains the title.\n */\nmxWindow.prototype.title = null;\n\n/**\n * Variable: content\n * \n * Reference to the DOM node that represents the window content.\n */\nmxWindow.prototype.content = null;\n\n/**\n * Function: init\n * \n * Initializes the DOM tree that represents the window.\n */\nmxWindow.prototype.init = function(x, y, width, height, style)\n{\n\tstyle = (style != null) ? style : 'mxWindow';\n\t\n\tthis.div = document.createElement('div');\n\tthis.div.className = style;\n\n\tthis.div.style.left = x + 'px';\n\tthis.div.style.top = y + 'px';\n\tthis.table = document.createElement('table');\n\tthis.table.className = style;\n\n\t// Disables built-in pan and zoom in IE10 and later\n\tif (mxClient.IS_POINTER)\n\t{\n\t\tthis.div.style.touchAction = 'none';\n\t}\n\t\n\t// Workaround for table size problems in FF\n\tif (width != null)\n\t{\n\t\tif (!mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tthis.div.style.width = width + 'px'; \n\t\t}\n\t\t\n\t\tthis.table.style.width = width + 'px';\n\t} \n\t\n\tif (height != null)\n\t{\n\t\tif (!mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tthis.div.style.height = height + 'px';\n\t\t}\n\t\t\n\t\tthis.table.style.height = height + 'px';\n\t}\t\t\n\t\n\t// Creates title row\n\tvar tbody = document.createElement('tbody');\n\tvar tr = document.createElement('tr');\n\t\n\tthis.title = document.createElement('td');\n\tthis.title.className = style + 'Title';\n\t\n\tthis.buttons = document.createElement('div');\n\tthis.buttons.style.position = 'absolute';\n\tthis.buttons.style.display = 'inline-block';\n\tthis.buttons.style.right = '4px';\n\tthis.buttons.style.top = '5px';\n\tthis.title.appendChild(this.buttons);\n\t\n\ttr.appendChild(this.title);\n\ttbody.appendChild(tr);\n\t\n\t// Creates content row and table cell\n\ttr = document.createElement('tr');\n\tthis.td = document.createElement('td');\n\tthis.td.className = style + 'Pane';\n\t\n\tif (document.documentMode == 7)\n\t{\n\t\tthis.td.style.height = '100%';\n\t}\n\n\tthis.contentWrapper = document.createElement('div');\n\tthis.contentWrapper.className = style + 'Pane';\n\tthis.contentWrapper.style.width = '100%';\n\tthis.contentWrapper.appendChild(this.content);\n\n\t// Workaround for div around div restricts height\n\t// of inner div if outerdiv has hidden overflow\n\tif (mxClient.IS_QUIRKS || this.content.nodeName.toUpperCase() != 'DIV')\n\t{\n\t\tthis.contentWrapper.style.height = '100%';\n\t}\n\n\t// Puts all content into the DOM\n\tthis.td.appendChild(this.contentWrapper);\n\ttr.appendChild(this.td);\n\ttbody.appendChild(tr);\n\tthis.table.appendChild(tbody);\n\tthis.div.appendChild(this.table);\n\t\n\t// Puts the window on top of other windows when clicked\n\tvar activator = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.activate();\n\t});\n\t\n\tmxEvent.addGestureListeners(this.title, activator);\n\tmxEvent.addGestureListeners(this.table, activator);\n\n\tthis.hide();\n};\n\n/**\n * Function: setTitle\n * \n * Sets the window title to the given string. HTML markup inside the title\n * will be escaped.\n */\nmxWindow.prototype.setTitle = function(title)\n{\n\t// Removes all text content nodes (normally just one)\n\tvar child = this.title.firstChild;\n\t\n\twhile (child != null)\n\t{\n\t\tvar next = child.nextSibling;\n\t\t\n\t\tif (child.nodeType == mxConstants.NODETYPE_TEXT)\n\t\t{\n\t\t\tchild.parentNode.removeChild(child);\n\t\t}\n\t\t\n\t\tchild = next;\n\t}\n\t\n\tmxUtils.write(this.title, title || '');\n\tthis.title.appendChild(this.buttons);\n};\n\n/**\n * Function: setScrollable\n * \n * Sets if the window contents should be scrollable.\n */\nmxWindow.prototype.setScrollable = function(scrollable)\n{\n\t// Workaround for hang in Presto 2.5.22 (Opera 10.5)\n\tif (navigator.userAgent == null ||\n\t\tnavigator.userAgent.indexOf('Presto/2.5') < 0)\n\t{\n\t\tif (scrollable)\n\t\t{\n\t\t\tthis.contentWrapper.style.overflow = 'auto';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.contentWrapper.style.overflow = 'hidden';\n\t\t}\n\t}\n};\n\n/**\n * Function: activate\n * \n * Puts the window on top of all other windows.\n */\nmxWindow.prototype.activate = function()\n{\n\tif (mxWindow.activeWindow != this)\n\t{\n\t\tvar style = mxUtils.getCurrentStyle(this.getElement());\n\t\tvar index = (style != null) ? style.zIndex : 3;\n\n\t\tif (mxWindow.activeWindow)\n\t\t{\n\t\t\tvar elt = mxWindow.activeWindow.getElement();\n\t\t\t\n\t\t\tif (elt != null && elt.style != null)\n\t\t\t{\n\t\t\t\telt.style.zIndex = index;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar previousWindow = mxWindow.activeWindow;\n\t\tthis.getElement().style.zIndex = parseInt(index) + 1;\n\t\tmxWindow.activeWindow = this;\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ACTIVATE, 'previousWindow', previousWindow));\n\t}\n};\n\n/**\n * Function: getElement\n * \n * Returuns the outermost DOM node that makes up the window.\n */\nmxWindow.prototype.getElement = function()\n{\n\treturn this.div;\n};\n\n/**\n * Function: fit\n * \n * Makes sure the window is inside the client area of the window.\n */\nmxWindow.prototype.fit = function()\n{\n\tmxUtils.fit(this.div);\n};\n\n/**\n * Function: isResizable\n * \n * Returns true if the window is resizable.\n */\nmxWindow.prototype.isResizable = function()\n{\n\tif (this.resize != null)\n\t{\n\t\treturn this.resize.style.display != 'none';\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: setResizable\n * \n * Sets if the window should be resizable. To avoid interference with some\n * built-in features of IE10 and later, the use of the following code is\n * recommended if there are resizable <mxWindow>s in the page:\n * \n * (code)\n * if (mxClient.IS_POINTER)\n * {\n *   document.body.style.msTouchAction = 'none';\n * }\n * (end)\n */\nmxWindow.prototype.setResizable = function(resizable)\n{\n\tif (resizable)\n\t{\n\t\tif (this.resize == null)\n\t\t{\n\t\t\tthis.resize = document.createElement('img');\n\t\t\tthis.resize.style.position = 'absolute';\n\t\t\tthis.resize.style.bottom = '2px';\n\t\t\tthis.resize.style.right = '2px';\n\n\t\t\tthis.resize.setAttribute('src', this.resizeImage);\n\t\t\tthis.resize.style.cursor = 'nw-resize';\n\t\t\t\n\t\t\tvar startX = null;\n\t\t\tvar startY = null;\n\t\t\tvar width = null;\n\t\t\tvar height = null;\n\t\t\t\n\t\t\tvar start = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\t// LATER: pointerdown starting on border of resize does start\n\t\t\t\t// the drag operation but does not fire consecutive events via\n\t\t\t\t// one of the listeners below (does pan instead).\n\t\t\t\t// Workaround: document.body.style.msTouchAction = 'none'\n\t\t\t\tthis.activate();\n\t\t\t\tstartX = mxEvent.getClientX(evt);\n\t\t\t\tstartY = mxEvent.getClientY(evt);\n\t\t\t\twidth = this.div.offsetWidth;\n\t\t\t\theight = this.div.offsetHeight;\n\t\t\t\t\n\t\t\t\tmxEvent.addGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE_START, 'event', evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\n\t\t\t// Adds a temporary pair of listeners to intercept\n\t\t\t// the gesture event in the document\n\t\t\tvar dragHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (startX != null && startY != null)\n\t\t\t\t{\n\t\t\t\t\tvar dx = mxEvent.getClientX(evt) - startX;\n\t\t\t\t\tvar dy = mxEvent.getClientY(evt) - startY;\n\t\n\t\t\t\t\tthis.setSize(width + dx, height + dy);\n\t\n\t\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE, 'event', evt));\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tvar dropHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (startX != null && startY != null)\n\t\t\t\t{\n\t\t\t\t\tstartX = null;\n\t\t\t\t\tstartY = null;\n\t\t\t\t\tmxEvent.removeGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE_END, 'event', evt));\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tmxEvent.addGestureListeners(this.resize, start, dragHandler, dropHandler);\n\t\t\tthis.div.appendChild(this.resize);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tthis.resize.style.display = 'inline';\n\t\t}\n\t}\n\telse if (this.resize != null)\n\t{\n\t\tthis.resize.style.display = 'none';\n\t}\n};\n\t\n/**\n * Function: setSize\n * \n * Sets the size of the window.\n */\nmxWindow.prototype.setSize = function(width, height)\n{\n\twidth = Math.max(this.minimumSize.width, width);\n\theight = Math.max(this.minimumSize.height, height);\n\n\t// Workaround for table size problems in FF\n\tif (!mxClient.IS_QUIRKS)\n\t{\n\t\tthis.div.style.width =  width + 'px';\n\t\tthis.div.style.height = height + 'px';\n\t}\n\t\n\tthis.table.style.width =  width + 'px';\n\tthis.table.style.height = height + 'px';\n\n\tif (!mxClient.IS_QUIRKS)\n\t{\n\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t}\n};\n\t\n/**\n * Function: setMinimizable\n * \n * Sets if the window is minimizable.\n */\nmxWindow.prototype.setMinimizable = function(minimizable)\n{\n\tthis.minimize.style.display = (minimizable) ? '' : 'none';\n};\n\n/**\n * Function: getMinimumSize\n * \n * Returns an <mxRectangle> that specifies the size for the minimized window.\n * A width or height of 0 means keep the existing width or height. This\n * implementation returns the height of the window title and keeps the width.\n */\nmxWindow.prototype.getMinimumSize = function()\n{\n\treturn new mxRectangle(0, 0, 0, this.title.offsetHeight);\n};\n\n/**\n * Function: installMinimizeHandler\n * \n * Installs the event listeners required for minimizing the window.\n */\nmxWindow.prototype.installMinimizeHandler = function()\n{\n\tthis.minimize = document.createElement('img');\n\t\n\tthis.minimize.setAttribute('src', this.minimizeImage);\n\tthis.minimize.setAttribute('title', 'Minimize');\n\tthis.minimize.style.cursor = 'pointer';\n\tthis.minimize.style.marginLeft = '2px';\n\tthis.minimize.style.display = 'none';\n\t\n\tthis.buttons.appendChild(this.minimize);\n\t\n\tvar minimized = false;\n\tvar maxDisplay = null;\n\tvar height = null;\n\n\tvar funct = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.activate();\n\t\t\n\t\tif (!minimized)\n\t\t{\n\t\t\tminimized = true;\n\t\t\t\n\t\t\tthis.minimize.setAttribute('src', this.normalizeImage);\n\t\t\tthis.minimize.setAttribute('title', 'Normalize');\n\t\t\tthis.contentWrapper.style.display = 'none';\n\t\t\tmaxDisplay = this.maximize.style.display;\n\t\t\t\n\t\t\tthis.maximize.style.display = 'none';\n\t\t\theight = this.table.style.height;\n\t\t\t\n\t\t\tvar minSize = this.getMinimumSize();\n\t\t\t\n\t\t\tif (minSize.height > 0)\n\t\t\t{\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.height = minSize.height + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.table.style.height = minSize.height + 'px';\n\t\t\t}\n\t\t\t\n\t\t\tif (minSize.width > 0)\n\t\t\t{\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.width = minSize.width + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.table.style.width = minSize.width + 'px';\n\t\t\t}\n\t\t\t\n\t\t\tif (this.resize != null)\n\t\t\t{\n\t\t\t\tthis.resize.style.visibility = 'hidden';\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MINIMIZE, 'event', evt));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tminimized = false;\n\t\t\t\n\t\t\tthis.minimize.setAttribute('src', this.minimizeImage);\n\t\t\tthis.minimize.setAttribute('title', 'Minimize');\n\t\t\tthis.contentWrapper.style.display = ''; // default\n\t\t\tthis.maximize.style.display = maxDisplay;\n\t\t\t\n\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t{\n\t\t\t\tthis.div.style.height = height;\n\t\t\t}\n\t\t\t\n\t\t\tthis.table.style.height = height;\n\n\t\t\tif (this.resize != null)\n\t\t\t{\n\t\t\t\tthis.resize.style.visibility = '';\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.NORMALIZE, 'event', evt));\n\t\t}\n\t\t\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tmxEvent.addGestureListeners(this.minimize, funct);\n};\n\t\n/**\n * Function: setMaximizable\n * \n * Sets if the window is maximizable.\n */\nmxWindow.prototype.setMaximizable = function(maximizable)\n{\n\tthis.maximize.style.display = (maximizable) ? '' : 'none';\n};\n\n/**\n * Function: installMaximizeHandler\n * \n * Installs the event listeners required for maximizing the window.\n */\nmxWindow.prototype.installMaximizeHandler = function()\n{\n\tthis.maximize = document.createElement('img');\n\t\n\tthis.maximize.setAttribute('src', this.maximizeImage);\n\tthis.maximize.setAttribute('title', 'Maximize');\n\tthis.maximize.style.cursor = 'default';\n\tthis.maximize.style.marginLeft = '2px';\n\tthis.maximize.style.cursor = 'pointer';\n\tthis.maximize.style.display = 'none';\n\t\n\tthis.buttons.appendChild(this.maximize);\n\t\n\tvar maximized = false;\n\tvar x = null;\n\tvar y = null;\n\tvar height = null;\n\tvar width = null;\n\tvar minDisplay = null;\n\n\tvar funct = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.activate();\n\t\t\n\t\tif (this.maximize.style.display != 'none')\n\t\t{\n\t\t\tif (!maximized)\n\t\t\t{\n\t\t\t\tmaximized = true;\n\t\t\t\t\n\t\t\t\tthis.maximize.setAttribute('src', this.normalizeImage);\n\t\t\t\tthis.maximize.setAttribute('title', 'Normalize');\n\t\t\t\tthis.contentWrapper.style.display = '';\n\t\t\t\tminDisplay = this.minimize.style.display;\n\t\t\t\tthis.minimize.style.display = 'none';\n\t\t\t\t\n\t\t\t\t// Saves window state\n\t\t\t\tx = parseInt(this.div.style.left);\n\t\t\t\ty = parseInt(this.div.style.top);\n\t\t\t\theight = this.table.style.height;\n\t\t\t\twidth = this.table.style.width;\n\n\t\t\t\tthis.div.style.left = '0px';\n\t\t\t\tthis.div.style.top = '0px';\n\t\t\t\tvar docHeight = Math.max(document.body.clientHeight || 0, document.documentElement.clientHeight || 0);\n\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.width = (document.body.clientWidth - 2) + 'px';\n\t\t\t\t\tthis.div.style.height = (docHeight - 2) + 'px';\n\t\t\t\t}\n\n\t\t\t\tthis.table.style.width = (document.body.clientWidth - 2) + 'px';\n\t\t\t\tthis.table.style.height = (docHeight - 2) + 'px';\n\t\t\t\t\n\t\t\t\tif (this.resize != null)\n\t\t\t\t{\n\t\t\t\t\tthis.resize.style.visibility = 'hidden';\n\t\t\t\t}\n\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tvar style = mxUtils.getCurrentStyle(this.contentWrapper);\n\t\t\n\t\t\t\t\tif (style.overflow == 'auto' || this.resize != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\t\t\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MAXIMIZE, 'event', evt));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmaximized = false;\n\t\t\t\t\n\t\t\t\tthis.maximize.setAttribute('src', this.maximizeImage);\n\t\t\t\tthis.maximize.setAttribute('title', 'Maximize');\n\t\t\t\tthis.contentWrapper.style.display = '';\n\t\t\t\tthis.minimize.style.display = minDisplay;\n\n\t\t\t\t// Restores window state\n\t\t\t\tthis.div.style.left = x+'px';\n\t\t\t\tthis.div.style.top = y+'px';\n\t\t\t\t\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.height = height;\n\t\t\t\t\tthis.div.style.width = width;\n\n\t\t\t\t\tvar style = mxUtils.getCurrentStyle(this.contentWrapper);\n\t\t\n\t\t\t\t\tif (style.overflow == 'auto' || this.resize != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\t\t\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.table.style.height = height;\n\t\t\t\tthis.table.style.width = width;\n\n\t\t\t\tif (this.resize != null)\n\t\t\t\t{\n\t\t\t\t\tthis.resize.style.visibility = '';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.NORMALIZE, 'event', evt));\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.consume(evt);\n\t\t}\n\t});\n\t\n\tmxEvent.addGestureListeners(this.maximize, funct);\n\tmxEvent.addListener(this.title, 'dblclick', funct);\n};\n\t\n/**\n * Function: installMoveHandler\n * \n * Installs the event listeners required for moving the window.\n */\nmxWindow.prototype.installMoveHandler = function()\n{\n\tthis.title.style.cursor = 'move';\n\t\n\tmxEvent.addGestureListeners(this.title,\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tvar startX = mxEvent.getClientX(evt);\n\t\t\tvar startY = mxEvent.getClientY(evt);\n\t\t\tvar x = this.getX();\n\t\t\tvar y = this.getY();\n\t\t\t\t\t\t\n\t\t\t// Adds a temporary pair of listeners to intercept\n\t\t\t// the gesture event in the document\n\t\t\tvar dragHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tvar dx = mxEvent.getClientX(evt) - startX;\n\t\t\t\tvar dy = mxEvent.getClientY(evt) - startY;\n\t\t\t\tthis.setLocation(x + dx, y + dy);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE, 'event', evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\t\t\t\n\t\t\tvar dropHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tmxEvent.removeGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE_END, 'event', evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\t\t\t\n\t\t\tmxEvent.addGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE_START, 'event', evt));\n\t\t\tmxEvent.consume(evt);\n\t\t}));\n\t\n\t// Disables built-in pan and zoom in IE10 and later\n\tif (mxClient.IS_POINTER)\n\t{\n\t\tthis.title.style.touchAction = 'none';\n\t}\n};\n\n/**\n * Function: setLocation\n * \n * Sets the upper, left corner of the window.\n */\n mxWindow.prototype.setLocation = function(x, y)\n {\n\tthis.div.style.left = x + 'px';\n\tthis.div.style.top = y + 'px';\n };\n\n/**\n * Function: getX\n *\n * Returns the current position on the x-axis.\n */\nmxWindow.prototype.getX = function()\n{\n\treturn parseInt(this.div.style.left);\n};\n\n/**\n * Function: getY\n *\n * Returns the current position on the y-axis.\n */\nmxWindow.prototype.getY = function()\n{\n\treturn parseInt(this.div.style.top);\n};\n\n/**\n * Function: installCloseHandler\n *\n * Adds the <closeImage> as a new image node in <closeImg> and installs the\n * <close> event.\n */\nmxWindow.prototype.installCloseHandler = function()\n{\n\tthis.closeImg = document.createElement('img');\n\t\n\tthis.closeImg.setAttribute('src', this.closeImage);\n\tthis.closeImg.setAttribute('title', 'Close');\n\tthis.closeImg.style.marginLeft = '2px';\n\tthis.closeImg.style.cursor = 'pointer';\n\tthis.closeImg.style.display = 'none';\n\t\n\tthis.buttons.appendChild(this.closeImg);\n\n\tmxEvent.addGestureListeners(this.closeImg,\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CLOSE, 'event', evt));\n\t\t\t\n\t\t\tif (this.destroyOnClose)\n\t\t\t{\n\t\t\t\tthis.destroy();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.setVisible(false);\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.consume(evt);\n\t\t}));\n};\n\n/**\n * Function: setImage\n * \n * Sets the image associated with the window.\n * \n * Parameters:\n * \n * image - URL of the image to be used.\n */\nmxWindow.prototype.setImage = function(image)\n{\n\tthis.image = document.createElement('img');\n\tthis.image.setAttribute('src', image);\n\tthis.image.setAttribute('align', 'left');\n\tthis.image.style.marginRight = '4px';\n\tthis.image.style.marginLeft = '0px';\n\tthis.image.style.marginTop = '-2px';\n\t\n\tthis.title.insertBefore(this.image, this.title.firstChild);\n};\n\n/**\n * Function: setClosable\n * \n * Sets the image associated with the window.\n * \n * Parameters:\n * \n * closable - Boolean specifying if the window should be closable.\n */\nmxWindow.prototype.setClosable = function(closable)\n{\n\tthis.closeImg.style.display = (closable) ? '' : 'none';\n};\n\n/**\n * Function: isVisible\n * \n * Returns true if the window is visible.\n */\nmxWindow.prototype.isVisible = function()\n{\n\tif (this.div != null)\n\t{\n\t\treturn this.div.style.display != 'none';\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: setVisible\n *\n * Shows or hides the window depending on the given flag.\n * \n * Parameters:\n * \n * visible - Boolean indicating if the window should be made visible.\n */\nmxWindow.prototype.setVisible = function(visible)\n{\n\tif (this.div != null && this.isVisible() != visible)\n\t{\n\t\tif (visible)\n\t\t{\n\t\t\tthis.show();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.hide();\n\t\t}\n\t}\n};\n\n/**\n * Function: show\n *\n * Shows the window.\n */\nmxWindow.prototype.show = function()\n{\n\tthis.div.style.display = '';\n\tthis.activate();\n\t\n\tvar style = mxUtils.getCurrentStyle(this.contentWrapper);\n\t\n\tif (!mxClient.IS_QUIRKS && (style.overflow == 'auto' || this.resize != null) &&\n\t\tthis.contentWrapper.style.display != 'none')\n\t{\n\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.SHOW));\n};\n\n/**\n * Function: hide\n *\n * Hides the window.\n */\nmxWindow.prototype.hide = function()\n{\n\tthis.div.style.display = 'none';\n\tthis.fireEvent(new mxEventObject(mxEvent.HIDE));\n};\n\n/**\n * Function: destroy\n *\n * Destroys the window and removes all associated resources. Fires a\n * <destroy> event prior to destroying the window.\n */\nmxWindow.prototype.destroy = function()\n{\n\tthis.fireEvent(new mxEventObject(mxEvent.DESTROY));\n\t\n\tif (this.div != null)\n\t{\n\t\tmxEvent.release(this.div);\n\t\tthis.div.parentNode.removeChild(this.div);\n\t\tthis.div = null;\n\t}\n\t\n\tthis.title = null;\n\tthis.content = null;\n\tthis.contentWrapper = null;\n};\n\n__mxOutput.mxWindow = typeof mxWindow !== 'undefined' ? mxWindow : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxForm\n * \n * A simple class for creating HTML forms.\n * \n * Constructor: mxForm\n * \n * Creates a HTML table using the specified classname.\n */\nfunction mxForm(className)\n{\n\tthis.table = document.createElement('table');\n\tthis.table.className = className;\n\tthis.body = document.createElement('tbody');\n\t\n\tthis.table.appendChild(this.body);\n};\n\n/**\n * Variable: table\n * \n * Holds the DOM node that represents the table.\n */\nmxForm.prototype.table = null;\n\n/**\n * Variable: body\n * \n * Holds the DOM node that represents the tbody (table body). New rows\n * can be added to this object using DOM API.\n */\nmxForm.prototype.body = false;\n\n/**\n * Function: getTable\n * \n * Returns the table that contains this form.\n */\nmxForm.prototype.getTable = function()\n{\n\treturn this.table;\n};\n\n/**\n * Function: addButtons\n * \n * Helper method to add an OK and Cancel button using the respective\n * functions.\n */\nmxForm.prototype.addButtons = function(okFunct, cancelFunct)\n{\n\tvar tr = document.createElement('tr');\n\tvar td = document.createElement('td');\n\ttr.appendChild(td);\n\ttd = document.createElement('td');\n\n\t// Adds the ok button\n\tvar button = document.createElement('button');\n\tmxUtils.write(button, mxResources.get('ok') || 'OK');\n\ttd.appendChild(button);\n\n\tmxEvent.addListener(button, 'click', function()\n\t{\n\t\tokFunct();\n\t});\n\t\n\t// Adds the cancel button\n\tbutton = document.createElement('button');\n\tmxUtils.write(button, mxResources.get('cancel') || 'Cancel');\n\ttd.appendChild(button);\n\t\n\tmxEvent.addListener(button, 'click', function()\n\t{\n\t\tcancelFunct();\n\t});\n\t\n\ttr.appendChild(td);\n\tthis.body.appendChild(tr);\n};\n\n/**\n * Function: addText\n * \n * Adds an input for the given name, type and value and returns it.\n */\nmxForm.prototype.addText = function(name, value, type)\n{\n\tvar input = document.createElement('input');\n\t\n\tinput.setAttribute('type', type || 'text');\n\tinput.value = value;\n\t\n\treturn this.addField(name, input);\n};\n\n/**\n * Function: addCheckbox\n * \n * Adds a checkbox for the given name and value and returns the textfield.\n */\nmxForm.prototype.addCheckbox = function(name, value)\n{\n\tvar input = document.createElement('input');\n\t\n\tinput.setAttribute('type', 'checkbox');\n\tthis.addField(name, input);\n\n\t// IE can only change the checked value if the input is inside the DOM\n\tif (value)\n\t{\n\t\tinput.checked = true;\n\t}\n\n\treturn input;\n};\n\n/**\n * Function: addTextarea\n * \n * Adds a textarea for the given name and value and returns the textarea.\n */\nmxForm.prototype.addTextarea = function(name, value, rows)\n{\n\tvar input = document.createElement('textarea');\n\t\n\tif (mxClient.IS_NS)\n\t{\n\t\trows--;\n\t}\n\t\n\tinput.setAttribute('rows', rows || 2);\n\tinput.value = value;\n\t\n\treturn this.addField(name, input);\n};\n\n/**\n * Function: addCombo\n * \n * Adds a combo for the given name and returns the combo.\n */\nmxForm.prototype.addCombo = function(name, isMultiSelect, size)\n{\n\tvar select = document.createElement('select');\n\t\n\tif (size != null)\n\t{\n\t\tselect.setAttribute('size', size);\n\t}\n\t\n\tif (isMultiSelect)\n\t{\n\t\tselect.setAttribute('multiple', 'true');\n\t}\n\t\n\treturn this.addField(name, select);\n};\n\n/**\n * Function: addOption\n * \n * Adds an option for the given label to the specified combo.\n */\nmxForm.prototype.addOption = function(combo, label, value, isSelected)\n{\n\tvar option = document.createElement('option');\n\t\n\tmxUtils.writeln(option, label);\n\toption.setAttribute('value', value);\n\t\n\tif (isSelected)\n\t{\n\t\toption.setAttribute('selected', isSelected);\n\t}\n\t\n\tcombo.appendChild(option);\n};\n\n/**\n * Function: addField\n * \n * Adds a new row with the name and the input field in two columns and\n * returns the given input.\n */\nmxForm.prototype.addField = function(name, input)\n{\n\tvar tr = document.createElement('tr');\n\tvar td = document.createElement('td');\n\tmxUtils.write(td, name);\n\ttr.appendChild(td);\n\t\n\ttd = document.createElement('td');\n\ttd.appendChild(input);\n\ttr.appendChild(td);\n\tthis.body.appendChild(tr);\n\t\n\treturn input;\n};\n\n__mxOutput.mxForm = typeof mxForm !== 'undefined' ? mxForm : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImage\n *\n * Encapsulates the URL, width and height of an image.\n * \n * Constructor: mxImage\n * \n * Constructs a new image.\n */\nfunction mxImage(src, width, height)\n{\n\tthis.src = src;\n\tthis.width = width;\n\tthis.height = height;\n};\n\n/**\n * Variable: src\n *\n * String that specifies the URL of the image.\n */\nmxImage.prototype.src = null;\n\n/**\n * Variable: width\n *\n * Integer that specifies the width of the image.\n */\nmxImage.prototype.width = null;\n\n/**\n * Variable: height\n *\n * Integer that specifies the height of the image.\n */\nmxImage.prototype.height = null;\n\n__mxOutput.mxImage = typeof mxImage !== 'undefined' ? mxImage : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDivResizer\n * \n * Maintains the size of a div element in Internet Explorer. This is a\n * workaround for the right and bottom style being ignored in IE.\n * \n * If you need a div to cover the scrollwidth and -height of a document,\n * then you can use this class as follows:\n * \n * (code)\n * var resizer = new mxDivResizer(background);\n * resizer.getDocumentHeight = function()\n * {\n *   return document.body.scrollHeight;\n * }\n * resizer.getDocumentWidth = function()\n * {\n *   return document.body.scrollWidth;\n * }\n * resizer.resize();\n * (end)\n * \n * Constructor: mxDivResizer\n * \n * Constructs an object that maintains the size of a div\n * element when the window is being resized. This is only\n * required for Internet Explorer as it ignores the respective\n * stylesheet information for DIV elements.\n * \n * Parameters:\n * \n * div - Reference to the DOM node whose size should be maintained.\n * container - Optional Container that contains the div. Default is the\n * window.\n */\nfunction mxDivResizer(div, container)\n{\n\tif (div.nodeName.toLowerCase() == 'div')\n\t{\n\t\tif (container == null)\n\t\t{\n\t\t\tcontainer = window;\n\t\t}\n\n\t\tthis.div = div;\n\t\tvar style = mxUtils.getCurrentStyle(div);\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tthis.resizeWidth = style.width == 'auto';\n\t\t\tthis.resizeHeight = style.height == 'auto';\n\t\t}\n\t\t\n\t\tmxEvent.addListener(container, 'resize',\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (!this.handlingResize)\n\t\t\t\t{\n\t\t\t\t\tthis.handlingResize = true;\n\t\t\t\t\tthis.resize();\n\t\t\t\t\tthis.handlingResize = false;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\t\n\t\tthis.resize();\n\t}\n};\n\n/**\n * Function: resizeWidth\n * \n * Boolean specifying if the width should be updated.\n */\nmxDivResizer.prototype.resizeWidth = true;\n\n/**\n * Function: resizeHeight\n * \n * Boolean specifying if the height should be updated.\n */\nmxDivResizer.prototype.resizeHeight = true;\n\n/**\n * Function: handlingResize\n * \n * Boolean specifying if the width should be updated.\n */\nmxDivResizer.prototype.handlingResize = false;\n\n/**\n * Function: resize\n * \n * Updates the style of the DIV after the window has been resized.\n */\nmxDivResizer.prototype.resize = function()\n{\n\tvar w = this.getDocumentWidth();\n\tvar h = this.getDocumentHeight();\n\n\tvar l = parseInt(this.div.style.left);\n\tvar r = parseInt(this.div.style.right);\n\tvar t = parseInt(this.div.style.top);\n\tvar b = parseInt(this.div.style.bottom);\n\t\n\tif (this.resizeWidth &&\n\t\t!isNaN(l) &&\n\t\t!isNaN(r) &&\n\t\tl >= 0 &&\n\t\tr >= 0 &&\n\t\tw - r - l > 0)\n\t{\n\t\tthis.div.style.width = (w - r - l)+'px';\n\t}\n\t\n\tif (this.resizeHeight &&\n\t\t!isNaN(t) &&\n\t\t!isNaN(b) &&\n\t\tt >= 0 &&\n\t\tb >= 0 &&\n\t\th - t - b > 0)\n\t{\n\t\tthis.div.style.height = (h - t - b)+'px';\n\t}\n};\n\n/**\n * Function: getDocumentWidth\n * \n * Hook for subclassers to return the width of the document (without\n * scrollbars).\n */\nmxDivResizer.prototype.getDocumentWidth = function()\n{\n\treturn document.body.clientWidth;\n};\n\n/**\n * Function: getDocumentHeight\n * \n * Hook for subclassers to return the height of the document (without\n * scrollbars).\n */\nmxDivResizer.prototype.getDocumentHeight = function()\n{\n\treturn document.body.clientHeight;\n};\n\n__mxOutput.mxDivResizer = typeof mxDivResizer !== 'undefined' ? mxDivResizer : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDragSource\n * \n * Wrapper to create a drag source from a DOM element so that the element can\n * be dragged over a graph and dropped into the graph as a new cell.\n * \n * Problem is that in the dropHandler the current preview location is not\n * available, so the preview and the dropHandler must match.\n * \n * Constructor: mxDragSource\n * \n * Constructs a new drag source for the given element.\n */\nfunction mxDragSource(element, dropHandler)\n{\n\tthis.element = element;\n\tthis.dropHandler = dropHandler;\n\t\n\t// Handles a drag gesture on the element\n\tmxEvent.addGestureListeners(element, mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.mouseDown(evt);\n\t}));\n\t\n\t// Prevents native drag and drop\n\tmxEvent.addListener(element, 'dragstart', function(evt)\n\t{\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tthis.eventConsumer = function(sender, evt)\n\t{\n\t\tvar evtName = evt.getProperty('eventName');\n\t\tvar me = evt.getProperty('event');\n\t\t\n\t\tif (evtName != mxEvent.MOUSE_DOWN)\n\t\t{\n\t\t\tme.consume();\n\t\t}\n\t};\n};\n\n/**\n * Variable: element\n *\n * Reference to the DOM node which was made draggable.\n */\nmxDragSource.prototype.element = null;\n\n/**\n * Variable: dropHandler\n *\n * Holds the DOM node that is used to represent the drag preview. If this is\n * null then the source element will be cloned and used for the drag preview.\n */\nmxDragSource.prototype.dropHandler = null;\n\n/**\n * Variable: dragOffset\n *\n * <mxPoint> that specifies the offset of the <dragElement>. Default is null.\n */\nmxDragSource.prototype.dragOffset = null;\n\n/**\n * Variable: dragElement\n *\n * Holds the DOM node that is used to represent the drag preview. If this is\n * null then the source element will be cloned and used for the drag preview.\n */\nmxDragSource.prototype.dragElement = null;\n\n/**\n * Variable: previewElement\n *\n * Optional <mxRectangle> that specifies the unscaled size of the preview.\n */\nmxDragSource.prototype.previewElement = null;\n\n/**\n * Variable: previewOffset\n *\n * Optional <mxPoint> that specifies the offset of the preview in pixels.\n */\nmxDragSource.prototype.previewOffset = null;\n\n/**\n * Variable: enabled\n *\n * Specifies if this drag source is enabled. Default is true.\n */\nmxDragSource.prototype.enabled = true;\n\n/**\n * Variable: currentGraph\n *\n * Reference to the <mxGraph> that is the current drop target.\n */\nmxDragSource.prototype.currentGraph = null;\n\n/**\n * Variable: currentDropTarget\n *\n * Holds the current drop target under the mouse.\n */\nmxDragSource.prototype.currentDropTarget = null;\n\n/**\n * Variable: currentPoint\n *\n * Holds the current drop location.\n */\nmxDragSource.prototype.currentPoint = null;\n\n/**\n * Variable: currentGuide\n *\n * Holds an <mxGuide> for the <currentGraph> if <dragPreview> is not null.\n */\nmxDragSource.prototype.currentGuide = null;\n\n/**\n * Variable: currentGuide\n *\n * Holds an <mxGuide> for the <currentGraph> if <dragPreview> is not null.\n */\nmxDragSource.prototype.currentHighlight = null;\n\n/**\n * Variable: autoscroll\n *\n * Specifies if the graph should scroll automatically. Default is true.\n */\nmxDragSource.prototype.autoscroll = true;\n\n/**\n * Variable: guidesEnabled\n *\n * Specifies if <mxGuide> should be enabled. Default is true.\n */\nmxDragSource.prototype.guidesEnabled = true;\n\n/**\n * Variable: gridEnabled\n *\n * Specifies if the grid should be allowed. Default is true.\n */\nmxDragSource.prototype.gridEnabled = true;\n\n/**\n * Variable: highlightDropTargets\n *\n * Specifies if drop targets should be highlighted. Default is true.\n */\nmxDragSource.prototype.highlightDropTargets = true;\n\n/**\n * Variable: dragElementZIndex\n * \n * ZIndex for the drag element. Default is 100.\n */\nmxDragSource.prototype.dragElementZIndex = 100;\n\n/**\n * Variable: dragElementOpacity\n * \n * Opacity of the drag element in %. Default is 70.\n */\nmxDragSource.prototype.dragElementOpacity = 70;\n\n/**\n * Variable: checkEventSource\n * \n * Whether the event source should be checked in <graphContainerEvent>. Default\n * is true.\n */\nmxDragSource.prototype.checkEventSource = true;\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxDragSource.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxDragSource.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isGuidesEnabled\n * \n * Returns <guidesEnabled>.\n */\nmxDragSource.prototype.isGuidesEnabled = function()\n{\n\treturn this.guidesEnabled;\n};\n\n/**\n * Function: setGuidesEnabled\n * \n * Sets <guidesEnabled>.\n */\nmxDragSource.prototype.setGuidesEnabled = function(value)\n{\n\tthis.guidesEnabled = value;\n};\n\n/**\n * Function: isGridEnabled\n * \n * Returns <gridEnabled>.\n */\nmxDragSource.prototype.isGridEnabled = function()\n{\n\treturn this.gridEnabled;\n};\n\n/**\n * Function: setGridEnabled\n * \n * Sets <gridEnabled>.\n */\nmxDragSource.prototype.setGridEnabled = function(value)\n{\n\tthis.gridEnabled = value;\n};\n\n/**\n * Function: getGraphForEvent\n * \n * Returns the graph for the given mouse event. This implementation returns\n * null.\n */\nmxDragSource.prototype.getGraphForEvent = function(evt)\n{\n\treturn null;\n};\n\n/**\n * Function: getDropTarget\n * \n * Returns the drop target for the given graph and coordinates. This\n * implementation uses <mxGraph.getCellAt>.\n */\nmxDragSource.prototype.getDropTarget = function(graph, x, y, evt)\n{\n\treturn graph.getCellAt(x, y);\n};\n\n/**\n * Function: createDragElement\n * \n * Creates and returns a clone of the <dragElementPrototype> or the <element>\n * if the former is not defined.\n */\nmxDragSource.prototype.createDragElement = function(evt)\n{\n\treturn this.element.cloneNode(true);\n};\n\n/**\n * Function: createPreviewElement\n * \n * Creates and returns an element which can be used as a preview in the given\n * graph.\n */\nmxDragSource.prototype.createPreviewElement = function(graph)\n{\n\treturn null;\n};\n\n/**\n * Function: isActive\n * \n * Returns true if this drag source is active.\n */\nmxDragSource.prototype.isActive = function()\n{\n\treturn this.mouseMoveHandler != null;\n};\n\n/**\n * Function: reset\n * \n * Stops and removes everything and restores the state of the object.\n */\nmxDragSource.prototype.reset = function()\n{\n\tif (this.currentGraph != null)\n\t{\n\t\tthis.dragExit(this.currentGraph);\n\t\tthis.currentGraph = null;\n\t}\n\t\n\tthis.removeDragElement();\n\tthis.removeListeners();\n\tthis.stopDrag();\n};\n\n/**\n * Function: mouseDown\n * \n * Returns the drop target for the given graph and coordinates. This\n * implementation uses <mxGraph.getCellAt>.\n * \n * To ignore popup menu events for a drag source, this function can be\n * overridden as follows.\n * \n * (code)\n * var mouseDown = dragSource.mouseDown;\n * \n * dragSource.mouseDown = function(evt)\n * {\n *   if (!mxEvent.isPopupTrigger(evt))\n *   {\n *     mouseDown.apply(this, arguments);\n *   }\n * };\n * (end)\n */\nmxDragSource.prototype.mouseDown = function(evt)\n{\n\tif (this.enabled && !mxEvent.isConsumed(evt) && this.mouseMoveHandler == null)\n\t{\n\t\tthis.startDrag(evt);\n\t\tthis.mouseMoveHandler = mxUtils.bind(this, this.mouseMove);\n\t\tthis.mouseUpHandler = mxUtils.bind(this, this.mouseUp);\t\t\n\t\tmxEvent.addGestureListeners(document, null, this.mouseMoveHandler, this.mouseUpHandler);\n\t\t\n\t\tif (mxClient.IS_TOUCH && !mxEvent.isMouseEvent(evt))\n\t\t{\n\t\t\tthis.eventSource = mxEvent.getSource(evt);\n\t\t\tmxEvent.addGestureListeners(this.eventSource, null, this.mouseMoveHandler, this.mouseUpHandler);\n\t\t}\n\t}\n};\n\n/**\n * Function: startDrag\n * \n * Creates the <dragElement> using <createDragElement>.\n */\nmxDragSource.prototype.startDrag = function(evt)\n{\n\tthis.dragElement = this.createDragElement(evt);\n\tthis.dragElement.style.position = 'absolute';\n\tthis.dragElement.style.zIndex = this.dragElementZIndex;\n\tmxUtils.setOpacity(this.dragElement, this.dragElementOpacity);\n\n\tif (this.checkEventSource && mxClient.IS_SVG)\n\t{\n\t\tthis.dragElement.style.pointerEvents = 'none';\n\t}\n};\n\n/**\n * Function: stopDrag\n * \n * Invokes <removeDragElement>.\n */\nmxDragSource.prototype.stopDrag = function()\n{\n\t// LATER: This used to have a mouse event. If that is still needed we need to add another\n\t// final call to the DnD protocol to add a cleanup step in the case of escape press, which\n\t// is not associated with a mouse event and which currently calles this method.\n\tthis.removeDragElement();\n};\n\n/**\n * Function: removeDragElement\n * \n * Removes and destroys the <dragElement>.\n */\nmxDragSource.prototype.removeDragElement = function()\n{\n\tif (this.dragElement != null)\n\t{\n\t\tif (this.dragElement.parentNode != null)\n\t\t{\n\t\t\tthis.dragElement.parentNode.removeChild(this.dragElement);\n\t\t}\n\t\t\n\t\tthis.dragElement = null;\n\t}\n};\n\n/**\n * Function: getElementForEvent\n * \n * Returns the topmost element under the given event.\n */\nmxDragSource.prototype.getElementForEvent = function(evt)\n{\n\treturn ((mxEvent.isTouchEvent(evt) || mxEvent.isPenEvent(evt)) ?\n\t\t\tdocument.elementFromPoint(mxEvent.getClientX(evt), mxEvent.getClientY(evt)) :\n\t\t\t\tmxEvent.getSource(evt));\n};\n\n/**\n * Function: graphContainsEvent\n * \n * Returns true if the given graph contains the given event.\n */\nmxDragSource.prototype.graphContainsEvent = function(graph, evt)\n{\n\tvar x = mxEvent.getClientX(evt);\n\tvar y = mxEvent.getClientY(evt);\n\tvar offset = mxUtils.getOffset(graph.container);\n\tvar origin = mxUtils.getScrollOrigin();\n\tvar elt = this.getElementForEvent(evt);\n\t\n\tif (this.checkEventSource)\n\t{\n\t\twhile (elt != null && elt != graph.container)\n\t\t{\n\t\t\telt = elt.parentNode;\n\t\t}\n\t}\n\n\t// Checks if event is inside the bounds of the graph container\n\treturn elt != null && x >= offset.x - origin.x && y >= offset.y - origin.y &&\n\t\tx <= offset.x - origin.x + graph.container.offsetWidth &&\n\t\ty <= offset.y - origin.y + graph.container.offsetHeight;\n};\n\n/**\n * Function: mouseMove\n * \n * Gets the graph for the given event using <getGraphForEvent>, updates the\n * <currentGraph>, calling <dragEnter> and <dragExit> on the new and old graph,\n * respectively, and invokes <dragOver> if <currentGraph> is not null.\n */\nmxDragSource.prototype.mouseMove = function(evt)\n{\n\tvar graph = this.getGraphForEvent(evt);\n\t\n\t// Checks if event is inside the bounds of the graph container\n\tif (graph != null && !this.graphContainsEvent(graph, evt))\n\t{\n\t\tgraph = null;\n\t}\n\n\tif (graph != this.currentGraph)\n\t{\n\t\tif (this.currentGraph != null)\n\t\t{\n\t\t\tthis.dragExit(this.currentGraph, evt);\n\t\t}\n\t\t\n\t\tthis.currentGraph = graph;\n\t\t\n\t\tif (this.currentGraph != null)\n\t\t{\n\t\t\tthis.dragEnter(this.currentGraph, evt);\n\t\t}\n\t}\n\t\n\tif (this.currentGraph != null)\n\t{\n\t\tthis.dragOver(this.currentGraph, evt);\n\t}\n\n\tif (this.dragElement != null && (this.previewElement == null || this.previewElement.style.visibility != 'visible'))\n\t{\n\t\tvar x = mxEvent.getClientX(evt);\n\t\tvar y = mxEvent.getClientY(evt);\n\t\t\n\t\tif (this.dragElement.parentNode == null)\n\t\t{\n\t\t\tdocument.body.appendChild(this.dragElement);\n\t\t}\n\n\t\tthis.dragElement.style.visibility = 'visible';\n\t\t\n\t\tif (this.dragOffset != null)\n\t\t{\n\t\t\tx += this.dragOffset.x;\n\t\t\ty += this.dragOffset.y;\n\t\t}\n\t\t\n\t\tvar offset = mxUtils.getDocumentScrollOrigin(document);\n\t\t\n\t\tthis.dragElement.style.left = (x + offset.x) + 'px';\n\t\tthis.dragElement.style.top = (y + offset.y) + 'px';\n\t}\n\telse if (this.dragElement != null)\n\t{\n\t\tthis.dragElement.style.visibility = 'hidden';\n\t}\n\t\n\tmxEvent.consume(evt);\n};\n\n/**\n * Function: mouseUp\n * \n * Processes the mouse up event and invokes <drop>, <dragExit> and <stopDrag>\n * as required.\n */\nmxDragSource.prototype.mouseUp = function(evt)\n{\n\tif (this.currentGraph != null)\n\t{\n\t\tif (this.currentPoint != null && (this.previewElement == null ||\n\t\t\tthis.previewElement.style.visibility != 'hidden'))\n\t\t{\n\t\t\tvar scale = this.currentGraph.view.scale;\n\t\t\tvar tr = this.currentGraph.view.translate;\n\t\t\tvar x = this.currentPoint.x / scale - tr.x;\n\t\t\tvar y = this.currentPoint.y / scale - tr.y;\n\t\t\t\n\t\t\tthis.drop(this.currentGraph, evt, this.currentDropTarget, x, y);\n\t\t}\n\t\t\n\t\tthis.dragExit(this.currentGraph);\n\t\tthis.currentGraph = null;\n\t}\n\n\tthis.stopDrag();\n\tthis.removeListeners();\n\t\n\tmxEvent.consume(evt);\n};\n\n/**\n * Function: removeListeners\n * \n * Actives the given graph as a drop target.\n */\nmxDragSource.prototype.removeListeners = function()\n{\n\tif (this.eventSource != null)\n\t{\n\t\tmxEvent.removeGestureListeners(this.eventSource, null, this.mouseMoveHandler, this.mouseUpHandler);\n\t\tthis.eventSource = null;\n\t}\n\t\n\tmxEvent.removeGestureListeners(document, null, this.mouseMoveHandler, this.mouseUpHandler);\n\tthis.mouseMoveHandler = null;\n\tthis.mouseUpHandler = null;\n};\n\n/**\n * Function: dragEnter\n * \n * Actives the given graph as a drop target.\n */\nmxDragSource.prototype.dragEnter = function(graph, evt)\n{\n\tgraph.isMouseDown = true;\n\tgraph.isMouseTrigger = mxEvent.isMouseEvent(evt);\n\tthis.previewElement = this.createPreviewElement(graph);\n\t\n\tif (this.previewElement != null && this.checkEventSource && mxClient.IS_SVG)\n\t{\n\t\tthis.previewElement.style.pointerEvents = 'none';\n\t}\n\t\n\t// Guide is only needed if preview element is used\n\tif (this.isGuidesEnabled() && this.previewElement != null)\n\t{\n\t\tthis.currentGuide = new mxGuide(graph, graph.graphHandler.getGuideStates());\n\t}\n\t\n\tif (this.highlightDropTargets)\n\t{\n\t\tthis.currentHighlight = new mxCellHighlight(graph, mxConstants.DROP_TARGET_COLOR);\n\t}\n\t\n\t// Consumes all events in the current graph before they are fired\n\tgraph.addListener(mxEvent.FIRE_MOUSE_EVENT, this.eventConsumer);\n};\n\n/**\n * Function: dragExit\n * \n * Deactivates the given graph as a drop target.\n */\nmxDragSource.prototype.dragExit = function(graph, evt)\n{\n\tthis.currentDropTarget = null;\n\tthis.currentPoint = null;\n\tgraph.isMouseDown = false;\n\t\n\t// Consumes all events in the current graph before they are fired\n\tgraph.removeListener(this.eventConsumer);\n\t\n\tif (this.previewElement != null)\n\t{\n\t\tif (this.previewElement.parentNode != null)\n\t\t{\n\t\t\tthis.previewElement.parentNode.removeChild(this.previewElement);\n\t\t}\n\t\t\n\t\tthis.previewElement = null;\n\t}\n\t\n\tif (this.currentGuide != null)\n\t{\n\t\tthis.currentGuide.destroy();\n\t\tthis.currentGuide = null;\n\t}\n\t\n\tif (this.currentHighlight != null)\n\t{\n\t\tthis.currentHighlight.destroy();\n\t\tthis.currentHighlight = null;\n\t}\n};\n\n/**\n * Function: dragOver\n * \n * Implements autoscroll, updates the <currentPoint>, highlights any drop\n * targets and updates the preview.\n */\nmxDragSource.prototype.dragOver = function(graph, evt)\n{\n\tvar offset = mxUtils.getOffset(graph.container);\n\tvar origin = mxUtils.getScrollOrigin(graph.container);\n\tvar x = mxEvent.getClientX(evt) - offset.x + origin.x - graph.panDx;\n\tvar y = mxEvent.getClientY(evt) - offset.y + origin.y - graph.panDy;\n\n\tif (graph.autoScroll && (this.autoscroll == null || this.autoscroll))\n\t{\n\t\tgraph.scrollPointToVisible(x, y, graph.autoExtend);\n\t}\n\n\t// Highlights the drop target under the mouse\n\tif (this.currentHighlight != null && graph.isDropEnabled())\n\t{\n\t\tthis.currentDropTarget = this.getDropTarget(graph, x, y, evt);\n\t\tvar state = graph.getView().getState(this.currentDropTarget);\n\t\tthis.currentHighlight.highlight(state);\n\t}\n\n\t// Updates the location of the preview\n\tif (this.previewElement != null)\n\t{\n\t\tif (this.previewElement.parentNode == null)\n\t\t{\n\t\t\tgraph.container.appendChild(this.previewElement);\n\t\t\t\n\t\t\tthis.previewElement.style.zIndex = '3';\n\t\t\tthis.previewElement.style.position = 'absolute';\n\t\t}\n\t\t\n\t\tvar gridEnabled = this.isGridEnabled() && graph.isGridEnabledEvent(evt);\n\t\tvar hideGuide = true;\n\n\t\t// Grid and guides\n\t\tif (this.currentGuide != null && this.currentGuide.isEnabledForEvent(evt))\n\t\t{\n\t\t\t// LATER: HTML preview appears smaller than SVG preview\n\t\t\tvar w = parseInt(this.previewElement.style.width);\n\t\t\tvar h = parseInt(this.previewElement.style.height);\n\t\t\tvar bounds = new mxRectangle(0, 0, w, h);\n\t\t\tvar delta = new mxPoint(x, y);\n\t\t\tdelta = this.currentGuide.move(bounds, delta, gridEnabled, true);\n\t\t\thideGuide = false;\n\t\t\tx = delta.x;\n\t\t\ty = delta.y;\n\t\t}\n\t\telse if (gridEnabled)\n\t\t{\n\t\t\tvar scale = graph.view.scale;\n\t\t\tvar tr = graph.view.translate;\n\t\t\tvar off = graph.gridSize / 2;\n\t\t\tx = (graph.snap(x / scale - tr.x - off) + tr.x) * scale;\n\t\t\ty = (graph.snap(y / scale - tr.y - off) + tr.y) * scale;\n\t\t}\n\t\t\n\t\tif (this.currentGuide != null && hideGuide)\n\t\t{\n\t\t\tthis.currentGuide.hide();\n\t\t}\n\t\t\n\t\tif (this.previewOffset != null)\n\t\t{\n\t\t\tx += this.previewOffset.x;\n\t\t\ty += this.previewOffset.y;\n\t\t}\n\n\t\tthis.previewElement.style.left = Math.round(x) + 'px';\n\t\tthis.previewElement.style.top = Math.round(y) + 'px';\n\t\tthis.previewElement.style.visibility = 'visible';\n\t}\n\t\n\tthis.currentPoint = new mxPoint(x, y);\n};\n\n/**\n * Function: drop\n * \n * Returns the drop target for the given graph and coordinates. This\n * implementation uses <mxGraph.getCellAt>.\n */\nmxDragSource.prototype.drop = function(graph, evt, dropTarget, x, y)\n{\n\tthis.dropHandler.apply(this, arguments);\n\t\n\t// Had to move this to after the insert because it will\n\t// affect the scrollbars of the window in IE to try and\n\t// make the complete container visible.\n\t// LATER: Should be made optional.\n\tif (graph.container.style.visibility != 'hidden')\n\t{\n\t\tgraph.container.focus();\n\t}\n};\n\n__mxOutput.mxDragSource = typeof mxDragSource !== 'undefined' ? mxDragSource : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxToolbar\n * \n * Creates a toolbar inside a given DOM node. The toolbar may contain icons,\n * buttons and combo boxes.\n * \n * Event: mxEvent.SELECT\n * \n * Fires when an item was selected in the toolbar. The <code>function</code>\n * property contains the function that was selected in <selectMode>.\n * \n * Constructor: mxToolbar\n * \n * Constructs a toolbar in the specified container.\n *\n * Parameters:\n *\n * container - DOM node that contains the toolbar.\n */\nfunction mxToolbar(container)\n{\n\tthis.container = container;\n};\n\n/**\n * Extends mxEventSource.\n */\nmxToolbar.prototype = new mxEventSource();\nmxToolbar.prototype.constructor = mxToolbar;\n\n/**\n * Variable: container\n * \n * Reference to the DOM nodes that contains the toolbar.\n */\nmxToolbar.prototype.container = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxToolbar.prototype.enabled = true;\n\n/**\n * Variable: noReset\n * \n * Specifies if <resetMode> requires a forced flag of true for resetting\n * the current mode in the toolbar. Default is false. This is set to true\n * if the toolbar item is double clicked to avoid a reset after a single\n * use of the item.\n */\nmxToolbar.prototype.noReset = false;\n\n/**\n * Variable: updateDefaultMode\n * \n * Boolean indicating if the default mode should be the last selected\n * switch mode or the first inserted switch mode. Default is true, that\n * is the last selected switch mode is the default mode. The default mode\n * is the mode to be selected after a reset of the toolbar. If this is\n * false, then the default mode is the first inserted mode item regardless\n * of what was last selected. Otherwise, the selected item after a reset is\n * the previously selected item.\n */\nmxToolbar.prototype.updateDefaultMode = true;\n\n/**\n * Function: addItem\n * \n * Adds the given function as an image with the specified title and icon\n * and returns the new image node.\n * \n * Parameters:\n * \n * title - Optional string that is used as the tooltip.\n * icon - Optional URL of the image to be used. If no URL is given, then a\n * button is created.\n * funct - Function to execute on a mouse click.\n * pressedIcon - Optional URL of the pressed image. Default is a gray\n * background.\n * style - Optional style classname. Default is mxToolbarItem.\n * factoryMethod - Optional factory method for popup menu, eg.\n * function(menu, evt, cell) { menu.addItem('Hello, World!'); }\n */\nmxToolbar.prototype.addItem = function(title, icon, funct, pressedIcon, style, factoryMethod)\n{\n\tvar img = document.createElement((icon != null) ? 'img' : 'button');\n\tvar initialClassName = style || ((factoryMethod != null) ?\n\t\t\t'mxToolbarMode' : 'mxToolbarItem');\n\timg.className = initialClassName;\n\timg.setAttribute('src', icon);\n\t\n\tif (title != null)\n\t{\n\t\tif (icon != null)\n\t\t{\n\t\t\timg.setAttribute('title', title);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.write(img, title);\n\t\t}\n\t}\n\t\n\tthis.container.appendChild(img);\n\n\t// Invokes the function on a click on the toolbar item\n\tif (funct != null)\n\t{\n\t\tmxEvent.addListener(img, 'click', funct);\n\t\t\n\t\tif (mxClient.IS_TOUCH)\n\t\t{\n\t\t\tmxEvent.addListener(img, 'touchend', funct);\n\t\t}\n\t}\n\n\tvar mouseHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (pressedIcon != null)\n\t\t{\n\t\t\timg.setAttribute('src', icon);\n\t\t}\n\t\telse\n\t\t{\n\t\t\timg.style.backgroundColor = '';\n\t\t}\n\t});\n\n\t// Highlights the toolbar item with a gray background\n\t// while it is being clicked with the mouse\n\tmxEvent.addGestureListeners(img, mxUtils.bind(this, function(evt)\n\t{\n\t\tif (pressedIcon != null)\n\t\t{\n\t\t\timg.setAttribute('src', pressedIcon);\n\t\t}\n\t\telse\n\t\t{\n\t\t\timg.style.backgroundColor = 'gray';\n\t\t}\n\t\t\n\t\t// Popup Menu\n\t\tif (factoryMethod != null)\n\t\t{\n\t\t\tif (this.menu == null)\n\t\t\t{\n\t\t\t\tthis.menu = new mxPopupMenu();\n\t\t\t\tthis.menu.init();\n\t\t\t}\n\t\t\t\n\t\t\tvar last = this.currentImg;\n\t\t\t\n\t\t\tif (this.menu.isMenuShowing())\n\t\t\t{\n\t\t\t\tthis.menu.hideMenu();\n\t\t\t}\n\t\t\t\n\t\t\tif (last != img)\n\t\t\t{\n\t\t\t\t// Redirects factory method to local factory method\n\t\t\t\tthis.currentImg = img;\n\t\t\t\tthis.menu.factoryMethod = factoryMethod;\n\t\t\t\t\n\t\t\t\tvar point = new mxPoint(\n\t\t\t\t\timg.offsetLeft,\n\t\t\t\t\timg.offsetTop + img.offsetHeight);\n\t\t\t\tthis.menu.popup(point.x, point.y, null, evt);\n\n\t\t\t\t// Sets and overrides to restore classname\n\t\t\t\tif (this.menu.isMenuShowing())\n\t\t\t\t{\n\t\t\t\t\timg.className = initialClassName + 'Selected';\n\t\t\t\t\t\n\t\t\t\t\tthis.menu.hideMenu = function()\n\t\t\t\t\t{\n\t\t\t\t\t\tmxPopupMenu.prototype.hideMenu.apply(this);\n\t\t\t\t\t\timg.className = initialClassName;\n\t\t\t\t\t\tthis.currentImg = null;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}), null, mouseHandler);\n\n\tmxEvent.addListener(img, 'mouseout', mouseHandler);\n\t\n\treturn img;\n};\n\n/**\n * Function: addCombo\n * \n * Adds and returns a new SELECT element using the given style. The element\n * is placed inside a DIV with the mxToolbarComboContainer style classname.\n * \n * Parameters:\n * \n * style - Optional style classname. Default is mxToolbarCombo.\n */\nmxToolbar.prototype.addCombo = function(style)\n{\n\tvar div = document.createElement('div');\n\tdiv.style.display = 'inline';\n\tdiv.className = 'mxToolbarComboContainer';\n\t\n\tvar select = document.createElement('select');\n\tselect.className = style || 'mxToolbarCombo';\n\tdiv.appendChild(select);\n\t\n\tthis.container.appendChild(div);\n\t\n\treturn select;\n};\n\n/**\n * Function: addActionCombo\n * \n * Adds and returns a new SELECT element using the given title as the\n * default element. The selection is reset to this element after each\n * change.\n * \n * Parameters:\n * \n * title - String that specifies the title of the default element.\n * style - Optional style classname. Default is mxToolbarCombo.\n */\nmxToolbar.prototype.addActionCombo = function(title, style)\n{\n\tvar select = document.createElement('select');\n\tselect.className = style || 'mxToolbarCombo';\n\tthis.addOption(select, title, null);\n\t\n\tmxEvent.addListener(select, 'change', function(evt)\n\t{\n\t\tvar value = select.options[select.selectedIndex];\n\t\tselect.selectedIndex = 0;\n\t\t\n\t\tif (value.funct != null)\n\t\t{\n\t\t\tvalue.funct(evt);\n\t\t}\n\t});\n\t\n\tthis.container.appendChild(select);\n\t\n\treturn select;\n};\n\n/**\n * Function: addOption\n * \n * Adds and returns a new OPTION element inside the given SELECT element.\n * If the given value is a function then it is stored in the option's funct\n * field.\n * \n * Parameters:\n * \n * combo - SELECT element that will contain the new entry.\n * title - String that specifies the title of the option.\n * value - Specifies the value associated with this option.\n */\nmxToolbar.prototype.addOption = function(combo, title, value)\n{\n\tvar option = document.createElement('option');\n\tmxUtils.writeln(option, title);\n\t\n\tif (typeof(value) == 'function')\n\t{\n\t\toption.funct = value;\n\t}\n\telse\n\t{\n\t\toption.setAttribute('value', value);\n\t}\n\t\n\tcombo.appendChild(option);\n\t\n\treturn option;\n};\n\n/**\n * Function: addSwitchMode\n * \n * Adds a new selectable item to the toolbar. Only one switch mode item may\n * be selected at a time. The currently selected item is the default item\n * after a reset of the toolbar.\n */\nmxToolbar.prototype.addSwitchMode = function(title, icon, funct, pressedIcon, style)\n{\n\tvar img = document.createElement('img');\n\timg.initialClassName = style || 'mxToolbarMode';\n\timg.className = img.initialClassName;\n\timg.setAttribute('src', icon);\n\timg.altIcon = pressedIcon;\n\t\n\tif (title != null)\n\t{\n\t\timg.setAttribute('title', title);\n\t}\n\t\n\tmxEvent.addListener(img, 'click', mxUtils.bind(this, function(evt)\n\t{\n\t\tvar tmp = this.selectedMode.altIcon;\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tthis.selectedMode.altIcon = this.selectedMode.getAttribute('src');\n\t\t\tthis.selectedMode.setAttribute('src', tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.selectedMode.className = this.selectedMode.initialClassName;\n\t\t}\n\t\t\n\t\tif (this.updateDefaultMode)\n\t\t{\n\t\t\tthis.defaultMode = img;\n\t\t}\n\t\t\n\t\tthis.selectedMode = img;\n\t\t\n\t\tvar tmp = img.altIcon;\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\timg.altIcon = img.getAttribute('src');\n\t\t\timg.setAttribute('src', tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\timg.className = img.initialClassName+'Selected';\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.SELECT));\n\t\tfunct();\n\t}));\n\t\n\tthis.container.appendChild(img);\n\t\n\tif (this.defaultMode == null)\n\t{\n\t\tthis.defaultMode = img;\n\t\t\n\t\t// Function should fire only once so\n\t\t// do not pass it with the select event\n\t\tthis.selectMode(img);\n\t\tfunct();\n\t}\n\t\n\treturn img;\n};\n\n/**\n * Function: addMode\n * \n * Adds a new item to the toolbar. The selection is typically reset after\n * the item has been consumed, for example by adding a new vertex to the\n * graph. The reset is not carried out if the item is double clicked.\n * \n * The function argument uses the following signature: funct(evt, cell) where\n * evt is the native mouse event and cell is the cell under the mouse.\n */\nmxToolbar.prototype.addMode = function(title, icon, funct, pressedIcon, style, toggle)\n{\n\ttoggle = (toggle != null) ? toggle : true;\n\tvar img = document.createElement((icon != null) ? 'img' : 'button');\n\t\n\timg.initialClassName = style || 'mxToolbarMode';\n\timg.className = img.initialClassName;\n\timg.setAttribute('src', icon);\n\timg.altIcon = pressedIcon;\n\n\tif (title != null)\n\t{\n\t\timg.setAttribute('title', title);\n\t}\n\t\n\tif (this.enabled && toggle)\n\t{\n\t\tmxEvent.addListener(img, 'click', mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.selectMode(img, funct);\n\t\t\tthis.noReset = false;\n\t\t}));\n\t\t\n\t\tmxEvent.addListener(img, 'dblclick', mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.selectMode(img, funct);\n\t\t\tthis.noReset = true;\n\t\t}));\n\t\t\n\t\tif (this.defaultMode == null)\n\t\t{\n\t\t\tthis.defaultMode = img;\n\t\t\tthis.defaultFunction = funct;\n\t\t\tthis.selectMode(img, funct);\n\t\t}\n\t}\n\n\tthis.container.appendChild(img);\t\t\t\t\t\n\n\treturn img;\n};\n\n/**\n * Function: selectMode\n * \n * Resets the state of the previously selected mode and displays the given\n * DOM node as selected. This function fires a select event with the given\n * function as a parameter.\n */\nmxToolbar.prototype.selectMode = function(domNode, funct)\n{\n\tif (this.selectedMode != domNode)\n\t{\n\t\tif (this.selectedMode != null)\n\t\t{\n\t\t\tvar tmp = this.selectedMode.altIcon;\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tthis.selectedMode.altIcon = this.selectedMode.getAttribute('src');\n\t\t\t\tthis.selectedMode.setAttribute('src', tmp);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.selectedMode.className = this.selectedMode.initialClassName;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.selectedMode = domNode;\n\t\tvar tmp = this.selectedMode.altIcon;\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tthis.selectedMode.altIcon = this.selectedMode.getAttribute('src');\n\t\t\tthis.selectedMode.setAttribute('src', tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.selectedMode.className = this.selectedMode.initialClassName+'Selected';\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.SELECT, \"function\", funct));\n\t}\n};\n\n/**\n * Function: resetMode\n * \n * Selects the default mode and resets the state of the previously selected\n * mode.\n */\nmxToolbar.prototype.resetMode = function(forced)\n{\n\tif ((forced || !this.noReset) && this.selectedMode != this.defaultMode)\n\t{\n\t\t// The last selected switch mode will be activated\n\t\t// so the function was already executed and is\n\t\t// no longer required here\n\t\tthis.selectMode(this.defaultMode, this.defaultFunction);\n\t}\n};\n\n/**\n * Function: addSeparator\n * \n * Adds the specifies image as a separator.\n * \n * Parameters:\n * \n * icon - URL of the separator icon.\n */\nmxToolbar.prototype.addSeparator = function(icon)\n{\n\treturn this.addItem(null, icon, null);\n};\n\n/**\n * Function: addBreak\n * \n * Adds a break to the container.\n */\nmxToolbar.prototype.addBreak = function()\n{\n\tmxUtils.br(this.container);\n};\n\n/**\n * Function: addLine\n * \n * Adds a horizontal line to the container.\n */\nmxToolbar.prototype.addLine = function()\n{\n\tvar hr = document.createElement('hr');\n\t\n\thr.style.marginRight = '6px';\n\thr.setAttribute('size', '1');\n\t\n\tthis.container.appendChild(hr);\n};\n\n/**\n * Function: destroy\n * \n * Removes the toolbar and all its associated resources.\n */\nmxToolbar.prototype.destroy = function ()\n{\n\tmxEvent.release(this.container);\n\tthis.container = null;\n\tthis.defaultMode = null;\n\tthis.defaultFunction = null;\n\tthis.selectedMode = null;\n\t\n\tif (this.menu != null)\n\t{\n\t\tthis.menu.destroy();\n\t}\n};\n\n__mxOutput.mxToolbar = typeof mxToolbar !== 'undefined' ? mxToolbar : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxUndoableEdit\n * \n * Implements a composite undoable edit. Here is an example for a custom change\n * which gets executed via the model:\n * \n * (code)\n * function CustomChange(model, name)\n * {\n *   this.model = model;\n *   this.name = name;\n *   this.previous = name;\n * };\n * \n * CustomChange.prototype.execute = function()\n * {\n *   var tmp = this.model.name;\n *   this.model.name = this.previous;\n *   this.previous = tmp;\n * };\n * \n * var name = prompt('Enter name');\n * graph.model.execute(new CustomChange(graph.model, name));\n * (end)\n * \n * Event: mxEvent.EXECUTED\n * \n * Fires between START_EDIT and END_EDIT after an atomic change was executed.\n * The <code>change</code> property contains the change that was executed.\n * \n * Event: mxEvent.START_EDIT\n * \n * Fires before a set of changes will be executed in <undo> or <redo>.\n * This event contains no properties.\n * \n * Event: mxEvent.END_EDIT\n *\n * Fires after a set of changeswas executed in <undo> or <redo>.\n * This event contains no properties.\n * \n * Constructor: mxUndoableEdit\n * \n * Constructs a new undoable edit for the given source.\n */\nfunction mxUndoableEdit(source, significant)\n{\n\tthis.source = source;\n\tthis.changes = [];\n\tthis.significant = (significant != null) ? significant : true;\n};\n\n/**\n * Variable: source\n * \n * Specifies the source of the edit.\n */\nmxUndoableEdit.prototype.source = null;\n\n/**\n * Variable: changes\n * \n * Array that contains the changes that make up this edit. The changes are\n * expected to either have an undo and redo function, or an execute\n * function. Default is an empty array.\n */\nmxUndoableEdit.prototype.changes = null;\n\n/**\n * Variable: significant\n * \n * Specifies if the undoable change is significant.\n * Default is true.\n */\nmxUndoableEdit.prototype.significant = null;\n\n/**\n * Variable: undone\n * \n * Specifies if this edit has been undone. Default is false.\n */\nmxUndoableEdit.prototype.undone = false;\n\n/**\n * Variable: redone\n * \n * Specifies if this edit has been redone. Default is false.\n */\nmxUndoableEdit.prototype.redone = false;\n\n/**\n * Function: isEmpty\n * \n * Returns true if the this edit contains no changes.\n */\nmxUndoableEdit.prototype.isEmpty = function()\n{\n\treturn this.changes.length == 0;\n};\n\n/**\n * Function: isSignificant\n * \n * Returns <significant>.\n */\nmxUndoableEdit.prototype.isSignificant = function()\n{\n\treturn this.significant;\n};\n\n/**\n * Function: add\n * \n * Adds the specified change to this edit. The change is an object that is\n * expected to either have an undo and redo, or an execute function.\n */\nmxUndoableEdit.prototype.add = function(change)\n{\n\tthis.changes.push(change);\n};\n\n/**\n * Function: notify\n * \n * Hook to notify any listeners of the changes after an <undo> or <redo>\n * has been carried out. This implementation is empty.\n */\nmxUndoableEdit.prototype.notify = function() { };\n\n/**\n * Function: die\n * \n * Hook to free resources after the edit has been removed from the command\n * history. This implementation is empty.\n */\nmxUndoableEdit.prototype.die = function() { };\n\n/**\n * Function: undo\n * \n * Undoes all changes in this edit.\n */\nmxUndoableEdit.prototype.undo = function()\n{\n\tif (!this.undone)\n\t{\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.START_EDIT));\n\t\tvar count = this.changes.length;\n\t\t\n\t\tfor (var i = count - 1; i >= 0; i--)\n\t\t{\n\t\t\tvar change = this.changes[i];\n\t\t\t\n\t\t\tif (change.execute != null)\n\t\t\t{\n\t\t\t\tchange.execute();\n\t\t\t}\n\t\t\telse if (change.undo != null)\n\t\t\t{\n\t\t\t\tchange.undo();\n\t\t\t}\n\t\t\t\n\t\t\t// New global executed event\n\t\t\tthis.source.fireEvent(new mxEventObject(mxEvent.EXECUTED, 'change', change));\n\t\t}\n\t\t\n\t\tthis.undone = true;\n\t\tthis.redone = false;\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.END_EDIT));\n\t}\n\t\n\tthis.notify();\n};\n\n/**\n * Function: redo\n * \n * Redoes all changes in this edit.\n */\nmxUndoableEdit.prototype.redo = function()\n{\n\tif (!this.redone)\n\t{\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.START_EDIT));\n\t\tvar count = this.changes.length;\n\t\t\n\t\tfor (var i = 0; i < count; i++)\n\t\t{\n\t\t\tvar change = this.changes[i];\n\t\t\t\n\t\t\tif (change.execute != null)\n\t\t\t{\n\t\t\t\tchange.execute();\n\t\t\t}\n\t\t\telse if (change.redo != null)\n\t\t\t{\n\t\t\t\tchange.redo();\n\t\t\t}\n\t\t\t\n\t\t\t// New global executed event\n\t\t\tthis.source.fireEvent(new mxEventObject(mxEvent.EXECUTED, 'change', change));\n\t\t}\n\t\t\n\t\tthis.undone = false;\n\t\tthis.redone = true;\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.END_EDIT));\n\t}\n\t\n\tthis.notify();\n};\n\n__mxOutput.mxUndoableEdit = typeof mxUndoableEdit !== 'undefined' ? mxUndoableEdit : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxUndoManager\n *\n * Implements a command history. When changing the graph model, an\n * <mxUndoableChange> object is created at the start of the transaction (when\n * model.beginUpdate is called). All atomic changes are then added to this\n * object until the last model.endUpdate call, at which point the\n * <mxUndoableEdit> is dispatched in an event, and added to the history inside\n * <mxUndoManager>. This is done by an event listener in\n * <mxEditor.installUndoHandler>.\n * \n * Each atomic change of the model is represented by an object (eg.\n * <mxRootChange>, <mxChildChange>, <mxTerminalChange> etc) which contains the\n * complete undo information. The <mxUndoManager> also listens to the\n * <mxGraphView> and stores it's changes to the current root as insignificant\n * undoable changes, so that drilling (step into, step up) is undone.\n * \n * This means when you execute an atomic change on the model, then change the\n * current root on the view and click undo, the change of the root will be\n * undone together with the change of the model so that the display represents\n * the state at which the model was changed. However, these changes are not\n * transmitted for sharing as they do not represent a state change.\n *\n * Example:\n * \n * When adding an undo manager to a graph, make sure to add it\n * to the model and the view as well to maintain a consistent\n * display across multiple undo/redo steps.\n *\n * (code)\n * var undoManager = new mxUndoManager();\n * var listener = function(sender, evt)\n * {\n *   undoManager.undoableEditHappened(evt.getProperty('edit'));\n * };\n * graph.getModel().addListener(mxEvent.UNDO, listener);\n * graph.getView().addListener(mxEvent.UNDO, listener);\n * (end)\n * \n * The code creates a function that informs the undoManager\n * of an undoable edit and binds it to the undo event of\n * <mxGraphModel> and <mxGraphView> using\n * <mxEventSource.addListener>.\n * \n * Event: mxEvent.CLEAR\n * \n * Fires after <clear> was invoked. This event has no properties.\n * \n * Event: mxEvent.UNDO\n * \n * Fires afer a significant edit was undone in <undo>. The <code>edit</code>\n * property contains the <mxUndoableEdit> that was undone.\n * \n * Event: mxEvent.REDO\n * \n * Fires afer a significant edit was redone in <redo>. The <code>edit</code>\n * property contains the <mxUndoableEdit> that was redone.\n * \n * Event: mxEvent.ADD\n * \n * Fires after an undoable edit was added to the history. The <code>edit</code>\n * property contains the <mxUndoableEdit> that was added.\n * \n * Constructor: mxUndoManager\n *\n * Constructs a new undo manager with the given history size. If no history\n * size is given, then a default size of 100 steps is used.\n */\nfunction mxUndoManager(size)\n{\n\tthis.size = (size != null) ? size : 100;\n\tthis.clear();\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUndoManager.prototype = new mxEventSource();\nmxUndoManager.prototype.constructor = mxUndoManager;\n\n/**\n * Variable: size\n * \n * Maximum command history size. 0 means unlimited history. Default is\n * 100.\n */\nmxUndoManager.prototype.size = null;\n\n/**\n * Variable: history\n * \n * Array that contains the steps of the command history.\n */\nmxUndoManager.prototype.history = null;\n\n/**\n * Variable: indexOfNextAdd\n * \n * Index of the element to be added next.\n */\nmxUndoManager.prototype.indexOfNextAdd = 0;\n\n/**\n * Function: isEmpty\n * \n * Returns true if the history is empty.\n */\nmxUndoManager.prototype.isEmpty = function()\n{\n\treturn this.history.length == 0;\n};\n\n/**\n * Function: clear\n * \n * Clears the command history.\n */\nmxUndoManager.prototype.clear = function()\n{\n\tthis.history = [];\n\tthis.indexOfNextAdd = 0;\n\tthis.fireEvent(new mxEventObject(mxEvent.CLEAR));\n};\n\n/**\n * Function: canUndo\n * \n * Returns true if an undo is possible.\n */\nmxUndoManager.prototype.canUndo = function()\n{\n\treturn this.indexOfNextAdd > 0;\n};\n\n/**\n * Function: undo\n * \n * Undoes the last change.\n */\nmxUndoManager.prototype.undo = function()\n{\n    while (this.indexOfNextAdd > 0)\n    {\n        var edit = this.history[--this.indexOfNextAdd];\n        edit.undo();\n\n\t\tif (edit.isSignificant())\n        {\n        \tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n            break;\n        }\n    }\n};\n\n/**\n * Function: canRedo\n * \n * Returns true if a redo is possible.\n */\nmxUndoManager.prototype.canRedo = function()\n{\n\treturn this.indexOfNextAdd < this.history.length;\n};\n\n/**\n * Function: redo\n * \n * Redoes the last change.\n */\nmxUndoManager.prototype.redo = function()\n{\n    var n = this.history.length;\n    \n    while (this.indexOfNextAdd < n)\n    {\n        var edit =  this.history[this.indexOfNextAdd++];\n        edit.redo();\n        \n        if (edit.isSignificant())\n        {\n        \tthis.fireEvent(new mxEventObject(mxEvent.REDO, 'edit', edit));\n            break;\n        }\n    }\n};\n\n/**\n * Function: undoableEditHappened\n * \n * Method to be called to add new undoable edits to the <history>.\n */\nmxUndoManager.prototype.undoableEditHappened = function(undoableEdit)\n{\n\tthis.trim();\n\t\n\tif (this.size > 0 &&\n\t\tthis.size == this.history.length)\n\t{\n\t\tthis.history.shift();\n\t}\n\t\n\tthis.history.push(undoableEdit);\n\tthis.indexOfNextAdd = this.history.length;\n\tthis.fireEvent(new mxEventObject(mxEvent.ADD, 'edit', undoableEdit));\n};\n\n/**\n * Function: trim\n * \n * Removes all pending steps after <indexOfNextAdd> from the history,\n * invoking die on each edit. This is called from <undoableEditHappened>.\n */\nmxUndoManager.prototype.trim = function()\n{\n\tif (this.history.length > this.indexOfNextAdd)\n\t{\n\t\tvar edits = this.history.splice(this.indexOfNextAdd,\n\t\t\tthis.history.length - this.indexOfNextAdd);\n\t\t\t\n\t\tfor (var i = 0; i < edits.length; i++)\n\t\t{\n\t\t\tedits[i].die();\n\t\t}\n\t}\n};\n\n__mxOutput.mxUndoManager = typeof mxUndoManager !== 'undefined' ? mxUndoManager : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxUrlConverter\n * \n * Converts relative and absolute URLs to absolute URLs with protocol and domain.\n */\nvar mxUrlConverter = function()\n{\n\t// Empty constructor\n};\n\n/**\n * Variable: enabled\n * \n * Specifies if the converter is enabled. Default is true.\n */\nmxUrlConverter.prototype.enabled = true;\n\n/**\n * Variable: baseUrl\n * \n * Specifies the base URL to be used as a prefix for relative URLs.\n */\nmxUrlConverter.prototype.baseUrl = null;\n\n/**\n * Variable: baseDomain\n * \n * Specifies the base domain to be used as a prefix for absolute URLs.\n */\nmxUrlConverter.prototype.baseDomain = null;\n\n/**\n * Function: updateBaseUrl\n * \n * Private helper function to update the base URL.\n */\nmxUrlConverter.prototype.updateBaseUrl = function()\n{\n\tthis.baseDomain = location.protocol + '//' + location.host;\n\tthis.baseUrl = this.baseDomain + location.pathname;\n\tvar tmp = this.baseUrl.lastIndexOf('/');\n\t\n\t// Strips filename etc\n\tif (tmp > 0)\n\t{\n\t\tthis.baseUrl = this.baseUrl.substring(0, tmp + 1);\n\t}\n};\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxUrlConverter.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxUrlConverter.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: getBaseUrl\n * \n * Returns <baseUrl>.\n */\nmxUrlConverter.prototype.getBaseUrl = function()\n{\n\treturn this.baseUrl;\n};\n\n/**\n * Function: setBaseUrl\n * \n * Sets <baseUrl>.\n */\nmxUrlConverter.prototype.setBaseUrl = function(value)\n{\n\tthis.baseUrl = value;\n};\n\n/**\n * Function: getBaseDomain\n * \n * Returns <baseDomain>.\n */\nmxUrlConverter.prototype.getBaseDomain = function()\n{\n\treturn this.baseDomain;\n};\n\n/**\n * Function: setBaseDomain\n * \n * Sets <baseDomain>.\n */\nmxUrlConverter.prototype.setBaseDomain = function(value)\n{\n\tthis.baseDomain = value;\n};\n\n/**\n * Function: isRelativeUrl\n * \n * Returns true if the given URL is relative.\n */\nmxUrlConverter.prototype.isRelativeUrl = function(url)\n{\n\treturn url != null && url.substring(0, 2) != '//' && url.substring(0, 7) != 'http://' &&\n\t\turl.substring(0, 8) != 'https://' && url.substring(0, 10) != 'data:image' &&\n\t\turl.substring(0, 7) != 'file://';\n};\n\n/**\n * Function: convert\n * \n * Converts the given URL to an absolute URL with protol and domain.\n * Relative URLs are first converted to absolute URLs.\n */\nmxUrlConverter.prototype.convert = function(url)\n{\n\tif (this.isEnabled() && this.isRelativeUrl(url))\n\t{\n\t\tif (this.getBaseUrl() == null)\n\t\t{\n\t\t\tthis.updateBaseUrl();\n\t\t}\n\t\t\n\t\tif (url.charAt(0) == '/')\n\t\t{\n\t\t\turl = this.getBaseDomain() + url;\n\t\t}\n\t\telse\n\t\t{\n\t\t\turl = this.getBaseUrl() + url;\n\t\t}\n\t}\n\t\n\treturn url;\n};\n\n__mxOutput.mxUrlConverter = typeof mxUrlConverter !== 'undefined' ? mxUrlConverter : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPanningManager\n *\n * Implements a handler for panning.\n */\nfunction mxPanningManager(graph)\n{\n\tthis.thread = null;\n\tthis.active = false;\n\tthis.tdx = 0;\n\tthis.tdy = 0;\n\tthis.t0x = 0;\n\tthis.t0y = 0;\n\tthis.dx = 0;\n\tthis.dy = 0;\n\tthis.scrollbars = false;\n\tthis.scrollLeft = 0;\n\tthis.scrollTop = 0;\n\t\n\tthis.mouseListener =\n\t{\n\t    mouseDown: function(sender, me) { },\n\t    mouseMove: function(sender, me) { },\n\t    mouseUp: mxUtils.bind(this, function(sender, me)\n\t    {\n\t    \tif (this.active)\n\t    \t{\n\t    \t\tthis.stop();\n\t    \t}\n\t    })\n\t};\n\t\n\tgraph.addMouseListener(this.mouseListener);\n\t\n\tthis.mouseUpListener = mxUtils.bind(this, function()\n\t{\n\t    \tif (this.active)\n\t    \t{\n\t    \t\tthis.stop();\n\t    \t}\n\t});\n\t\n\t// Stops scrolling on every mouseup anywhere in the document\n\tmxEvent.addListener(document, 'mouseup', this.mouseUpListener);\n\t\n\tvar createThread = mxUtils.bind(this, function()\n\t{\n\t    \tthis.scrollbars = mxUtils.hasScrollbars(graph.container);\n\t    \tthis.scrollLeft = graph.container.scrollLeft;\n\t    \tthis.scrollTop = graph.container.scrollTop;\n\t\n\t    \treturn window.setInterval(mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.tdx -= this.dx;\n\t\t\tthis.tdy -= this.dy;\n\n\t\t\tif (this.scrollbars)\n\t\t\t{\n\t\t\t\tvar left = -graph.container.scrollLeft - Math.ceil(this.dx);\n\t\t\t\tvar top = -graph.container.scrollTop - Math.ceil(this.dy);\n\t\t\t\tgraph.panGraph(left, top);\n\t\t\t\tgraph.panDx = this.scrollLeft - graph.container.scrollLeft;\n\t\t\t\tgraph.panDy = this.scrollTop - graph.container.scrollTop;\n\t\t\t\tgraph.fireEvent(new mxEventObject(mxEvent.PAN));\n\t\t\t\t// TODO: Implement graph.autoExtend\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgraph.panGraph(this.getDx(), this.getDy());\n\t\t\t}\n\t\t}), this.delay);\n\t});\n\t\n\tthis.isActive = function()\n\t{\n\t\treturn active;\n\t};\n\t\n\tthis.getDx = function()\n\t{\n\t\treturn Math.round(this.tdx);\n\t};\n\t\n\tthis.getDy = function()\n\t{\n\t\treturn Math.round(this.tdy);\n\t};\n\t\n\tthis.start = function()\n\t{\n\t\tthis.t0x = graph.view.translate.x;\n\t\tthis.t0y = graph.view.translate.y;\n\t\tthis.active = true;\n\t};\n\t\n\tthis.panTo = function(x, y, w, h)\n\t{\n\t\tif (!this.active)\n\t\t{\n\t\t\tthis.start();\n\t\t}\n\t\t\n    \tthis.scrollLeft = graph.container.scrollLeft;\n    \tthis.scrollTop = graph.container.scrollTop;\n\t\t\n\t\tw = (w != null) ? w : 0;\n\t\th = (h != null) ? h : 0;\n\t\t\n\t\tvar c = graph.container;\n\t\tthis.dx = x + w - c.scrollLeft - c.clientWidth;\n\t\t\n\t\tif (this.dx < 0 && Math.abs(this.dx) < this.border)\n\t\t{\n\t\t\tthis.dx = this.border + this.dx;\n\t\t}\n\t\telse if (this.handleMouseOut)\n\t\t{\n\t\t\tthis.dx = Math.max(this.dx, 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.dx = 0;\n\t\t}\n\t\t\n\t\tif (this.dx == 0)\n\t\t{\n\t\t\tthis.dx = x - c.scrollLeft;\n\t\t\t\n\t\t\tif (this.dx > 0 && this.dx < this.border)\n\t\t\t{\n\t\t\t\tthis.dx = this.dx - this.border;\n\t\t\t}\n\t\t\telse if (this.handleMouseOut)\n\t\t\t{\n\t\t\t\tthis.dx = Math.min(0, this.dx);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.dx = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.dy = y + h - c.scrollTop - c.clientHeight;\n\n\t\tif (this.dy < 0 && Math.abs(this.dy) < this.border)\n\t\t{\n\t\t\tthis.dy = this.border + this.dy;\n\t\t}\n\t\telse if (this.handleMouseOut)\n\t\t{\n\t\t\tthis.dy = Math.max(this.dy, 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.dy = 0;\n\t\t}\n\t\t\n\t\tif (this.dy == 0)\n\t\t{\n\t\t\tthis.dy = y - c.scrollTop;\n\t\t\t\n\t\t\tif (this.dy > 0 && this.dy < this.border)\n\t\t\t{\n\t\t\t\tthis.dy = this.dy - this.border;\n\t\t\t}\n\t\t\telse if (this.handleMouseOut)\n\t\t\t{\n\t\t\t\tthis.dy = Math.min(0, this.dy);\n\t\t\t} \n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.dy = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.dx != 0 || this.dy != 0)\n\t\t{\n\t\t\tthis.dx *= this.damper;\n\t\t\tthis.dy *= this.damper;\n\t\t\t\n\t\t\tif (this.thread == null)\n\t\t\t{\n\t\t\t\tthis.thread = createThread();\n\t\t\t}\n\t\t}\n\t\telse if (this.thread != null)\n\t\t{\n\t\t\twindow.clearInterval(this.thread);\n\t\t\tthis.thread = null;\n\t\t}\n\t};\n\t\n\tthis.stop = function()\n\t{\n\t\tif (this.active)\n\t\t{\n\t\t\tthis.active = false;\n\t\t\n\t\t\tif (this.thread != null)\n\t    \t{\n\t\t\t\twindow.clearInterval(this.thread);\n\t\t\t\tthis.thread = null;\n\t    \t}\n\t\t\t\n\t\t\tthis.tdx = 0;\n\t\t\tthis.tdy = 0;\n\t\t\t\n\t\t\tif (!this.scrollbars)\n\t\t\t{\n\t\t\t\tvar px = graph.panDx;\n\t\t\t\tvar py = graph.panDy;\n\t\t    \t\n\t\t    \tif (px != 0 || py != 0)\n\t\t    \t{\n\t\t    \t\tgraph.panGraph(0, 0);\n\t\t\t    \tgraph.view.setTranslate(this.t0x + px / graph.view.scale, this.t0y + py / graph.view.scale);\n\t\t    \t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgraph.panDx = 0;\n\t\t\t\tgraph.panDy = 0;\n\t\t\t\tgraph.fireEvent(new mxEventObject(mxEvent.PAN));\n\t\t\t}\n\t\t}\n\t};\n\t\n\tthis.destroy = function()\n\t{\n\t\tgraph.removeMouseListener(this.mouseListener);\n\t\tmxEvent.removeListener(document, 'mouseup', this.mouseUpListener);\n\t};\n};\n\n/**\n * Variable: damper\n * \n * Damper value for the panning. Default is 1/6.\n */\nmxPanningManager.prototype.damper = 1/6;\n\n/**\n * Variable: delay\n * \n * Delay in milliseconds for the panning. Default is 10.\n */\nmxPanningManager.prototype.delay = 10;\n\n/**\n * Variable: handleMouseOut\n * \n * Specifies if mouse events outside of the component should be handled. Default is true. \n */\nmxPanningManager.prototype.handleMouseOut = true;\n\n/**\n * Variable: border\n * \n * Border to handle automatic panning inside the component. Default is 0 (disabled).\n */\nmxPanningManager.prototype.border = 0;\n\n__mxOutput.mxPanningManager = typeof mxPanningManager !== 'undefined' ? mxPanningManager : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPopupMenu\n * \n * Basic popup menu. To add a vertical scrollbar to a given submenu, the\n * following code can be used.\n * \n * (code)\n * var mxPopupMenuShowMenu = mxPopupMenu.prototype.showMenu;\n * mxPopupMenu.prototype.showMenu = function()\n * {\n *   mxPopupMenuShowMenu.apply(this, arguments);\n *   \n *   this.div.style.overflowY = 'auto';\n *   this.div.style.overflowX = 'hidden';\n *   this.div.style.maxHeight = '160px';\n * };\n * (end)\n * \n * Constructor: mxPopupMenu\n * \n * Constructs a popupmenu.\n * \n * Event: mxEvent.SHOW\n *\n * Fires after the menu has been shown in <popup>.\n */\nfunction mxPopupMenu(factoryMethod)\n{\n\tthis.factoryMethod = factoryMethod;\n\t\n\tif (factoryMethod != null)\n\t{\n\t\tthis.init();\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxPopupMenu.prototype = new mxEventSource();\nmxPopupMenu.prototype.constructor = mxPopupMenu;\n\n/**\n * Variable: submenuImage\n * \n * URL of the image to be used for the submenu icon.\n */\nmxPopupMenu.prototype.submenuImage = mxClient.imageBasePath + '/submenu.gif';\n\n/**\n * Variable: zIndex\n * \n * Specifies the zIndex for the popupmenu and its shadow. Default is 10006.\n */\nmxPopupMenu.prototype.zIndex = 10006;\n\n/**\n * Variable: factoryMethod\n * \n * Function that is used to create the popup menu. The function takes the\n * current panning handler, the <mxCell> under the mouse and the mouse\n * event that triggered the call as arguments.\n */\nmxPopupMenu.prototype.factoryMethod = null;\n\n/**\n * Variable: useLeftButtonForPopup\n * \n * Specifies if popupmenus should be activated by clicking the left mouse\n * button. Default is false.\n */\nmxPopupMenu.prototype.useLeftButtonForPopup = false;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxPopupMenu.prototype.enabled = true;\n\n/**\n * Variable: itemCount\n * \n * Contains the number of times <addItem> has been called for a new menu.\n */\nmxPopupMenu.prototype.itemCount = 0;\n\n/**\n * Variable: autoExpand\n * \n * Specifies if submenus should be expanded on mouseover. Default is false.\n */\nmxPopupMenu.prototype.autoExpand = false;\n\n/**\n * Variable: smartSeparators\n * \n * Specifies if separators should only be added if a menu item follows them.\n * Default is false.\n */\nmxPopupMenu.prototype.smartSeparators = false;\n\n/**\n * Variable: labels\n * \n * Specifies if any labels should be visible. Default is true.\n */\nmxPopupMenu.prototype.labels = true;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxPopupMenu.prototype.init = function()\n{\n\t// Adds the inner table\n\tthis.table = document.createElement('table');\n\tthis.table.className = 'mxPopupMenu';\n\t\n\tthis.tbody = document.createElement('tbody');\n\tthis.table.appendChild(this.tbody);\n\n\t// Adds the outer div\n\tthis.div = document.createElement('div');\n\tthis.div.className = 'mxPopupMenu';\n\tthis.div.style.display = 'inline';\n\tthis.div.style.zIndex = this.zIndex;\n\tthis.div.appendChild(this.table);\n\n\t// Disables the context menu on the outer div\n\tmxEvent.disableContextMenu(this.div);\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxPopupMenu.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n */\nmxPopupMenu.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isPopupTrigger\n * \n * Returns true if the given event is a popupmenu trigger for the optional\n * given cell.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> that represents the mouse event.\n */\nmxPopupMenu.prototype.isPopupTrigger = function(me)\n{\n\treturn me.isPopupTrigger() || (this.useLeftButtonForPopup && mxEvent.isLeftMouseButton(me.getEvent()));\n};\n\n/**\n * Function: addItem\n * \n * Adds the given item to the given parent item. If no parent item is specified\n * then the item is added to the top-level menu. The return value may be used\n * as the parent argument, ie. as a submenu item. The return value is the table\n * row that represents the item.\n * \n * Paramters:\n * \n * title - String that represents the title of the menu item.\n * image - Optional URL for the image icon.\n * funct - Function associated that takes a mouseup or touchend event.\n * parent - Optional item returned by <addItem>.\n * iconCls - Optional string that represents the CSS class for the image icon.\n * IconsCls is ignored if image is given.\n * enabled - Optional boolean indicating if the item is enabled. Default is true.\n * active - Optional boolean indicating if the menu should implement any event handling.\n * Default is true.\n * noHover - Optional boolean to disable hover state.\n */\nmxPopupMenu.prototype.addItem = function(title, image, funct, parent, iconCls, enabled, active, noHover)\n{\n\tparent = parent || this;\n\tthis.itemCount++;\n\t\n\t// Smart separators only added if element contains items\n\tif (parent.willAddSeparator)\n\t{\n\t\tif (parent.containsItems)\n\t\t{\n\t\t\tthis.addSeparator(parent, true);\n\t\t}\n\n\t\tparent.willAddSeparator = false;\n\t}\n\n\tparent.containsItems = true;\n\tvar tr = document.createElement('tr');\n\ttr.className = 'mxPopupMenuItem';\n\tvar col1 = document.createElement('td');\n\tcol1.className = 'mxPopupMenuIcon';\n\n\t// Adds the given image into the first column\n\tif (image != null)\n\t{\n\t\tvar img = document.createElement('img');\n\t\timg.src = image;\n\t\tcol1.appendChild(img);\n\t}\n\telse if (iconCls != null)\n\t{\n\t\tvar div = document.createElement('div');\n\t\tdiv.className = iconCls;\n\t\tcol1.appendChild(div);\n\t}\n\t\n\ttr.appendChild(col1);\n\t\n\tif (this.labels)\n\t{\n\t\tvar col2 = document.createElement('td');\n\t\tcol2.className = 'mxPopupMenuItem' +\n\t\t\t((enabled != null && !enabled) ? ' mxDisabled' : '');\n\t\t\n\t\tmxUtils.write(col2, title);\n\t\tcol2.align = 'left';\n\t\ttr.appendChild(col2);\n\t\n\t\tvar col3 = document.createElement('td');\n\t\tcol3.className = 'mxPopupMenuItem' +\n\t\t\t((enabled != null && !enabled) ? ' mxDisabled' : '');\n\t\tcol3.style.paddingRight = '6px';\n\t\tcol3.style.textAlign = 'right';\n\t\t\n\t\ttr.appendChild(col3);\n\t\t\n\t\tif (parent.div == null)\n\t\t{\n\t\t\tthis.createSubmenu(parent);\n\t\t}\n\t}\n\t\n\tparent.tbody.appendChild(tr);\n\n\tif (active != false && enabled != false)\n\t{\n\t\tvar currentSelection = null;\n\t\t\n\t\tmxEvent.addGestureListeners(tr,\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tthis.eventReceiver = tr;\n\t\t\t\t\n\t\t\t\tif (parent.activeRow != tr && parent.activeRow != parent)\n\t\t\t\t{\n\t\t\t\t\tif (parent.activeRow != null && parent.activeRow.div.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.hideSubmenu(parent);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (tr.div != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.showSubmenu(parent, tr);\n\t\t\t\t\t\tparent.activeRow = tr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Workaround for lost current selection in page because of focus in IE\n\t\t\t\tif (document.selection != null && (mxClient.IS_QUIRKS || document.documentMode == 8))\n\t\t\t\t{\n\t\t\t\t\tcurrentSelection = document.selection.createRange();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (parent.activeRow != tr && parent.activeRow != parent)\n\t\t\t\t{\n\t\t\t\t\tif (parent.activeRow != null && parent.activeRow.div.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.hideSubmenu(parent);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.autoExpand && tr.div != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.showSubmenu(parent, tr);\n\t\t\t\t\t\tparent.activeRow = tr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t// Sets hover style because TR in IE doesn't have hover\n\t\t\t\tif (!noHover)\n\t\t\t\t{\n\t\t\t\t\ttr.className = 'mxPopupMenuItemHover';\n\t\t\t\t}\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\t// EventReceiver avoids clicks on a submenu item\n\t\t\t\t// which has just been shown in the mousedown\n\t\t\t\tif (this.eventReceiver == tr)\n\t\t\t\t{\n\t\t\t\t\tif (parent.activeRow != tr)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.hideMenu();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Workaround for lost current selection in page because of focus in IE\n\t\t\t\t\tif (currentSelection != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Workaround for \"unspecified error\" in IE8 standards\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrentSelection.select();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (e)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentSelection = null;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (funct != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfunct(evt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.eventReceiver = null;\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t})\n\t\t);\n\t\n\t\t// Resets hover style because TR in IE doesn't have hover\n\t\tif (!noHover)\n\t\t{\n\t\t\tmxEvent.addListener(tr, 'mouseout',\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\ttr.className = 'mxPopupMenuItem';\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n\t\n\treturn tr;\n};\n\n/**\n * Adds a checkmark to the given menuitem.\n */\nmxPopupMenu.prototype.addCheckmark = function(item, img)\n{\n\tvar td = item.firstChild.nextSibling;\n\ttd.style.backgroundImage = 'url(\\'' + img + '\\')';\n\ttd.style.backgroundRepeat = 'no-repeat';\n\ttd.style.backgroundPosition = '2px 50%';\n};\n\n/**\n * Function: createSubmenu\n * \n * Creates the nodes required to add submenu items inside the given parent\n * item. This is called in <addItem> if a parent item is used for the first\n * time. This adds various DOM nodes and a <submenuImage> to the parent.\n * \n * Parameters:\n * \n * parent - An item returned by <addItem>.\n */\nmxPopupMenu.prototype.createSubmenu = function(parent)\n{\n\tparent.table = document.createElement('table');\n\tparent.table.className = 'mxPopupMenu';\n\n\tparent.tbody = document.createElement('tbody');\n\tparent.table.appendChild(parent.tbody);\n\n\tparent.div = document.createElement('div');\n\tparent.div.className = 'mxPopupMenu';\n\n\tparent.div.style.position = 'absolute';\n\tparent.div.style.display = 'inline';\n\tparent.div.style.zIndex = this.zIndex;\n\t\n\tparent.div.appendChild(parent.table);\n\t\n\tvar img = document.createElement('img');\n\timg.setAttribute('src', this.submenuImage);\n\t\n\t// Last column of the submenu item in the parent menu\n\ttd = parent.firstChild.nextSibling.nextSibling;\n\ttd.appendChild(img);\n};\n\n/**\n * Function: showSubmenu\n * \n * Shows the submenu inside the given parent row.\n */\nmxPopupMenu.prototype.showSubmenu = function(parent, row)\n{\n\tif (row.div != null)\n\t{\n\t\trow.div.style.left = (parent.div.offsetLeft +\n\t\t\trow.offsetLeft+row.offsetWidth - 1) + 'px';\n\t\trow.div.style.top = (parent.div.offsetTop+row.offsetTop) + 'px';\n\t\tdocument.body.appendChild(row.div);\n\t\t\n\t\t// Moves the submenu to the left side if there is no space\n\t\tvar left = parseInt(row.div.offsetLeft);\n\t\tvar width = parseInt(row.div.offsetWidth);\n\t\tvar offset = mxUtils.getDocumentScrollOrigin(document);\n\t\t\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\t\t\n\t\tvar right = offset.x + (b.clientWidth || d.clientWidth);\n\t\t\n\t\tif (left + width > right)\n\t\t{\n\t\t\trow.div.style.left = Math.max(0, (parent.div.offsetLeft - width + ((mxClient.IS_IE) ? 6 : -6))) + 'px';\n\t\t}\n\t\t\n\t\tmxUtils.fit(row.div);\n\t}\n};\n\n/**\n * Function: addSeparator\n * \n * Adds a horizontal separator in the given parent item or the top-level menu\n * if no parent is specified.\n * \n * Parameters:\n * \n * parent - Optional item returned by <addItem>.\n * force - Optional boolean to ignore <smartSeparators>. Default is false.\n */\nmxPopupMenu.prototype.addSeparator = function(parent, force)\n{\n\tparent = parent || this;\n\t\n\tif (this.smartSeparators && !force)\n\t{\n\t\tparent.willAddSeparator = true;\n\t}\n\telse if (parent.tbody != null)\n\t{\n\t\tparent.willAddSeparator = false;\n\t\tvar tr = document.createElement('tr');\n\t\t\n\t\tvar col1 = document.createElement('td');\n\t\tcol1.className = 'mxPopupMenuIcon';\n\t\tcol1.style.padding = '0 0 0 0px';\n\t\t\n\t\ttr.appendChild(col1);\n\t\t\n\t\tvar col2 = document.createElement('td');\n\t\tcol2.style.padding = '0 0 0 0px';\n\t\tcol2.setAttribute('colSpan', '2');\n\t\n\t\tvar hr = document.createElement('hr');\n\t\thr.setAttribute('size', '1');\n\t\tcol2.appendChild(hr);\n\t\t\n\t\ttr.appendChild(col2);\n\t\t\n\t\tparent.tbody.appendChild(tr);\n\t}\n};\n\n/**\n * Function: popup\n * \n * Shows the popup menu for the given event and cell.\n * \n * Example:\n * \n * (code)\n * graph.panningHandler.popup = function(x, y, cell, evt)\n * {\n *   mxUtils.alert('Hello, World!');\n * }\n * (end)\n */\nmxPopupMenu.prototype.popup = function(x, y, cell, evt)\n{\n\tif (this.div != null && this.tbody != null && this.factoryMethod != null)\n\t{\n\t\tthis.div.style.left = x + 'px';\n\t\tthis.div.style.top = y + 'px';\n\t\t\n\t\t// Removes all child nodes from the existing menu\n\t\twhile (this.tbody.firstChild != null)\n\t\t{\n\t\t\tmxEvent.release(this.tbody.firstChild);\n\t\t\tthis.tbody.removeChild(this.tbody.firstChild);\n\t\t}\n\t\t\n\t\tthis.itemCount = 0;\n\t\tthis.factoryMethod(this, cell, evt);\n\t\t\n\t\tif (this.itemCount > 0)\n\t\t{\n\t\t\tthis.showMenu();\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.SHOW));\n\t\t}\n\t}\n};\n\n/**\n * Function: isMenuShowing\n * \n * Returns true if the menu is showing.\n */\nmxPopupMenu.prototype.isMenuShowing = function()\n{\n\treturn this.div != null && this.div.parentNode == document.body;\n};\n\n/**\n * Function: showMenu\n * \n * Shows the menu.\n */\nmxPopupMenu.prototype.showMenu = function()\n{\n\t// Disables filter-based shadow in IE9 standards mode\n\tif (document.documentMode >= 9)\n\t{\n\t\tthis.div.style.filter = 'none';\n\t}\n\t\n\t// Fits the div inside the viewport\n\tdocument.body.appendChild(this.div);\n\tmxUtils.fit(this.div);\n};\n\n/**\n * Function: hideMenu\n * \n * Removes the menu and all submenus.\n */\nmxPopupMenu.prototype.hideMenu = function()\n{\n\tif (this.div != null)\n\t{\n\t\tif (this.div.parentNode != null)\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t\t\n\t\tthis.hideSubmenu(this);\n\t\tthis.containsItems = false;\n\t\tthis.fireEvent(new mxEventObject(mxEvent.HIDE));\n\t}\n};\n\n/**\n * Function: hideSubmenu\n * \n * Removes all submenus inside the given parent.\n * \n * Parameters:\n * \n * parent - An item returned by <addItem>.\n */\nmxPopupMenu.prototype.hideSubmenu = function(parent)\n{\n\tif (parent.activeRow != null)\n\t{\n\t\tthis.hideSubmenu(parent.activeRow);\n\t\t\n\t\tif (parent.activeRow.div.parentNode != null)\n\t\t{\n\t\t\tparent.activeRow.div.parentNode.removeChild(parent.activeRow.div);\n\t\t}\n\t\t\n\t\tparent.activeRow = null;\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxPopupMenu.prototype.destroy = function()\n{\n\tif (this.div != null)\n\t{\n\t\tmxEvent.release(this.div);\n\t\t\n\t\tif (this.div.parentNode != null)\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t\t\n\t\tthis.div = null;\n\t}\n};\n\n__mxOutput.mxPopupMenu = typeof mxPopupMenu !== 'undefined' ? mxPopupMenu : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxAutoSaveManager\n * \n * Manager for automatically saving diagrams. The <save> hook must be\n * implemented.\n * \n * Example:\n * \n * (code)\n * var mgr = new mxAutoSaveManager(editor.graph);\n * mgr.save = function()\n * {\n *   mxLog.show();\n *   mxLog.debug('save');\n * };\n * (end)\n * \n * Constructor: mxAutoSaveManager\n *\n * Constructs a new automatic layout for the given graph.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing graph. \n */\nfunction mxAutoSaveManager(graph)\n{\n\t// Notifies the manager of a change\n\tthis.changeHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.graphModelChanged(evt.getProperty('edit').changes);\n\t\t}\n\t});\n\n\tthis.setGraph(graph);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxAutoSaveManager.prototype = new mxEventSource();\nmxAutoSaveManager.prototype.constructor = mxAutoSaveManager;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxAutoSaveManager.prototype.graph = null;\n\n/**\n * Variable: autoSaveDelay\n * \n * Minimum amount of seconds between two consecutive autosaves. Eg. a\n * value of 1 (s) means the graph is not stored more than once per second.\n * Default is 10.\n */\nmxAutoSaveManager.prototype.autoSaveDelay = 10;\n\n/**\n * Variable: autoSaveThrottle\n * \n * Minimum amount of seconds between two consecutive autosaves triggered by\n * more than <autoSaveThreshhold> changes within a timespan of less than\n * <autoSaveDelay> seconds. Eg. a value of 1 (s) means the graph is not\n * stored more than once per second even if there are more than\n * <autoSaveThreshold> changes within that timespan. Default is 2.\n */\nmxAutoSaveManager.prototype.autoSaveThrottle = 2;\n\n/**\n * Variable: autoSaveThreshold\n * \n * Minimum amount of ignored changes before an autosave. Eg. a value of 2\n * means after 2 change of the graph model the autosave will trigger if the\n * condition below is true. Default is 5.\n */\nmxAutoSaveManager.prototype.autoSaveThreshold = 5;\n\n/**\n * Variable: ignoredChanges\n * \n * Counter for ignored changes in autosave.\n */\nmxAutoSaveManager.prototype.ignoredChanges = 0;\n\n/**\n * Variable: lastSnapshot\n * \n * Used for autosaving. See <autosave>.\n */\nmxAutoSaveManager.prototype.lastSnapshot = 0;\n\n/**\n * Variable: enabled\n * \n * Specifies if event handling is enabled. Default is true.\n */\nmxAutoSaveManager.prototype.enabled = true;\n\n/**\n * Variable: changeHandler\n * \n * Holds the function that handles graph model changes.\n */\nmxAutoSaveManager.prototype.changeHandler = null;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxAutoSaveManager.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxAutoSaveManager.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: setGraph\n * \n * Sets the graph that the layouts operate on.\n */\nmxAutoSaveManager.prototype.setGraph = function(graph)\n{\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.changeHandler);\n\t}\n\t\n\tthis.graph = graph;\n\t\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.changeHandler);\n\t}\n};\n\n/**\n * Function: save\n * \n * Empty hook that is called if the graph should be saved.\n */\nmxAutoSaveManager.prototype.save = function()\n{\n\t// empty\n};\n\n/**\n * Function: graphModelChanged\n * \n * Invoked when the graph model has changed.\n */\nmxAutoSaveManager.prototype.graphModelChanged = function(changes)\n{\n\tvar now = new Date().getTime();\n\tvar dt = (now - this.lastSnapshot) / 1000;\n\t\n\tif (dt > this.autoSaveDelay ||\n\t\t(this.ignoredChanges >= this.autoSaveThreshold &&\n\t\t dt > this.autoSaveThrottle))\n\t{\n\t\tthis.save();\n\t\tthis.reset();\n\t}\n\telse\n\t{\n\t\t// Increments the number of ignored changes\n\t\tthis.ignoredChanges++;\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets all counters.\n */\nmxAutoSaveManager.prototype.reset = function()\n{\n\tthis.lastSnapshot = new Date().getTime();\n\tthis.ignoredChanges = 0;\n};\n\n/**\n * Function: destroy\n * \n * Removes all handlers from the <graph> and deletes the reference to it.\n */\nmxAutoSaveManager.prototype.destroy = function()\n{\n\tthis.setGraph(null);\n};\n\n__mxOutput.mxAutoSaveManager = typeof mxAutoSaveManager !== 'undefined' ? mxAutoSaveManager : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxAnimation\n * \n * Implements a basic animation in JavaScript.\n * \n * Constructor: mxAnimation\n * \n * Constructs an animation.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxAnimation(delay)\n{\n\tthis.delay = (delay != null) ? delay : 20;\n};\n\n/**\n * Extends mxEventSource.\n */\nmxAnimation.prototype = new mxEventSource();\nmxAnimation.prototype.constructor = mxAnimation;\n\n/**\n * Variable: delay\n * \n * Specifies the delay between the animation steps. Defaul is 30ms.\n */\nmxAnimation.prototype.delay = null;\n\n/**\n * Variable: thread\n * \n * Reference to the thread while the animation is running.\n */\nmxAnimation.prototype.thread = null;\n\n/**\n * Function: isRunning\n * \n * Returns true if the animation is running.\n */\nmxAnimation.prototype.isRunning = function()\n{\n\treturn this.thread != null;\n};\n\n/**\n * Function: startAnimation\n *\n * Starts the animation by repeatedly invoking updateAnimation.\n */\nmxAnimation.prototype.startAnimation = function()\n{\n\tif (this.thread == null)\n\t{\n\t\tthis.thread = window.setInterval(mxUtils.bind(this, this.updateAnimation), this.delay);\n\t}\n};\n\n/**\n * Function: updateAnimation\n *\n * Hook for subclassers to implement the animation. Invoke stopAnimation\n * when finished, startAnimation to resume. This is called whenever the\n * timer fires and fires an mxEvent.EXECUTE event with no properties.\n */\nmxAnimation.prototype.updateAnimation = function()\n{\n\tthis.fireEvent(new mxEventObject(mxEvent.EXECUTE));\n};\n\n/**\n * Function: stopAnimation\n *\n * Stops the animation by deleting the timer and fires an <mxEvent.DONE>.\n */\nmxAnimation.prototype.stopAnimation = function()\n{\n\tif (this.thread != null)\n\t{\n\t\twindow.clearInterval(this.thread);\n\t\tthis.thread = null;\n\t\tthis.fireEvent(new mxEventObject(mxEvent.DONE));\n\t}\n};\n\n__mxOutput.mxAnimation = typeof mxAnimation !== 'undefined' ? mxAnimation : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxMorphing\n * \n * Implements animation for morphing cells. Here is an example of\n * using this class for animating the result of a layout algorithm:\n * \n * (code)\n * graph.getModel().beginUpdate();\n * try\n * {\n *   var circleLayout = new mxCircleLayout(graph);\n *   circleLayout.execute(graph.getDefaultParent());\n * }\n * finally\n * {\n *   var morph = new mxMorphing(graph);\n *   morph.addListener(mxEvent.DONE, function()\n *   {\n *     graph.getModel().endUpdate();\n *   });\n *   \n *   morph.startAnimation();\n * }\n * (end)\n * \n * Constructor: mxMorphing\n * \n * Constructs an animation.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * steps - Optional number of steps in the morphing animation. Default is 6.\n * ease - Optional easing constant for the animation. Default is 1.5.\n * delay - Optional delay between the animation steps. Passed to <mxAnimation>.\n */\nfunction mxMorphing(graph, steps, ease, delay)\n{\n\tmxAnimation.call(this, delay);\n\tthis.graph = graph;\n\tthis.steps = (steps != null) ? steps : 6;\n\tthis.ease = (ease != null) ? ease : 1.5;\n};\n\n/**\n * Extends mxEventSource.\n */\nmxMorphing.prototype = new mxAnimation();\nmxMorphing.prototype.constructor = mxMorphing;\n\n/**\n * Variable: graph\n * \n * Specifies the delay between the animation steps. Defaul is 30ms.\n */\nmxMorphing.prototype.graph = null;\n\n/**\n * Variable: steps\n * \n * Specifies the maximum number of steps for the morphing.\n */\nmxMorphing.prototype.steps = null;\n\n/**\n * Variable: step\n * \n * Contains the current step.\n */\nmxMorphing.prototype.step = 0;\n\n/**\n * Variable: ease\n * \n * Ease-off for movement towards the given vector. Larger values are\n * slower and smoother. Default is 4.\n */\nmxMorphing.prototype.ease = null;\n\n/**\n * Variable: cells\n * \n * Optional array of cells to be animated. If this is not specified\n * then all cells are checked and animated if they have been moved\n * in the current transaction.\n */\nmxMorphing.prototype.cells = null;\n\n/**\n * Function: updateAnimation\n *\n * Animation step.\n */\nmxMorphing.prototype.updateAnimation = function()\n{\n\tmxAnimation.prototype.updateAnimation.apply(this, arguments);\n\tvar move = new mxCellStatePreview(this.graph);\n\n\tif (this.cells != null)\n\t{\n\t\t// Animates the given cells individually without recursion\n\t\tfor (var i = 0; i < this.cells.length; i++)\n\t\t{\n\t\t\tthis.animateCell(this.cells[i], move, false);\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Animates all changed cells by using recursion to find\n\t\t// the changed cells but not for the animation itself\n\t\tthis.animateCell(this.graph.getModel().getRoot(), move, true);\n\t}\n\t\n\tthis.show(move);\n\t\n\tif (move.isEmpty() || this.step++ >= this.steps)\n\t{\n\t\tthis.stopAnimation();\n\t}\n};\n\n/**\n * Function: show\n *\n * Shows the changes in the given <mxCellStatePreview>.\n */\nmxMorphing.prototype.show = function(move)\n{\n\tmove.show();\n};\n\n/**\n * Function: animateCell\n *\n * Animates the given cell state using <mxCellStatePreview.moveState>.\n */\nmxMorphing.prototype.animateCell = function(cell, move, recurse)\n{\n\tvar state = this.graph.getView().getState(cell);\n\tvar delta = null;\n\n\tif (state != null)\n\t{\n\t\t// Moves the animated state from where it will be after the model\n\t\t// change by subtracting the given delta vector from that location\n\t\tdelta = this.getDelta(state);\n\n\t\tif (this.graph.getModel().isVertex(cell) && (delta.x != 0 || delta.y != 0))\n\t\t{\n\t\t\tvar translate = this.graph.view.getTranslate();\n\t\t\tvar scale = this.graph.view.getScale();\n\t\t\t\n\t\t\tdelta.x += translate.x * scale;\n\t\t\tdelta.y += translate.y * scale;\n\t\t\t\n\t\t\tmove.moveState(state, -delta.x / this.ease, -delta.y / this.ease);\n\t\t}\n\t}\n\t\n\tif (recurse && !this.stopRecursion(state, delta))\n\t{\n\t\tvar childCount = this.graph.getModel().getChildCount(cell);\n\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.animateCell(this.graph.getModel().getChildAt(cell, i), move, recurse);\n\t\t}\n\t}\n};\n\n/**\n * Function: stopRecursion\n *\n * Returns true if the animation should not recursively find more\n * deltas for children if the given parent state has been animated.\n */\nmxMorphing.prototype.stopRecursion = function(state, delta)\n{\n\treturn delta != null && (delta.x != 0 || delta.y != 0);\n};\n\n/**\n * Function: getDelta\n *\n * Returns the vector between the current rendered state and the future\n * location of the state after the display will be updated.\n */\nmxMorphing.prototype.getDelta = function(state)\n{\n\tvar origin = this.getOriginForCell(state.cell);\n\tvar translate = this.graph.getView().getTranslate();\n\tvar scale = this.graph.getView().getScale();\n\tvar x = state.x / scale - translate.x;\n\tvar y = state.y / scale - translate.y;\n\n\treturn new mxPoint((origin.x - x) * scale, (origin.y - y) * scale);\n};\n\n/**\n * Function: getOriginForCell\n *\n * Returns the top, left corner of the given cell. TODO: Improve performance\n * by using caching inside this method as the result per cell never changes\n * during the lifecycle of this object.\n */\nmxMorphing.prototype.getOriginForCell = function(cell)\n{\n\tvar result = null;\n\t\n\tif (cell != null)\n\t{\n\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\tvar geo = this.graph.getCellGeometry(cell);\n\t\tresult = this.getOriginForCell(parent);\n\t\t\n\t\t// TODO: Handle offsets\n\t\tif (geo != null)\n\t\t{\n\t\t\tif (geo.relative)\n\t\t\t{\n\t\t\t\tvar pgeo = this.graph.getCellGeometry(parent);\n\t\t\t\t\n\t\t\t\tif (pgeo != null)\n\t\t\t\t{\n\t\t\t\t\tresult.x += geo.x * pgeo.width;\n\t\t\t\t\tresult.y += geo.y * pgeo.height;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.x += geo.x;\n\t\t\t\tresult.y += geo.y;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (result == null)\n\t{\n\t\tvar t = this.graph.view.getTranslate();\n\t\tresult = new mxPoint(-t.x, -t.y);\n\t}\n\t\n\treturn result;\n};\n\n__mxOutput.mxMorphing = typeof mxMorphing !== 'undefined' ? mxMorphing : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImageBundle\n *\n * Maps from keys to base64 encoded images or file locations. All values must\n * be URLs or use the format data:image/format followed by a comma and the base64\n * encoded image data, eg. \"data:image/gif,XYZ\", where XYZ is the base64 encoded\n * image data.\n * \n * To add a new image bundle to an existing graph, the following code is used:\n * \n * (code)\n * var bundle = new mxImageBundle(alt);\n * bundle.putImage('myImage', 'data:image/gif,R0lGODlhEAAQAMIGAAAAAICAAICAgP' +\n *   '//AOzp2O3r2////////yH+FUNyZWF0ZWQgd2l0aCBUaGUgR0lNUAAh+QQBCgAHACwAAAAA' +\n *   'EAAQAAADTXi63AowynnAMDfjPUDlnAAJhmeBFxAEloliKltWmiYCQvfVr6lBPB1ggxN1hi' +\n *   'laSSASFQpIV5HJBDyHpqK2ejVRm2AAgZCdmCGO9CIBADs=', fallback);\n * bundle.putImage('mySvgImage', 'data:image/svg+xml,' + encodeURIComponent(\n *   '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">' +\n *   '<linearGradient id=\"gradient\"><stop offset=\"10%\" stop-color=\"#F00\"/>' +\n *   '<stop offset=\"90%\" stop-color=\"#fcc\"/></linearGradient>' +\n *   '<rect fill=\"url(#gradient)\" width=\"100%\" height=\"100%\"/></svg>'), fallback);\n * graph.addImageBundle(bundle);\n * (end);\n * \n * Alt is an optional boolean (default is false) that specifies if the value\n * or the fallback should be returned in <getImage>.\n * \n * The image can then be referenced in any cell style using image=myImage.\n * If you are using mxOutline, you should use the same image bundles in the\n * graph that renders the outline.\n * \n * The keys for images are resolved in <mxGraph.postProcessCellStyle> and\n * turned into a data URI if the returned value has a short data URI format\n * as specified above.\n * \n * A typical value for the fallback is a MTHML link as defined in RFC 2557.\n * Note that this format requires a file to be dynamically created on the\n * server-side, or the page that contains the graph to be modified to contain\n * the resources, this can be done by adding a comment that contains the\n * resource in the HEAD section of the page after the title tag.\n * \n * This type of fallback mechanism should be used in IE6 and IE7. IE8 does\n * support data URIs, but the maximum size is limited to 32 KB, which means\n * all data URIs should be limited to 32 KB.\n */\nfunction mxImageBundle(alt)\n{\n\tthis.images = [];\n\tthis.alt = (alt != null) ? alt : false;\n};\n\n/**\n * Variable: images\n * \n * Maps from keys to images.\n */\nmxImageBundle.prototype.images = null;\n\n/**\n * Variable: alt\n * \n * Specifies if the fallback representation should be returned.\n */\nmxImageBundle.prototype.alt = null;\n\n/**\n * Function: putImage\n * \n * Adds the specified entry to the map. The entry is an object with a value and\n * fallback property as specified in the arguments.\n */\nmxImageBundle.prototype.putImage = function(key, value, fallback)\n{\n\tthis.images[key] = {value: value, fallback: fallback};\n};\n\n/**\n * Function: getImage\n * \n * Returns the value for the given key. This returns the value\n * or fallback, depending on <alt>. The fallback is returned if\n * <alt> is true, the value is returned otherwise.\n */\nmxImageBundle.prototype.getImage = function(key)\n{\n\tvar result = null;\n\t\n\tif (key != null)\n\t{\n\t\tvar img = this.images[key];\n\t\t\n\t\tif (img != null)\n\t\t{\n\t\t\tresult = (this.alt) ? img.fallback : img.value;\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n__mxOutput.mxImageBundle = typeof mxImageBundle !== 'undefined' ? mxImageBundle : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImageExport\n * \n * Creates a new image export instance to be used with an export canvas. Here\n * is an example that uses this class to create an image via a backend using\n * <mxXmlExportCanvas>.\n * \n * (code)\n * var xmlDoc = mxUtils.createXmlDocument();\n * var root = xmlDoc.createElement('output');\n * xmlDoc.appendChild(root);\n * \n * var xmlCanvas = new mxXmlCanvas2D(root);\n * var imgExport = new mxImageExport();\n * imgExport.drawState(graph.getView().getState(graph.model.root), xmlCanvas);\n * \n * var bounds = graph.getGraphBounds();\n * var w = Math.ceil(bounds.x + bounds.width);\n * var h = Math.ceil(bounds.y + bounds.height);\n * \n * var xml = mxUtils.getXml(root);\n * new mxXmlRequest('export', 'format=png&w=' + w +\n * \t\t'&h=' + h + '&bg=#F9F7ED&xml=' + encodeURIComponent(xml))\n * \t\t.simulate(document, '_blank');\n * (end)\n * \n * Constructor: mxImageExport\n * \n * Constructs a new image export.\n */\nfunction mxImageExport() { };\n\n/**\n * Variable: includeOverlays\n * \n * Specifies if overlays should be included in the export. Default is false.\n */\nmxImageExport.prototype.includeOverlays = false;\n\n/**\n * Function: drawState\n * \n * Draws the given state and all its descendants to the given canvas.\n */\nmxImageExport.prototype.drawState = function(state, canvas)\n{\n\tif (state != null)\n\t{\n\t\tthis.visitStatesRecursive(state, canvas, mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.drawCellState.apply(this, arguments);\n\t\t}));\n\t\t\t\t\n\t\t// Paints the overlays\n\t\tif (this.includeOverlays)\n\t\t{\n\t\t\tthis.visitStatesRecursive(state, canvas, mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.drawOverlays.apply(this, arguments);\n\t\t\t}));\n\t\t}\n\t}\n};\n\n/**\n * Function: visitStatesRecursive\n * \n * Visits the given state and all its descendants to the given canvas recursively.\n */\nmxImageExport.prototype.visitStatesRecursive = function(state, canvas, visitor)\n{\n\tif (state != null)\n\t{\n\t\tvisitor(state, canvas);\n\t\t\n\t\tvar graph = state.view.graph;\n\t\tvar childCount = graph.model.getChildCount(state.cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar childState = graph.view.getState(graph.model.getChildAt(state.cell, i));\n\t\t\tthis.visitStatesRecursive(childState, canvas, visitor);\n\t\t}\n\t}\n};\n\n/**\n * Function: getLinkForCellState\n * \n * Returns the link for the given cell state and canvas. This returns null.\n */\nmxImageExport.prototype.getLinkForCellState = function(state, canvas)\n{\n\treturn null;\n};\n\n/**\n * Function: drawCellState\n * \n * Draws the given state to the given canvas.\n */\nmxImageExport.prototype.drawCellState = function(state, canvas)\n{\n\t// Experimental feature\n\tvar link = this.getLinkForCellState(state, canvas);\n\t\n\tif (link != null)\n\t{\n\t\tcanvas.setLink(link);\n\t}\n\t\n\t// Paints the shape and text\n\tthis.drawShape(state, canvas);\n\tthis.drawText(state, canvas);\n\n\tif (link != null)\n\t{\n\t\tcanvas.setLink(null);\n\t}\n};\n\n/**\n * Function: drawShape\n * \n * Draws the shape of the given state.\n */\nmxImageExport.prototype.drawShape = function(state, canvas)\n{\n\tif (state.shape instanceof mxShape && state.shape.checkBounds())\n\t{\n\t\tcanvas.save();\n\t\t\n\t\tstate.shape.beforePaint(canvas);\n\t\tstate.shape.paint(canvas);\n\t\tstate.shape.afterPaint(canvas);\n\t\t\n\t\tcanvas.restore();\n\t}\n};\n\n/**\n * Function: drawText\n * \n * Draws the text of the given state.\n */\nmxImageExport.prototype.drawText = function(state, canvas)\n{\n\tif (state.text != null && state.text.checkBounds())\n\t{\n\t\tcanvas.save();\n\t\t\n\t\tstate.text.beforePaint(canvas);\n\t\tstate.text.paint(canvas);\n\t\tstate.text.afterPaint(canvas);\n\t\t\n\t\tcanvas.restore();\n\t}\n};\n\n/**\n * Function: drawOverlays\n * \n * Draws the overlays for the given state. This is called if <includeOverlays>\n * is true.\n */\nmxImageExport.prototype.drawOverlays = function(state, canvas)\n{\n\tif (state.overlays != null)\n\t{\n\t\tstate.overlays.visit(function(id, shape)\n\t\t{\n\t\t\tif (shape instanceof mxShape)\n\t\t\t{\n\t\t\t\tshape.paint(canvas);\n\t\t\t}\n\t\t});\n\t}\n};\n\n\n__mxOutput.mxImageExport = typeof mxImageExport !== 'undefined' ? mxImageExport : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxAbstractCanvas2D\n *\n * Base class for all canvases. A description of the public API is available in <mxXmlCanvas2D>.\n * All color values of <mxConstants.NONE> will be converted to null in the state.\n * \n * Constructor: mxAbstractCanvas2D\n *\n * Constructs a new abstract canvas.\n */\nfunction mxAbstractCanvas2D()\n{\n\t/**\n\t * Variable: converter\n\t * \n\t * Holds the <mxUrlConverter> to convert image URLs.\n\t */\n\tthis.converter = this.createUrlConverter();\n\t\n\tthis.reset();\n};\n\n/**\n * Variable: state\n * \n * Holds the current state.\n */\nmxAbstractCanvas2D.prototype.state = null;\n\n/**\n * Variable: states\n * \n * Stack of states.\n */\nmxAbstractCanvas2D.prototype.states = null;\n\n/**\n * Variable: path\n * \n * Holds the current path as an array.\n */\nmxAbstractCanvas2D.prototype.path = null;\n\n/**\n * Variable: rotateHtml\n * \n * Switch for rotation of HTML. Default is false.\n */\nmxAbstractCanvas2D.prototype.rotateHtml = true;\n\n/**\n * Variable: lastX\n * \n * Holds the last x coordinate.\n */\nmxAbstractCanvas2D.prototype.lastX = 0;\n\n/**\n * Variable: lastY\n * \n * Holds the last y coordinate.\n */\nmxAbstractCanvas2D.prototype.lastY = 0;\n\n/**\n * Variable: moveOp\n * \n * Contains the string used for moving in paths. Default is 'M'.\n */\nmxAbstractCanvas2D.prototype.moveOp = 'M';\n\n/**\n * Variable: lineOp\n * \n * Contains the string used for moving in paths. Default is 'L'.\n */\nmxAbstractCanvas2D.prototype.lineOp = 'L';\n\n/**\n * Variable: quadOp\n * \n * Contains the string used for quadratic paths. Default is 'Q'.\n */\nmxAbstractCanvas2D.prototype.quadOp = 'Q';\n\n/**\n * Variable: curveOp\n * \n * Contains the string used for bezier curves. Default is 'C'.\n */\nmxAbstractCanvas2D.prototype.curveOp = 'C';\n\n/**\n * Variable: closeOp\n * \n * Holds the operator for closing curves. Default is 'Z'.\n */\nmxAbstractCanvas2D.prototype.closeOp = 'Z';\n\n/**\n * Variable: pointerEvents\n * \n * Boolean value that specifies if events should be handled. Default is false.\n */\nmxAbstractCanvas2D.prototype.pointerEvents = false;\n\n/**\n * Function: createUrlConverter\n * \n * Create a new <mxUrlConverter> and returns it.\n */\nmxAbstractCanvas2D.prototype.createUrlConverter = function()\n{\n\treturn new mxUrlConverter();\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this canvas.\n */\nmxAbstractCanvas2D.prototype.reset = function()\n{\n\tthis.state = this.createState();\n\tthis.states = [];\n};\n\n/**\n * Function: createState\n * \n * Creates the state of the this canvas.\n */\nmxAbstractCanvas2D.prototype.createState = function()\n{\n\treturn {\n\t\tdx: 0,\n\t\tdy: 0,\n\t\tscale: 1,\n\t\talpha: 1,\n\t\tfillAlpha: 1,\n\t\tstrokeAlpha: 1,\n\t\tfillColor: null,\n\t\tgradientFillAlpha: 1,\n\t\tgradientColor: null,\n\t\tgradientAlpha: 1,\n\t\tgradientDirection: null,\n\t\tstrokeColor: null,\n\t\tstrokeWidth: 1,\n\t\tdashed: false,\n\t\tdashPattern: '3 3',\n\t\tfixDash: false,\n\t\tlineCap: 'flat',\n\t\tlineJoin: 'miter',\n\t\tmiterLimit: 10,\n\t\tfontColor: '#000000',\n\t\tfontBackgroundColor: null,\n\t\tfontBorderColor: null,\n\t\tfontSize: mxConstants.DEFAULT_FONTSIZE,\n\t\tfontFamily: mxConstants.DEFAULT_FONTFAMILY,\n\t\tfontStyle: 0,\n\t\tshadow: false,\n\t\tshadowColor: mxConstants.SHADOWCOLOR,\n\t\tshadowAlpha: mxConstants.SHADOW_OPACITY,\n\t\tshadowDx: mxConstants.SHADOW_OFFSET_X,\n\t\tshadowDy: mxConstants.SHADOW_OFFSET_Y,\n\t\trotation: 0,\n\t\trotationCx: 0,\n\t\trotationCy: 0\n\t};\n};\n\n/**\n * Function: format\n * \n * Rounds all numbers to integers.\n */\nmxAbstractCanvas2D.prototype.format = function(value)\n{\n\treturn Math.round(parseFloat(value));\n};\n\n/**\n * Function: addOp\n * \n * Adds the given operation to the path.\n */\nmxAbstractCanvas2D.prototype.addOp = function()\n{\n\tif (this.path != null)\n\t{\n\t\tthis.path.push(arguments[0]);\n\t\t\n\t\tif (arguments.length > 2)\n\t\t{\n\t\t\tvar s = this.state;\n\n\t\t\tfor (var i = 2; i < arguments.length; i += 2)\n\t\t\t{\n\t\t\t\tthis.lastX = arguments[i - 1];\n\t\t\t\tthis.lastY = arguments[i];\n\t\t\t\t\n\t\t\t\tthis.path.push(this.format((this.lastX + s.dx) * s.scale));\n\t\t\t\tthis.path.push(this.format((this.lastY + s.dy) * s.scale));\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: rotatePoint\n * \n * Rotates the given point and returns the result as an <mxPoint>.\n */\nmxAbstractCanvas2D.prototype.rotatePoint = function(x, y, theta, cx, cy)\n{\n\tvar rad = theta * (Math.PI / 180);\n\t\n\treturn mxUtils.getRotatedPoint(new mxPoint(x, y), Math.cos(rad),\n\t\tMath.sin(rad), new mxPoint(cx, cy));\n};\n\n/**\n * Function: save\n * \n * Saves the current state.\n */\nmxAbstractCanvas2D.prototype.save = function()\n{\n\tthis.states.push(this.state);\n\tthis.state = mxUtils.clone(this.state);\n};\n\n/**\n * Function: restore\n * \n * Restores the current state.\n */\nmxAbstractCanvas2D.prototype.restore = function()\n{\n\tif (this.states.length > 0)\n\t{\n\t\tthis.state = this.states.pop();\n\t}\n};\n\n/**\n * Function: setLink\n * \n * Sets the current link. Hook for subclassers.\n */\nmxAbstractCanvas2D.prototype.setLink = function(link)\n{\n\t// nop\n};\n\n/**\n * Function: scale\n * \n * Scales the current state.\n */\nmxAbstractCanvas2D.prototype.scale = function(value)\n{\n\tthis.state.scale *= value;\n\tthis.state.strokeWidth *= value;\n};\n\n/**\n * Function: translate\n * \n * Translates the current state.\n */\nmxAbstractCanvas2D.prototype.translate = function(dx, dy)\n{\n\tthis.state.dx += dx;\n\tthis.state.dy += dy;\n};\n\n/**\n * Function: rotate\n * \n * Rotates the current state.\n */\nmxAbstractCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\t// nop\n};\n\n/**\n * Function: setAlpha\n * \n * Sets the current alpha.\n */\nmxAbstractCanvas2D.prototype.setAlpha = function(value)\n{\n\tthis.state.alpha = value;\n};\n\n/**\n * Function: setFillAlpha\n * \n * Sets the current solid fill alpha.\n */\nmxAbstractCanvas2D.prototype.setFillAlpha = function(value)\n{\n\tthis.state.fillAlpha = value;\n};\n\n/**\n * Function: setStrokeAlpha\n * \n * Sets the current stroke alpha.\n */\nmxAbstractCanvas2D.prototype.setStrokeAlpha = function(value)\n{\n\tthis.state.strokeAlpha = value;\n};\n\n/**\n * Function: setFillColor\n * \n * Sets the current fill color.\n */\nmxAbstractCanvas2D.prototype.setFillColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fillColor = value;\n\tthis.state.gradientColor = null;\n};\n\n/**\n * Function: setGradient\n * \n * Sets the current gradient.\n */\nmxAbstractCanvas2D.prototype.setGradient = function(color1, color2, x, y, w, h, direction, alpha1, alpha2)\n{\n\tvar s = this.state;\n\ts.fillColor = color1;\n\ts.gradientFillAlpha = (alpha1 != null) ? alpha1 : 1;\n\ts.gradientColor = color2;\n\ts.gradientAlpha = (alpha2 != null) ? alpha2 : 1;\n\ts.gradientDirection = direction;\n};\n\n/**\n * Function: setStrokeColor\n * \n * Sets the current stroke color.\n */\nmxAbstractCanvas2D.prototype.setStrokeColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.strokeColor = value;\n};\n\n/**\n * Function: setStrokeWidth\n * \n * Sets the current stroke width.\n */\nmxAbstractCanvas2D.prototype.setStrokeWidth = function(value)\n{\n\tthis.state.strokeWidth = value;\n};\n\n/**\n * Function: setDashed\n * \n * Enables or disables dashed lines.\n */\nmxAbstractCanvas2D.prototype.setDashed = function(value, fixDash)\n{\n\tthis.state.dashed = value;\n\tthis.state.fixDash = fixDash;\n};\n\n/**\n * Function: setDashPattern\n * \n * Sets the current dash pattern.\n */\nmxAbstractCanvas2D.prototype.setDashPattern = function(value)\n{\n\tthis.state.dashPattern = value;\n};\n\n/**\n * Function: setLineCap\n * \n * Sets the current line cap.\n */\nmxAbstractCanvas2D.prototype.setLineCap = function(value)\n{\n\tthis.state.lineCap = value;\n};\n\n/**\n * Function: setLineJoin\n * \n * Sets the current line join.\n */\nmxAbstractCanvas2D.prototype.setLineJoin = function(value)\n{\n\tthis.state.lineJoin = value;\n};\n\n/**\n * Function: setMiterLimit\n * \n * Sets the current miter limit.\n */\nmxAbstractCanvas2D.prototype.setMiterLimit = function(value)\n{\n\tthis.state.miterLimit = value;\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color.\n */\nmxAbstractCanvas2D.prototype.setFontColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fontColor = value;\n};\n\n/**\n * Function: setFontBackgroundColor\n * \n * Sets the current font background color.\n */\nmxAbstractCanvas2D.prototype.setFontBackgroundColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fontBackgroundColor = value;\n};\n\n/**\n * Function: setFontBorderColor\n * \n * Sets the current font border color.\n */\nmxAbstractCanvas2D.prototype.setFontBorderColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fontBorderColor = value;\n};\n\n/**\n * Function: setFontSize\n * \n * Sets the current font size.\n */\nmxAbstractCanvas2D.prototype.setFontSize = function(value)\n{\n\tthis.state.fontSize = parseFloat(value);\n};\n\n/**\n * Function: setFontFamily\n * \n * Sets the current font family.\n */\nmxAbstractCanvas2D.prototype.setFontFamily = function(value)\n{\n\tthis.state.fontFamily = value;\n};\n\n/**\n * Function: setFontStyle\n * \n * Sets the current font style.\n */\nmxAbstractCanvas2D.prototype.setFontStyle = function(value)\n{\n\tif (value == null)\n\t{\n\t\tvalue = 0;\n\t}\n\t\n\tthis.state.fontStyle = value;\n};\n\n/**\n * Function: setShadow\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadow = function(enabled)\n{\n\tthis.state.shadow = enabled;\n};\n\n/**\n * Function: setShadowColor\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadowColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.shadowColor = value;\n};\n\n/**\n * Function: setShadowAlpha\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadowAlpha = function(value)\n{\n\tthis.state.shadowAlpha = value;\n};\n\n/**\n * Function: setShadowOffset\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadowOffset = function(dx, dy)\n{\n\tthis.state.shadowDx = dx;\n\tthis.state.shadowDy = dy;\n};\n\n/**\n * Function: begin\n * \n * Starts a new path.\n */\nmxAbstractCanvas2D.prototype.begin = function()\n{\n\tthis.lastX = 0;\n\tthis.lastY = 0;\n\tthis.path = [];\n};\n\n/**\n * Function: moveTo\n * \n *  Moves the current path the given coordinates.\n */\nmxAbstractCanvas2D.prototype.moveTo = function(x, y)\n{\n\tthis.addOp(this.moveOp, x, y);\n};\n\n/**\n * Function: lineTo\n * \n * Draws a line to the given coordinates. Uses moveTo with the op argument.\n */\nmxAbstractCanvas2D.prototype.lineTo = function(x, y)\n{\n\tthis.addOp(this.lineOp, x, y);\n};\n\n/**\n * Function: quadTo\n * \n * Adds a quadratic curve to the current path.\n */\nmxAbstractCanvas2D.prototype.quadTo = function(x1, y1, x2, y2)\n{\n\tthis.addOp(this.quadOp, x1, y1, x2, y2);\n};\n\n/**\n * Function: curveTo\n * \n * Adds a bezier curve to the current path.\n */\nmxAbstractCanvas2D.prototype.curveTo = function(x1, y1, x2, y2, x3, y3)\n{\n\tthis.addOp(this.curveOp, x1, y1, x2, y2, x3, y3);\n};\n\n/**\n * Function: arcTo\n * \n * Adds the given arc to the current path. This is a synthetic operation that\n * is broken down into curves.\n */\nmxAbstractCanvas2D.prototype.arcTo = function(rx, ry, angle, largeArcFlag, sweepFlag, x, y)\n{\n\tvar curves = mxUtils.arcToCurves(this.lastX, this.lastY, rx, ry, angle, largeArcFlag, sweepFlag, x, y);\n\t\n\tif (curves != null)\n\t{\n\t\tfor (var i = 0; i < curves.length; i += 6) \n\t\t{\n\t\t\tthis.curveTo(curves[i], curves[i + 1], curves[i + 2],\n\t\t\t\tcurves[i + 3], curves[i + 4], curves[i + 5]);\n\t\t}\n\t}\n};\n\n/**\n * Function: close\n * \n * Closes the current path.\n */\nmxAbstractCanvas2D.prototype.close = function(x1, y1, x2, y2, x3, y3)\n{\n\tthis.addOp(this.closeOp);\n};\n\n/**\n * Function: end\n * \n * Empty implementation for backwards compatibility. This will be removed.\n */\nmxAbstractCanvas2D.prototype.end = function() { };\n\n__mxOutput.mxAbstractCanvas2D = typeof mxAbstractCanvas2D !== 'undefined' ? mxAbstractCanvas2D : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxXmlCanvas2D\n *\n * Base class for all canvases. The following methods make up the public\n * interface of the canvas 2D for all painting in mxGraph:\n * \n * - <save>, <restore>\n * - <scale>, <translate>, <rotate>\n * - <setAlpha>, <setFillAlpha>, <setStrokeAlpha>, <setFillColor>, <setGradient>,\n *   <setStrokeColor>, <setStrokeWidth>, <setDashed>, <setDashPattern>, <setLineCap>, \n *   <setLineJoin>, <setMiterLimit>\n * - <setFontColor>, <setFontBackgroundColor>, <setFontBorderColor>, <setFontSize>,\n *   <setFontFamily>, <setFontStyle>\n * - <setShadow>, <setShadowColor>, <setShadowAlpha>, <setShadowOffset>\n * - <rect>, <roundrect>, <ellipse>, <image>, <text>\n * - <begin>, <moveTo>, <lineTo>, <quadTo>, <curveTo>\n * - <stroke>, <fill>, <fillAndStroke>\n * \n * <mxAbstractCanvas2D.arcTo> is an additional method for drawing paths. This is\n * a synthetic method, meaning that it is turned into a sequence of curves by\n * default. Subclassers may add native support for arcs.\n * \n * Constructor: mxXmlCanvas2D\n *\n * Constructs a new abstract canvas.\n */\nfunction mxXmlCanvas2D(root)\n{\n\tmxAbstractCanvas2D.call(this);\n\n\t/**\n\t * Variable: root\n\t * \n\t * Reference to the container for the SVG content.\n\t */\n\tthis.root = root;\n\n\t// Writes default settings;\n\tthis.writeDefaults();\n};\n\n/**\n * Extends mxAbstractCanvas2D\n */\nmxUtils.extend(mxXmlCanvas2D, mxAbstractCanvas2D);\n\n/**\n * Variable: textEnabled\n * \n * Specifies if text output should be enabled. Default is true.\n */\nmxXmlCanvas2D.prototype.textEnabled = true;\n\n/**\n * Variable: compressed\n * \n * Specifies if the output should be compressed by removing redundant calls.\n * Default is true.\n */\nmxXmlCanvas2D.prototype.compressed = true;\n\n/**\n * Function: writeDefaults\n * \n * Writes the rendering defaults to <root>:\n */\nmxXmlCanvas2D.prototype.writeDefaults = function()\n{\n\tvar elem;\n\t\n\t// Writes font defaults\n\telem = this.createElement('fontfamily');\n\telem.setAttribute('family', mxConstants.DEFAULT_FONTFAMILY);\n\tthis.root.appendChild(elem);\n\t\n\telem = this.createElement('fontsize');\n\telem.setAttribute('size', mxConstants.DEFAULT_FONTSIZE);\n\tthis.root.appendChild(elem);\n\t\n\t// Writes shadow defaults\n\telem = this.createElement('shadowcolor');\n\telem.setAttribute('color', mxConstants.SHADOWCOLOR);\n\tthis.root.appendChild(elem);\n\t\n\telem = this.createElement('shadowalpha');\n\telem.setAttribute('alpha', mxConstants.SHADOW_OPACITY);\n\tthis.root.appendChild(elem);\n\t\n\telem = this.createElement('shadowoffset');\n\telem.setAttribute('dx', mxConstants.SHADOW_OFFSET_X);\n\telem.setAttribute('dy', mxConstants.SHADOW_OFFSET_Y);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: format\n * \n * Returns a formatted number with 2 decimal places.\n */\nmxXmlCanvas2D.prototype.format = function(value)\n{\n\treturn parseFloat(parseFloat(value).toFixed(2));\n};\n\n/**\n * Function: createElement\n * \n * Creates the given element using the owner document of <root>.\n */\nmxXmlCanvas2D.prototype.createElement = function(name)\n{\n\treturn this.root.ownerDocument.createElement(name);\n};\n\n/**\n * Function: save\n * \n * Saves the drawing state.\n */\nmxXmlCanvas2D.prototype.save = function()\n{\n\tif (this.compressed)\n\t{\n\t\tmxAbstractCanvas2D.prototype.save.apply(this, arguments);\n\t}\n\t\n\tthis.root.appendChild(this.createElement('save'));\n};\n\n/**\n * Function: restore\n * \n * Restores the drawing state.\n */\nmxXmlCanvas2D.prototype.restore = function()\n{\n\tif (this.compressed)\n\t{\n\t\tmxAbstractCanvas2D.prototype.restore.apply(this, arguments);\n\t}\n\t\n\tthis.root.appendChild(this.createElement('restore'));\n};\n\n/**\n * Function: scale\n * \n * Scales the output.\n * \n * Parameters:\n * \n * scale - Number that represents the scale where 1 is equal to 100%.\n */\nmxXmlCanvas2D.prototype.scale = function(value)\n{\n        var elem = this.createElement('scale');\n        elem.setAttribute('scale', value);\n        this.root.appendChild(elem);\n};\n\n/**\n * Function: translate\n * \n * Translates the output.\n * \n * Parameters:\n * \n * dx - Number that specifies the horizontal translation.\n * dy - Number that specifies the vertical translation.\n */\nmxXmlCanvas2D.prototype.translate = function(dx, dy)\n{\n\tvar elem = this.createElement('translate');\n\telem.setAttribute('dx', this.format(dx));\n\telem.setAttribute('dy', this.format(dy));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: rotate\n * \n * Rotates and/or flips the output around a given center. (Note: Due to\n * limitations in VML, the rotation cannot be concatenated.)\n * \n * Parameters:\n * \n * theta - Number that represents the angle of the rotation (in degrees).\n * flipH - Boolean indicating if the output should be flipped horizontally.\n * flipV - Boolean indicating if the output should be flipped vertically.\n * cx - Number that represents the x-coordinate of the rotation center.\n * cy - Number that represents the y-coordinate of the rotation center.\n */\nmxXmlCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\tvar elem = this.createElement('rotate');\n\t\n\tif (theta != 0 || flipH || flipV)\n\t{\n\t\telem.setAttribute('theta', this.format(theta));\n\t\telem.setAttribute('flipH', (flipH) ? '1' : '0');\n\t\telem.setAttribute('flipV', (flipV) ? '1' : '0');\n\t\telem.setAttribute('cx', this.format(cx));\n\t\telem.setAttribute('cy', this.format(cy));\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setAlpha\n * \n * Sets the current alpha.\n * \n * Parameters:\n * \n * value - Number that represents the new alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.alpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('alpha');\n\telem.setAttribute('alpha', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setFillAlpha\n * \n * Sets the current fill alpha.\n * \n * Parameters:\n * \n * value - Number that represents the new fill alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setFillAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.fillAlpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setFillAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('fillalpha');\n\telem.setAttribute('alpha', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setStrokeAlpha\n * \n * Sets the current stroke alpha.\n * \n * Parameters:\n * \n * value - Number that represents the new stroke alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setStrokeAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.strokeAlpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setStrokeAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('strokealpha');\n\telem.setAttribute('alpha', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setFillColor\n * \n * Sets the current fill color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFillColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tif (this.compressed)\n\t{\n\t\tif (this.state.fillColor == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setFillColor.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('fillcolor');\n\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setGradient\n * \n * Sets the gradient. Note that the coordinates may be ignored by some implementations.\n * \n * Parameters:\n * \n * color1 - Hexadecimal representation of the start color.\n * color2 - Hexadecimal representation of the end color.\n * x - X-coordinate of the gradient region.\n * y - y-coordinate of the gradient region.\n * w - Width of the gradient region.\n * h - Height of the gradient region.\n * direction - One of <mxConstants.DIRECTION_NORTH>, <mxConstants.DIRECTION_EAST>,\n * <mxConstants.DIRECTION_SOUTH> or <mxConstants.DIRECTION_WEST>.\n * alpha1 - Optional alpha of the start color. Default is 1. Possible values\n * are between 1 (opaque) and 0 (transparent).\n * alpha2 - Optional alpha of the end color. Default is 1. Possible values\n * are between 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setGradient = function(color1, color2, x, y, w, h, direction, alpha1, alpha2)\n{\n\tif (color1 != null && color2 != null)\n\t{\n\t\tmxAbstractCanvas2D.prototype.setGradient.apply(this, arguments);\n\t\t\n\t\tvar elem = this.createElement('gradient');\n\t\telem.setAttribute('c1', color1);\n\t\telem.setAttribute('c2', color2);\n\t\telem.setAttribute('x', this.format(x));\n\t\telem.setAttribute('y', this.format(y));\n\t\telem.setAttribute('w', this.format(w));\n\t\telem.setAttribute('h', this.format(h));\n\t\t\n\t\t// Default direction is south\n\t\tif (direction != null)\n\t\t{\n\t\t\telem.setAttribute('direction', direction);\n\t\t}\n\t\t\n\t\tif (alpha1 != null)\n\t\t{\n\t\t\telem.setAttribute('alpha1', alpha1);\n\t\t}\n\t\t\n\t\tif (alpha2 != null)\n\t\t{\n\t\t\telem.setAttribute('alpha2', alpha2);\n\t\t}\n\t\t\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setStrokeColor\n * \n * Sets the current stroke color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setStrokeColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tif (this.compressed)\n\t{\n\t\tif (this.state.strokeColor == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setStrokeColor.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('strokecolor');\n\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setStrokeWidth\n * \n * Sets the current stroke width.\n * \n * Parameters:\n * \n * value - Numeric representation of the stroke width.\n */\nmxXmlCanvas2D.prototype.setStrokeWidth = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.strokeWidth == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setStrokeWidth.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('strokewidth');\n\telem.setAttribute('width', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setDashed\n * \n * Enables or disables dashed lines.\n * \n * Parameters:\n * \n * value - Boolean that specifies if dashed lines should be enabled.\n * value - Boolean that specifies if the stroke width should be ignored\n * for the dash pattern. Default is false.\n */\nmxXmlCanvas2D.prototype.setDashed = function(value, fixDash)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.dashed == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setDashed.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('dashed');\n\telem.setAttribute('dashed', (value) ? '1' : '0');\n\t\n\tif (fixDash != null)\n\t{\n\t\telem.setAttribute('fixDash', (fixDash) ? '1' : '0');\n\t}\n\t\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setDashPattern\n * \n * Sets the current dash pattern. Default is '3 3'.\n * \n * Parameters:\n * \n * value - String that represents the dash pattern, which is a sequence of\n * numbers defining the length of the dashes and the length of the spaces\n * between the dashes. The lengths are relative to the line width - a length\n * of 1 is equals to the line width.\n */\nmxXmlCanvas2D.prototype.setDashPattern = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.dashPattern == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setDashPattern.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('dashpattern');\n\telem.setAttribute('pattern', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setLineCap\n * \n * Sets the line cap. Default is 'flat' which corresponds to 'butt' in SVG.\n * \n * Parameters:\n * \n * value - String that represents the line cap. Possible values are flat, round\n * and square.\n */\nmxXmlCanvas2D.prototype.setLineCap = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.lineCap == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setLineCap.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('linecap');\n\telem.setAttribute('cap', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setLineJoin\n * \n * Sets the line join. Default is 'miter'.\n * \n * Parameters:\n * \n * value - String that represents the line join. Possible values are miter,\n * round and bevel.\n */\nmxXmlCanvas2D.prototype.setLineJoin = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.lineJoin == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setLineJoin.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('linejoin');\n\telem.setAttribute('join', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setMiterLimit\n * \n * Sets the miter limit. Default is 10.\n * \n * Parameters:\n * \n * value - Number that represents the miter limit.\n */\nmxXmlCanvas2D.prototype.setMiterLimit = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.miterLimit == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setMiterLimit.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('miterlimit');\n\telem.setAttribute('limit', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color. Default is '#000000'.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFontColor = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontColor == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontColor.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontcolor');\n\t\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontBackgroundColor\n * \n * Sets the current font background color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFontBackgroundColor = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontBackgroundColor == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontBackgroundColor.apply(this, arguments);\n\t\t}\n\n\t\tvar elem = this.createElement('fontbackgroundcolor');\n\t\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontBorderColor\n * \n * Sets the current font border color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFontBorderColor = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontBorderColor == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontBorderColor.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontbordercolor');\n\t\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontSize\n * \n * Sets the current font size. Default is <mxConstants.DEFAULT_FONTSIZE>.\n * \n * Parameters:\n * \n * value - Numeric representation of the font size.\n */\nmxXmlCanvas2D.prototype.setFontSize = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontSize == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontSize.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontsize');\n\t\telem.setAttribute('size', value);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontFamily\n * \n * Sets the current font family. Default is <mxConstants.DEFAULT_FONTFAMILY>.\n * \n * Parameters:\n * \n * value - String representation of the font family. This handles the same\n * values as the CSS font-family property.\n */\nmxXmlCanvas2D.prototype.setFontFamily = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontFamily == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontFamily.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontfamily');\n\t\telem.setAttribute('family', value);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontStyle\n * \n * Sets the current font style.\n * \n * Parameters:\n * \n * value - Numeric representation of the font family. This is the sum of the\n * font styles from <mxConstants>.\n */\nmxXmlCanvas2D.prototype.setFontStyle = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = 0;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontStyle == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontStyle.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontstyle');\n\t\telem.setAttribute('style', value);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setShadow\n * \n * Enables or disables shadows.\n * \n * Parameters:\n * \n * value - Boolean that specifies if shadows should be enabled.\n */\nmxXmlCanvas2D.prototype.setShadow = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.shadow == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadow.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadow');\n\telem.setAttribute('enabled', (value) ? '1' : '0');\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setShadowColor\n * \n * Sets the current shadow color. Default is <mxConstants.SHADOWCOLOR>.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setShadowColor = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.state.shadowColor == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadowColor.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadowcolor');\n\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setShadowAlpha\n * \n * Sets the current shadows alpha. Default is <mxConstants.SHADOW_OPACITY>.\n * \n * Parameters:\n * \n * value - Number that represents the new alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setShadowAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.shadowAlpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadowAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadowalpha');\n\telem.setAttribute('alpha', value);\n\tthis.root.appendChild(elem);\n\t\n};\n\n/**\n * Function: setShadowOffset\n * \n * Sets the current shadow offset.\n * \n * Parameters:\n * \n * dx - Number that represents the horizontal offset of the shadow.\n * dy - Number that represents the vertical offset of the shadow.\n */\nmxXmlCanvas2D.prototype.setShadowOffset = function(dx, dy)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.shadowDx == dx && this.state.shadowDy == dy)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadowOffset.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadowoffset');\n\telem.setAttribute('dx', dx);\n\telem.setAttribute('dy', dy);\n\tthis.root.appendChild(elem);\n\t\n};\n\n/**\n * Function: rect\n * \n * Puts a rectangle into the drawing buffer.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the rectangle.\n * y - Number that represents the y-coordinate of the rectangle.\n * w - Number that represents the width of the rectangle.\n * h - Number that represents the height of the rectangle.\n */\nmxXmlCanvas2D.prototype.rect = function(x, y, w, h)\n{\n\tvar elem = this.createElement('rect');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: roundrect\n * \n * Puts a rounded rectangle into the drawing buffer.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the rectangle.\n * y - Number that represents the y-coordinate of the rectangle.\n * w - Number that represents the width of the rectangle.\n * h - Number that represents the height of the rectangle.\n * dx - Number that represents the horizontal rounding.\n * dy - Number that represents the vertical rounding.\n */\nmxXmlCanvas2D.prototype.roundrect = function(x, y, w, h, dx, dy)\n{\n\tvar elem = this.createElement('roundrect');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\telem.setAttribute('dx', this.format(dx));\n\telem.setAttribute('dy', this.format(dy));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: ellipse\n * \n * Puts an ellipse into the drawing buffer.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the ellipse.\n * y - Number that represents the y-coordinate of the ellipse.\n * w - Number that represents the width of the ellipse.\n * h - Number that represents the height of the ellipse.\n */\nmxXmlCanvas2D.prototype.ellipse = function(x, y, w, h)\n{\n\tvar elem = this.createElement('ellipse');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: image\n * \n * Paints an image.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the image.\n * y - Number that represents the y-coordinate of the image.\n * w - Number that represents the width of the image.\n * h - Number that represents the height of the image.\n * src - String that specifies the URL of the image.\n * aspect - Boolean indicating if the aspect of the image should be preserved.\n * flipH - Boolean indicating if the image should be flipped horizontally.\n * flipV - Boolean indicating if the image should be flipped vertically.\n */\nmxXmlCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n{\n\tsrc = this.converter.convert(src);\n\t\n\t// LATER: Add option for embedding images as base64.\n\tvar elem = this.createElement('image');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\telem.setAttribute('src', src);\n\telem.setAttribute('aspect', (aspect) ? '1' : '0');\n\telem.setAttribute('flipH', (flipH) ? '1' : '0');\n\telem.setAttribute('flipV', (flipV) ? '1' : '0');\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: begin\n * \n * Starts a new path and puts it into the drawing buffer.\n */\nmxXmlCanvas2D.prototype.begin = function()\n{\n\tthis.root.appendChild(this.createElement('begin'));\n\tthis.lastX = 0;\n\tthis.lastY = 0;\n};\n\n/**\n * Function: moveTo\n * \n * Moves the current path the given point.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the point.\n * y - Number that represents the y-coordinate of the point.\n */\nmxXmlCanvas2D.prototype.moveTo = function(x, y)\n{\n\tvar elem = this.createElement('move');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x;\n\tthis.lastY = y;\n};\n\n/**\n * Function: lineTo\n * \n * Draws a line to the given coordinates.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the endpoint.\n * y - Number that represents the y-coordinate of the endpoint.\n */\nmxXmlCanvas2D.prototype.lineTo = function(x, y)\n{\n\tvar elem = this.createElement('line');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x;\n\tthis.lastY = y;\n};\n\n/**\n * Function: quadTo\n * \n * Adds a quadratic curve to the current path.\n * \n * Parameters:\n * \n * x1 - Number that represents the x-coordinate of the control point.\n * y1 - Number that represents the y-coordinate of the control point.\n * x2 - Number that represents the x-coordinate of the endpoint.\n * y2 - Number that represents the y-coordinate of the endpoint.\n */\nmxXmlCanvas2D.prototype.quadTo = function(x1, y1, x2, y2)\n{\n\tvar elem = this.createElement('quad');\n\telem.setAttribute('x1', this.format(x1));\n\telem.setAttribute('y1', this.format(y1));\n\telem.setAttribute('x2', this.format(x2));\n\telem.setAttribute('y2', this.format(y2));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x2;\n\tthis.lastY = y2;\n};\n\n/**\n * Function: curveTo\n * \n * Adds a bezier curve to the current path.\n * \n * Parameters:\n * \n * x1 - Number that represents the x-coordinate of the first control point.\n * y1 - Number that represents the y-coordinate of the first control point.\n * x2 - Number that represents the x-coordinate of the second control point.\n * y2 - Number that represents the y-coordinate of the second control point.\n * x3 - Number that represents the x-coordinate of the endpoint.\n * y3 - Number that represents the y-coordinate of the endpoint.\n */\nmxXmlCanvas2D.prototype.curveTo = function(x1, y1, x2, y2, x3, y3)\n{\n\tvar elem = this.createElement('curve');\n\telem.setAttribute('x1', this.format(x1));\n\telem.setAttribute('y1', this.format(y1));\n\telem.setAttribute('x2', this.format(x2));\n\telem.setAttribute('y2', this.format(y2));\n\telem.setAttribute('x3', this.format(x3));\n\telem.setAttribute('y3', this.format(y3));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x3;\n\tthis.lastY = y3;\n};\n\n/**\n * Function: close\n * \n * Closes the current path.\n */\nmxXmlCanvas2D.prototype.close = function()\n{\n\tthis.root.appendChild(this.createElement('close'));\n};\n\n/**\n * Function: text\n * \n * Paints the given text. Possible values for format are empty string for\n * plain text and html for HTML markup. Background and border color as well\n * as clipping is not available in plain text labels for VML. HTML labels\n * are not available as part of shapes with no foreignObject support in SVG\n * (eg. IE9, IE10).\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the text.\n * y - Number that represents the y-coordinate of the text.\n * w - Number that represents the available width for the text or 0 for automatic width.\n * h - Number that represents the available height for the text or 0 for automatic height.\n * str - String that specifies the text to be painted.\n * align - String that represents the horizontal alignment.\n * valign - String that represents the vertical alignment.\n * wrap - Boolean that specifies if word-wrapping is enabled. Requires w > 0.\n * format - Empty string for plain text or 'html' for HTML markup.\n * overflow - Specifies the overflow behaviour of the label. Requires w > 0 and/or h > 0.\n * clip - Boolean that specifies if the label should be clipped. Requires w > 0 and/or h > 0.\n * rotation - Number that specifies the angle of the rotation around the anchor point of the text.\n * dir - Optional string that specifies the text direction. Possible values are rtl and lrt.\n */\nmxXmlCanvas2D.prototype.text = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\tif (this.textEnabled && str != null)\n\t{\n\t\tif (mxUtils.isNode(str))\n\t\t{\n\t\t\tstr = mxUtils.getOuterHtml(str);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('text');\n\t\telem.setAttribute('x', this.format(x));\n\t\telem.setAttribute('y', this.format(y));\n\t\telem.setAttribute('w', this.format(w));\n\t\telem.setAttribute('h', this.format(h));\n\t\telem.setAttribute('str', str);\n\t\t\n\t\tif (align != null)\n\t\t{\n\t\t\telem.setAttribute('align', align);\n\t\t}\n\t\t\n\t\tif (valign != null)\n\t\t{\n\t\t\telem.setAttribute('valign', valign);\n\t\t}\n\t\t\n\t\telem.setAttribute('wrap', (wrap) ? '1' : '0');\n\t\t\n\t\tif (format == null)\n\t\t{\n\t\t\tformat = '';\n\t\t}\n\t\t\n\t\telem.setAttribute('format', format);\n\t\t\n\t\tif (overflow != null)\n\t\t{\n\t\t\telem.setAttribute('overflow', overflow);\n\t\t}\n\t\t\n\t\tif (clip != null)\n\t\t{\n\t\t\telem.setAttribute('clip', (clip) ? '1' : '0');\n\t\t}\n\t\t\n\t\tif (rotation != null)\n\t\t{\n\t\t\telem.setAttribute('rotation', rotation);\n\t\t}\n\t\t\n\t\tif (dir != null)\n\t\t{\n\t\t\telem.setAttribute('dir', dir);\n\t\t}\n\t\t\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: stroke\n * \n * Paints the outline of the current drawing buffer.\n */\nmxXmlCanvas2D.prototype.stroke = function()\n{\n\tthis.root.appendChild(this.createElement('stroke'));\n};\n\n/**\n * Function: fill\n * \n * Fills the current drawing buffer.\n */\nmxXmlCanvas2D.prototype.fill = function()\n{\n\tthis.root.appendChild(this.createElement('fill'));\n};\n\n/**\n * Function: fillAndStroke\n * \n * Fills the current drawing buffer and its outline.\n */\nmxXmlCanvas2D.prototype.fillAndStroke = function()\n{\n\tthis.root.appendChild(this.createElement('fillstroke'));\n};\n\n__mxOutput.mxXmlCanvas2D = typeof mxXmlCanvas2D !== 'undefined' ? mxXmlCanvas2D : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSvgCanvas2D\n *\n * Extends <mxAbstractCanvas2D> to implement a canvas for SVG. This canvas writes all\n * calls as SVG output to the given SVG root node.\n * \n * (code)\n * var svgDoc = mxUtils.createXmlDocument();\n * var root = (svgDoc.createElementNS != null) ?\n * \t\tsvgDoc.createElementNS(mxConstants.NS_SVG, 'svg') : svgDoc.createElement('svg');\n * \n * if (svgDoc.createElementNS == null)\n * {\n *   root.setAttribute('xmlns', mxConstants.NS_SVG);\n *   root.setAttribute('xmlns:xlink', mxConstants.NS_XLINK);\n * }\n * else\n * {\n *   root.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', mxConstants.NS_XLINK);\n * }\n * \n * var bounds = graph.getGraphBounds();\n * root.setAttribute('width', (bounds.x + bounds.width + 4) + 'px');\n * root.setAttribute('height', (bounds.y + bounds.height + 4) + 'px');\n * root.setAttribute('version', '1.1');\n * \n * svgDoc.appendChild(root);\n * \n * var svgCanvas = new mxSvgCanvas2D(root);\n * (end)\n * \n * A description of the public API is available in <mxXmlCanvas2D>.\n * \n * To disable anti-aliasing in the output, use the following code.\n * \n * (code)\n * graph.view.canvas.ownerSVGElement.setAttribute('shape-rendering', 'crispEdges');\n * (end)\n * \n * Or set the respective attribute in the SVG element directly.\n * \n * Constructor: mxSvgCanvas2D\n *\n * Constructs a new SVG canvas.\n * \n * Parameters:\n * \n * root - SVG container for the output.\n * styleEnabled - Optional boolean that specifies if a style section should be\n * added. The style section sets the default font-size, font-family and\n * stroke-miterlimit globally. Default is false.\n */\nfunction mxSvgCanvas2D(root, styleEnabled)\n{\n\tmxAbstractCanvas2D.call(this);\n\n\t/**\n\t * Variable: root\n\t * \n\t * Reference to the container for the SVG content.\n\t */\n\tthis.root = root;\n\n\t/**\n\t * Variable: gradients\n\t * \n\t * Local cache of gradients for quick lookups.\n\t */\n\tthis.gradients = [];\n\n\t/**\n\t * Variable: defs\n\t * \n\t * Reference to the defs section of the SVG document. Only for export.\n\t */\n\tthis.defs = null;\n\t\n\t/**\n\t * Variable: styleEnabled\n\t * \n\t * Stores the value of styleEnabled passed to the constructor.\n\t */\n\tthis.styleEnabled = (styleEnabled != null) ? styleEnabled : false;\n\t\n\tvar svg = null;\n\t\n\t// Adds optional defs section for export\n\tif (root.ownerDocument != document)\n\t{\n\t\tvar node = root;\n\n\t\t// Finds owner SVG element in XML DOM\n\t\twhile (node != null && node.nodeName != 'svg')\n\t\t{\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\t\n\t\tsvg = node;\n\t}\n\n\tif (svg != null)\n\t{\n\t\t// Tries to get existing defs section\n\t\tvar tmp = svg.getElementsByTagName('defs');\n\t\t\n\t\tif (tmp.length > 0)\n\t\t{\n\t\t\tthis.defs = svg.getElementsByTagName('defs')[0];\n\t\t}\n\t\t\n\t\t// Adds defs section if none exists\n\t\tif (this.defs == null)\n\t\t{\n\t\t\tthis.defs = this.createElement('defs');\n\t\t\t\n\t\t\tif (svg.firstChild != null)\n\t\t\t{\n\t\t\t\tsvg.insertBefore(this.defs, svg.firstChild);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsvg.appendChild(this.defs);\n\t\t\t}\n\t\t}\n\n\t\t// Adds stylesheet\n\t\tif (this.styleEnabled)\n\t\t{\n\t\t\tthis.defs.appendChild(this.createStyle());\n\t\t}\n\t}\n};\n\n/**\n * Extends mxAbstractCanvas2D\n */\nmxUtils.extend(mxSvgCanvas2D, mxAbstractCanvas2D);\n\n/**\n * Capability check for DOM parser and checks if base tag is used.\n */\n(function()\n{\n\tmxSvgCanvas2D.prototype.useDomParser = !mxClient.IS_IE && typeof DOMParser === 'function' && typeof XMLSerializer === 'function';\n\t\n\tif (mxSvgCanvas2D.prototype.useDomParser)\n\t{\n\t\t// Checks using a generic test text if the parsing actually works. This is a workaround\n\t\t// for older browsers where the capability check returns true but the parsing fails.\n\t\ttry\n\t\t{\n\t\t\tvar doc = new DOMParser().parseFromString('test text', 'text/html');\n\t\t\tmxSvgCanvas2D.prototype.useDomParser = doc != null;\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tmxSvgCanvas2D.prototype.useDomParser = false;\n\t\t}\n\t}\n\t\n\t// Activates workaround for gradient ID resolution if base tag is used.\n\tmxSvgCanvas2D.prototype.useAbsoluteIds = !mxClient.IS_CHROMEAPP && !mxClient.IS_IE && !mxClient.IS_IE11 &&\n\t\t!mxClient.IS_EDGE && document.getElementsByTagName('base').length > 0;\n})();\n\n/**\n * Variable: path\n * \n * Holds the current DOM node.\n */\nmxSvgCanvas2D.prototype.node = null;\n\n/**\n * Variable: matchHtmlAlignment\n * \n * Specifies if plain text output should match the vertical HTML alignment.\n * Defaul is true.\n */\nmxSvgCanvas2D.prototype.matchHtmlAlignment = true;\n\n/**\n * Variable: textEnabled\n * \n * Specifies if text output should be enabled. Default is true.\n */\nmxSvgCanvas2D.prototype.textEnabled = true;\n\n/**\n * Variable: foEnabled\n * \n * Specifies if use of foreignObject for HTML markup is allowed. Default is true.\n */\nmxSvgCanvas2D.prototype.foEnabled = true;\n\n/**\n * Variable: foAltText\n * \n * Specifies the fallback text for unsupported foreignObjects in exported\n * documents. Default is '[Object]'. If this is set to null then no fallback\n * text is added to the exported document.\n */\nmxSvgCanvas2D.prototype.foAltText = '[Object]';\n\n/**\n * Variable: foOffset\n * \n * Offset to be used for foreignObjects.\n */\nmxSvgCanvas2D.prototype.foOffset = 0;\n\n/**\n * Variable: textOffset\n * \n * Offset to be used for text elements.\n */\nmxSvgCanvas2D.prototype.textOffset = 0;\n\n/**\n * Variable: imageOffset\n * \n * Offset to be used for image elements.\n */\nmxSvgCanvas2D.prototype.imageOffset = 0;\n\n/**\n * Variable: strokeTolerance\n * \n * Adds transparent paths for strokes.\n */\nmxSvgCanvas2D.prototype.strokeTolerance = 0;\n\n/**\n * Variable: minStrokeWidth\n * \n * Minimum stroke width for output.\n */\nmxSvgCanvas2D.prototype.minStrokeWidth = 1;\n\n/**\n * Variable: refCount\n * \n * Local counter for references in SVG export.\n */\nmxSvgCanvas2D.prototype.refCount = 0;\n\n/**\n * Variable: lineHeightCorrection\n * \n * Correction factor for <mxConstants.LINE_HEIGHT> in HTML output. Default is 1.\n */\nmxSvgCanvas2D.prototype.lineHeightCorrection = 1;\n\n/**\n * Variable: pointerEventsValue\n * \n * Default value for active pointer events. Default is all.\n */\nmxSvgCanvas2D.prototype.pointerEventsValue = 'all';\n\n/**\n * Variable: fontMetricsPadding\n * \n * Padding to be added for text that is not wrapped to account for differences\n * in font metrics on different platforms in pixels. Default is 10.\n */\nmxSvgCanvas2D.prototype.fontMetricsPadding = 10;\n\n/**\n * Variable: cacheOffsetSize\n * \n * Specifies if offsetWidth and offsetHeight should be cached. Default is true.\n * This is used to speed up repaint of text in <updateText>.\n */\nmxSvgCanvas2D.prototype.cacheOffsetSize = true;\n\n/**\n * Function: format\n * \n * Rounds all numbers to 2 decimal points.\n */\nmxSvgCanvas2D.prototype.format = function(value)\n{\n\treturn parseFloat(parseFloat(value).toFixed(2));\n};\n\n/**\n * Function: getBaseUrl\n * \n * Returns the URL of the page without the hash part. This needs to use href to\n * include any search part with no params (ie question mark alone). This is a\n * workaround for the fact that window.location.search is empty if there is\n * no search string behind the question mark.\n */\nmxSvgCanvas2D.prototype.getBaseUrl = function()\n{\n\tvar href = window.location.href;\n\tvar hash = href.lastIndexOf('#');\n\t\n\tif (hash > 0)\n\t{\n\t\thref = href.substring(0, hash);\n\t}\n\t\n\treturn href;\n};\n\n/**\n * Function: reset\n * \n * Returns any offsets for rendering pixels.\n */\nmxSvgCanvas2D.prototype.reset = function()\n{\n\tmxAbstractCanvas2D.prototype.reset.apply(this, arguments);\n\tthis.gradients = [];\n};\n\n/**\n * Function: createStyle\n * \n * Creates the optional style section.\n */\nmxSvgCanvas2D.prototype.createStyle = function(x)\n{\n\tvar style = this.createElement('style');\n\tstyle.setAttribute('type', 'text/css');\n\tmxUtils.write(style, 'svg{font-family:' + mxConstants.DEFAULT_FONTFAMILY +\n\t\t\t';font-size:' + mxConstants.DEFAULT_FONTSIZE +\n\t\t\t';fill:none;stroke-miterlimit:10}');\n\t\n\treturn style;\n};\n\n/**\n * Function: createElement\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.createElement = function(tagName, namespace)\n{\n\tif (this.root.ownerDocument.createElementNS != null)\n\t{\n\t\treturn this.root.ownerDocument.createElementNS(namespace || mxConstants.NS_SVG, tagName);\n\t}\n\telse\n\t{\n\t\tvar elt = this.root.ownerDocument.createElement(tagName);\n\t\t\n\t\tif (namespace != null)\n\t\t{\n\t\t\telt.setAttribute('xmlns', namespace);\n\t\t}\n\t\t\n\t\treturn elt;\n\t}\n};\n\n/**\n * Function: getAlternateText\n * \n * Returns the alternate text string for the given foreignObject.\n */\nmxSvgCanvas2D.prototype.getAlternateText = function(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation)\n{\n\treturn (str != null) ? this.foAltText : null;\n};\n\n/**\n * Function: getAlternateContent\n * \n * Returns the alternate content for the given foreignObject.\n */\nmxSvgCanvas2D.prototype.createAlternateContent = function(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation)\n{\n\tvar text = this.getAlternateText(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation);\n\tvar s = this.state;\n\n\tif (text != null && s.fontSize > 0)\n\t{\n\t\tvar dy = (valign == mxConstants.ALIGN_TOP) ? 1 :\n\t\t\t(valign == mxConstants.ALIGN_BOTTOM) ? 0 : 0.3;\n\t\tvar anchor = (align == mxConstants.ALIGN_RIGHT) ? 'end' :\n\t\t\t(align == mxConstants.ALIGN_LEFT) ? 'start' :\n\t\t\t'middle';\n\t\n\t\tvar alt = this.createElement('text');\n\t\talt.setAttribute('x', Math.round(x + s.dx));\n\t\talt.setAttribute('y', Math.round(y + s.dy + dy * s.fontSize));\n\t\talt.setAttribute('fill', s.fontColor || 'black');\n\t\talt.setAttribute('font-family', s.fontFamily);\n\t\talt.setAttribute('font-size', Math.round(s.fontSize) + 'px');\n\n\t\t// Text-anchor start is default in SVG\n\t\tif (anchor != 'start')\n\t\t{\n\t\t\talt.setAttribute('text-anchor', anchor);\n\t\t}\n\t\t\n\t\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t\t{\n\t\t\talt.setAttribute('font-weight', 'bold');\n\t\t}\n\t\t\n\t\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t\t{\n\t\t\talt.setAttribute('font-style', 'italic');\n\t\t}\n\t\t\n\t\tvar txtDecor = [];\n\t\t\n\t\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t\t{\n\t\t\ttxtDecor.push('underline');\n\t\t}\n\t\t\n\t\tif ((s.fontStyle & mxConstants.FONT_STRIKETHROUGH) == mxConstants.FONT_STRIKETHROUGH)\n\t\t{\n\t\t\ttxtDecor.push('line-through');\n\t\t}\n\t\t\n\t\tif (txtDecor.length > 0)\n\t\t{\n\t\t\talt.setAttribute('text-decoration', txtDecor.join(' '));\n\t\t}\n\t\t\n\t\tmxUtils.write(alt, text);\n\t\t\n\t\treturn alt;\n\t}\n\telse\n\t{\n\t\treturn null;\n\t}\n};\n\n/**\n * Function: createGradientId\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.createGradientId = function(start, end, alpha1, alpha2, direction)\n{\n\t// Removes illegal characters from gradient ID\n\tif (start.charAt(0) == '#')\n\t{\n\t\tstart = start.substring(1);\n\t}\n\t\n\tif (end.charAt(0) == '#')\n\t{\n\t\tend = end.substring(1);\n\t}\n\t\n\t// Workaround for gradient IDs not working in Safari 5 / Chrome 6\n\t// if they contain uppercase characters\n\tstart = start.toLowerCase() + '-' + alpha1;\n\tend = end.toLowerCase() + '-' + alpha2;\n\n\t// Wrong gradient directions possible?\n\tvar dir = null;\n\t\n\tif (direction == null || direction == mxConstants.DIRECTION_SOUTH)\n\t{\n\t\tdir = 's';\n\t}\n\telse if (direction == mxConstants.DIRECTION_EAST)\n\t{\n\t\tdir = 'e';\n\t}\n\telse\n\t{\n\t\tvar tmp = start;\n\t\tstart = end;\n\t\tend = tmp;\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tdir = 's';\n\t\t}\n\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tdir = 'e';\n\t\t}\n\t}\n\t\n\treturn 'mx-gradient-' + start + '-' + end + '-' + dir;\n};\n\n/**\n * Function: getSvgGradient\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.getSvgGradient = function(start, end, alpha1, alpha2, direction)\n{\n\tvar id = this.createGradientId(start, end, alpha1, alpha2, direction);\n\tvar gradient = this.gradients[id];\n\t\n\tif (gradient == null)\n\t{\n\t\tvar svg = this.root.ownerSVGElement;\n\n\t\tvar counter = 0;\n\t\tvar tmpId = id + '-' + counter;\n\n\t\tif (svg != null)\n\t\t{\n\t\t\tgradient = svg.ownerDocument.getElementById(tmpId);\n\t\t\t\n\t\t\twhile (gradient != null && gradient.ownerSVGElement != svg)\n\t\t\t{\n\t\t\t\ttmpId = id + '-' + counter++;\n\t\t\t\tgradient = svg.ownerDocument.getElementById(tmpId);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Uses shorter IDs for export\n\t\t\ttmpId = 'id' + (++this.refCount);\n\t\t}\n\t\t\n\t\tif (gradient == null)\n\t\t{\n\t\t\tgradient = this.createSvgGradient(start, end, alpha1, alpha2, direction);\n\t\t\tgradient.setAttribute('id', tmpId);\n\t\t\t\n\t\t\tif (this.defs != null)\n\t\t\t{\n\t\t\t\tthis.defs.appendChild(gradient);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsvg.appendChild(gradient);\n\t\t\t}\n\t\t}\n\n\t\tthis.gradients[id] = gradient;\n\t}\n\n\treturn gradient.getAttribute('id');\n};\n\n/**\n * Function: createSvgGradient\n * \n * Creates the given SVG gradient.\n */\nmxSvgCanvas2D.prototype.createSvgGradient = function(start, end, alpha1, alpha2, direction)\n{\n\tvar gradient = this.createElement('linearGradient');\n\tgradient.setAttribute('x1', '0%');\n\tgradient.setAttribute('y1', '0%');\n\tgradient.setAttribute('x2', '0%');\n\tgradient.setAttribute('y2', '0%');\n\t\n\tif (direction == null || direction == mxConstants.DIRECTION_SOUTH)\n\t{\n\t\tgradient.setAttribute('y2', '100%');\n\t}\n\telse if (direction == mxConstants.DIRECTION_EAST)\n\t{\n\t\tgradient.setAttribute('x2', '100%');\n\t}\n\telse if (direction == mxConstants.DIRECTION_NORTH)\n\t{\n\t\tgradient.setAttribute('y1', '100%');\n\t}\n\telse if (direction == mxConstants.DIRECTION_WEST)\n\t{\n\t\tgradient.setAttribute('x1', '100%');\n\t}\n\t\n\tvar op = (alpha1 < 1) ? ';stop-opacity:' + alpha1 : '';\n\t\n\tvar stop = this.createElement('stop');\n\tstop.setAttribute('offset', '0%');\n\tstop.setAttribute('style', 'stop-color:' + start + op);\n\tgradient.appendChild(stop);\n\t\n\top = (alpha2 < 1) ? ';stop-opacity:' + alpha2 : '';\n\t\n\tstop = this.createElement('stop');\n\tstop.setAttribute('offset', '100%');\n\tstop.setAttribute('style', 'stop-color:' + end + op);\n\tgradient.appendChild(stop);\n\t\n\treturn gradient;\n};\n\n/**\n * Function: addNode\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.addNode = function(filled, stroked)\n{\n\tvar node = this.node;\n\tvar s = this.state;\n\n\tif (node != null)\n\t{\n\t\tif (node.nodeName == 'path')\n\t\t{\n\t\t\t// Checks if the path is not empty\n\t\t\tif (this.path != null && this.path.length > 0)\n\t\t\t{\n\t\t\t\tnode.setAttribute('d', this.path.join(' '));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (filled && s.fillColor != null)\n\t\t{\n\t\t\tthis.updateFill();\n\t\t}\n\t\telse if (!this.styleEnabled)\n\t\t{\n\t\t\t// Workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=814952\n\t\t\tif (node.nodeName == 'ellipse' && mxClient.IS_FF)\n\t\t\t{\n\t\t\t\tnode.setAttribute('fill', 'transparent');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnode.setAttribute('fill', 'none');\n\t\t\t}\n\t\t\t\n\t\t\t// Sets the actual filled state for stroke tolerance\n\t\t\tfilled = false;\n\t\t}\n\t\t\n\t\tif (stroked && s.strokeColor != null)\n\t\t{\n\t\t\tthis.updateStroke();\n\t\t}\n\t\telse if (!this.styleEnabled)\n\t\t{\n\t\t\tnode.setAttribute('stroke', 'none');\n\t\t}\n\t\t\n\t\tif (s.transform != null && s.transform.length > 0)\n\t\t{\n\t\t\tnode.setAttribute('transform', s.transform);\n\t\t}\n\t\t\n\t\tif (s.shadow)\n\t\t{\n\t\t\tthis.root.appendChild(this.createShadow(node));\n\t\t}\n\t\n\t\t// Adds stroke tolerance\n\t\tif (this.strokeTolerance > 0 && !filled)\n\t\t{\n\t\t\tthis.root.appendChild(this.createTolerance(node));\n\t\t}\n\n\t\t// Adds pointer events\n\t\tif (this.pointerEvents)\n\t\t{\n\t\t\tnode.setAttribute('pointer-events', this.pointerEventsValue);\n\t\t}\n\t\t// Enables clicks for nodes inside a link element\n\t\telse if (!this.pointerEvents && this.originalRoot == null)\n\t\t{\n\t\t\tnode.setAttribute('pointer-events', 'none');\n\t\t}\n\t\t\n\t\t// Removes invisible nodes from output if they don't handle events\n\t\tif ((node.nodeName != 'rect' && node.nodeName != 'path' && node.nodeName != 'ellipse') ||\n\t\t\t(node.getAttribute('fill') != 'none' && node.getAttribute('fill') != 'transparent') ||\n\t\t\tnode.getAttribute('stroke') != 'none' || node.getAttribute('pointer-events') != 'none')\n\t\t{\n\t\t\t// LATER: Update existing DOM for performance\t\t\n\t\t\tthis.root.appendChild(node);\n\t\t}\n\t\t\n\t\tthis.node = null;\n\t}\n};\n\n/**\n * Function: updateFill\n * \n * Transfers the stroke attributes from <state> to <node>.\n */\nmxSvgCanvas2D.prototype.updateFill = function()\n{\n\tvar s = this.state;\n\t\n\tif (s.alpha < 1 || s.fillAlpha < 1)\n\t{\n\t\tthis.node.setAttribute('fill-opacity', s.alpha * s.fillAlpha);\n\t}\n\t\n\tif (s.fillColor != null)\n\t{\n\t\tif (s.gradientColor != null)\n\t\t{\n\t\t\tvar id = this.getSvgGradient(String(s.fillColor), String(s.gradientColor),\n\t\t\t\ts.gradientFillAlpha, s.gradientAlpha, s.gradientDirection);\n\t\t\t\n\t\t\tif (this.root.ownerDocument == document && this.useAbsoluteIds)\n\t\t\t{\n\t\t\t\t// Workaround for no fill with base tag in page (escape brackets)\n\t\t\t\tvar base = this.getBaseUrl().replace(/([\\(\\)])/g, '\\\\$1');\n\t\t\t\tthis.node.setAttribute('fill', 'url(' + base + '#' + id + ')');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.node.setAttribute('fill', 'url(#' + id + ')');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.node.setAttribute('fill', String(s.fillColor).toLowerCase());\n\t\t}\n\t}\n};\n\n/**\n * Function: getCurrentStrokeWidth\n * \n * Returns the current stroke width (>= 1), ie. max(1, this.format(this.state.strokeWidth * this.state.scale)).\n */\nmxSvgCanvas2D.prototype.getCurrentStrokeWidth = function()\n{\n\treturn Math.max(this.minStrokeWidth, Math.max(0.01, this.format(this.state.strokeWidth * this.state.scale)));\n};\n\n/**\n * Function: updateStroke\n * \n * Transfers the stroke attributes from <state> to <node>.\n */\nmxSvgCanvas2D.prototype.updateStroke = function()\n{\n\tvar s = this.state;\n\n\tthis.node.setAttribute('stroke', String(s.strokeColor).toLowerCase());\n\t\n\tif (s.alpha < 1 || s.strokeAlpha < 1)\n\t{\n\t\tthis.node.setAttribute('stroke-opacity', s.alpha * s.strokeAlpha);\n\t}\n\t\n\tvar sw = this.getCurrentStrokeWidth();\n\t\n\tif (sw != 1)\n\t{\n\t\tthis.node.setAttribute('stroke-width', sw);\n\t}\n\t\n\tif (this.node.nodeName == 'path')\n\t{\n\t\tthis.updateStrokeAttributes();\n\t}\n\t\n\tif (s.dashed)\n\t{\n\t\tthis.node.setAttribute('stroke-dasharray', this.createDashPattern(\n\t\t\t((s.fixDash) ? 1 : s.strokeWidth) * s.scale));\n\t}\n};\n\n/**\n * Function: updateStrokeAttributes\n * \n * Transfers the stroke attributes from <state> to <node>.\n */\nmxSvgCanvas2D.prototype.updateStrokeAttributes = function()\n{\n\tvar s = this.state;\n\t\n\t// Linejoin miter is default in SVG\n\tif (s.lineJoin != null && s.lineJoin != 'miter')\n\t{\n\t\tthis.node.setAttribute('stroke-linejoin', s.lineJoin);\n\t}\n\t\n\tif (s.lineCap != null)\n\t{\n\t\t// flat is called butt in SVG\n\t\tvar value = s.lineCap;\n\t\t\n\t\tif (value == 'flat')\n\t\t{\n\t\t\tvalue = 'butt';\n\t\t}\n\t\t\n\t\t// Linecap butt is default in SVG\n\t\tif (value != 'butt')\n\t\t{\n\t\t\tthis.node.setAttribute('stroke-linecap', value);\n\t\t}\n\t}\n\t\n\t// Miterlimit 10 is default in our document\n\tif (s.miterLimit != null && (!this.styleEnabled || s.miterLimit != 10))\n\t{\n\t\tthis.node.setAttribute('stroke-miterlimit', s.miterLimit);\n\t}\n};\n\n/**\n * Function: createDashPattern\n * \n * Creates the SVG dash pattern for the given state.\n */\nmxSvgCanvas2D.prototype.createDashPattern = function(scale)\n{\n\tvar pat = [];\n\t\n\tif (typeof(this.state.dashPattern) === 'string')\n\t{\n\t\tvar dash = this.state.dashPattern.split(' ');\n\t\t\n\t\tif (dash.length > 0)\n\t\t{\n\t\t\tfor (var i = 0; i < dash.length; i++)\n\t\t\t{\n\t\t\t\tpat[i] = Number(dash[i]) * scale;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn pat.join(' ');\n};\n\n/**\n * Function: createTolerance\n * \n * Creates a hit detection tolerance shape for the given node.\n */\nmxSvgCanvas2D.prototype.createTolerance = function(node)\n{\n\tvar tol = node.cloneNode(true);\n\tvar sw = parseFloat(tol.getAttribute('stroke-width') || 1) + this.strokeTolerance;\n\ttol.setAttribute('pointer-events', 'stroke');\n\ttol.setAttribute('visibility', 'hidden');\n\ttol.removeAttribute('stroke-dasharray');\n\ttol.setAttribute('stroke-width', sw);\n\ttol.setAttribute('fill', 'none');\n\t\n\t// Workaround for Opera ignoring the visiblity attribute above while\n\t// other browsers need a stroke color to perform the hit-detection but\n\t// do not ignore the visibility attribute. Side-effect is that Opera's\n\t// hit detection for horizontal/vertical edges seems to ignore the tol.\n\ttol.setAttribute('stroke', (mxClient.IS_OT) ? 'none' : 'white');\n\t\n\treturn tol;\n};\n\n/**\n * Function: createShadow\n * \n * Creates a shadow for the given node.\n */\nmxSvgCanvas2D.prototype.createShadow = function(node)\n{\n\tvar shadow = node.cloneNode(true);\n\tvar s = this.state;\n\n\t// Firefox uses transparent for no fill in ellipses\n\tif (shadow.getAttribute('fill') != 'none' && (!mxClient.IS_FF || shadow.getAttribute('fill') != 'transparent'))\n\t{\n\t\tshadow.setAttribute('fill', s.shadowColor);\n\t}\n\t\n\tif (shadow.getAttribute('stroke') != 'none')\n\t{\n\t\tshadow.setAttribute('stroke', s.shadowColor);\n\t}\n\n\tshadow.setAttribute('transform', 'translate(' + this.format(s.shadowDx * s.scale) +\n\t\t',' + this.format(s.shadowDy * s.scale) + ')' + (s.transform || ''));\n\tshadow.setAttribute('opacity', s.shadowAlpha);\n\t\n\treturn shadow;\n};\n\n/**\n * Function: setLink\n * \n * Experimental implementation for hyperlinks.\n */\nmxSvgCanvas2D.prototype.setLink = function(link)\n{\n\tif (link == null)\n\t{\n\t\tthis.root = this.originalRoot;\n\t}\n\telse\n\t{\n\t\tthis.originalRoot = this.root;\n\t\t\n\t\tvar node = this.createElement('a');\n\t\t\n\t\t// Workaround for implicit namespace handling in HTML5 export, IE adds NS1 namespace so use code below\n\t\t// in all IE versions except quirks mode. KNOWN: Adds xlink namespace to each image tag in output.\n\t\tif (node.setAttributeNS == null || (this.root.ownerDocument != document && document.documentMode == null))\n\t\t{\n\t\t\tnode.setAttribute('xlink:href', link);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.setAttributeNS(mxConstants.NS_XLINK, 'xlink:href', link);\n\t\t}\n\t\t\n\t\tthis.root.appendChild(node);\n\t\tthis.root = node;\n\t}\n};\n\n/**\n * Function: rotate\n * \n * Sets the rotation of the canvas. Note that rotation cannot be concatenated.\n */\nmxSvgCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\tif (theta != 0 || flipH || flipV)\n\t{\n\t\tvar s = this.state;\n\t\tcx += s.dx;\n\t\tcy += s.dy;\n\t\n\t\tcx *= s.scale;\n\t\tcy *= s.scale;\n\n\t\ts.transform = s.transform || '';\n\t\t\n\t\t// This implementation uses custom scale/translate and built-in rotation\n\t\t// Rotation state is part of the AffineTransform in state.transform\n\t\tif (flipH && flipV)\n\t\t{\n\t\t\ttheta += 180;\n\t\t}\n\t\telse if (flipH != flipV)\n\t\t{\n\t\t\tvar tx = (flipH) ? cx : 0;\n\t\t\tvar sx = (flipH) ? -1 : 1;\n\t\n\t\t\tvar ty = (flipV) ? cy : 0;\n\t\t\tvar sy = (flipV) ? -1 : 1;\n\n\t\t\ts.transform += 'translate(' + this.format(tx) + ',' + this.format(ty) + ')' +\n\t\t\t\t'scale(' + this.format(sx) + ',' + this.format(sy) + ')' +\n\t\t\t\t'translate(' + this.format(-tx) + ',' + this.format(-ty) + ')';\n\t\t}\n\t\t\n\t\tif (flipH ? !flipV : flipV)\n\t\t{\n\t\t\ttheta *= -1;\n\t\t}\n\t\t\n\t\tif (theta != 0)\n\t\t{\n\t\t\ts.transform += 'rotate(' + this.format(theta) + ',' + this.format(cx) + ',' + this.format(cy) + ')';\n\t\t}\n\t\t\n\t\ts.rotation = s.rotation + theta;\n\t\ts.rotationCx = cx;\n\t\ts.rotationCy = cy;\n\t}\n};\n\n/**\n * Function: begin\n * \n * Extends superclass to create path.\n */\nmxSvgCanvas2D.prototype.begin = function()\n{\n\tmxAbstractCanvas2D.prototype.begin.apply(this, arguments);\n\tthis.node = this.createElement('path');\n};\n\n/**\n * Function: rect\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.rect = function(x, y, w, h)\n{\n\tvar s = this.state;\n\tvar n = this.createElement('rect');\n\tn.setAttribute('x', this.format((x + s.dx) * s.scale));\n\tn.setAttribute('y', this.format((y + s.dy) * s.scale));\n\tn.setAttribute('width', this.format(w * s.scale));\n\tn.setAttribute('height', this.format(h * s.scale));\n\t\n\tthis.node = n;\n};\n\n/**\n * Function: roundrect\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.roundrect = function(x, y, w, h, dx, dy)\n{\n\tthis.rect(x, y, w, h);\n\t\n\tif (dx > 0)\n\t{\n\t\tthis.node.setAttribute('rx', this.format(dx * this.state.scale));\n\t}\n\t\n\tif (dy > 0)\n\t{\n\t\tthis.node.setAttribute('ry', this.format(dy * this.state.scale));\n\t}\n};\n\n/**\n * Function: ellipse\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.ellipse = function(x, y, w, h)\n{\n\tvar s = this.state;\n\tvar n = this.createElement('ellipse');\n\t// No rounding for consistent output with 1.x\n\tn.setAttribute('cx', this.format((x + w / 2 + s.dx) * s.scale));\n\tn.setAttribute('cy', this.format((y + h / 2 + s.dy) * s.scale));\n\tn.setAttribute('rx', w / 2 * s.scale);\n\tn.setAttribute('ry', h / 2 * s.scale);\n\tthis.node = n;\n};\n\n/**\n * Function: image\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n{\n\tsrc = this.converter.convert(src);\n\t\n\t// LATER: Add option for embedding images as base64.\n\taspect = (aspect != null) ? aspect : true;\n\tflipH = (flipH != null) ? flipH : false;\n\tflipV = (flipV != null) ? flipV : false;\n\t\n\tvar s = this.state;\n\tx += s.dx;\n\ty += s.dy;\n\t\n\tvar node = this.createElement('image');\n\tnode.setAttribute('x', this.format(x * s.scale) + this.imageOffset);\n\tnode.setAttribute('y', this.format(y * s.scale) + this.imageOffset);\n\tnode.setAttribute('width', this.format(w * s.scale));\n\tnode.setAttribute('height', this.format(h * s.scale));\n\t\n\t// Workaround for missing namespace support\n\tif (node.setAttributeNS == null)\n\t{\n\t\tnode.setAttribute('xlink:href', src);\n\t}\n\telse\n\t{\n\t\tnode.setAttributeNS(mxConstants.NS_XLINK, 'xlink:href', src);\n\t}\n\t\n\tif (!aspect)\n\t{\n\t\tnode.setAttribute('preserveAspectRatio', 'none');\n\t}\n\n\tif (s.alpha < 1 || s.fillAlpha < 1)\n\t{\n\t\tnode.setAttribute('opacity', s.alpha * s.fillAlpha);\n\t}\n\t\n\tvar tr = this.state.transform || '';\n\t\n\tif (flipH || flipV)\n\t{\n\t\tvar sx = 1;\n\t\tvar sy = 1;\n\t\tvar dx = 0;\n\t\tvar dy = 0;\n\t\t\n\t\tif (flipH)\n\t\t{\n\t\t\tsx = -1;\n\t\t\tdx = -w - 2 * x;\n\t\t}\n\t\t\n\t\tif (flipV)\n\t\t{\n\t\t\tsy = -1;\n\t\t\tdy = -h - 2 * y;\n\t\t}\n\t\t\n\t\t// Adds image tansformation to existing transform\n\t\ttr += 'scale(' + sx + ',' + sy + ')translate(' + (dx * s.scale) + ',' + (dy * s.scale) + ')';\n\t}\n\n\tif (tr.length > 0)\n\t{\n\t\tnode.setAttribute('transform', tr);\n\t}\n\t\n\tif (!this.pointerEvents)\n\t{\n\t\tnode.setAttribute('pointer-events', 'none');\n\t}\n\t\n\tthis.root.appendChild(node);\n};\n\n/**\n * Function: convertHtml\n * \n * Converts the given HTML string to XHTML.\n */\nmxSvgCanvas2D.prototype.convertHtml = function(val)\n{\n\tif (this.useDomParser)\n\t{\n\t\tvar doc = new DOMParser().parseFromString(val, 'text/html');\n\n\t\tif (doc != null)\n\t\t{\n\t\t\tval = new XMLSerializer().serializeToString(doc.body);\n\t\t\t\n\t\t\t// Extracts body content from DOM\n\t\t\tif (val.substring(0, 5) == '<body')\n\t\t\t{\n\t\t\t\tval = val.substring(val.indexOf('>', 5) + 1);\n\t\t\t}\n\t\t\t\n\t\t\tif (val.substring(val.length - 7, val.length) == '</body>')\n\t\t\t{\n\t\t\t\tval = val.substring(0, val.length - 7);\n\t\t\t}\n\t\t}\n\t}\n\telse if (document.implementation != null && document.implementation.createDocument != null)\n\t{\n\t\tvar xd = document.implementation.createDocument('http://www.w3.org/1999/xhtml', 'html', null);\n\t\tvar xb = xd.createElement('body');\n\t\txd.documentElement.appendChild(xb);\n\t\t\n\t\tvar div = document.createElement('div');\n\t\tdiv.innerHTML = val;\n\t\tvar child = div.firstChild;\n\t\t\n\t\twhile (child != null)\n\t\t{\n\t\t\tvar next = child.nextSibling;\n\t\t\txb.appendChild(xd.adoptNode(child));\n\t\t\tchild = next;\n\t\t}\n\t\t\n\t\treturn xb.innerHTML;\n\t}\n\telse\n\t{\n\t\tvar ta = document.createElement('textarea');\n\t\t\n\t\t// Handles special HTML entities < and > and double escaping\n\t\t// and converts unclosed br, hr and img tags to XHTML\n\t\t// LATER: Convert all unclosed tags\n\t\tta.innerHTML = val.replace(/&amp;/g, '&amp;amp;').\n\t\t\treplace(/&#60;/g, '&amp;lt;').replace(/&#62;/g, '&amp;gt;').\n\t\t\treplace(/&lt;/g, '&amp;lt;').replace(/&gt;/g, '&amp;gt;').\n\t\t\treplace(/</g, '&lt;').replace(/>/g, '&gt;');\n\t\tval = ta.value.replace(/&/g, '&amp;').replace(/&amp;lt;/g, '&lt;').\n\t\t\treplace(/&amp;gt;/g, '&gt;').replace(/&amp;amp;/g, '&amp;').\n\t\t\treplace(/<br>/g, '<br />').replace(/<hr>/g, '<hr />').\n\t\t\treplace(/(<img[^>]+)>/gm, \"$1 />\");\n\t}\n\t\n\treturn val;\n};\n\n/**\n * Function: createDiv\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.createDiv = function(str)\n{\n\tvar val = str;\n\t\n\tif (!mxUtils.isNode(val))\n\t{\n\t\tval = '<div><div>' + this.convertHtml(val) + '</div></div>';\n\t}\n\n\t// IE uses this code for export as it cannot render foreignObjects\n\tif (!mxClient.IS_IE && !mxClient.IS_IE11 && document.createElementNS)\n\t{\n\t\tvar div = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n\t\t\n\t\tif (mxUtils.isNode(val))\n\t\t{\n\t\t\tvar div2 = document.createElement('div');\n\t\t\tvar div3 = div2.cloneNode(false);\n\t\t\t\n\t\t\t// Creates a copy for export\n\t\t\tif (this.root.ownerDocument != document)\n\t\t\t{\n\t\t\t\tdiv2.appendChild(val.cloneNode(true));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv2.appendChild(val);\n\t\t\t}\n\t\t\t\n\t\t\tdiv3.appendChild(div2);\n\t\t\tdiv.appendChild(div3);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiv.innerHTML = val;\n\t\t}\n\t\t\n\t\treturn div;\n\t}\n\telse\n\t{\n\t\tif (mxUtils.isNode(val))\n\t\t{\n\t\t\tval = '<div><div>' + mxUtils.getXml(val) + '</div></div>';\n\t\t}\n\t\t\n\t\tval = '<div xmlns=\"http://www.w3.org/1999/xhtml\">' + val + '</div>';\n\n\t\t// NOTE: FF 3.6 crashes if content CSS contains \"height:100%\"\n\t\treturn  mxUtils.parseXml(val).documentElement;\n\t}\n};\n\n/**\n * Updates existing DOM nodes for text rendering. LATER: Merge common parts with text function below.\n */\nmxSvgCanvas2D.prototype.updateText = function(x, y, w, h, align, valign, wrap, overflow, clip, rotation, node)\n{\n\tif (node != null && node.firstChild != null && node.firstChild.firstChild != null)\n\t{\n\t\tthis.updateTextNodes(x, y, w, h, align, valign, wrap, overflow, clip, rotation, node.firstChild);\n\t}\n};\n\n/**\n * Function: addForeignObject\n * \n * Creates a foreignObject for the given string and adds it to the given root.\n */\nmxSvgCanvas2D.prototype.addForeignObject = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir, div, root)\n{\n\tvar group = this.createElement('g');\n\tvar fo = this.createElement('foreignObject');\n\t\n\t// Workarounds for print clipping and static position in Safari\n\tfo.setAttribute('style', 'overflow: visible; text-align: left;');\n\tfo.setAttribute('pointer-events', 'none');\n\t\n\t// Import needed for older versions of IE\n\tif (div.ownerDocument != document)\n\t{\n\t\tdiv = mxUtils.importNodeImplementation(fo.ownerDocument, div, true);\n\t}\n\n\tfo.appendChild(div);\n\tgroup.appendChild(fo);\n\n\tthis.updateTextNodes(x, y, w, h, align, valign, wrap, overflow, clip, rotation, group);\n\t\n\t// Alternate content if foreignObject not supported\n\tif (this.root.ownerDocument != document)\n\t{\n\t\tvar alt = this.createAlternateContent(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation);\n\t\t\n\t\tif (alt != null)\n\t\t{\n\t\t\tfo.setAttribute('requiredFeatures', 'http://www.w3.org/TR/SVG11/feature#Extensibility');\n\t\t\tvar sw = this.createElement('switch');\n\t\t\tsw.appendChild(fo);\n\t\t\tsw.appendChild(alt);\n\t\t\tgroup.appendChild(sw);\n\t\t}\n\t}\n\t\n\troot.appendChild(group);\n};\n\n/**\n * Updates existing DOM nodes for text rendering.\n */\nmxSvgCanvas2D.prototype.updateTextNodes = function(x, y, w, h, align, valign, wrap, overflow, clip, rotation, g)\n{\n\tvar s = this.state.scale;\n\n\tmxSvgCanvas2D.createCss(w + 2, h, align, valign, wrap, overflow, clip,\n\t\t(this.state.fontBackgroundColor != null) ? this.state.fontBackgroundColor : null,\n\t\t(this.state.fontBorderColor != null) ? this.state.fontBorderColor : null,\n\t\t'display: flex; align-items: unsafe ' +\n\t\t((valign == mxConstants.ALIGN_TOP) ? 'flex-start' :\n\t\t((valign == mxConstants.ALIGN_BOTTOM) ? 'flex-end' : 'center'))  + '; ' +\n\t\t'justify-content: unsafe ' + ((align == mxConstants.ALIGN_LEFT) ? 'flex-start' :\n\t\t((align == mxConstants.ALIGN_RIGHT) ? 'flex-end' : 'center'))  + '; ',\n\t\tthis.getTextCss(), s, mxUtils.bind(this, function(dx, dy, flex, item, block)\n\t{\n\t\tx += this.state.dx;\n\t\ty += this.state.dy;\n\n\t\tvar fo = g.firstChild;\n\t\tvar div = fo.firstChild;\n\t\tvar box = div.firstChild;\n\t\tvar text = box.firstChild;\n\t\tvar r = ((this.rotateHtml) ? this.state.rotation : 0) + ((rotation != null) ? rotation : 0);\n\t\tvar t = ((this.foOffset != 0) ? 'translate(' + this.foOffset + ' ' + this.foOffset + ')' : '') +\n\t\t\t((s != 1) ? 'scale(' + s + ')' : '');\n\t\t\n\t\ttext.setAttribute('style', block);\n\t\tbox.setAttribute('style', item);\n\t\t\n\t\t// Workaround for clipping in Webkit with scrolling and zoom\n\t\tfo.setAttribute('width', Math.ceil(1 / Math.min(1, s) * 100) + '%');\n\t\tfo.setAttribute('height', Math.ceil(1 / Math.min(1, s) * 100) + '%');\n\t\tvar yp = Math.round(y + dy);\n\t\t\n\t\t// Allows for negative values which are causing problems with\n\t\t// transformed content where the top edge of the foreignObject\n\t\t// limits the text box being moved further up in the diagram.\n\t\t// KNOWN: Possible clipping problems with zoom and scrolling\n\t\t// but this is normally not used with scrollbars as the\n\t\t// coordinates are always positive with scrollbars.\n\t\t// Margin-top is ignored in Safari and no negative values allowed\n\t\t// for padding.\n\t\tif (yp < 0)\n\t\t{\n\t\t\tfo.setAttribute('y', yp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfo.removeAttribute('y');\n\t\t\tflex += 'padding-top: ' + yp + 'px; ';\n\t\t}\n\t\t\n\t\tdiv.setAttribute('style', flex + 'margin-left: ' + Math.round(x + dx) + 'px;');\n\t\tt += ((r != 0) ? ('rotate(' + r + ' ' + x + ' ' + y + ')') : '');\n\n\t\t// Output allows for reflow but Safari cannot use absolute position,\n\t\t// transforms or opacity. https://bugs.webkit.org/show_bug.cgi?id=23113\n\t\tif (t != '')\n\t\t{\t\n\t\t\tg.setAttribute('transform', t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tg.removeAttribute('transform');\n\t\t}\n\t\t\n\t\tif (this.state.alpha != 1)\n\t\t{\n\t\t\tg.setAttribute('opacity', this.state.alpha);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tg.removeAttribute('opacity');\n\t\t}\n\t}));\n};\n\n/**\n * Updates existing DOM nodes for text rendering.\n */\nmxSvgCanvas2D.createCss = function(w, h, align, valign, wrap, overflow, clip, bg, border, flex, block, s, callback)\n{\n\tvar item = 'box-sizing: border-box; font-size: 0; text-align: ' + ((align == mxConstants.ALIGN_LEFT) ? 'left' :\n\t\t((align == mxConstants.ALIGN_RIGHT) ? 'right' : 'center')) + '; ';\n\tvar pt = mxUtils.getAlignmentAsPoint(align, valign);\n\tvar ofl = 'overflow: hidden; ';\n\tvar fw = 'width: 1px; ';\n\tvar fh = 'height: 1px; ';\n\tvar dx = pt.x * w;\n\tvar dy = pt.y * h;\n\t\n\tif (clip)\n\t{\n\t\tfw = 'width: ' + Math.round(w) + 'px; ';\n\t\titem += 'max-height: ' + Math.round(h) + 'px; ';\n\t\tdy = 0;\n\t}\n\telse if (overflow == 'fill')\n\t{\n\t\tfw = 'width: ' + Math.round(w) + 'px; ';\n\t\tfh = 'height: ' + Math.round(h) + 'px; ';\n\t\tblock += 'width: 100%; height: 100%; ';\n\t\titem += fw + fh;\n\t}\n\telse if (overflow == 'width')\n\t{\n\t\tfw = 'width: ' + Math.round(w) + 'px; ';\n\t\tblock += 'width: 100%; ';\n\t\titem += fw;\n\t\tdy = 0;\n\t\t\n\t\tif (h > 0)\n\t\t{\n\t\t\titem += 'max-height: ' + Math.round(h) + 'px; ';\n\t\t}\n\t}\n\telse\n\t{\n\t\tofl = '';\n\t\tdy = 0;\n\t}\n\t\n\tvar bgc = '';\n\t\n\tif (bg != null)\n\t{\n\t\tbgc += 'background-color: ' + bg + '; ';\n\t}\n\t\n\tif (border != null)\n\t{\n\t\tbgc += 'border: 1px solid ' + border + '; ';\n\t}\n\t\n\tif (ofl == '' || clip)\n\t{\n\t\tblock += bgc;\n\t}\n\telse\n\t{\n\t\titem += bgc;\n\t}\n\n\tif (wrap && w > 0)\n\t{\n\t\tblock += 'white-space: normal; word-wrap: ' + mxConstants.WORD_WRAP + '; ';\n\t\tfw = 'width: ' + Math.round(w) + 'px; ';\n\t\t\n\t\tif (ofl != '' && overflow != 'fill')\n\t\t{\n\t\t\tdy = 0;\n\t\t}\n\t}\n\telse\n\t{\n\t\tblock += 'white-space: nowrap; ';\n\t\t\n\t\tif (ofl == '')\n\t\t{\n\t\t\tdx = 0;\n\t\t}\n\t}\n\t\n\tcallback(dx, dy, flex + fw + fh, item + ofl, block, ofl);\n};\n\n/**\n * Function: getTextCss\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.getTextCss = function()\n{\n\tvar s = this.state;\n\tvar lh = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (s.fontSize * mxConstants.LINE_HEIGHT) + 'px' :\n\t\t(mxConstants.LINE_HEIGHT * this.lineHeightCorrection);\n\tvar css = 'display: inline-block; font-size: ' + s.fontSize + 'px; ' +\n\t\t'font-family: ' + s.fontFamily + '; color: ' + s.fontColor + '; line-height: ' + lh +\n\t\t'; pointer-events: ' + ((this.pointerEvents) ? this.pointerEventsValue : 'none') + '; ';\n\t\n\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tcss += 'font-weight: bold; ';\n\t}\n\n\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tcss += 'font-style: italic; ';\n\t}\n\n\tvar deco = [];\n\t\n\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tdeco.push('underline');\n\t}\n\t\n\tif ((s.fontStyle & mxConstants.FONT_STRIKETHROUGH) == mxConstants.FONT_STRIKETHROUGH)\n\t{\n\t\tdeco.push('line-through');\n\t}\n\t\n\tif (deco.length > 0)\n\t{\n\t\tcss += 'text-decoration: ' + deco.join(' ') + '; ';\n\t}\n\n\treturn css;\n};\n\n/**\n * Function: text\n * \n * Paints the given text. Possible values for format are empty string for plain\n * text and html for HTML markup. Note that HTML markup is only supported if\n * foreignObject is supported and <foEnabled> is true. (This means IE9 and later\n * does currently not support HTML text as part of shapes.)\n */\nmxSvgCanvas2D.prototype.text = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\tif (this.textEnabled && str != null)\n\t{\n\t\trotation = (rotation != null) ? rotation : 0;\n\n\t\tif (this.foEnabled && format == 'html')\n\t\t{\n\t\t\tvar div = this.createDiv(str);\n\t\t\t\n\t\t\t// Ignores invalid XHTML labels\n\t\t\tif (div != null)\n\t\t\t{\n\t\t\t\tif (dir != null)\n\t\t\t\t{\n\t\t\t\t\tdiv.setAttribute('dir', dir);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.addForeignObject(x, y, w, h, str, align, valign, wrap,\n\t\t\t\t\tformat, overflow, clip, rotation, dir, div, this.root);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.plainText(x + this.state.dx, y + this.state.dy, w, h, str,\n\t\t\t\talign, valign, wrap, overflow, clip, rotation, dir);\n\t\t}\n\t}\n};\n\n/**\n * Function: createClip\n * \n * Creates a clip for the given coordinates.\n */\nmxSvgCanvas2D.prototype.createClip = function(x, y, w, h)\n{\n\tx = Math.round(x);\n\ty = Math.round(y);\n\tw = Math.round(w);\n\th = Math.round(h);\n\t\n\tvar id = 'mx-clip-' + x + '-' + y + '-' + w + '-' + h;\n\n\tvar counter = 0;\n\tvar tmp = id + '-' + counter;\n\t\n\t// Resolves ID conflicts\n\twhile (document.getElementById(tmp) != null)\n\t{\n\t\ttmp = id + '-' + (++counter);\n\t}\n\t\n\tclip = this.createElement('clipPath');\n\tclip.setAttribute('id', tmp);\n\t\n\tvar rect = this.createElement('rect');\n\trect.setAttribute('x', x);\n\trect.setAttribute('y', y);\n\trect.setAttribute('width', w);\n\trect.setAttribute('height', h);\n\t\t\n\tclip.appendChild(rect);\n\t\n\treturn clip;\n};\n\n/**\n * Function: plainText\n * \n * Paints the given text. Possible values for format are empty string for\n * plain text and html for HTML markup.\n */\nmxSvgCanvas2D.prototype.plainText = function(x, y, w, h, str, align, valign, wrap, overflow, clip, rotation, dir)\n{\n\trotation = (rotation != null) ? rotation : 0;\n\tvar s = this.state;\n\tvar size = s.fontSize;\n\tvar node = this.createElement('g');\n\tvar tr = s.transform || '';\n\tthis.updateFont(node);\n\t\t\t\t\n\t// Ignores pointer events\n\tif (!this.pointerEvents && this.originalRoot == null)\n\t{\n\t\tnode.setAttribute('pointer-events', 'none');\n\t}\n\t\t\n\t// Non-rotated text\n\tif (rotation != 0)\n\t{\n\t\ttr += 'rotate(' + rotation  + ',' + this.format(x * s.scale) + ',' + this.format(y * s.scale) + ')';\n\t}\n\t\n\tif (dir != null)\n\t{\n\t\tnode.setAttribute('direction', dir);\n\t}\n\n\tif (clip && w > 0 && h > 0)\n\t{\n\t\tvar cx = x;\n\t\tvar cy = y;\n\t\t\n\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t{\n\t\t\tcx -= w / 2;\n\t\t}\n\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t{\n\t\t\tcx -= w;\n\t\t}\n\t\t\n\t\tif (overflow != 'fill')\n\t\t{\n\t\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t{\n\t\t\t\tcy -= h / 2;\n\t\t\t}\n\t\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\tcy -= h;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// LATER: Remove spacing from clip rectangle\n\t\tvar c = this.createClip(cx * s.scale - 2, cy * s.scale - 2, w * s.scale + 4, h * s.scale + 4);\n\t\t\n\t\tif (this.defs != null)\n\t\t{\n\t\t\tthis.defs.appendChild(c);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Makes sure clip is removed with referencing node\n\t\t\tthis.root.appendChild(c);\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_CHROMEAPP && !mxClient.IS_IE && !mxClient.IS_IE11 &&\n\t\t\t!mxClient.IS_EDGE && this.root.ownerDocument == document)\n\t\t{\n\t\t\t// Workaround for potential base tag\n\t\t\tvar base = this.getBaseUrl().replace(/([\\(\\)])/g, '\\\\$1');\n\t\t\tnode.setAttribute('clip-path', 'url(' + base + '#' + c.getAttribute('id') + ')');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.setAttribute('clip-path', 'url(#' + c.getAttribute('id') + ')');\n\t\t}\n\t}\n\n\t// Default is left\n\tvar anchor = (align == mxConstants.ALIGN_RIGHT) ? 'end' :\n\t\t\t\t\t(align == mxConstants.ALIGN_CENTER) ? 'middle' :\n\t\t\t\t\t'start';\n\n\t// Text-anchor start is default in SVG\n\tif (anchor != 'start')\n\t{\n\t\tnode.setAttribute('text-anchor', anchor);\n\t}\n\t\n\tif (!this.styleEnabled || size != mxConstants.DEFAULT_FONTSIZE)\n\t{\n\t\tnode.setAttribute('font-size', (size * s.scale) + 'px');\n\t}\n\t\n\tif (tr.length > 0)\n\t{\n\t\tnode.setAttribute('transform', tr);\n\t}\n\t\n\tif (s.alpha < 1)\n\t{\n\t\tnode.setAttribute('opacity', s.alpha);\n\t}\n\t\n\tvar lines = str.split('\\n');\n\tvar lh = Math.round(size * mxConstants.LINE_HEIGHT);\n\tvar textHeight = size + (lines.length - 1) * lh;\n\n\tvar cy = y + size - 1;\n\n\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t{\n\t\tif (overflow == 'fill')\n\t\t{\n\t\t\tcy -= h / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar dy = ((this.matchHtmlAlignment && clip && h > 0) ? Math.min(textHeight, h) : textHeight) / 2;\n\t\t\tcy -= dy;\n\t\t}\n\t}\n\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tif (overflow == 'fill')\n\t\t{\n\t\t\tcy -= h;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar dy = (this.matchHtmlAlignment && clip && h > 0) ? Math.min(textHeight, h) : textHeight;\n\t\t\tcy -= dy + 1;\n\t\t}\n\t}\n\n\tfor (var i = 0; i < lines.length; i++)\n\t{\n\t\t// Workaround for bounding box of empty lines and spaces\n\t\tif (lines[i].length > 0 && mxUtils.trim(lines[i]).length > 0)\n\t\t{\n\t\t\tvar text = this.createElement('text');\n\t\t\t// LATER: Match horizontal HTML alignment\n\t\t\ttext.setAttribute('x', this.format(x * s.scale) + this.textOffset);\n\t\t\ttext.setAttribute('y', this.format(cy * s.scale) + this.textOffset);\n\t\n\t\t\tmxUtils.write(text, lines[i]);\n\t\t\tnode.appendChild(text);\n\t\t}\n\n\t\tcy += lh;\n\t}\n\n\tthis.root.appendChild(node);\n\tthis.addTextBackground(node, str, x, y, w, (overflow == 'fill') ? h : textHeight, align, valign, overflow);\n};\n\n/**\n * Function: updateFont\n * \n * Updates the text properties for the given node. (NOTE: For this to work in\n * IE, the given node must be a text or tspan element.)\n */\nmxSvgCanvas2D.prototype.updateFont = function(node)\n{\n\tvar s = this.state;\n\n\tnode.setAttribute('fill', s.fontColor);\n\t\n\tif (!this.styleEnabled || s.fontFamily != mxConstants.DEFAULT_FONTFAMILY)\n\t{\n\t\tnode.setAttribute('font-family', s.fontFamily);\n\t}\n\n\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tnode.setAttribute('font-weight', 'bold');\n\t}\n\n\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tnode.setAttribute('font-style', 'italic');\n\t}\n\t\n\tvar txtDecor = [];\n\t\n\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\ttxtDecor.push('underline');\n\t}\n\t\n\tif ((s.fontStyle & mxConstants.FONT_STRIKETHROUGH) == mxConstants.FONT_STRIKETHROUGH)\n\t{\n\t\ttxtDecor.push('line-through');\n\t}\n\t\n\tif (txtDecor.length > 0)\n\t{\n\t\tnode.setAttribute('text-decoration', txtDecor.join(' '));\n\t}\n};\n\n/**\n * Function: addTextBackground\n * \n * Background color and border\n */\nmxSvgCanvas2D.prototype.addTextBackground = function(node, str, x, y, w, h, align, valign, overflow)\n{\n\tvar s = this.state;\n\n\tif (s.fontBackgroundColor != null || s.fontBorderColor != null)\n\t{\n\t\tvar bbox = null;\n\t\t\n\t\tif (overflow == 'fill' || overflow == 'width')\n\t\t{\n\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t{\n\t\t\t\tx -= w / 2;\n\t\t\t}\n\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tx -= w;\n\t\t\t}\n\t\t\t\n\t\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t{\n\t\t\t\ty -= h / 2;\n\t\t\t}\n\t\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\ty -= h;\n\t\t\t}\n\t\t\t\n\t\t\tbbox = new mxRectangle((x + 1) * s.scale, y * s.scale, (w - 2) * s.scale, (h + 2) * s.scale);\n\t\t}\n\t\telse if (node.getBBox != null && this.root.ownerDocument == document)\n\t\t{\n\t\t\t// Uses getBBox only if inside document for correct size\n\t\t\ttry\n\t\t\t{\n\t\t\t\tbbox = node.getBBox();\n\t\t\t\tvar ie = mxClient.IS_IE && mxClient.IS_SVG;\n\t\t\t\tbbox = new mxRectangle(bbox.x, bbox.y + ((ie) ? 0 : 1), bbox.width, bbox.height + ((ie) ? 1 : 0));\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\t// Ignores NS_ERROR_FAILURE in FF if container display is none.\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (bbox == null || bbox.width == 0 || bbox.height == 0)\n\t\t{\n\t\t\t// Computes size if not in document or no getBBox available\n\t\t\tvar div = document.createElement('div');\n\n\t\t\t// Wrapping and clipping can be ignored here\n\t\t\tdiv.style.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (s.fontSize * mxConstants.LINE_HEIGHT) + 'px' : mxConstants.LINE_HEIGHT;\n\t\t\tdiv.style.fontSize = s.fontSize + 'px';\n\t\t\tdiv.style.fontFamily = s.fontFamily;\n\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t\tdiv.style.position = 'absolute';\n\t\t\tdiv.style.visibility = 'hidden';\n\t\t\tdiv.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\t\tdiv.style.zoom = '1';\n\t\t\t\n\t\t\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t\t\t{\n\t\t\t\tdiv.style.fontWeight = 'bold';\n\t\t\t}\n\n\t\t\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t\t\t{\n\t\t\t\tdiv.style.fontStyle = 'italic';\n\t\t\t}\n\t\t\t\n\t\t\tstr = mxUtils.htmlEntities(str, false);\n\t\t\tdiv.innerHTML = str.replace(/\\n/g, '<br/>');\n\t\t\t\n\t\t\tdocument.body.appendChild(div);\n\t\t\tvar w = div.offsetWidth;\n\t\t\tvar h = div.offsetHeight;\n\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t\n\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t{\n\t\t\t\tx -= w / 2;\n\t\t\t}\n\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tx -= w;\n\t\t\t}\n\t\t\t\n\t\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t{\n\t\t\t\ty -= h / 2;\n\t\t\t}\n\t\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\ty -= h;\n\t\t\t}\n\t\t\t\n\t\t\tbbox = new mxRectangle((x + 1) * s.scale, (y + 2) * s.scale, w * s.scale, (h + 1) * s.scale);\n\t\t}\n\t\t\n\t\tif (bbox != null)\n\t\t{\n\t\t\tvar n = this.createElement('rect');\n\t\t\tn.setAttribute('fill', s.fontBackgroundColor || 'none');\n\t\t\tn.setAttribute('stroke', s.fontBorderColor || 'none');\n\t\t\tn.setAttribute('x', Math.floor(bbox.x - 1));\n\t\t\tn.setAttribute('y', Math.floor(bbox.y - 1));\n\t\t\tn.setAttribute('width', Math.ceil(bbox.width + 2));\n\t\t\tn.setAttribute('height', Math.ceil(bbox.height));\n\n\t\t\tvar sw = (s.fontBorderColor != null) ? Math.max(1, this.format(s.scale)) : 0;\n\t\t\tn.setAttribute('stroke-width', sw);\n\t\t\t\n\t\t\t// Workaround for crisp rendering - only required if not exporting\n\t\t\tif (this.root.ownerDocument == document && mxUtils.mod(sw, 2) == 1)\n\t\t\t{\n\t\t\t\tn.setAttribute('transform', 'translate(0.5, 0.5)');\n\t\t\t}\n\t\t\t\n\t\t\tnode.insertBefore(n, node.firstChild);\n\t\t}\n\t}\n};\n\n/**\n * Function: stroke\n * \n * Paints the outline of the current path.\n */\nmxSvgCanvas2D.prototype.stroke = function()\n{\n\tthis.addNode(false, true);\n};\n\n/**\n * Function: fill\n * \n * Fills the current path.\n */\nmxSvgCanvas2D.prototype.fill = function()\n{\n\tthis.addNode(true, false);\n};\n\n/**\n * Function: fillAndStroke\n * \n * Fills and paints the outline of the current path.\n */\nmxSvgCanvas2D.prototype.fillAndStroke = function()\n{\n\tthis.addNode(true, true);\n};\n\n__mxOutput.mxSvgCanvas2D = typeof mxSvgCanvas2D !== 'undefined' ? mxSvgCanvas2D : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxVmlCanvas2D\n * \n * Implements a canvas to be used for rendering VML. Here is an example of implementing a\n * fallback for SVG images which are not supported in VML-based browsers.\n * \n * (code)\n * var mxVmlCanvas2DImage = mxVmlCanvas2D.prototype.image;\n * mxVmlCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n * {\n *   if (src.substring(src.length - 4, src.length) == '.svg')\n *   {\n *     src = 'http://www.jgraph.com/images/mxgraph.gif';\n *   }\n *   \n *   mxVmlCanvas2DImage.apply(this, arguments);\n * };\n * (end)\n * \n * To disable anti-aliasing in the output, use the following code.\n * \n * (code)\n * document.createStyleSheet().cssText = mxClient.VML_PREFIX + '\\\\:*{antialias:false;)}';\n * (end)\n * \n * A description of the public API is available in <mxXmlCanvas2D>. Note that\n * there is a known issue in VML where gradients are painted using the outer\n * bounding box of rotated shapes, not the actual bounds of the shape. See\n * also <text> for plain text label restrictions in shapes for VML.\n */\nvar mxVmlCanvas2D = function(root)\n{\n\tmxAbstractCanvas2D.call(this);\n\n\t/**\n\t * Variable: root\n\t * \n\t * Reference to the container for the SVG content.\n\t */\n\tthis.root = root;\n};\n\n/**\n * Extends mxAbstractCanvas2D\n */\nmxUtils.extend(mxVmlCanvas2D, mxAbstractCanvas2D);\n\n/**\n * Variable: path\n * \n * Holds the current DOM node.\n */\nmxVmlCanvas2D.prototype.node = null;\n\n/**\n * Variable: textEnabled\n * \n * Specifies if text output should be enabledetB. Default is true.\n */\nmxVmlCanvas2D.prototype.textEnabled = true;\n\n/**\n * Variable: moveOp\n * \n * Contains the string used for moving in paths. Default is 'm'.\n */\nmxVmlCanvas2D.prototype.moveOp = 'm';\n\n/**\n * Variable: lineOp\n * \n * Contains the string used for moving in paths. Default is 'l'.\n */\nmxVmlCanvas2D.prototype.lineOp = 'l';\n\n/**\n * Variable: curveOp\n * \n * Contains the string used for bezier curves. Default is 'c'.\n */\nmxVmlCanvas2D.prototype.curveOp = 'c';\n\n/**\n * Variable: closeOp\n * \n * Holds the operator for closing curves. Default is 'x e'.\n */\nmxVmlCanvas2D.prototype.closeOp = 'x';\n\n/**\n * Variable: rotatedHtmlBackground\n * \n * Background color for rotated HTML. Default is ''. This can be set to eg.\n * white to improve rendering of rotated text in VML for IE9.\n */\nmxVmlCanvas2D.prototype.rotatedHtmlBackground = '';\n\n/**\n * Variable: vmlScale\n * \n * Specifies the scale used to draw VML shapes.\n */\nmxVmlCanvas2D.prototype.vmlScale = 1;\n\n/**\n * Function: createElement\n * \n * Creates the given element using the document.\n */\nmxVmlCanvas2D.prototype.createElement = function(name)\n{\n\treturn document.createElement(name);\n};\n\n/**\n * Function: createVmlElement\n * \n * Creates a new element using <createElement> and prefixes the given name with\n * <mxClient.VML_PREFIX>.\n */\nmxVmlCanvas2D.prototype.createVmlElement = function(name)\n{\n\treturn this.createElement(mxClient.VML_PREFIX + ':' + name);\n};\n\n/**\n * Function: addNode\n * \n * Adds the current node to the <root>.\n */\nmxVmlCanvas2D.prototype.addNode = function(filled, stroked)\n{\n\tvar node = this.node;\n\tvar s = this.state;\n\t\n\tif (node != null)\n\t{\n\t\tif (node.nodeName == 'shape')\n\t\t{\n\t\t\t// Checks if the path is not empty\n\t\t\tif (this.path != null && this.path.length > 0)\n\t\t\t{\n\t\t\t\tnode.path = this.path.join(' ') + ' e';\n\t\t\t\tnode.style.width = this.root.style.width;\n\t\t\t\tnode.style.height = this.root.style.height;\n\t\t\t\tnode.coordsize = parseInt(node.style.width) + ' ' + parseInt(node.style.height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tnode.strokeweight = this.format(Math.max(1, s.strokeWidth * s.scale / this.vmlScale)) + 'px';\n\t\t\n\t\tif (s.shadow)\n\t\t{\n\t\t\tthis.root.appendChild(this.createShadow(node,\n\t\t\t\tfilled && s.fillColor != null,\n\t\t\t\tstroked && s.strokeColor != null));\n\t\t}\n\t\t\n\t\tif (stroked && s.strokeColor != null)\n\t\t{\n\t\t\tnode.stroked = 'true';\n\t\t\tnode.strokecolor = s.strokeColor;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.stroked = 'false';\n\t\t}\n\n\t\tnode.appendChild(this.createStroke());\n\n\t\tif (filled && s.fillColor != null)\n\t\t{\n\t\t\tnode.appendChild(this.createFill());\n\t\t}\n\t\telse if (this.pointerEvents && (node.nodeName != 'shape' ||\n\t\t\tthis.path[this.path.length - 1] == this.closeOp))\n\t\t{\n\t\t\tnode.appendChild(this.createTransparentFill());\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.filled = 'false';\n\t\t}\n\n\t\t// LATER: Update existing DOM for performance\n\t\tthis.root.appendChild(node);\n\t}\n};\n\n/**\n * Function: createTransparentFill\n * \n * Creates a transparent fill.\n */\nmxVmlCanvas2D.prototype.createTransparentFill = function()\n{\n\tvar fill = this.createVmlElement('fill');\n\tfill.src = mxClient.imageBasePath + '/transparent.gif';\n\tfill.type = 'tile';\n\t\n\treturn fill;\n};\n\n/**\n * Function: createFill\n * \n * Creates a fill for the current state.\n */\nmxVmlCanvas2D.prototype.createFill = function()\n{\n\tvar s = this.state;\n\t\n\t// Gradients in foregrounds not supported because special gradients\n\t// with bounds must be created for each element in graphics-canvases\n\tvar fill = this.createVmlElement('fill');\n\tfill.color = s.fillColor;\n\n\tif (s.gradientColor != null)\n\t{\n\t\tfill.type = 'gradient';\n\t\tfill.method = 'none';\n\t\tfill.color2 = s.gradientColor;\n\t\tvar angle = 180 - s.rotation;\n\t\t\n\t\tif (s.gradientDirection == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tangle -= 90 + ((this.root.style.flip == 'x') ? 180 : 0);\n\t\t}\n\t\telse if (s.gradientDirection == mxConstants.DIRECTION_EAST)\n\t\t{\n\t\t\tangle += 90 + ((this.root.style.flip == 'x') ? 180 : 0);\n\t\t}\n\t\telse if (s.gradientDirection == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tangle -= 180 + ((this.root.style.flip == 'y') ? -180 : 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t angle += ((this.root.style.flip == 'y') ? -180 : 0);\n\t\t}\n\t\t\n\t\tif (this.root.style.flip == 'x' || this.root.style.flip == 'y')\n\t\t{\n\t\t\tangle *= -1;\n\t\t}\n\n\t\t// LATER: Fix outer bounding box for rotated shapes used in VML.\n\t\tfill.angle = mxUtils.mod(angle, 360);\n\t\tfill.opacity = (s.alpha * s.gradientFillAlpha * 100) + '%';\n\t\tfill.setAttribute(mxClient.OFFICE_PREFIX + ':opacity2', (s.alpha * s.gradientAlpha * 100) + '%');\n\t}\n\telse if (s.alpha < 1 || s.fillAlpha < 1)\n\t{\n\t\tfill.opacity = (s.alpha * s.fillAlpha * 100) + '%';\t\t\t\n\t}\n\t\n\treturn fill;\n};\n/**\n * Function: createStroke\n * \n * Creates a fill for the current state.\n */\nmxVmlCanvas2D.prototype.createStroke = function()\n{\n\tvar s = this.state;\n\tvar stroke = this.createVmlElement('stroke');\n\tstroke.endcap = s.lineCap || 'flat';\n\tstroke.joinstyle = s.lineJoin || 'miter';\n\tstroke.miterlimit = s.miterLimit || '10';\n\t\n\tif (s.alpha < 1 || s.strokeAlpha < 1)\n\t{\n\t\tstroke.opacity = (s.alpha * s.strokeAlpha * 100) + '%';\n\t}\n\t\n\tif (s.dashed)\n\t{\n\t\tstroke.dashstyle = this.getVmlDashStyle();\n\t}\n\t\n\treturn stroke;\n};\n\n/**\n * Function: getVmlDashPattern\n * \n * Returns a VML dash pattern for the current dashPattern.\n * See http://msdn.microsoft.com/en-us/library/bb264085(v=vs.85).aspx\n */\nmxVmlCanvas2D.prototype.getVmlDashStyle = function()\n{\n\tvar result = 'dash';\n\t\n\tif (typeof(this.state.dashPattern) === 'string')\n\t{\n\t\tvar tok = this.state.dashPattern.split(' ');\n\t\t\n\t\tif (tok.length > 0 && tok[0] == 1)\n\t\t{\n\t\t\tresult = '0 2';\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createShadow\n * \n * Creates a shadow for the given node.\n */\nmxVmlCanvas2D.prototype.createShadow = function(node, filled, stroked)\n{\n\tvar s = this.state;\n\tvar rad = -s.rotation * (Math.PI / 180);\n\tvar cos = Math.cos(rad);\n\tvar sin = Math.sin(rad);\n\n\tvar dx = s.shadowDx * s.scale;\n\tvar dy = s.shadowDy * s.scale;\n\n\tif (this.root.style.flip == 'x')\n\t{\n\t\tdx *= -1;\n\t}\n\telse if (this.root.style.flip == 'y')\n\t{\n\t\tdy *= -1;\n\t}\n\t\n\tvar shadow = node.cloneNode(true);\n\tshadow.style.marginLeft = Math.round(dx * cos - dy * sin) + 'px';\n\tshadow.style.marginTop = Math.round(dx * sin + dy * cos) + 'px';\n\n\t// Workaround for wrong cloning in IE8 standards mode\n\tif (document.documentMode == 8)\n\t{\n\t\tshadow.strokeweight = node.strokeweight;\n\t\t\n\t\tif (node.nodeName == 'shape')\n\t\t{\n\t\t\tshadow.path = this.path.join(' ') + ' e';\n\t\t\tshadow.style.width = this.root.style.width;\n\t\t\tshadow.style.height = this.root.style.height;\n\t\t\tshadow.coordsize = parseInt(node.style.width) + ' ' + parseInt(node.style.height);\n\t\t}\n\t}\n\t\n\tif (stroked)\n\t{\n\t\tshadow.strokecolor = s.shadowColor;\n\t\tshadow.appendChild(this.createShadowStroke());\n\t}\n\telse\n\t{\n\t\tshadow.stroked = 'false';\n\t}\n\t\n\tif (filled)\n\t{\n\t\tshadow.appendChild(this.createShadowFill());\n\t}\n\telse\n\t{\n\t\tshadow.filled = 'false';\n\t}\n\t\n\treturn shadow;\n};\n\n/**\n * Function: createShadowFill\n * \n * Creates the fill for the shadow.\n */\nmxVmlCanvas2D.prototype.createShadowFill = function()\n{\n\tvar fill = this.createVmlElement('fill');\n\tfill.color = this.state.shadowColor;\n\tfill.opacity = (this.state.alpha * this.state.shadowAlpha * 100) + '%';\n\t\n\treturn fill;\n};\n\n/**\n * Function: createShadowStroke\n * \n * Creates the stroke for the shadow.\n */\nmxVmlCanvas2D.prototype.createShadowStroke = function()\n{\n\tvar stroke = this.createStroke();\n\tstroke.opacity = (this.state.alpha * this.state.shadowAlpha * 100) + '%';\n\t\n\treturn stroke;\n};\n\n/**\n * Function: rotate\n * \n * Sets the rotation of the canvas. Note that rotation cannot be concatenated.\n */\nmxVmlCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\tif (flipH && flipV)\n\t{\n\t\ttheta += 180;\n\t}\n\telse if (flipH)\n\t{\n\t\tthis.root.style.flip = 'x';\n\t}\n\telse if (flipV)\n\t{\n\t\tthis.root.style.flip = 'y';\n\t}\n\n\tif (flipH ? !flipV : flipV)\n\t{\n\t\ttheta *= -1;\n\t}\n\n\tthis.root.style.rotation = theta;\n\tthis.state.rotation = this.state.rotation + theta;\n\tthis.state.rotationCx = cx;\n\tthis.state.rotationCy = cy;\n};\n\n/**\n * Function: begin\n * \n * Extends superclass to create path.\n */\nmxVmlCanvas2D.prototype.begin = function()\n{\n\tmxAbstractCanvas2D.prototype.begin.apply(this, arguments);\n\tthis.node = this.createVmlElement('shape');\n\tthis.node.style.position = 'absolute';\n};\n\n/**\n * Function: quadTo\n * \n * Replaces quadratic curve with bezier curve in VML.\n */\nmxVmlCanvas2D.prototype.quadTo = function(x1, y1, x2, y2)\n{\n\tvar s = this.state;\n\n\tvar cpx0 = (this.lastX + s.dx) * s.scale;\n\tvar cpy0 = (this.lastY + s.dy) * s.scale;\n\tvar qpx1 = (x1 + s.dx) * s.scale;\n\tvar qpy1 = (y1 + s.dy) * s.scale;\n\tvar cpx3 = (x2 + s.dx) * s.scale;\n\tvar cpy3 = (y2 + s.dy) * s.scale;\n\t\n\tvar cpx1 = cpx0 + 2/3 * (qpx1 - cpx0);\n\tvar cpy1 = cpy0 + 2/3 * (qpy1 - cpy0);\n\t\n\tvar cpx2 = cpx3 + 2/3 * (qpx1 - cpx3);\n\tvar cpy2 = cpy3 + 2/3 * (qpy1 - cpy3);\n\t\n\tthis.path.push('c ' + this.format(cpx1) + ' ' + this.format(cpy1) +\n\t\t\t' ' + this.format(cpx2) + ' ' + this.format(cpy2) +\n\t\t\t' ' + this.format(cpx3) + ' ' + this.format(cpy3));\n\tthis.lastX = (cpx3 / s.scale) - s.dx;\n\tthis.lastY = (cpy3 / s.scale) - s.dy;\n\t\n};\n\n/**\n * Function: createRect\n * \n * Sets the glass gradient.\n */\nmxVmlCanvas2D.prototype.createRect = function(nodeName, x, y, w, h)\n{\n\tvar s = this.state;\n\tvar n = this.createVmlElement(nodeName);\n\tn.style.position = 'absolute';\n\tn.style.left = this.format((x + s.dx) * s.scale) + 'px';\n\tn.style.top = this.format((y + s.dy) * s.scale) + 'px';\n\tn.style.width = this.format(w * s.scale) + 'px';\n\tn.style.height = this.format(h * s.scale) + 'px';\n\t\n\treturn n;\n};\n\n/**\n * Function: rect\n * \n * Sets the current path to a rectangle.\n */\nmxVmlCanvas2D.prototype.rect = function(x, y, w, h)\n{\n\tthis.node = this.createRect('rect', x, y, w, h);\n};\n\n/**\n * Function: roundrect\n * \n * Sets the current path to a rounded rectangle.\n */\nmxVmlCanvas2D.prototype.roundrect = function(x, y, w, h, dx, dy)\n{\n\tthis.node = this.createRect('roundrect', x, y, w, h);\n\t// SetAttribute needed here for IE8\n\tthis.node.setAttribute('arcsize', Math.max(dx * 100 / w, dy * 100 / h) + '%');\n};\n\n/**\n * Function: ellipse\n * \n * Sets the current path to an ellipse.\n */\nmxVmlCanvas2D.prototype.ellipse = function(x, y, w, h)\n{\n\tthis.node = this.createRect('oval', x, y, w, h);\n};\n\n/**\n * Function: image\n * \n * Paints an image.\n */\nmxVmlCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n{\n\tvar node = null;\n\t\n\tif (!aspect)\n\t{\n\t\tnode = this.createRect('image', x, y, w, h);\n\t\tnode.src = src;\n\t}\n\telse\n\t{\n\t\t// Uses fill with aspect to avoid asynchronous update of size\n\t\tnode = this.createRect('rect', x, y, w, h);\n\t\tnode.stroked = 'false';\n\t\t\n\t\t// Handles image aspect via fill\n\t\tvar fill = this.createVmlElement('fill');\n\t\tfill.aspect = (aspect) ? 'atmost' : 'ignore';\n\t\tfill.rotate = 'true';\n\t\tfill.type = 'frame';\n\t\tfill.src = src;\n\n\t\tnode.appendChild(fill);\n\t}\n\t\n\tif (flipH && flipV)\n\t{\n\t\tnode.style.rotation = '180';\n\t}\n\telse if (flipH)\n\t{\n\t\tnode.style.flip = 'x';\n\t}\n\telse if (flipV)\n\t{\n\t\tnode.style.flip = 'y';\n\t}\n\t\n\tif (this.state.alpha < 1 || this.state.fillAlpha < 1)\n\t{\n\t\t// KNOWN: Borders around transparent images in IE<9. Using fill.opacity\n\t\t// fixes this problem by adding a white background in all IE versions.\n\t\tnode.style.filter += 'alpha(opacity=' + (this.state.alpha * this.state.fillAlpha * 100) + ')';\n\t}\n\n\tthis.root.appendChild(node);\n};\n\n/**\n * Function: createText\n * \n * Creates the innermost element that contains the HTML text.\n */\nmxVmlCanvas2D.prototype.createDiv = function(str, align, valign, overflow)\n{\n\tvar div = this.createElement('div');\n\tvar state = this.state;\n\n\tvar css = '';\n\t\n\tif (state.fontBackgroundColor != null)\n\t{\n\t\tcss += 'background-color:' + mxUtils.htmlEntities(state.fontBackgroundColor) + ';';\n\t}\n\t\n\tif (state.fontBorderColor != null)\n\t{\n\t\tcss += 'border:1px solid ' + mxUtils.htmlEntities(state.fontBorderColor) + ';';\n\t}\n\t\n\tif (mxUtils.isNode(str))\n\t{\n\t\tdiv.appendChild(str);\n\t}\n\telse\n\t{\n\t\tif (overflow != 'fill' && overflow != 'width')\n\t\t{\n\t\t\tvar div2 = this.createElement('div');\n\t\t\tdiv2.style.cssText = css;\n\t\t\tdiv2.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\t\tdiv2.style.zoom = '1';\n\t\t\tdiv2.style.textDecoration = 'inherit';\n\t\t\tdiv2.innerHTML = str;\n\t\t\tdiv.appendChild(div2);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiv.style.cssText = css;\n\t\t\tdiv.innerHTML = str;\n\t\t}\n\t}\n\t\n\tvar style = div.style;\n\n\tstyle.fontSize = (state.fontSize / this.vmlScale) + 'px';\n\tstyle.fontFamily = state.fontFamily;\n\tstyle.color = state.fontColor;\n\tstyle.verticalAlign = 'top';\n\tstyle.textAlign = align || 'left';\n\tstyle.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (state.fontSize * mxConstants.LINE_HEIGHT / this.vmlScale) + 'px' : mxConstants.LINE_HEIGHT;\n\n\tif ((state.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tstyle.fontWeight = 'bold';\n\t}\n\n\tif ((state.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tstyle.fontStyle = 'italic';\n\t}\n\t\n\tif ((state.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tstyle.textDecoration = 'underline';\n\t}\n\t\n\treturn div;\n};\n\n/**\n * Function: text\n * \n * Paints the given text. Possible values for format are empty string for plain\n * text and html for HTML markup. Clipping, text background and border are not\n * supported for plain text in VML.\n */\nmxVmlCanvas2D.prototype.text = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\tif (this.textEnabled && str != null)\n\t{\n\t\tvar s = this.state;\n\t\t\n\t\tif (format == 'html')\n\t\t{\n\t\t\tif (s.rotation != null)\n\t\t\t{\n\t\t\t\tvar pt = this.rotatePoint(x, y, s.rotation, s.rotationCx, s.rotationCy);\n\t\t\t\t\n\t\t\t\tx = pt.x;\n\t\t\t\ty = pt.y;\n\t\t\t}\n\n\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tx += s.dx;\n\t\t\t\ty += s.dy;\n\t\t\t\t\n\t\t\t\t// Workaround for rendering offsets\n\t\t\t\tif (overflow != 'fill' && valign == mxConstants.ALIGN_TOP)\n\t\t\t\t{\n\t\t\t\t\ty -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx *= s.scale;\n\t\t\t\ty *= s.scale;\n\t\t\t}\n\n\t\t\t// Adds event transparency in IE8 standards without the transparent background\n\t\t\t// filter which cannot be used due to bugs in the zoomed bounding box (too slow)\n\t\t\t// FIXME: No event transparency if inside v:rect (ie part of shape)\n\t\t\t// KNOWN: Offset wrong for rotated text with word that are longer than the wrapping\n\t\t\t// width in IE8 because real width of text cannot be determined here.\n\t\t\t// This should be fixed in mxText.updateBoundingBox by calling before this and\n\t\t\t// passing the real width to this method if not clipped and wrapped.\n\t\t\tvar abs = (document.documentMode == 8 && !mxClient.IS_EM) ? this.createVmlElement('group') : this.createElement('div');\n\t\t\tabs.style.position = 'absolute';\n\t\t\tabs.style.display = 'inline';\n\t\t\tabs.style.left = this.format(x) + 'px';\n\t\t\tabs.style.top = this.format(y) + 'px';\n\t\t\tabs.style.zoom = s.scale;\n\n\t\t\tvar box = this.createElement('div');\n\t\t\tbox.style.position = 'relative';\n\t\t\tbox.style.display = 'inline';\n\t\t\t\n\t\t\tvar margin = mxUtils.getAlignmentAsPoint(align, valign);\n\t\t\tvar dx = margin.x;\n\t\t\tvar dy = margin.y;\n\n\t\t\tvar div = this.createDiv(str, align, valign, overflow);\n\t\t\tvar inner = this.createElement('div');\n\t\t\t\n\t\t\tif (dir != null)\n\t\t\t{\n\t\t\t\tdiv.setAttribute('dir', dir);\n\t\t\t}\n\n\t\t\tif (wrap && w > 0)\n\t\t\t{\n\t\t\t\tif (!clip)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.width = Math.round(w) + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdiv.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tdiv.style.whiteSpace = 'normal';\n\t\t\t\t\n\t\t\t\t// LATER: Check if other cases need to be handled\n\t\t\t\tif (div.style.wordWrap == 'break-word')\n\t\t\t\t{\n\t\t\t\t\tvar tmp = div;\n\t\t\t\t\t\n\t\t\t\t\tif (tmp.firstChild != null && tmp.firstChild.nodeName == 'DIV')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp.firstChild.style.width = '100%';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t\t}\n\t\t\t\n\t\t\tvar rot = s.rotation + (rotation || 0);\n\t\t\t\n\t\t\tif (this.rotateHtml && rot != 0)\n\t\t\t{\n\t\t\t\tinner.style.display = 'inline';\n\t\t\t\tinner.style.zoom = '1';\n\t\t\t\tinner.appendChild(div);\n\n\t\t\t\t// Box not needed for rendering in IE8 standards\n\t\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM && this.root.nodeName != 'DIV')\n\t\t\t\t{\n\t\t\t\t\tbox.appendChild(inner);\n\t\t\t\t\tabs.appendChild(box);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tabs.appendChild(inner);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tbox.appendChild(div);\n\t\t\t\tabs.appendChild(box);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.style.display = 'inline';\n\t\t\t\tabs.appendChild(div);\n\t\t\t}\n\t\t\t\n\t\t\t// Inserts the node into the DOM\n\t\t\tif (this.root.nodeName != 'DIV')\n\t\t\t{\n\t\t\t\t// Rectangle to fix position in group\n\t\t\t\tvar rect = this.createVmlElement('rect');\n\t\t\t\trect.stroked = 'false';\n\t\t\t\trect.filled = 'false';\n\n\t\t\t\trect.appendChild(abs);\n\t\t\t\tthis.root.appendChild(rect);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.root.appendChild(abs);\n\t\t\t}\n\t\t\t\n\t\t\tif (clip)\n\t\t\t{\n\t\t\t\tdiv.style.overflow = 'hidden';\n\t\t\t\tdiv.style.width = Math.round(w) + 'px';\n\t\t\t\t\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.maxHeight = Math.round(h) + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (overflow == 'fill')\n\t\t\t{\n\t\t\t\t// KNOWN: Affects horizontal alignment in quirks\n\t\t\t\t// but fill should only be used with align=left\n\t\t\t\tdiv.style.overflow = 'hidden';\n\t\t\t\tdiv.style.width = (Math.max(0, w) + 1) + 'px';\n\t\t\t\tdiv.style.height = (Math.max(0, h) + 1) + 'px';\n\t\t\t}\n\t\t\telse if (overflow == 'width')\n\t\t\t{\n\t\t\t\t// KNOWN: Affects horizontal alignment in quirks\n\t\t\t\t// but fill should only be used with align=left\n\t\t\t\tdiv.style.overflow = 'hidden';\n\t\t\t\tdiv.style.width = (Math.max(0, w) + 1) + 'px';\n\t\t\t\tdiv.style.maxHeight = (Math.max(0, h) + 1) + 'px';\n\t\t\t}\n\t\t\t\n\t\t\tif (this.rotateHtml && rot != 0)\n\t\t\t{\n\t\t\t\tvar rad = rot * (Math.PI / 180);\n\t\t\t\t\n\t\t\t\t// Precalculate cos and sin for the rotation\n\t\t\t\tvar real_cos = parseFloat(parseFloat(Math.cos(rad)).toFixed(8));\n\t\t\t\tvar real_sin = parseFloat(parseFloat(Math.sin(-rad)).toFixed(8));\n\n\t\t\t\trad %= 2 * Math.PI;\n\t\t\t\tif (rad < 0) rad += 2 * Math.PI;\n\t\t\t\trad %= Math.PI;\n\t\t\t\tif (rad > Math.PI / 2) rad = Math.PI - rad;\n\t\t\t\t\n\t\t\t\tvar cos = Math.cos(rad);\n\t\t\t\tvar sin = Math.sin(rad);\n\n\t\t\t\t// Adds div to document to measure size\n\t\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.display = 'inline-block';\n\t\t\t\t\tinner.style.display = 'inline-block';\n\t\t\t\t\tbox.style.display = 'inline-block';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdiv.style.visibility = 'hidden';\n\t\t\t\tdiv.style.position = 'absolute';\n\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\t\n\t\t\t\tvar sizeDiv = div;\n\t\t\t\t\n\t\t\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar tmp = sizeDiv.offsetWidth + 3;\n\t\t\t\tvar oh = sizeDiv.offsetHeight;\n\t\t\t\t\n\t\t\t\tif (clip)\n\t\t\t\t{\n\t\t\t\t\tw = Math.min(w, tmp);\n\t\t\t\t\toh = Math.min(oh, h);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tw = tmp;\n\t\t\t\t}\n\n\t\t\t\t// Handles words that are longer than the given wrapping width\n\t\t\t\tif (wrap)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.width = w + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Simulates max-height in quirks\n\t\t\t\tif (mxClient.IS_QUIRKS && (clip || overflow == 'width') && oh > h)\n\t\t\t\t{\n\t\t\t\t\toh = h;\n\t\t\t\t\t\n\t\t\t\t\t// Quirks does not support maxHeight\n\t\t\t\t\tdiv.style.height = oh + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\th = oh;\n\n\t\t\t\tvar top_fix = (h - h * cos + w * -sin) / 2 - real_sin * w * (dx + 0.5) + real_cos * h * (dy + 0.5);\n\t\t\t\tvar left_fix = (w - w * cos + h * -sin) / 2 + real_cos * w * (dx + 0.5) + real_sin * h * (dy + 0.5);\n\n\t\t\t\tif (abs.nodeName == 'group' && this.root.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\t// Workaround for bug where group gets moved away if left and top are non-zero in IE8 standards\n\t\t\t\t\tvar pos = this.createElement('div');\n\t\t\t\t\tpos.style.display = 'inline-block';\n\t\t\t\t\tpos.style.position = 'absolute';\n\t\t\t\t\tpos.style.left = this.format(x + (left_fix - w / 2) * s.scale) + 'px';\n\t\t\t\t\tpos.style.top = this.format(y + (top_fix - h / 2) * s.scale) + 'px';\n\t\t\t\t\t\n\t\t\t\t\tabs.parentNode.appendChild(pos);\n\t\t\t\t\tpos.appendChild(abs);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar sc = (document.documentMode == 8 && !mxClient.IS_EM) ? 1 : s.scale;\n\t\t\t\t\t\n\t\t\t\t\tabs.style.left = this.format(x + (left_fix - w / 2) * sc) + 'px';\n\t\t\t\t\tabs.style.top = this.format(y + (top_fix - h / 2) * sc) + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// KNOWN: Rotated text rendering quality is bad for IE9 quirks\n\t\t\t\tinner.style.filter = \"progid:DXImageTransform.Microsoft.Matrix(M11=\"+real_cos+\", M12=\"+\n\t\t\t\t\treal_sin+\", M21=\"+(-real_sin)+\", M22=\"+real_cos+\", sizingMethod='auto expand')\";\n\t\t\t\tinner.style.backgroundColor = this.rotatedHtmlBackground;\n\t\t\t\t\n\t\t\t\tif (this.state.alpha < 1)\n\t\t\t\t{\n\t\t\t\t\tinner.style.filter += 'alpha(opacity=' + (this.state.alpha * 100) + ')';\n\t\t\t\t}\n\n\t\t\t\t// Restore parent node for DIV\n\t\t\t\tinner.appendChild(div);\n\t\t\t\tdiv.style.position = '';\n\t\t\t\tdiv.style.visibility = '';\n\t\t\t}\n\t\t\telse if (document.documentMode != 8 || mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tdiv.style.verticalAlign = 'top';\n\t\t\t\t\n\t\t\t\tif (this.state.alpha < 1)\n\t\t\t\t{\n\t\t\t\t\tabs.style.filter = 'alpha(opacity=' + (this.state.alpha * 100) + ')';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Adds div to document to measure size\n\t\t\t\tvar divParent = div.parentNode;\n\t\t\t\tdiv.style.visibility = 'hidden';\n\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\t\n\t\t\t\tw = div.offsetWidth;\n\t\t\t\tvar oh = div.offsetHeight;\n\t\t\t\t\n\t\t\t\t// Simulates max-height in quirks\n\t\t\t\tif (mxClient.IS_QUIRKS && clip && oh > h)\n\t\t\t\t{\n\t\t\t\t\toh = h;\n\t\t\t\t\t\n\t\t\t\t\t// Quirks does not support maxHeight\n\t\t\t\t\tdiv.style.height = oh + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\th = oh;\n\t\t\t\t\n\t\t\t\tdiv.style.visibility = '';\n\t\t\t\tdivParent.appendChild(div);\n\t\t\t\t\n\t\t\t\tabs.style.left = this.format(x + w * dx * this.state.scale) + 'px';\n\t\t\t\tabs.style.top = this.format(y + h * dy * this.state.scale) + 'px';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (this.state.alpha < 1)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.filter = 'alpha(opacity=' + (this.state.alpha * 100) + ')';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Faster rendering in IE8 without offsetWidth/Height\n\t\t\t\tbox.style.left = (dx * 100) + '%';\n\t\t\t\tbox.style.top = (dy * 100) + '%';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.plainText(x, y, w, h, mxUtils.htmlEntities(str, false), align, valign, wrap, format, overflow, clip, rotation, dir);\n\t\t}\n\t}\n};\n\n/**\n * Function: plainText\n * \n * Paints the outline of the current path.\n */\nmxVmlCanvas2D.prototype.plainText = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\t// TextDirection is ignored since this code is not used (format is always HTML in the text function)\n\tvar s = this.state;\n\tx = (x + s.dx) * s.scale;\n\ty = (y + s.dy) * s.scale;\n\t\n\tvar node = this.createVmlElement('shape');\n\tnode.style.width = '1px';\n\tnode.style.height = '1px';\n\tnode.stroked = 'false';\n\n\tvar fill = this.createVmlElement('fill');\n\tfill.color = s.fontColor;\n\tfill.opacity = (s.alpha * 100) + '%';\n\tnode.appendChild(fill);\n\t\n\tvar path = this.createVmlElement('path');\n\tpath.textpathok = 'true';\n\tpath.v = 'm ' + this.format(0) + ' ' + this.format(0) + ' l ' + this.format(1) + ' ' + this.format(0);\n\t\n\tnode.appendChild(path);\n\t\n\t// KNOWN: Font family and text decoration ignored\n\tvar tp = this.createVmlElement('textpath');\n\ttp.style.cssText = 'v-text-align:' + align;\n\ttp.style.align = align;\n\ttp.style.fontFamily = s.fontFamily;\n\ttp.string = str;\n\ttp.on = 'true';\n\t\n\t// Scale via fontsize instead of node.style.zoom for correct offsets in IE8\n\tvar size = s.fontSize * s.scale / this.vmlScale;\n\ttp.style.fontSize = size + 'px';\n\t\n\t// Bold\n\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\ttp.style.fontWeight = 'bold';\n\t}\n\t\n\t// Italic\n\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\ttp.style.fontStyle = 'italic';\n\t}\n\n\t// Underline\n\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\ttp.style.textDecoration = 'underline';\n\t}\n\n\tvar lines = str.split('\\n');\n\tvar textHeight = size + (lines.length - 1) * size * mxConstants.LINE_HEIGHT;\n\tvar dx = 0;\n\tvar dy = 0;\n\n\tif (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tdy = - textHeight / 2;\n\t}\n\telse if (valign != mxConstants.ALIGN_MIDDLE) // top\n\t{\n\t\tdy = textHeight / 2;\n\t}\n\n\tif (rotation != null)\n\t{\n\t\tnode.style.rotation = rotation;\n\t\tvar rad = rotation * (Math.PI / 180);\n\t\tdx = Math.sin(rad) * dy;\n\t\tdy = Math.cos(rad) * dy;\n\t}\n\n\t// FIXME: Clipping is relative to bounding box\n\t/*if (clip)\n\t{\n\t\tnode.style.clip = 'rect(0px ' + this.format(w) + 'px ' + this.format(h) + 'px 0px)';\n\t}*/\n\t\n\tnode.appendChild(tp);\n\tnode.style.left = this.format(x - dx) + 'px';\n\tnode.style.top = this.format(y + dy) + 'px';\n\t\n\tthis.root.appendChild(node);\n};\n\n/**\n * Function: stroke\n * \n * Paints the outline of the current path.\n */\nmxVmlCanvas2D.prototype.stroke = function()\n{\n\tthis.addNode(false, true);\n};\n\n/**\n * Function: fill\n * \n * Fills the current path.\n */\nmxVmlCanvas2D.prototype.fill = function()\n{\n\tthis.addNode(true, false);\n};\n\n/**\n * Function: fillAndStroke\n * \n * Fills and paints the outline of the current path.\n */\nmxVmlCanvas2D.prototype.fillAndStroke = function()\n{\n\tthis.addNode(true, true);\n};\n\n__mxOutput.mxVmlCanvas2D = typeof mxVmlCanvas2D !== 'undefined' ? mxVmlCanvas2D : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGuide\n *\n * Implements the alignment of selection cells to other cells in the graph.\n * \n * Constructor: mxGuide\n * \n * Constructs a new guide object.\n */\nfunction mxGuide(graph, states)\n{\n\tthis.graph = graph;\n\tthis.setStates(states);\n};\n\n/**\n * Variable: graph\n *\n * Reference to the enclosing <mxGraph> instance.\n */\nmxGuide.prototype.graph = null;\n\n/**\n * Variable: states\n * \n * Contains the <mxCellStates> that are used for alignment.\n */\nmxGuide.prototype.states = null;\n\n/**\n * Variable: horizontal\n *\n * Specifies if horizontal guides are enabled. Default is true.\n */\nmxGuide.prototype.horizontal = true;\n\n/**\n * Variable: vertical\n *\n * Specifies if vertical guides are enabled. Default is true.\n */\nmxGuide.prototype.vertical = true;\n\n/**\n * Variable: guideX\n *\n * Holds the <mxShape> for the horizontal guide.\n */\nmxGuide.prototype.guideX = null;\n\n/**\n * Variable: guideY\n *\n * Holds the <mxShape> for the vertical guide.\n */\nmxGuide.prototype.guideY = null;\n\n/**\n * Variable: rounded\n *\n * Specifies if rounded coordinates should be used. Default is false.\n */\nmxGuide.prototype.rounded = false;\n\n/**\n * Variable: tolerance\n * \n * Default tolerance in px if grid is disabled. Default is 2.\n */\nmxGuide.prototype.tolerance = 2;\n\n/**\n * Function: setStates\n * \n * Sets the <mxCellStates> that should be used for alignment.\n */\nmxGuide.prototype.setStates = function(states)\n{\n\tthis.states = states;\n};\n\n/**\n * Function: isEnabledForEvent\n * \n * Returns true if the guide should be enabled for the given native event. This\n * implementation always returns true.\n */\nmxGuide.prototype.isEnabledForEvent = function(evt)\n{\n\treturn true;\n};\n\n/**\n * Function: getGuideTolerance\n * \n * Returns the tolerance for the guides. Default value is gridSize / 2.\n */\nmxGuide.prototype.getGuideTolerance = function(gridEnabled)\n{\n\treturn (gridEnabled && this.graph.gridEnabled) ? this.graph.gridSize / 2 : this.tolerance;\n};\n\n/**\n * Function: createGuideShape\n * \n * Returns the mxShape to be used for painting the respective guide. This\n * implementation returns a new, dashed and crisp <mxPolyline> using\n * <mxConstants.GUIDE_COLOR> and <mxConstants.GUIDE_STROKEWIDTH> as the format.\n * \n * Parameters:\n * \n * horizontal - Boolean that specifies which guide should be created.\n */\nmxGuide.prototype.createGuideShape = function(horizontal)\n{\n\tvar guide = new mxPolyline([], mxConstants.GUIDE_COLOR, mxConstants.GUIDE_STROKEWIDTH);\n\tguide.isDashed = true;\n\t\n\treturn guide;\n};\n\n/**\n * Function: isStateIgnored\n * \n * Returns true if the given state should be ignored.\n */\nmxGuide.prototype.isStateIgnored = function(state)\n{\n\treturn false;\n};\n\n/**\n * Function: move\n * \n * Moves the <bounds> by the given <mxPoint> and returnt the snapped point.\n */\nmxGuide.prototype.move = function(bounds, delta, gridEnabled, clone)\n{\n\tif (this.states != null && (this.horizontal || this.vertical) && bounds != null && delta != null)\n\t{\n\t\tvar scale = this.graph.getView().scale;\n\t\tvar tt = this.getGuideTolerance(gridEnabled) * scale;\n\t\tvar b = bounds.clone();\n\t\tb.x += delta.x;\n\t\tb.y += delta.y;\n\t\tvar overrideX = false;\n\t\tvar stateX = null;\n\t\tvar valueX = null;\n\t\tvar overrideY = false;\n\t\tvar stateY = null;\n\t\tvar valueY = null;\n\t\tvar ttX = tt;\n\t\tvar ttY = tt;\n\t\tvar left = b.x;\n\t\tvar right = b.x + b.width;\n\t\tvar center = b.getCenterX();\n\t\tvar top = b.y;\n\t\tvar bottom = b.y + b.height;\n\t\tvar middle = b.getCenterY();\n\t\n\t\t// Snaps the left, center and right to the given x-coordinate\n\t\tfunction snapX(x, state, centerAlign)\n\t\t{\n\t\t\tvar override = false;\n\t\t\t\n\t\t\tif (centerAlign && Math.abs(x - center) < ttX)\n\t\t\t{\n\t\t\t\tdelta.x = x - bounds.getCenterX();\n\t\t\t\tttX = Math.abs(x - center);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (!centerAlign)\n\t\t\t{\n\t\t\t\tif (Math.abs(x - left) < ttX)\n\t\t\t\t{\n\t\t\t\t\tdelta.x = x - bounds.x;\n\t\t\t\t\tttX = Math.abs(x - left);\n\t\t\t\t\toverride = true;\n\t\t\t\t}\n\t\t\t\telse if (Math.abs(x - right) < ttX)\n\t\t\t\t{\n\t\t\t\t\tdelta.x = x - bounds.x - bounds.width;\n\t\t\t\t\tttX = Math.abs(x - right);\n\t\t\t\t\toverride = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (override)\n\t\t\t{\n\t\t\t\tstateX = state;\n\t\t\t\tvalueX = x;\n\t\t\t\t\n\t\t\t\tif (this.guideX == null)\n\t\t\t\t{\n\t\t\t\t\tthis.guideX = this.createGuideShape(true);\n\t\t\t\t\t\n\t\t\t\t\t// Makes sure to use either VML or SVG shapes in order to implement\n\t\t\t\t\t// event-transparency on the background area of the rectangle since\n\t\t\t\t\t// HTML shapes do not let mouseevents through even when transparent\n\t\t\t\t\tthis.guideX.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\t\tthis.guideX.pointerEvents = false;\n\t\t\t\t\tthis.guideX.init(this.graph.getView().getOverlayPane());\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\toverrideX = overrideX || override;\n\t\t};\n\t\t\n\t\t// Snaps the top, middle or bottom to the given y-coordinate\n\t\tfunction snapY(y, state, centerAlign)\n\t\t{\n\t\t\tvar override = false;\n\t\t\t\n\t\t\tif (centerAlign && Math.abs(y - middle) < ttY)\n\t\t\t{\n\t\t\t\tdelta.y = y - bounds.getCenterY();\n\t\t\t\tttY = Math.abs(y -  middle);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (!centerAlign)\n\t\t\t{\n\t\t\t\tif (Math.abs(y - top) < ttY)\n\t\t\t\t{\n\t\t\t\t\tdelta.y = y - bounds.y;\n\t\t\t\t\tttY = Math.abs(y - top);\n\t\t\t\t\toverride = true;\n\t\t\t\t}\n\t\t\t\telse if (Math.abs(y - bottom) < ttY)\n\t\t\t\t{\n\t\t\t\t\tdelta.y = y - bounds.y - bounds.height;\n\t\t\t\t\tttY = Math.abs(y - bottom);\n\t\t\t\t\toverride = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (override)\n\t\t\t{\n\t\t\t\tstateY = state;\n\t\t\t\tvalueY = y;\n\t\t\t\t\n\t\t\t\tif (this.guideY == null)\n\t\t\t\t{\n\t\t\t\t\tthis.guideY = this.createGuideShape(false);\n\t\t\t\t\t\n\t\t\t\t\t// Makes sure to use either VML or SVG shapes in order to implement\n\t\t\t\t\t// event-transparency on the background area of the rectangle since\n\t\t\t\t\t// HTML shapes do not let mouseevents through even when transparent\n\t\t\t\t\tthis.guideY.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\t\tthis.guideY.pointerEvents = false;\n\t\t\t\t\tthis.guideY.init(this.graph.getView().getOverlayPane());\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\toverrideY = overrideY || override;\n\t\t};\n\t\t\n\t\tfor (var i = 0; i < this.states.length; i++)\n\t\t{\n\t\t\tvar state =  this.states[i];\n\t\t\t\n\t\t\tif (state != null && !this.isStateIgnored(state))\n\t\t\t{\n\t\t\t\t// Align x\n\t\t\t\tif (this.horizontal)\n\t\t\t\t{\n\t\t\t\t\tsnapX.call(this, state.getCenterX(), state, true);\n\t\t\t\t\tsnapX.call(this, state.x, state, false);\n\t\t\t\t\tsnapX.call(this, state.x + state.width, state, false);\n\t\t\t\t\t\n\t\t\t\t\t// Aligns left and right of shape to center of page\n\t\t\t\t\tif (state.cell == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tsnapX.call(this, state.getCenterX(), state, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Align y\n\t\t\t\tif (this.vertical)\n\t\t\t\t{\n\t\t\t\t\tsnapY.call(this, state.getCenterY(), state, true);\n\t\t\t\t\tsnapY.call(this, state.y, state, false);\n\t\t\t\t\tsnapY.call(this, state.y + state.height, state, false);\n\t\t\t\t\t\n\t\t\t\t\t// Aligns left and right of shape to center of page\n\t\t\t\t\tif (state.cell == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tsnapY.call(this, state.getCenterY(), state, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Moves cells to the raster if not aligned\n\t\tthis.graph.snapDelta(delta, bounds, !gridEnabled, overrideX, overrideY);\n\t\tdelta = this.getDelta(bounds, stateX, delta.x, stateY, delta.y)\n\t\t\n\t\t// Redraws the guides\n\t\tvar c = this.graph.container;\n\t\t\n\t\tif (!overrideX && this.guideX != null)\n\t\t{\n\t\t\tthis.guideX.node.style.visibility = 'hidden';\n\t\t}\n\t\telse if (this.guideX != null)\n\t\t{\n\t\t\tvar minY = null;\n        \tvar maxY = null;\n        \t\n\t\t\tif (stateX != null && bounds != null)\n\t\t\t{\n\t\t\t\tminY = Math.min(bounds.y + delta.y - this.graph.panDy, stateX.y);\n\t\t\t\tmaxY = Math.max(bounds.y + bounds.height + delta.y - this.graph.panDy, stateX.y + stateX.height);\n\t\t\t}\n\t\t\t\n\t\t\tif (minY != null && maxY != null)\n\t\t\t{\n\t\t\t\tthis.guideX.points = [new mxPoint(valueX, minY), new mxPoint(valueX, maxY)];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.guideX.points = [new mxPoint(valueX, -this.graph.panDy),\n\t\t\t\t\tnew mxPoint(valueX, c.scrollHeight - 3 - this.graph.panDy)];\n\t\t\t}\n\t\t\t\n\t\t\tthis.guideX.stroke = this.getGuideColor(stateX, true);\n\t\t\tthis.guideX.node.style.visibility = 'visible';\n\t\t\tthis.guideX.redraw();\n\t\t}\n\t\t\n\t\tif (!overrideY && this.guideY != null)\n\t\t{\n\t\t\tthis.guideY.node.style.visibility = 'hidden';\n\t\t}\n\t\telse if (this.guideY != null)\n\t\t{\n\t\t\tvar minX = null;\n        \tvar maxX = null;\n        \t\n\t\t\tif (stateY != null && bounds != null)\n\t\t\t{\n\t\t\t\tminX = Math.min(bounds.x + delta.x - this.graph.panDx, stateY.x);\n\t\t\t\tmaxX = Math.max(bounds.x + bounds.width + delta.x - this.graph.panDx, stateY.x + stateY.width);\n\t\t\t}\n\t\t\t\n\t\t\tif (minX != null && maxX != null)\n\t\t\t{\n\t\t\t\tthis.guideY.points = [new mxPoint(minX, valueY), new mxPoint(maxX, valueY)];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.guideY.points = [new mxPoint(-this.graph.panDx, valueY),\n\t\t\t\t\tnew mxPoint(c.scrollWidth - 3 - this.graph.panDx, valueY)];\n\t\t\t}\n\t\t\t\n\t\t\tthis.guideY.stroke = this.getGuideColor(stateY, false);\n\t\t\tthis.guideY.node.style.visibility = 'visible';\n\t\t\tthis.guideY.redraw();\n\t\t}\n\t}\n\t\n\treturn delta;\n};\n\n/**\n * Function: getDelta\n * \n * Rounds to pixels for virtual states (eg. page guides)\n */\nmxGuide.prototype.getDelta = function(bounds, stateX, dx, stateY, dy)\n{\n\tvar s = this.graph.view.scale;\n\t\n\tif (this.rounded || (stateX != null && stateX.cell == null))\n\t{\n\t\tdx = Math.round((bounds.x + dx) / s) * s - bounds.x;\n\t}\n\n\tif (this.rounded || (stateY != null && stateY.cell == null))\n\t{\n\t\tdy = Math.round((bounds.y + dy) / s) * s - bounds.y;\n\t}\n\t\n\treturn new mxPoint(dx, dy);\n};\n\n/**\n * Function: getGuideColor\n * \n * Returns the color for the given state.\n */\nmxGuide.prototype.getGuideColor = function(state, horizontal)\n{\n\treturn mxConstants.GUIDE_COLOR;\n};\n\n/**\n * Function: hide\n * \n * Hides all current guides.\n */\nmxGuide.prototype.hide = function()\n{\n\tthis.setVisible(false);\n};\n\n/**\n * Function: setVisible\n * \n * Shows or hides the current guides.\n */\nmxGuide.prototype.setVisible = function(visible)\n{\n\tif (this.guideX != null)\n\t{\n\t\tthis.guideX.node.style.visibility = (visible) ? 'visible' : 'hidden';\n\t}\n\t\n\tif (this.guideY != null)\n\t{\n\t\tthis.guideY.node.style.visibility = (visible) ? 'visible' : 'hidden';\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys all resources that this object uses.\n */\nmxGuide.prototype.destroy = function()\n{\n\tif (this.guideX != null)\n\t{\n\t\tthis.guideX.destroy();\n\t\tthis.guideX = null;\n\t}\n\t\n\tif (this.guideY != null)\n\t{\n\t\tthis.guideY.destroy();\n\t\tthis.guideY = null;\n\t}\n};\n\n__mxOutput.mxGuide = typeof mxGuide !== 'undefined' ? mxGuide : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxShape\n *\n * Base class for all shapes. A shape in mxGraph is a\n * separate implementation for SVG, VML and HTML. Which\n * implementation to use is controlled by the <dialect>\n * property which is assigned from within the <mxCellRenderer>\n * when the shape is created. The dialect must be assigned\n * for a shape, and it does normally depend on the browser and\n * the confiuration of the graph (see <mxGraph> rendering hint).\n *\n * For each supported shape in SVG and VML, a corresponding\n * shape exists in mxGraph, namely for text, image, rectangle,\n * rhombus, ellipse and polyline. The other shapes are a\n * combination of these shapes (eg. label and swimlane)\n * or they consist of one or more (filled) path objects\n * (eg. actor and cylinder). The HTML implementation is\n * optional but may be required for a HTML-only view of\n * the graph.\n *\n * Custom Shapes:\n *\n * To extend from this class, the basic code looks as follows.\n * In the special case where the custom shape consists only of\n * one filled region or one filled region and an additional stroke\n * the <mxActor> and <mxCylinder> should be subclassed,\n * respectively.\n *\n * (code)\n * function CustomShape() { }\n * \n * CustomShape.prototype = new mxShape();\n * CustomShape.prototype.constructor = CustomShape; \n * (end)\n *\n * To register a custom shape in an existing graph instance,\n * one must register the shape under a new name in the graph's\n * cell renderer as follows:\n *\n * (code)\n * mxCellRenderer.registerShape('customShape', CustomShape);\n * (end)\n *\n * The second argument is the name of the constructor.\n *\n * In order to use the shape you can refer to the given name above\n * in a stylesheet. For example, to change the shape for the default\n * vertex style, the following code is used:\n *\n * (code)\n * var style = graph.getStylesheet().getDefaultVertexStyle();\n * style[mxConstants.STYLE_SHAPE] = 'customShape';\n * (end)\n * \n * Constructor: mxShape\n *\n * Constructs a new shape.\n */\nfunction mxShape(stencil)\n{\n\tthis.stencil = stencil;\n\tthis.initStyles();\n};\n\n/**\n * Variable: dialect\n *\n * Holds the dialect in which the shape is to be painted.\n * This can be one of the DIALECT constants in <mxConstants>.\n */\nmxShape.prototype.dialect = null;\n\n/**\n * Variable: scale\n *\n * Holds the scale in which the shape is being painted.\n */\nmxShape.prototype.scale = 1;\n\n/**\n * Variable: antiAlias\n * \n * Rendering hint for configuring the canvas.\n */\nmxShape.prototype.antiAlias = true;\n\n/**\n * Variable: minSvgStrokeWidth\n * \n * Minimum stroke width for SVG output.\n */\nmxShape.prototype.minSvgStrokeWidth = 1;\n\n/**\n * Variable: bounds\n *\n * Holds the <mxRectangle> that specifies the bounds of this shape.\n */\nmxShape.prototype.bounds = null;\n\n/**\n * Variable: points\n *\n * Holds the array of <mxPoints> that specify the points of this shape.\n */\nmxShape.prototype.points = null;\n\n/**\n * Variable: node\n *\n * Holds the outermost DOM node that represents this shape.\n */\nmxShape.prototype.node = null;\n \n/**\n * Variable: state\n * \n * Optional reference to the corresponding <mxCellState>.\n */\nmxShape.prototype.state = null;\n\n/**\n * Variable: style\n *\n * Optional reference to the style of the corresponding <mxCellState>.\n */\nmxShape.prototype.style = null;\n\n/**\n * Variable: boundingBox\n *\n * Contains the bounding box of the shape, that is, the smallest rectangle\n * that includes all pixels of the shape.\n */\nmxShape.prototype.boundingBox = null;\n\n/**\n * Variable: stencil\n *\n * Holds the <mxStencil> that defines the shape.\n */\nmxShape.prototype.stencil = null;\n\n/**\n * Variable: svgStrokeTolerance\n *\n * Event-tolerance for SVG strokes (in px). Default is 8. This is only passed\n * to the canvas in <createSvgCanvas> if <pointerEvents> is true.\n */\nmxShape.prototype.svgStrokeTolerance = 8;\n\n/**\n * Variable: pointerEvents\n * \n * Specifies if pointer events should be handled. Default is true.\n */\nmxShape.prototype.pointerEvents = true;\n\n/**\n * Variable: svgPointerEvents\n * \n * Specifies if pointer events should be handled. Default is true.\n */\nmxShape.prototype.svgPointerEvents = 'all';\n\n/**\n * Variable: shapePointerEvents\n * \n * Specifies if pointer events outside of shape should be handled. Default\n * is false.\n */\nmxShape.prototype.shapePointerEvents = false;\n\n/**\n * Variable: stencilPointerEvents\n * \n * Specifies if pointer events outside of stencils should be handled. Default\n * is false. Set this to true for backwards compatibility with the 1.x branch.\n */\nmxShape.prototype.stencilPointerEvents = false;\n\n/**\n * Variable: vmlScale\n * \n * Scale for improving the precision of VML rendering. Default is 1.\n */\nmxShape.prototype.vmlScale = 1;\n\n/**\n * Variable: outline\n * \n * Specifies if the shape should be drawn as an outline. This disables all\n * fill colors and can be used to disable other drawing states that should\n * not be painted for outlines. Default is false. This should be set before\n * calling <apply>.\n */\nmxShape.prototype.outline = false;\n\n/**\n * Variable: visible\n * \n * Specifies if the shape is visible. Default is true.\n */\nmxShape.prototype.visible = true;\n\n/**\n * Variable: useSvgBoundingBox\n * \n * Allows to use the SVG bounding box in SVG. Default is false for performance\n * reasons.\n */\nmxShape.prototype.useSvgBoundingBox = false;\n\n/**\n * Function: init\n *\n * Initializes the shape by creaing the DOM node using <create>\n * and adding it into the given container.\n *\n * Parameters:\n *\n * container - DOM node that will contain the shape.\n */\nmxShape.prototype.init = function(container)\n{\n\tif (this.node == null)\n\t{\n\t\tthis.node = this.create(container);\n\t\t\n\t\tif (container != null)\n\t\t{\n\t\t\tcontainer.appendChild(this.node);\n\t\t}\n\t}\n};\n\n/**\n * Function: initStyles\n *\n * Sets the styles to their default values.\n */\nmxShape.prototype.initStyles = function(container)\n{\n\tthis.strokewidth = 1;\n\tthis.rotation = 0;\n\tthis.opacity = 100;\n\tthis.fillOpacity = 100;\n\tthis.strokeOpacity = 100;\n\tthis.flipH = false;\n\tthis.flipV = false;\n};\n\n/**\n * Function: isParseVml\n * \n * Specifies if any VML should be added via insertAdjacentHtml to the DOM. This\n * is only needed in IE8 and only if the shape contains VML markup. This method\n * returns true.\n */\nmxShape.prototype.isParseVml = function()\n{\n\treturn true;\n};\n\n/**\n * Function: isHtmlAllowed\n * \n * Returns true if HTML is allowed for this shape. This implementation always\n * returns false.\n */\nmxShape.prototype.isHtmlAllowed = function()\n{\n\treturn false;\n};\n\n/**\n * Function: getSvgScreenOffset\n * \n * Returns 0, or 0.5 if <strokewidth> % 2 == 1.\n */\nmxShape.prototype.getSvgScreenOffset = function()\n{\n\tvar sw = this.stencil && this.stencil.strokewidth != 'inherit' ? Number(this.stencil.strokewidth) : this.strokewidth;\n\t\n\treturn (mxUtils.mod(Math.max(1, Math.round(sw * this.scale)), 2) == 1) ? 0.5 : 0;\n};\n\n/**\n * Function: create\n *\n * Creates and returns the DOM node(s) for the shape in\n * the given container. This implementation invokes\n * <createSvg>, <createHtml> or <createVml> depending\n * on the <dialect> and style settings.\n *\n * Parameters:\n *\n * container - DOM node that will contain the shape.\n */\nmxShape.prototype.create = function(container)\n{\n\tvar node = null;\n\t\n\tif (container != null && container.ownerSVGElement != null)\n\t{\n\t\tnode = this.createSvg(container);\n\t}\n\telse if (document.documentMode == 8 || !mxClient.IS_VML ||\n\t\t(this.dialect != mxConstants.DIALECT_VML && this.isHtmlAllowed()))\n\t{\n\t\tnode = this.createHtml(container);\n\t}\n\telse\n\t{\n\t\tnode = this.createVml(container);\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: createSvg\n *\n * Creates and returns the SVG node(s) to represent this shape.\n */\nmxShape.prototype.createSvg = function()\n{\n\treturn document.createElementNS(mxConstants.NS_SVG, 'g');\n};\n\n/**\n * Function: createVml\n *\n * Creates and returns the VML node to represent this shape.\n */\nmxShape.prototype.createVml = function()\n{\n\tvar node = document.createElement(mxClient.VML_PREFIX + ':group');\n\tnode.style.position = 'absolute';\n\t\n\treturn node;\n};\n\n/**\n * Function: createHtml\n *\n * Creates and returns the HTML DOM node(s) to represent\n * this shape. This implementation falls back to <createVml>\n * so that the HTML creation is optional.\n */\nmxShape.prototype.createHtml = function()\n{\n\tvar node = document.createElement('div');\n\tnode.style.position = 'absolute';\n\t\n\treturn node;\n};\n\n/**\n * Function: reconfigure\n *\n * Reconfigures this shape. This will update the colors etc in\n * addition to the bounds or points.\n */\nmxShape.prototype.reconfigure = function()\n{\n\tthis.redraw();\n};\n\n/**\n * Function: redraw\n *\n * Creates and returns the SVG node(s) to represent this shape.\n */\nmxShape.prototype.redraw = function()\n{\n\tthis.updateBoundsFromPoints();\n\t\n\tif (this.visible && this.checkBounds())\n\t{\n\t\tthis.node.style.visibility = 'visible';\n\t\tthis.clear();\n\t\t\n\t\tif (this.node.nodeName == 'DIV' && (this.isHtmlAllowed() || !mxClient.IS_VML))\n\t\t{\n\t\t\tthis.redrawHtmlShape();\n\t\t}\n\t\telse\n\t\t{\t\n\t\t\tthis.redrawShape();\n\t\t}\n\n\t\tthis.updateBoundingBox();\n\t}\n\telse\n\t{\n\t\tthis.node.style.visibility = 'hidden';\n\t\tthis.boundingBox = null;\n\t}\n};\n\n/**\n * Function: clear\n * \n * Removes all child nodes and resets all CSS.\n */\nmxShape.prototype.clear = function()\n{\n\tif (this.node.ownerSVGElement != null)\n\t{\n\t\twhile (this.node.lastChild != null)\n\t\t{\n\t\t\tthis.node.removeChild(this.node.lastChild);\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.node.style.cssText = 'position:absolute;' + ((this.cursor != null) ?\n\t\t\t('cursor:' + this.cursor + ';') : '');\n\t\tthis.node.innerHTML = '';\n\t}\n};\n\n/**\n * Function: updateBoundsFromPoints\n * \n * Updates the bounds based on the points.\n */\nmxShape.prototype.updateBoundsFromPoints = function()\n{\n\tvar pts = this.points;\n\t\n\tif (pts != null && pts.length > 0 && pts[0] != null)\n\t{\n\t\tthis.bounds = new mxRectangle(Number(pts[0].x), Number(pts[0].y), 1, 1);\n\t\t\n\t\tfor (var i = 1; i < this.points.length; i++)\n\t\t{\n\t\t\tif (pts[i] != null)\n\t\t\t{\n\t\t\t\tthis.bounds.add(new mxRectangle(Number(pts[i].x), Number(pts[i].y), 1, 1));\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getLabelBounds\n * \n * Returns the <mxRectangle> for the label bounds of this shape, based on the\n * given scaled and translated bounds of the shape. This method should not\n * change the rectangle in-place. This implementation returns the given rect.\n */\nmxShape.prototype.getLabelBounds = function(rect)\n{\n\tvar d = mxUtils.getValue(this.style, mxConstants.STYLE_DIRECTION, mxConstants.DIRECTION_EAST);\n\tvar bounds = rect;\n\t\n\t// Normalizes argument for getLabelMargins hook\n\tif (d != mxConstants.DIRECTION_SOUTH && d != mxConstants.DIRECTION_NORTH &&\n\t\tthis.state != null && this.state.text != null &&\n\t\tthis.state.text.isPaintBoundsInverted())\n\t{\n\t\tbounds = bounds.clone();\n\t\tvar tmp = bounds.width;\n\t\tbounds.width = bounds.height;\n\t\tbounds.height = tmp;\n\t}\n\t\t\n\tvar m = this.getLabelMargins(bounds);\n\t\n\tif (m != null)\n\t{\n\t\tvar flipH = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPH, false) == '1';\n\t\tvar flipV = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPV, false) == '1';\n\t\t\n\t\t// Handles special case for vertical labels\n\t\tif (this.state != null && this.state.text != null &&\n\t\t\tthis.state.text.isPaintBoundsInverted())\n\t\t{\n\t\t\tvar tmp = m.x;\n\t\t\tm.x = m.height;\n\t\t\tm.height = m.width;\n\t\t\tm.width = m.y;\n\t\t\tm.y = tmp;\n\n\t\t\ttmp = flipH;\n\t\t\tflipH = flipV;\n\t\t\tflipV = tmp;\n\t\t}\n\t\t\n\t\treturn mxUtils.getDirectedBounds(rect, m, this.style, flipH, flipV);\n\t}\n\t\n\treturn rect;\n};\n\n/**\n * Function: getLabelMargins\n * \n * Returns the scaled top, left, bottom and right margin to be used for\n * computing the label bounds as an <mxRectangle>, where the bottom and right\n * margin are defined in the width and height of the rectangle, respectively.\n */\nmxShape.prototype.getLabelMargins= function(rect)\n{\n\treturn null;\n};\n\n/**\n * Function: checkBounds\n * \n * Returns true if the bounds are not null and all of its variables are numeric.\n */\nmxShape.prototype.checkBounds = function()\n{\n\treturn (!isNaN(this.scale) && isFinite(this.scale) && this.scale > 0 &&\n\t\t\tthis.bounds != null && !isNaN(this.bounds.x) && !isNaN(this.bounds.y) &&\n\t\t\t!isNaN(this.bounds.width) && !isNaN(this.bounds.height) &&\n\t\t\tthis.bounds.width > 0 && this.bounds.height > 0);\n};\n\n/**\n * Function: createVmlGroup\n *\n * Returns the temporary element used for rendering in IE8 standards mode.\n */\nmxShape.prototype.createVmlGroup = function()\n{\n\tvar node = document.createElement(mxClient.VML_PREFIX + ':group');\n\tnode.style.position = 'absolute';\n\tnode.style.width = this.node.style.width;\n\tnode.style.height = this.node.style.height;\n\t\n\treturn node;\n};\n\n/**\n * Function: redrawShape\n *\n * Updates the SVG or VML shape.\n */\nmxShape.prototype.redrawShape = function()\n{\n\tvar canvas = this.createCanvas();\n\t\n\tif (canvas != null)\n\t{\n\t\t// Specifies if events should be handled\n\t\tcanvas.pointerEvents = this.pointerEvents;\n\t\n\t\tthis.beforePaint(canvas);\n\t\tthis.paint(canvas);\n\t\tthis.afterPaint(canvas);\n\t\n\t\tif (this.node != canvas.root)\n\t\t{\n\t\t\t// Forces parsing in IE8 standards mode - slow! avoid\n\t\t\tthis.node.insertAdjacentHTML('beforeend', canvas.root.outerHTML);\n\t\t}\n\t\n\t\tif (this.node.nodeName == 'DIV' && document.documentMode == 8)\n\t\t{\n\t\t\t// Makes DIV transparent to events for IE8 in IE8 standards\n\t\t\t// mode (Note: Does not work for IE9 in IE8 standards mode\n\t\t\t// and not for IE11 in enterprise mode)\n\t\t\tthis.node.style.filter = '';\n\t\t\t\n\t\t\t// Adds event transparency in IE8 standards\n\t\t\tmxUtils.addTransparentBackgroundFilter(this.node);\n\t\t}\n\t\t\n\t\tthis.destroyCanvas(canvas);\n\t}\n};\n\n/**\n * Function: createCanvas\n * \n * Creates a new canvas for drawing this shape. May return null.\n */\nmxShape.prototype.createCanvas = function()\n{\n\tvar canvas = null;\n\t\n\t// LATER: Check if reusing existing DOM nodes improves performance\n\tif (this.node.ownerSVGElement != null)\n\t{\n\t\tcanvas = this.createSvgCanvas();\n\t}\n\telse if (mxClient.IS_VML)\n\t{\n\t\tthis.updateVmlContainer();\n\t\tcanvas = this.createVmlCanvas();\n\t}\n\t\n\tif (canvas != null && this.outline)\n\t{\n\t\tcanvas.setStrokeWidth(this.strokewidth);\n\t\tcanvas.setStrokeColor(this.stroke);\n\t\t\n\t\tif (this.isDashed != null)\n\t\t{\n\t\t\tcanvas.setDashed(this.isDashed);\n\t\t}\n\t\t\n\t\tcanvas.setStrokeWidth = function() {};\n\t\tcanvas.setStrokeColor = function() {};\n\t\tcanvas.setFillColor = function() {};\n\t\tcanvas.setGradient = function() {};\n\t\tcanvas.setDashed = function() {};\n\t\tcanvas.text = function() {};\n\t}\n\n\treturn canvas;\n};\n\n/**\n * Function: createSvgCanvas\n * \n * Creates and returns an <mxSvgCanvas2D> for rendering this shape.\n */\nmxShape.prototype.createSvgCanvas = function()\n{\n\tvar canvas = new mxSvgCanvas2D(this.node, false);\n\tcanvas.strokeTolerance = (this.pointerEvents) ? this.svgStrokeTolerance : 0;\n\tcanvas.pointerEventsValue = this.svgPointerEvents;\n\tvar off = this.getSvgScreenOffset();\n\n\tif (off != 0)\n\t{\n\t\tthis.node.setAttribute('transform', 'translate(' + off + ',' + off + ')');\n\t}\n\telse\n\t{\n\t\tthis.node.removeAttribute('transform');\n\t}\n\n\tcanvas.minStrokeWidth = this.minSvgStrokeWidth;\n\t\n\tif (!this.antiAlias)\n\t{\n\t\t// Rounds all numbers in the SVG output to integers\n\t\tcanvas.format = function(value)\n\t\t{\n\t\t\treturn Math.round(parseFloat(value));\n\t\t};\n\t}\n\t\n\treturn canvas;\n};\n\n/**\n * Function: createVmlCanvas\n * \n * Creates and returns an <mxVmlCanvas2D> for rendering this shape.\n */\nmxShape.prototype.createVmlCanvas = function()\n{\n\t// Workaround for VML rendering bug in IE8 standards mode\n\tvar node = (document.documentMode == 8 && this.isParseVml()) ? this.createVmlGroup() : this.node;\n\tvar canvas = new mxVmlCanvas2D(node, false);\n\t\n\tif (node.tagUrn != '')\n\t{\n\t\tvar w = Math.max(1, Math.round(this.bounds.width));\n\t\tvar h = Math.max(1, Math.round(this.bounds.height));\n\t\tnode.coordsize = (w * this.vmlScale) + ',' + (h * this.vmlScale);\n\t\tcanvas.scale(this.vmlScale);\n\t\tcanvas.vmlScale = this.vmlScale;\n\t}\n\n\t// Painting relative to top, left shape corner\n\tvar s = this.scale;\n\tcanvas.translate(-Math.round(this.bounds.x / s), -Math.round(this.bounds.y / s));\n\t\n\treturn canvas;\n};\n\n/**\n * Function: updateVmlContainer\n * \n * Updates the bounds of the VML container.\n */\nmxShape.prototype.updateVmlContainer = function()\n{\n\tthis.node.style.left = Math.round(this.bounds.x) + 'px';\n\tthis.node.style.top = Math.round(this.bounds.y) + 'px';\n\tvar w = Math.max(1, Math.round(this.bounds.width));\n\tvar h = Math.max(1, Math.round(this.bounds.height));\n\tthis.node.style.width = w + 'px';\n\tthis.node.style.height = h + 'px';\n\tthis.node.style.overflow = 'visible';\n};\n\n/**\n * Function: redrawHtml\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.redrawHtmlShape = function()\n{\n\t// LATER: Refactor methods\n\tthis.updateHtmlBounds(this.node);\n\tthis.updateHtmlFilters(this.node);\n\tthis.updateHtmlColors(this.node);\n};\n\n/**\n * Function: updateHtmlFilters\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.updateHtmlFilters = function(node)\n{\n\tvar f = '';\n\t\n\tif (this.opacity < 100)\n\t{\n\t\tf += 'alpha(opacity=' + (this.opacity) + ')';\n\t}\n\t\n\tif (this.isShadow)\n\t{\n\t\t// FIXME: Cannot implement shadow transparency with filter\n\t\tf += 'progid:DXImageTransform.Microsoft.dropShadow (' +\n\t\t\t'OffX=\\'' + Math.round(mxConstants.SHADOW_OFFSET_X * this.scale) + '\\', ' +\n\t\t\t'OffY=\\'' + Math.round(mxConstants.SHADOW_OFFSET_Y * this.scale) + '\\', ' +\n\t\t\t'Color=\\'' + mxConstants.VML_SHADOWCOLOR + '\\')';\n\t}\n\t\n\tif (this.fill != null && this.fill != mxConstants.NONE && this.gradient && this.gradient != mxConstants.NONE)\n\t{\n\t\tvar start = this.fill;\n\t\tvar end = this.gradient;\n\t\tvar type = '0';\n\t\t\n\t\tvar lookup = {east:0,south:1,west:2,north:3};\n\t\tvar dir = (this.direction != null) ? lookup[this.direction] : 0;\n\t\t\n\t\tif (this.gradientDirection != null)\n\t\t{\n\t\t\tdir = mxUtils.mod(dir + lookup[this.gradientDirection] - 1, 4);\n\t\t}\n\n\t\tif (dir == 1)\n\t\t{\n\t\t\ttype = '1';\n\t\t\tvar tmp = start;\n\t\t\tstart = end;\n\t\t\tend = tmp;\n\t\t}\n\t\telse if (dir == 2)\n\t\t{\n\t\t\tvar tmp = start;\n\t\t\tstart = end;\n\t\t\tend = tmp;\n\t\t}\n\t\telse if (dir == 3)\n\t\t{\n\t\t\ttype = '1';\n\t\t}\n\t\t\n\t\tf += 'progid:DXImageTransform.Microsoft.gradient(' +\n\t\t\t'startColorStr=\\'' + start + '\\', endColorStr=\\'' + end +\n\t\t\t'\\', gradientType=\\'' + type + '\\')';\n\t}\n\n\tnode.style.filter = f;\n};\n\n/**\n * Function: updateHtmlColors\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.updateHtmlColors = function(node)\n{\n\tvar color = this.stroke;\n\t\n\tif (color != null && color != mxConstants.NONE)\n\t{\n\t\tnode.style.borderColor = color;\n\n\t\tif (this.isDashed)\n\t\t{\n\t\t\tnode.style.borderStyle = 'dashed';\n\t\t}\n\t\telse if (this.strokewidth > 0)\n\t\t{\n\t\t\tnode.style.borderStyle = 'solid';\n\t\t}\n\n\t\tnode.style.borderWidth = Math.max(1, Math.ceil(this.strokewidth * this.scale)) + 'px';\n\t}\n\telse\n\t{\n\t\tnode.style.borderWidth = '0px';\n\t}\n\n\tcolor = (this.outline) ? null : this.fill;\n\t\n\tif (color != null && color != mxConstants.NONE)\n\t{\n\t\tnode.style.backgroundColor = color;\n\t\tnode.style.backgroundImage = 'none';\n\t}\n\telse if (this.pointerEvents)\n\t{\n\t\t node.style.backgroundColor = 'transparent';\n\t}\n\telse if (document.documentMode == 8)\n\t{\n\t\tmxUtils.addTransparentBackgroundFilter(node);\n\t}\n\telse\n\t{\n\t\tthis.setTransparentBackgroundImage(node);\n\t}\n};\n\n/**\n * Function: updateHtmlBounds\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.updateHtmlBounds = function(node)\n{\n\tvar sw = (document.documentMode >= 9) ? 0 : Math.ceil(this.strokewidth * this.scale);\n\tnode.style.borderWidth = Math.max(1, sw) + 'px';\n\tnode.style.overflow = 'hidden';\n\t\n\tnode.style.left = Math.round(this.bounds.x - sw / 2) + 'px';\n\tnode.style.top = Math.round(this.bounds.y - sw / 2) + 'px';\n\n\tif (document.compatMode == 'CSS1Compat')\n\t{\n\t\tsw = -sw;\n\t}\n\t\n\tnode.style.width = Math.round(Math.max(0, this.bounds.width + sw)) + 'px';\n\tnode.style.height = Math.round(Math.max(0, this.bounds.height + sw)) + 'px';\n};\n\n/**\n * Function: destroyCanvas\n * \n * Destroys the given canvas which was used for drawing. This implementation\n * increments the reference counts on all shared gradients used in the canvas.\n */\nmxShape.prototype.destroyCanvas = function(canvas)\n{\n\t// Manages reference counts\n\tif (canvas instanceof mxSvgCanvas2D)\n\t{\n\t\t// Increments ref counts\n\t\tfor (var key in canvas.gradients)\n\t\t{\n\t\t\tvar gradient = canvas.gradients[key];\n\t\t\t\n\t\t\tif (gradient != null)\n\t\t\t{\n\t\t\t\tgradient.mxRefCount = (gradient.mxRefCount || 0) + 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.releaseSvgGradients(this.oldGradients);\n\t\tthis.oldGradients = canvas.gradients;\n\t}\n};\n\n/**\n * Function: beforePaint\n * \n * Invoked before paint is called.\n */\nmxShape.prototype.beforePaint = function(c) { }\n\n/**\n * Function: afterPaint\n * \n * Invokes after paint was called.\n */\nmxShape.prototype.afterPaint = function(c) { }\n\n/**\n * Function: paint\n * \n * Generic rendering code.\n */\nmxShape.prototype.paint = function(c)\n{\n\tvar strokeDrawn = false;\n\t\n\tif (c != null && this.outline)\n\t{\n\t\tvar stroke = c.stroke;\n\t\t\n\t\tc.stroke = function()\n\t\t{\n\t\t\tstrokeDrawn = true;\n\t\t\tstroke.apply(this, arguments);\n\t\t};\n\n\t\tvar fillAndStroke = c.fillAndStroke;\n\t\t\n\t\tc.fillAndStroke = function()\n\t\t{\n\t\t\tstrokeDrawn = true;\n\t\t\tfillAndStroke.apply(this, arguments);\n\t\t};\n\t}\n\n\t// Scale is passed-through to canvas\n\tvar s = this.scale;\n\tvar x = this.bounds.x / s;\n\tvar y = this.bounds.y / s;\n\tvar w = this.bounds.width / s;\n\tvar h = this.bounds.height / s;\n\n\tif (this.isPaintBoundsInverted())\n\t{\n\t\tvar t = (w - h) / 2;\n\t\tx += t;\n\t\ty -= t;\n\t\tvar tmp = w;\n\t\tw = h;\n\t\th = tmp;\n\t}\n\t\n\tthis.updateTransform(c, x, y, w, h);\n\tthis.configureCanvas(c, x, y, w, h);\n\n\t// Adds background rectangle to capture events\n\tvar bg = null;\n\t\n\tif ((this.stencil == null && this.points == null && this.shapePointerEvents) ||\n\t\t(this.stencil != null && this.stencilPointerEvents))\n\t{\n\t\tvar bb = this.createBoundingBox();\n\t\t\n\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\tbg = this.createTransparentSvgRectangle(bb.x, bb.y, bb.width, bb.height);\n\t\t\tthis.node.appendChild(bg);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar rect = c.createRect('rect', bb.x / s, bb.y / s, bb.width / s, bb.height / s);\n\t\t\trect.appendChild(c.createTransparentFill());\n\t\t\trect.stroked = 'false';\n\t\t\tc.root.appendChild(rect);\n\t\t}\n\t}\n\n\tif (this.stencil != null)\n\t{\n\t\tthis.stencil.drawShape(c, this, x, y, w, h);\n\t}\n\telse\n\t{\n\t\t// Stencils have separate strokewidth\n\t\tc.setStrokeWidth(this.strokewidth);\n\t\t\n\t\tif (this.points != null)\n\t\t{\n\t\t\t// Paints edge shape\n\t\t\tvar pts = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t\t{\n\t\t\t\tif (this.points[i] != null)\n\t\t\t\t{\n\t\t\t\t\tpts.push(new mxPoint(this.points[i].x / s, this.points[i].y / s));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.paintEdgeShape(c, pts);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Paints vertex shape\n\t\t\tthis.paintVertexShape(c, x, y, w, h);\n\t\t}\n\t}\n\t\n\tif (bg != null && c.state != null && c.state.transform != null)\n\t{\n\t\tbg.setAttribute('transform', c.state.transform);\n\t}\n\t\n\t// Draws highlight rectangle if no stroke was used\n\tif (c != null && this.outline && !strokeDrawn)\n\t{\n\t\tc.rect(x, y, w, h);\n\t\tc.stroke();\n\t}\n};\n\n/**\n * Function: configureCanvas\n * \n * Sets the state of the canvas for drawing the shape.\n */\nmxShape.prototype.configureCanvas = function(c, x, y, w, h)\n{\n\tvar dash = null;\n\t\n\tif (this.style != null)\n\t{\n\t\tdash = this.style['dashPattern'];\t\t\n\t}\n\n\tc.setAlpha(this.opacity / 100);\n\tc.setFillAlpha(this.fillOpacity / 100);\n\tc.setStrokeAlpha(this.strokeOpacity / 100);\n\n\t// Sets alpha, colors and gradients\n\tif (this.isShadow != null)\n\t{\n\t\tc.setShadow(this.isShadow);\n\t}\n\t\n\t// Dash pattern\n\tif (this.isDashed != null)\n\t{\n\t\tc.setDashed(this.isDashed, (this.style != null) ?\n\t\t\tmxUtils.getValue(this.style, mxConstants.STYLE_FIX_DASH, false) == 1 : false);\n\t}\n\n\tif (dash != null)\n\t{\n\t\tc.setDashPattern(dash);\n\t}\n\n\tif (this.fill != null && this.fill != mxConstants.NONE && this.gradient && this.gradient != mxConstants.NONE)\n\t{\n\t\tvar b = this.getGradientBounds(c, x, y, w, h);\n\t\tc.setGradient(this.fill, this.gradient, b.x, b.y, b.width, b.height, this.gradientDirection);\n\t}\n\telse\n\t{\n\t\tc.setFillColor(this.fill);\n\t}\n\n\tc.setStrokeColor(this.stroke);\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxShape.prototype.getGradientBounds = function(c, x, y, w, h)\n{\n\treturn new mxRectangle(x, y, w, h);\n};\n\n/**\n * Function: updateTransform\n * \n * Sets the scale and rotation on the given canvas.\n */\nmxShape.prototype.updateTransform = function(c, x, y, w, h)\n{\n\t// NOTE: Currently, scale is implemented in state and canvas. This will\n\t// move to canvas in a later version, so that the states are unscaled\n\t// and untranslated and do not need an update after zooming or panning.\n\tc.scale(this.scale);\n\tc.rotate(this.getShapeRotation(), this.flipH, this.flipV, x + w / 2, y + h / 2);\n};\n\n/**\n * Function: paintVertexShape\n * \n * Paints the vertex shape.\n */\nmxShape.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tthis.paintBackground(c, x, y, w, h);\n\t\n\tif (!this.outline || this.style == null || mxUtils.getValue(\n\t\tthis.style, mxConstants.STYLE_BACKGROUND_OUTLINE, 0) == 0)\n\t{\n\t\tc.setShadow(false);\n\t\tthis.paintForeground(c, x, y, w, h);\n\t}\n};\n\n/**\n * Function: paintBackground\n * \n * Hook for subclassers. This implementation is empty.\n */\nmxShape.prototype.paintBackground = function(c, x, y, w, h) { };\n\n/**\n * Function: paintForeground\n * \n * Hook for subclassers. This implementation is empty.\n */\nmxShape.prototype.paintForeground = function(c, x, y, w, h) { };\n\n/**\n * Function: paintEdgeShape\n * \n * Hook for subclassers. This implementation is empty.\n */\nmxShape.prototype.paintEdgeShape = function(c, pts) { };\n\n/**\n * Function: getArcSize\n * \n * Returns the arc size for the given dimension.\n */\nmxShape.prototype.getArcSize = function(w, h)\n{\n\tvar r = 0;\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_ABSOLUTE_ARCSIZE, 0) == '1')\n\t{\n\t\tr = Math.min(w / 2, Math.min(h / 2, mxUtils.getValue(this.style,\n\t\t\tmxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2));\n\t}\n\telse\n\t{\n\t\tvar f = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE,\n\t\t\tmxConstants.RECTANGLE_ROUNDING_FACTOR * 100) / 100;\n\t\tr = Math.min(w * f, h * f);\n\t}\n\t\n\treturn r;\n};\n\n/**\n * Function: paintGlassEffect\n * \n * Paints the glass gradient effect.\n */\nmxShape.prototype.paintGlassEffect = function(c, x, y, w, h, arc)\n{\n\tvar sw = Math.ceil(this.strokewidth / 2);\n\tvar size = 0.4;\n\t\n\tc.setGradient('#ffffff', '#ffffff', x, y, w, h * 0.6, 'south', 0.9, 0.1);\n\tc.begin();\n\tarc += 2 * sw;\n\t\t\n\tif (this.isRounded)\n\t{\n\t\tc.moveTo(x - sw + arc, y - sw);\n\t\tc.quadTo(x - sw, y - sw, x - sw, y - sw + arc);\n\t\tc.lineTo(x - sw, y + h * size);\n\t\tc.quadTo(x + w * 0.5, y + h * 0.7, x + w + sw, y + h * size);\n\t\tc.lineTo(x + w + sw, y - sw + arc);\n\t\tc.quadTo(x + w + sw, y - sw, x + w + sw - arc, y - sw);\n\t}\n\telse\n\t{\n\t\tc.moveTo(x - sw, y - sw);\n\t\tc.lineTo(x - sw, y + h * size);\n\t\tc.quadTo(x + w * 0.5, y + h * 0.7, x + w + sw, y + h * size);\n\t\tc.lineTo(x + w + sw, y - sw);\n\t}\n\t\n\tc.close();\n\tc.fill();\n};\n\n/**\n * Function: addPoints\n * \n * Paints the given points with rounded corners.\n */\nmxShape.prototype.addPoints = function(c, pts, rounded, arcSize, close, exclude, initialMove)\n{\n\tif (pts != null && pts.length > 0)\n\t{\n\t\tinitialMove = (initialMove != null) ? initialMove : true;\n\t\tvar pe = pts[pts.length - 1];\n\t\t\n\t\t// Adds virtual waypoint in the center between start and end point\n\t\tif (close && rounded)\n\t\t{\n\t\t\tpts = pts.slice();\n\t\t\tvar p0 = pts[0];\n\t\t\tvar wp = new mxPoint(pe.x + (p0.x - pe.x) / 2, pe.y + (p0.y - pe.y) / 2);\n\t\t\tpts.splice(0, 0, wp);\n\t\t}\n\t\n\t\tvar pt = pts[0];\n\t\tvar i = 1;\n\t\n\t\t// Draws the line segments\n\t\tif (initialMove)\n\t\t{\n\t\t\tc.moveTo(pt.x, pt.y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.lineTo(pt.x, pt.y);\n\t\t}\n\t\t\n\t\twhile (i < ((close) ? pts.length : pts.length - 1))\n\t\t{\n\t\t\tvar tmp = pts[mxUtils.mod(i, pts.length)];\n\t\t\tvar dx = pt.x - tmp.x;\n\t\t\tvar dy = pt.y - tmp.y;\n\t\n\t\t\tif (rounded && (dx != 0 || dy != 0) && (exclude == null || mxUtils.indexOf(exclude, i - 1) < 0))\n\t\t\t{\n\t\t\t\t// Draws a line from the last point to the current\n\t\t\t\t// point with a spacing of size off the current point\n\t\t\t\t// into direction of the last point\n\t\t\t\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\tvar nx1 = dx * Math.min(arcSize, dist / 2) / dist;\n\t\t\t\tvar ny1 = dy * Math.min(arcSize, dist / 2) / dist;\n\t\n\t\t\t\tvar x1 = tmp.x + nx1;\n\t\t\t\tvar y1 = tmp.y + ny1;\n\t\t\t\tc.lineTo(x1, y1);\n\t\n\t\t\t\t// Draws a curve from the last point to the current\n\t\t\t\t// point with a spacing of size off the current point\n\t\t\t\t// into direction of the next point\n\t\t\t\tvar next = pts[mxUtils.mod(i + 1, pts.length)];\n\t\t\t\t\n\t\t\t\t// Uses next non-overlapping point\n\t\t\t\twhile (i < pts.length - 2 && Math.round(next.x - tmp.x) == 0 && Math.round(next.y - tmp.y) == 0)\n\t\t\t\t{\n\t\t\t\t\tnext = pts[mxUtils.mod(i + 2, pts.length)];\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdx = next.x - tmp.x;\n\t\t\t\tdy = next.y - tmp.y;\n\t\n\t\t\t\tdist = Math.max(1, Math.sqrt(dx * dx + dy * dy));\n\t\t\t\tvar nx2 = dx * Math.min(arcSize, dist / 2) / dist;\n\t\t\t\tvar ny2 = dy * Math.min(arcSize, dist / 2) / dist;\n\t\n\t\t\t\tvar x2 = tmp.x + nx2;\n\t\t\t\tvar y2 = tmp.y + ny2;\n\t\n\t\t\t\tc.quadTo(tmp.x, tmp.y, x2, y2);\n\t\t\t\ttmp = new mxPoint(x2, y2);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.lineTo(tmp.x, tmp.y);\n\t\t\t}\n\t\n\t\t\tpt = tmp;\n\t\t\ti++;\n\t\t}\n\t\n\t\tif (close)\n\t\t{\n\t\t\tc.close();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.lineTo(pe.x, pe.y);\n\t\t}\n\t}\n};\n\n/**\n * Function: resetStyles\n * \n * Resets all styles.\n */\nmxShape.prototype.resetStyles = function()\n{\n\tthis.initStyles();\n\n\tthis.spacing = 0;\n\t\n\tdelete this.fill;\n\tdelete this.gradient;\n\tdelete this.gradientDirection;\n\tdelete this.stroke;\n\tdelete this.startSize;\n\tdelete this.endSize;\n\tdelete this.startArrow;\n\tdelete this.endArrow;\n\tdelete this.direction;\n\tdelete this.isShadow;\n\tdelete this.isDashed;\n\tdelete this.isRounded;\n\tdelete this.glass;\n};\n\n/**\n * Function: apply\n * \n * Applies the style of the given <mxCellState> to the shape. This\n * implementation assigns the following styles to local fields:\n * \n * - <mxConstants.STYLE_FILLCOLOR> => fill\n * - <mxConstants.STYLE_GRADIENTCOLOR> => gradient\n * - <mxConstants.STYLE_GRADIENT_DIRECTION> => gradientDirection\n * - <mxConstants.STYLE_OPACITY> => opacity\n * - <mxConstants.STYLE_FILL_OPACITY> => fillOpacity\n * - <mxConstants.STYLE_STROKE_OPACITY> => strokeOpacity\n * - <mxConstants.STYLE_STROKECOLOR> => stroke\n * - <mxConstants.STYLE_STROKEWIDTH> => strokewidth\n * - <mxConstants.STYLE_SHADOW> => isShadow\n * - <mxConstants.STYLE_DASHED> => isDashed\n * - <mxConstants.STYLE_SPACING> => spacing\n * - <mxConstants.STYLE_STARTSIZE> => startSize\n * - <mxConstants.STYLE_ENDSIZE> => endSize\n * - <mxConstants.STYLE_ROUNDED> => isRounded\n * - <mxConstants.STYLE_STARTARROW> => startArrow\n * - <mxConstants.STYLE_ENDARROW> => endArrow\n * - <mxConstants.STYLE_ROTATION> => rotation\n * - <mxConstants.STYLE_DIRECTION> => direction\n * - <mxConstants.STYLE_GLASS> => glass\n *\n * This keeps a reference to the <style>. If you need to keep a reference to\n * the cell, you can override this method and store a local reference to\n * state.cell or the <mxCellState> itself. If <outline> should be true, make\n * sure to set it before calling this method.\n *\n * Parameters:\n *\n * state - <mxCellState> of the corresponding cell.\n */\nmxShape.prototype.apply = function(state)\n{\n\tthis.state = state;\n\tthis.style = state.style;\n\n\tif (this.style != null)\n\t{\n\t\tthis.fill = mxUtils.getValue(this.style, mxConstants.STYLE_FILLCOLOR, this.fill);\n\t\tthis.gradient = mxUtils.getValue(this.style, mxConstants.STYLE_GRADIENTCOLOR, this.gradient);\n\t\tthis.gradientDirection = mxUtils.getValue(this.style, mxConstants.STYLE_GRADIENT_DIRECTION, this.gradientDirection);\n\t\tthis.opacity = mxUtils.getValue(this.style, mxConstants.STYLE_OPACITY, this.opacity);\n\t\tthis.fillOpacity = mxUtils.getValue(this.style, mxConstants.STYLE_FILL_OPACITY, this.fillOpacity);\n\t\tthis.strokeOpacity = mxUtils.getValue(this.style, mxConstants.STYLE_STROKE_OPACITY, this.strokeOpacity);\n\t\tthis.stroke = mxUtils.getValue(this.style, mxConstants.STYLE_STROKECOLOR, this.stroke);\n\t\tthis.strokewidth = mxUtils.getNumber(this.style, mxConstants.STYLE_STROKEWIDTH, this.strokewidth);\n\t\tthis.spacing = mxUtils.getValue(this.style, mxConstants.STYLE_SPACING, this.spacing);\n\t\tthis.startSize = mxUtils.getNumber(this.style, mxConstants.STYLE_STARTSIZE, this.startSize);\n\t\tthis.endSize = mxUtils.getNumber(this.style, mxConstants.STYLE_ENDSIZE, this.endSize);\n\t\tthis.startArrow = mxUtils.getValue(this.style, mxConstants.STYLE_STARTARROW, this.startArrow);\n\t\tthis.endArrow = mxUtils.getValue(this.style, mxConstants.STYLE_ENDARROW, this.endArrow);\n\t\tthis.rotation = mxUtils.getValue(this.style, mxConstants.STYLE_ROTATION, this.rotation);\n\t\tthis.direction = mxUtils.getValue(this.style, mxConstants.STYLE_DIRECTION, this.direction);\n\t\tthis.flipH = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\tthis.flipV = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPV, 0) == 1;\t\n\t\t\n\t\t// Legacy support for stencilFlipH/V\n\t\tif (this.stencil != null)\n\t\t{\n\t\t\tthis.flipH = mxUtils.getValue(this.style, 'stencilFlipH', 0) == 1 || this.flipH;\n\t\t\tthis.flipV = mxUtils.getValue(this.style, 'stencilFlipV', 0) == 1 || this.flipV;\n\t\t}\n\t\t\n\t\tif (this.direction == mxConstants.DIRECTION_NORTH || this.direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tvar tmp = this.flipH;\n\t\t\tthis.flipH = this.flipV;\n\t\t\tthis.flipV = tmp;\n\t\t}\n\n\t\tthis.isShadow = mxUtils.getValue(this.style, mxConstants.STYLE_SHADOW, this.isShadow) == 1;\n\t\tthis.isDashed = mxUtils.getValue(this.style, mxConstants.STYLE_DASHED, this.isDashed) == 1;\n\t\tthis.isRounded = mxUtils.getValue(this.style, mxConstants.STYLE_ROUNDED, this.isRounded) == 1;\n\t\tthis.glass = mxUtils.getValue(this.style, mxConstants.STYLE_GLASS, this.glass) == 1;\n\t\t\n\t\tif (this.fill == mxConstants.NONE)\n\t\t{\n\t\t\tthis.fill = null;\n\t\t}\n\n\t\tif (this.gradient == mxConstants.NONE)\n\t\t{\n\t\t\tthis.gradient = null;\n\t\t}\n\n\t\tif (this.stroke == mxConstants.NONE)\n\t\t{\n\t\t\tthis.stroke = null;\n\t\t}\n\t}\n};\n\n/**\n * Function: setCursor\n * \n * Sets the cursor on the given shape.\n *\n * Parameters:\n *\n * cursor - The cursor to be used.\n */\nmxShape.prototype.setCursor = function(cursor)\n{\n\tif (cursor == null)\n\t{\n\t\tcursor = '';\n\t}\n\t\n\tthis.cursor = cursor;\n\n\tif (this.node != null)\n\t{\n\t\tthis.node.style.cursor = cursor;\n\t}\n};\n\n/**\n * Function: getCursor\n * \n * Returns the current cursor.\n */\nmxShape.prototype.getCursor = function()\n{\n\treturn this.cursor;\n};\n\n/**\n * Function: isRoundable\n * \n * Hook for subclassers.\n */\nmxShape.prototype.isRoundable = function()\n{\n\treturn false;\n};\n\n/**\n * Function: updateBoundingBox\n *\n * Updates the <boundingBox> for this shape using <createBoundingBox> and\n * <augmentBoundingBox> and stores the result in <boundingBox>.\n */\nmxShape.prototype.updateBoundingBox = function()\n{\n\t// Tries to get bounding box from SVG subsystem\n\t// LATER: Use getBoundingClientRect for fallback in VML\n\tif (this.useSvgBoundingBox && this.node != null && this.node.ownerSVGElement != null)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar b = this.node.getBBox();\n\t\n\t\t\tif (b.width > 0 && b.height > 0)\n\t\t\t{\n\t\t\t\tthis.boundingBox = new mxRectangle(b.x, b.y, b.width, b.height);\n\t\t\t\t\n\t\t\t\t// Adds strokeWidth\n\t\t\t\tthis.boundingBox.grow(this.strokewidth * this.scale / 2);\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tcatch(e)\n\t\t{\n\t\t\t// fallback to code below\n\t\t}\n\t}\n\n\tif (this.bounds != null)\n\t{\n\t\tvar bbox = this.createBoundingBox();\n\t\t\n\t\tif (bbox != null)\n\t\t{\n\t\t\tthis.augmentBoundingBox(bbox);\n\t\t\tvar rot = this.getShapeRotation();\n\t\t\t\n\t\t\tif (rot != 0)\n\t\t\t{\n\t\t\t\tbbox = mxUtils.getBoundingBox(bbox, rot);\n\t\t\t}\n\t\t}\n\n\t\tthis.boundingBox = bbox;\n\t}\n};\n\n/**\n * Function: createBoundingBox\n *\n * Returns a new rectangle that represents the bounding box of the bare shape\n * with no shadows or strokewidths.\n */\nmxShape.prototype.createBoundingBox = function()\n{\n\tvar bb = this.bounds.clone();\n\n\tif ((this.stencil != null && (this.direction == mxConstants.DIRECTION_NORTH ||\n\t\tthis.direction == mxConstants.DIRECTION_SOUTH)) || this.isPaintBoundsInverted())\n\t{\n\t\tbb.rotate90();\n\t}\n\t\n\treturn bb;\n};\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the strokewidth and shadow offsets.\n */\nmxShape.prototype.augmentBoundingBox = function(bbox)\n{\n\tif (this.isShadow)\n\t{\n\t\tbbox.width += Math.ceil(mxConstants.SHADOW_OFFSET_X * this.scale);\n\t\tbbox.height += Math.ceil(mxConstants.SHADOW_OFFSET_Y * this.scale);\n\t}\n\t\n\t// Adds strokeWidth\n\tbbox.grow(this.strokewidth * this.scale / 2);\n};\n\n/**\n * Function: isPaintBoundsInverted\n * \n * Returns true if the bounds should be inverted.\n */\nmxShape.prototype.isPaintBoundsInverted = function()\n{\n\t// Stencil implements inversion via aspect\n\treturn this.stencil == null && (this.direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_SOUTH);\n};\n\n/**\n * Function: getRotation\n * \n * Returns the rotation from the style.\n */\nmxShape.prototype.getRotation = function()\n{\n\treturn (this.rotation != null) ? this.rotation : 0;\n};\n\n/**\n * Function: getTextRotation\n * \n * Returns the rotation for the text label.\n */\nmxShape.prototype.getTextRotation = function()\n{\n\tvar rot = this.getRotation();\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_HORIZONTAL, 1) != 1)\n\t{\n\t\trot += mxText.prototype.verticalTextRotation;\n\t}\n\t\n\treturn rot;\n};\n\n/**\n * Function: getShapeRotation\n * \n * Returns the actual rotation of the shape.\n */\nmxShape.prototype.getShapeRotation = function()\n{\n\tvar rot = this.getRotation();\n\t\n\tif (this.direction != null)\n\t{\n\t\tif (this.direction == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\trot += 270;\n\t\t}\n\t\telse if (this.direction == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\trot += 180;\n\t\t}\n\t\telse if (this.direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\trot += 90;\n\t\t}\n\t}\n\t\n\treturn rot;\n};\n\n/**\n * Function: createTransparentSvgRectangle\n * \n * Adds a transparent rectangle that catches all events.\n */\nmxShape.prototype.createTransparentSvgRectangle = function(x, y, w, h)\n{\n\tvar rect = document.createElementNS(mxConstants.NS_SVG, 'rect');\n\trect.setAttribute('x', x);\n\trect.setAttribute('y', y);\n\trect.setAttribute('width', w);\n\trect.setAttribute('height', h);\n\trect.setAttribute('fill', 'none');\n\trect.setAttribute('stroke', 'none');\n\trect.setAttribute('pointer-events', 'all');\n\t\n\treturn rect;\n};\n\n/**\n * Function: setTransparentBackgroundImage\n * \n * Sets a transparent background CSS style to catch all events.\n * \n * Paints the line shape.\n */\nmxShape.prototype.setTransparentBackgroundImage = function(node)\n{\n\tnode.style.backgroundImage = 'url(\\'' + mxClient.imageBasePath + '/transparent.gif\\')';\n};\n\n/**\n * Function: releaseSvgGradients\n * \n * Paints the line shape.\n */\nmxShape.prototype.releaseSvgGradients = function(grads)\n{\n\tif (grads != null)\n\t{\n\t\tfor (var key in grads)\n\t\t{\n\t\t\tvar gradient = grads[key];\n\t\t\t\n\t\t\tif (gradient != null)\n\t\t\t{\n\t\t\t\tgradient.mxRefCount = (gradient.mxRefCount || 0) - 1;\n\t\t\t\t\n\t\t\t\tif (gradient.mxRefCount == 0 && gradient.parentNode != null)\n\t\t\t\t{\n\t\t\t\t\tgradient.parentNode.removeChild(gradient);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: destroy\n *\n * Destroys the shape by removing it from the DOM and releasing the DOM\n * node associated with the shape using <mxEvent.release>.\n */\nmxShape.prototype.destroy = function()\n{\n\tif (this.node != null)\n\t{\n\t\tmxEvent.release(this.node);\n\t\t\n\t\tif (this.node.parentNode != null)\n\t\t{\n\t\t\tthis.node.parentNode.removeChild(this.node);\n\t\t}\n\t\t\n\t\tthis.node = null;\n\t}\n\t\n\t// Decrements refCount and removes unused\n\tthis.releaseSvgGradients(this.oldGradients);\n\tthis.oldGradients = null;\n};\n\n__mxOutput.mxShape = typeof mxShape !== 'undefined' ? mxShape : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStencil\n *\n * Implements a generic shape which is based on a XML node as a description.\n * \n * shape:\n * \n * The outer element is *shape*, that has attributes:\n * \n * - \"name\", string, required. The stencil name that uniquely identifies the shape.\n * - \"w\" and \"h\" are optional decimal view bounds. This defines your co-ordinate\n * system for the graphics operations in the shape. The default is 100,100.\n * - \"aspect\", optional string. Either \"variable\", the default, or \"fixed\". Fixed\n * means always render the shape with the aspect ratio defined by the ratio w/h.\n * Variable causes the ratio to match that of the geometry of the current vertex.\n * - \"strokewidth\", optional string. Either an integer or the string \"inherit\".\n * \"inherit\" indicates that the strokeWidth of the cell is only changed on scaling,\n * not on resizing. Default is \"1\".\n * If numeric values are used, the strokeWidth of the cell is changed on both\n * scaling and resizing and the value defines the multiple that is applied to\n * the width.\n * \n * connections:\n * \n * If you want to define specific fixed connection points on the shape use the\n * *connections* element. Each *constraint* element within connections defines\n * a fixed connection point on the shape. Constraints have attributes:\n * \n * - \"perimeter\", required. 1 or 0. 0 sets the connection point where specified\n * by x,y. 1 Causes the position of the connection point to be extrapolated from\n * the center of the shape, through x,y to the point of intersection with the\n * perimeter of the shape.\n * - \"x\" and \"y\" are the position of the fixed point relative to the bounds of\n * the shape. They can be automatically adjusted if perimeter=1. So, (0,0) is top\n * left, (0.5,0.5) the center, (1,0.5) the center of the right hand edge of the\n * bounds, etc. Values may be less than 0 or greater than 1 to be positioned\n * outside of the shape.\n * - \"name\", optional string. A unique identifier for the port on the shape.\n * \n * background and foreground:\n * \n * The path of the graphics drawing is split into two elements, *foreground* and\n * *background*. The split is to define which part any shadow applied to the shape\n * is derived from (the background). This, generally, means the background is the\n * line tracing of the outside of the shape, but not always.\n * \n * Any stroke, fill or fillstroke of a background must be the first element of the\n * foreground element, they must not be used within *background*. If the background\n * is empty, this is not required.\n * \n * Because the background cannot have any fill or stroke, it can contain only one\n * *path*, *rect*, *roundrect* or *ellipse* element (or none). It can also not\n * include *image*, *text* or *include-shape*.\n * \n * Note that the state, styling and drawing in mxGraph stencils is very close in\n * design to that of HTML 5 canvas. Tutorials on this subject, if you're not\n * familiar with the topic, will give a good high-level introduction to the\n * concepts used.\n * \n * State:\n * \n * Rendering within the foreground and background elements has the concept of\n * state. There are two types of operations other than state save/load, styling\n * and drawing. The styling operations change the current state, so you can save\n * the current state with <save/> and pull the last saved state from the state\n * stack using <restore/>.\n * \n * Styling:\n * \n * The elements that change colors within the current state all take a hash\n * prefixed hex color code (\"#FFEA80\").\n * \n * - *strokecolor*, this sets the color that drawing paths will be rendered in\n * when a stroke or fillstroke command is issued.\n * - *fillcolor*, this sets the color that the inside of closed paths will be\n * rendered in when a fill or fillstroke command is issued.\n * - *fontcolor*, this sets the color that fonts are rendered in when text is drawn.\n * \n * *alpha* defines the degree of transparency used between 1.0 for fully opaque\n * and 0.0 for fully transparent.\n * \n * *fillalpha* defines the degree of fill transparency used between 1.0 for fully\n * opaque and 0.0 for fully transparent.\n * \n * *strokealpha* defines the degree of stroke transparency used between 1.0 for\n * fully opaque and 0.0 for fully transparent.\n * \n * *strokewidth* defines the integer thickness of drawing elements rendered by\n * stroking. Use fixed=\"1\" to apply the value as-is, without scaling.\n * \n * *dashed* is \"1\" for dashing enabled and \"0\" for disabled.\n * \n * When *dashed* is enabled the current dash pattern, defined by *dashpattern*,\n * is used on strokes. dashpattern is a sequence of space separated \"on, off\"\n * lengths that define what distance to paint the stroke for, then what distance\n * to paint nothing for, repeat... The default is \"3 3\". You could define a more\n * complex pattern with \"5 3 2 6\", for example. Generally, it makes sense to have\n * an even number of elements in the dashpattern, but that's not required.\n * \n * *linejoin*, *linecap* and *miterlimit* are best explained by the Mozilla page\n * on Canvas styling (about halfway down). The values are all the same except we\n * use \"flat\" for linecap, instead of Canvas' \"butt\".\n * \n * For font styling there are.\n * \n * - *fontsize*, an integer,\n * - *fontstyle*, an ORed bit pattern of bold (1), italic (2) and underline (4),\n * i.e bold underline is \"5\".\n * - *fontfamily*, is a string defining the typeface to be used.\n * \n * Drawing:\n * \n * Most drawing is contained within a *path* element. Again, the graphic\n * primitives are very similar to that of HTML 5 canvas.\n * \n * - *move* to attributes required decimals (x,y).\n * - *line* to attributes required decimals (x,y).\n * - *quad* to required decimals (x2,y2) via control point required decimals\n * (x1,y1).\n * - *curve* to required decimals (x3,y3), via control points required decimals\n * (x1,y1) and (x2,y2).\n * - *arc*, this doesn't follow the HTML Canvas signatures, instead it's a copy\n * of the SVG arc command. The SVG specification documentation gives the best\n * description of its behaviors. The attributes are named identically, they are\n * decimals and all required.\n * - *close* ends the current subpath and causes an automatic straight line to\n * be drawn from the current point to the initial point of the current subpath.\n * \n * Complex drawing:\n * \n * In addition to the graphics primitive operations there are non-primitive\n * operations. These provide an easy method to draw some basic shapes.\n * \n * - *rect*, attributes \"x\", \"y\", \"w\", \"h\", all required decimals\n * - *roundrect*, attributes \"x\", \"y\", \"w\", \"h\", all required decimals. Also\n * \"arcsize\" an optional decimal attribute defining how large, the corner curves\n * are.\n * - *ellipse*, attributes \"x\", \"y\", \"w\", \"h\", all required decimals.\n * \n * Note that these 3 shapes and all paths must be followed by either a fill,\n * stroke, or fillstroke.\n * \n * Text:\n * \n * *text* elements have the following attributes.\n * \n * - \"str\", the text string to display, required.\n * - \"x\" and \"y\", the decimal location (x,y) of the text element, required.\n * - \"align\", the horizontal alignment of the text element, either \"left\",\n * \"center\" or \"right\". Optional, default is \"left\".\n * - \"valign\", the vertical alignment of the text element, either \"top\", \"middle\"\n * or \"bottom\". Optional, default is \"top\".\n * - \"localized\", 0 or 1, if 1 then the \"str\" actually contains a key to use to\n * fetch the value out of mxResources. Optional, default is\n * <mxStencil.defaultLocalized>.\n * - \"vertical\", 0 or 1, if 1 the label is rendered vertically (rotated by 90\n * degrees). Optional, default is 0.\n * - \"rotation\", angle in degrees (0 to 360). The angle to rotate the text by.\n * Optional, default is 0.\n * - \"align-shape\", 0 or 1, if 0 ignore the rotation of the shape when setting\n * the text rotation. Optional, default is 1.\n * \n * If <allowEval> is true, then the text content of the this element can define\n * a function which is invoked with the shape as the only argument and returns\n * the value for the text element (ignored if the str attribute is not null).\n * \n * Images:\n * \n * *image* elements can either be external URLs, or data URIs, where supported\n * (not in IE 7-). Attributes are:\n * \n * - \"src\", required string. Either a data URI or URL.\n * - \"x\", \"y\", required decimals. The (x,y) position of the image.\n * - \"w\", \"h\", required decimals. The width and height of the image.\n * - \"flipH\" and \"flipV\", optional 0 or 1. Whether to flip the image along the\n * horizontal/vertical axis. Default is 0 for both.\n * \n * If <allowEval> is true, then the text content of the this element can define\n * a function which is invoked with the shape as the only argument and returns\n * the value for the image source (ignored if the src attribute is not null).\n * \n * Sub-shapes:\n * \n * *include-shape* allow stencils to be rendered within the current stencil by\n * referencing the sub-stencil by name. Attributes are:\n * \n * - \"name\", required string. The unique shape name of the stencil.\n * - \"x\", \"y\", \"w\", \"h\", required decimals. The (x,y) position of the sub-shape\n * and its width and height.\n * \n * Constructor: mxStencil\n * \n * Constructs a new generic shape by setting <desc> to the given XML node and\n * invoking <parseDescription> and <parseConstraints>.\n * \n * Parameters:\n * \n * desc - XML node that contains the stencil description.\n */\nfunction mxStencil(desc)\n{\n\tthis.desc = desc;\n\tthis.parseDescription();\n\tthis.parseConstraints();\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxStencil, mxShape);\n\n/**\n * Variable: defaultLocalized\n * \n * Static global variable that specifies the default value for the localized\n * attribute of the text element. Default is false.\n */\nmxStencil.defaultLocalized = false;\n\n/**\n * Function: allowEval\n * \n * Static global switch that specifies if the use of eval is allowed for\n * evaluating text content and images. Default is false. Set this to true\n * if stencils can not contain user input.\n */\nmxStencil.allowEval = false;\n\n/**\n * Variable: desc\n *\n * Holds the XML node with the stencil description.\n */\nmxStencil.prototype.desc = null;\n\n/**\n * Variable: constraints\n * \n * Holds an array of <mxConnectionConstraints> as defined in the shape.\n */\nmxStencil.prototype.constraints = null;\n\n/**\n * Variable: aspect\n *\n * Holds the aspect of the shape. Default is 'auto'.\n */\nmxStencil.prototype.aspect = null;\n\n/**\n * Variable: w0\n *\n * Holds the width of the shape. Default is 100.\n */\nmxStencil.prototype.w0 = null;\n\n/**\n * Variable: h0\n *\n * Holds the height of the shape. Default is 100.\n */\nmxStencil.prototype.h0 = null;\n\n/**\n * Variable: bgNodes\n *\n * Holds the XML node with the stencil description.\n */\nmxStencil.prototype.bgNode = null;\n\n/**\n * Variable: fgNodes\n *\n * Holds the XML node with the stencil description.\n */\nmxStencil.prototype.fgNode = null;\n\n/**\n * Variable: strokewidth\n *\n * Holds the strokewidth direction from the description.\n */\nmxStencil.prototype.strokewidth = null;\n\n/**\n * Function: parseDescription\n *\n * Reads <w0>, <h0>, <aspect>, <bgNodes> and <fgNodes> from <desc>.\n */\nmxStencil.prototype.parseDescription = function()\n{\n\t// LATER: Preprocess nodes for faster painting\n\tthis.fgNode = this.desc.getElementsByTagName('foreground')[0];\n\tthis.bgNode = this.desc.getElementsByTagName('background')[0];\n\tthis.w0 = Number(this.desc.getAttribute('w') || 100);\n\tthis.h0 = Number(this.desc.getAttribute('h') || 100);\n\t\n\t// Possible values for aspect are: variable and fixed where\n\t// variable means fill the available space and fixed means\n\t// use w0 and h0 to compute the aspect.\n\tvar aspect = this.desc.getAttribute('aspect');\n\tthis.aspect = (aspect != null) ? aspect : 'variable';\n\t\n\t// Possible values for strokewidth are all numbers and \"inherit\"\n\t// where the inherit means take the value from the style (ie. the\n\t// user-defined stroke-width). Note that the strokewidth is scaled\n\t// by the minimum scaling that is used to draw the shape (sx, sy).\n\tvar sw = this.desc.getAttribute('strokewidth');\n\tthis.strokewidth = (sw != null) ? sw : '1';\n};\n\n/**\n * Function: parseConstraints\n *\n * Reads the constraints from <desc> into <constraints> using\n * <parseConstraint>.\n */\nmxStencil.prototype.parseConstraints = function()\n{\n\tvar conns = this.desc.getElementsByTagName('connections')[0];\n\t\n\tif (conns != null)\n\t{\n\t\tvar tmp = mxUtils.getChildNodes(conns);\n\t\t\n\t\tif (tmp != null && tmp.length > 0)\n\t\t{\n\t\t\tthis.constraints = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < tmp.length; i++)\n\t\t\t{\n\t\t\t\tthis.constraints.push(this.parseConstraint(tmp[i]));\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: parseConstraint\n *\n * Parses the given XML node and returns its <mxConnectionConstraint>.\n */\nmxStencil.prototype.parseConstraint = function(node)\n{\n\tvar x = Number(node.getAttribute('x'));\n\tvar y = Number(node.getAttribute('y'));\n\tvar perimeter = node.getAttribute('perimeter') == '1';\n\tvar name = node.getAttribute('name');\n\t\n\treturn new mxConnectionConstraint(new mxPoint(x, y), perimeter, name);\n};\n\n/**\n * Function: evaluateTextAttribute\n * \n * Gets the given attribute as a text. The return value from <evaluateAttribute>\n * is used as a key to <mxResources.get> if the localized attribute in the text\n * node is 1 or if <defaultLocalized> is true.\n */\nmxStencil.prototype.evaluateTextAttribute = function(node, attribute, shape)\n{\n\tvar result = this.evaluateAttribute(node, attribute, shape);\n\tvar loc = node.getAttribute('localized');\n\t\n\tif ((mxStencil.defaultLocalized && loc == null) || loc == '1')\n\t{\n\t\tresult = mxResources.get(result);\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: evaluateAttribute\n *\n * Gets the attribute for the given name from the given node. If the attribute\n * does not exist then the text content of the node is evaluated and if it is\n * a function it is invoked with <shape> as the only argument and the return\n * value is used as the attribute value to be returned.\n */\nmxStencil.prototype.evaluateAttribute = function(node, attribute, shape)\n{\n\tvar result = node.getAttribute(attribute);\n\t\n\tif (result == null)\n\t{\n\t\tvar text = mxUtils.getTextContent(node);\n\t\t\n\t\tif (text != null && mxStencil.allowEval)\n\t\t{\n\t\t\tvar funct = mxUtils.eval(text);\n\t\t\t\n\t\t\tif (typeof(funct) == 'function')\n\t\t\t{\n\t\t\t\tresult = funct(shape);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: drawShape\n *\n * Draws this stencil inside the given bounds.\n */\nmxStencil.prototype.drawShape = function(canvas, shape, x, y, w, h)\n{\n\tvar stack = canvas.states.slice();\n\t\n\t// TODO: Internal structure (array of special structs?), relative and absolute\n\t// coordinates (eg. note shape, process vs star, actor etc.), text rendering\n\t// and non-proportional scaling, how to implement pluggable edge shapes\n\t// (start, segment, end blocks), pluggable markers, how to implement\n\t// swimlanes (title area) with this API, add icon, horizontal/vertical\n\t// label, indicator for all shapes, rotation\n\tvar direction = mxUtils.getValue(shape.style, mxConstants.STYLE_DIRECTION, null);\n\tvar aspect = this.computeAspect(shape.style, x, y, w, h, direction);\n\tvar minScale = Math.min(aspect.width, aspect.height);\n\tvar sw = (this.strokewidth == 'inherit') ?\n\t\t\tNumber(mxUtils.getNumber(shape.style, mxConstants.STYLE_STROKEWIDTH, 1)) :\n\t\t\tNumber(this.strokewidth) * minScale;\n\tcanvas.setStrokeWidth(sw);\n\n\t// Draws a transparent rectangle for catching events\n\tif (shape.style != null && mxUtils.getValue(shape.style, mxConstants.STYLE_POINTER_EVENTS, '0') == '1')\n\t{\n\t\tcanvas.setStrokeColor(mxConstants.NONE);\n\t\tcanvas.rect(x, y, w, h);\n\t\tcanvas.stroke();\n\t\tcanvas.setStrokeColor(shape.stroke);\n\t}\n\n\tthis.drawChildren(canvas, shape, x, y, w, h, this.bgNode, aspect, false, true);\n\tthis.drawChildren(canvas, shape, x, y, w, h, this.fgNode, aspect, true,\n\t\t!shape.outline || shape.style == null || mxUtils.getValue(\n\t\tshape.style, mxConstants.STYLE_BACKGROUND_OUTLINE, 0) == 0);\n\t\n\t// Restores stack for unequal count of save/restore calls\n\tif (canvas.states.length != stack.length)\n\t{\n\t\tcanvas.states = stack;\n\t}\n};\n\n/**\n * Function: drawChildren\n *\n * Draws this stencil inside the given bounds.\n */\nmxStencil.prototype.drawChildren = function(canvas, shape, x, y, w, h, node, aspect, disableShadow, paint)\n{\n\tif (node != null && w > 0 && h > 0)\n\t{\n\t\tvar tmp = node.firstChild;\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t{\n\t\t\t\tthis.drawNode(canvas, shape, tmp, aspect, disableShadow, paint);\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\n\t}\n};\n\n/**\n * Function: computeAspect\n *\n * Returns a rectangle that contains the offset in x and y and the horizontal\n * and vertical scale in width and height used to draw this shape inside the\n * given <mxRectangle>.\n * \n * Parameters:\n * \n * shape - <mxShape> to be drawn.\n * bounds - <mxRectangle> that should contain the stencil.\n * direction - Optional direction of the shape to be darwn.\n */\nmxStencil.prototype.computeAspect = function(shape, x, y, w, h, direction)\n{\n\tvar x0 = x;\n\tvar y0 = y;\n\tvar sx = w / this.w0;\n\tvar sy = h / this.h0;\n\t\n\tvar inverse = (direction == mxConstants.DIRECTION_NORTH || direction == mxConstants.DIRECTION_SOUTH);\n\n\tif (inverse)\n\t{\n\t\tsy = w / this.h0;\n\t\tsx = h / this.w0;\n\t\t\n\t\tvar delta = (w - h) / 2;\n\n\t\tx0 += delta;\n\t\ty0 -= delta;\n\t}\n\n\tif (this.aspect == 'fixed')\n\t{\n\t\tsy = Math.min(sx, sy);\n\t\tsx = sy;\n\t\t\n\t\t// Centers the shape inside the available space\n\t\tif (inverse)\n\t\t{\n\t\t\tx0 += (h - this.w0 * sx) / 2;\n\t\t\ty0 += (w - this.h0 * sy) / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx0 += (w - this.w0 * sx) / 2;\n\t\t\ty0 += (h - this.h0 * sy) / 2;\n\t\t}\n\t}\n\n\treturn new mxRectangle(x0, y0, sx, sy);\n};\n\n/**\n * Function: drawNode\n *\n * Draws this stencil inside the given bounds.\n */\nmxStencil.prototype.drawNode = function(canvas, shape, node, aspect, disableShadow, paint)\n{\n\tvar name = node.nodeName;\n\tvar x0 = aspect.x;\n\tvar y0 = aspect.y;\n\tvar sx = aspect.width;\n\tvar sy = aspect.height;\n\tvar minScale = Math.min(sx, sy);\n\t\n\tif (name == 'save')\n\t{\n\t\tcanvas.save();\n\t}\n\telse if (name == 'restore')\n\t{\n\t\tcanvas.restore();\n\t}\n\telse if (paint)\n\t{\n\t\tif (name == 'path')\n\t\t{\n\t\t\tcanvas.begin();\n\t\t\t\n\t\t\tvar parseRegularly = true;\n\t\t\t\n\t\t\tif (node.getAttribute('rounded') == '1')\n\t\t\t{\n\t\t\t\tparseRegularly = false;\n\t\t\t\t\n\t\t\t\tvar arcSize = Number(node.getAttribute('arcSize'));\n\t\t\t\tvar pointCount = 0;\n\t\t\t\tvar segs = [];\n\t\t\t\t\n\t\t\t\t// Renders the elements inside the given path\n\t\t\t\tvar childNode = node.firstChild;\n\t\t\t\t\n\t\t\t\twhile (childNode != null)\n\t\t\t\t{\n\t\t\t\t\tif (childNode.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar childName = childNode.nodeName;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (childName == 'move' || childName == 'line')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (childName == 'move' || segs.length == 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsegs.push([]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsegs[segs.length - 1].push(new mxPoint(x0 + Number(childNode.getAttribute('x')) * sx,\n\t\t\t\t\t\t\t\ty0 + Number(childNode.getAttribute('y')) * sy));\n\t\t\t\t\t\t\tpointCount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//We only support move and line for rounded corners\n\t\t\t\t\t\t\tparseRegularly = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tchildNode = childNode.nextSibling;\n\t\t\t\t}\n\n\t\t\t\tif (!parseRegularly && pointCount > 0)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < segs.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar close = false, ps = segs[i][0], pe = segs[i][segs[i].length - 1];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (ps.x == pe.x && ps.y == pe.y) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsegs[i].pop();\n\t\t\t\t\t\t\tclose = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.addPoints(canvas, segs[i], true, arcSize, close);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tparseRegularly = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (parseRegularly)\n\t\t\t{\n\t\t\t\t// Renders the elements inside the given path\n\t\t\t\tvar childNode = node.firstChild;\n\t\t\t\t\n\t\t\t\twhile (childNode != null)\n\t\t\t\t{\n\t\t\t\t\tif (childNode.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.drawNode(canvas, shape, childNode, aspect, disableShadow, paint);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tchildNode = childNode.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (name == 'close')\n\t\t{\n\t\t\tcanvas.close();\n\t\t}\n\t\telse if (name == 'move')\n\t\t{\n\t\t\tcanvas.moveTo(x0 + Number(node.getAttribute('x')) * sx, y0 + Number(node.getAttribute('y')) * sy);\n\t\t}\n\t\telse if (name == 'line')\n\t\t{\n\t\t\tcanvas.lineTo(x0 + Number(node.getAttribute('x')) * sx, y0 + Number(node.getAttribute('y')) * sy);\n\t\t}\n\t\telse if (name == 'quad')\n\t\t{\n\t\t\tcanvas.quadTo(x0 + Number(node.getAttribute('x1')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y1')) * sy,\n\t\t\t\t\tx0 + Number(node.getAttribute('x2')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y2')) * sy);\n\t\t}\n\t\telse if (name == 'curve')\n\t\t{\n\t\t\tcanvas.curveTo(x0 + Number(node.getAttribute('x1')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y1')) * sy,\n\t\t\t\t\tx0 + Number(node.getAttribute('x2')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y2')) * sy,\n\t\t\t\t\tx0 + Number(node.getAttribute('x3')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y3')) * sy);\n\t\t}\n\t\telse if (name == 'arc')\n\t\t{\n\t\t\tcanvas.arcTo(Number(node.getAttribute('rx')) * sx,\n\t\t\t\t\tNumber(node.getAttribute('ry')) * sy,\n\t\t\t\t\tNumber(node.getAttribute('x-axis-rotation')),\n\t\t\t\t\tNumber(node.getAttribute('large-arc-flag')),\n\t\t\t\t\tNumber(node.getAttribute('sweep-flag')),\n\t\t\t\t\tx0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy);\n\t\t}\n\t\telse if (name == 'rect')\n\t\t{\n\t\t\tcanvas.rect(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\tNumber(node.getAttribute('w')) * sx,\n\t\t\t\t\tNumber(node.getAttribute('h')) * sy);\n\t\t}\n\t\telse if (name == 'roundrect')\n\t\t{\n\t\t\tvar arcsize = Number(node.getAttribute('arcsize'));\n\t\n\t\t\tif (arcsize == 0)\n\t\t\t{\n\t\t\t\tarcsize = mxConstants.RECTANGLE_ROUNDING_FACTOR * 100;\n\t\t\t}\n\t\t\t\n\t\t\tvar w = Number(node.getAttribute('w')) * sx;\n\t\t\tvar h = Number(node.getAttribute('h')) * sy;\n\t\t\tvar factor = Number(arcsize) / 100;\n\t\t\tvar r = Math.min(w * factor, h * factor);\n\t\t\t\n\t\t\tcanvas.roundrect(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\tw, h, r, r);\n\t\t}\n\t\telse if (name == 'ellipse')\n\t\t{\n\t\t\tcanvas.ellipse(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\tNumber(node.getAttribute('w')) * sx,\n\t\t\t\tNumber(node.getAttribute('h')) * sy);\n\t\t}\n\t\telse if (name == 'image')\n\t\t{\n\t\t\tif (!shape.outline)\n\t\t\t{\n\t\t\t\tvar src = this.evaluateAttribute(node, 'src', shape);\n\t\t\t\t\n\t\t\t\tcanvas.image(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\tNumber(node.getAttribute('w')) * sx,\n\t\t\t\t\tNumber(node.getAttribute('h')) * sy,\n\t\t\t\t\tsrc, false, node.getAttribute('flipH') == '1',\n\t\t\t\t\tnode.getAttribute('flipV') == '1');\n\t\t\t}\n\t\t}\n\t\telse if (name == 'text')\n\t\t{\n\t\t\tif (!shape.outline)\n\t\t\t{\n\t\t\t\tvar str = this.evaluateTextAttribute(node, 'str', shape);\n\t\t\t\tvar rotation = node.getAttribute('vertical') == '1' ? -90 : 0;\n\t\t\t\t\n\t\t\t\tif (node.getAttribute('align-shape') == '0')\n\t\t\t\t{\n\t\t\t\t\tvar dr = shape.rotation;\n\t\t\n\t\t\t\t\t// Depends on flipping\n\t\t\t\t\tvar flipH = mxUtils.getValue(shape.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\t\t\t\tvar flipV = mxUtils.getValue(shape.style, mxConstants.STYLE_FLIPV, 0) == 1;\n\t\t\t\t\t\n\t\t\t\t\tif (flipH && flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\trotation -= dr;\n\t\t\t\t\t}\n\t\t\t\t\telse if (flipH || flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\trotation += dr;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\trotation -= dr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\trotation -= node.getAttribute('rotation');\n\t\t\n\t\t\t\tcanvas.text(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\t\t0, 0, str, node.getAttribute('align') || 'left',\n\t\t\t\t\t\tnode.getAttribute('valign') || 'top', false, '',\n\t\t\t\t\t\tnull, false, rotation);\n\t\t\t}\n\t\t}\n\t\telse if (name == 'include-shape')\n\t\t{\n\t\t\tvar stencil = mxStencilRegistry.getStencil(node.getAttribute('name'));\n\t\t\t\n\t\t\tif (stencil != null)\n\t\t\t{\n\t\t\t\tvar x = x0 + Number(node.getAttribute('x')) * sx;\n\t\t\t\tvar y = y0 + Number(node.getAttribute('y')) * sy;\n\t\t\t\tvar w = Number(node.getAttribute('w')) * sx;\n\t\t\t\tvar h = Number(node.getAttribute('h')) * sy;\n\t\t\t\t\n\t\t\t\tstencil.drawShape(canvas, shape, x, y, w, h);\n\t\t\t}\n\t\t}\n\t\telse if (name == 'fillstroke')\n\t\t{\n\t\t\tcanvas.fillAndStroke();\n\t\t}\n\t\telse if (name == 'fill')\n\t\t{\n\t\t\tcanvas.fill();\n\t\t}\n\t\telse if (name == 'stroke')\n\t\t{\n\t\t\tcanvas.stroke();\n\t\t}\n\t\telse if (name == 'strokewidth')\n\t\t{\n\t\t\tvar s = (node.getAttribute('fixed') == '1') ? 1 : minScale;\n\t\t\tcanvas.setStrokeWidth(Number(node.getAttribute('width')) * s);\n\t\t}\n\t\telse if (name == 'dashed')\n\t\t{\n\t\t\tcanvas.setDashed(node.getAttribute('dashed') == '1');\n\t\t}\n\t\telse if (name == 'dashpattern')\n\t\t{\n\t\t\tvar value = node.getAttribute('pattern');\n\t\t\t\n\t\t\tif (value != null)\n\t\t\t{\n\t\t\t\tvar tmp = value.split(' ');\n\t\t\t\tvar pat = [];\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < tmp.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (tmp[i].length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tpat.push(Number(tmp[i]) * minScale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvalue = pat.join(' ');\n\t\t\t\tcanvas.setDashPattern(value);\n\t\t\t}\n\t\t}\n\t\telse if (name == 'strokecolor')\n\t\t{\n\t\t\tcanvas.setStrokeColor(node.getAttribute('color'));\n\t\t}\n\t\telse if (name == 'linecap')\n\t\t{\n\t\t\tcanvas.setLineCap(node.getAttribute('cap'));\n\t\t}\n\t\telse if (name == 'linejoin')\n\t\t{\n\t\t\tcanvas.setLineJoin(node.getAttribute('join'));\n\t\t}\n\t\telse if (name == 'miterlimit')\n\t\t{\n\t\t\tcanvas.setMiterLimit(Number(node.getAttribute('limit')));\n\t\t}\n\t\telse if (name == 'fillcolor')\n\t\t{\n\t\t\tcanvas.setFillColor(node.getAttribute('color'));\n\t\t}\n\t\telse if (name == 'alpha')\n\t\t{\n\t\t\tcanvas.setAlpha(node.getAttribute('alpha'));\n\t\t}\n\t\telse if (name == 'fillalpha')\n\t\t{\n\t\t\tcanvas.setAlpha(node.getAttribute('alpha'));\n\t\t}\n\t\telse if (name == 'strokealpha')\n\t\t{\n\t\t\tcanvas.setAlpha(node.getAttribute('alpha'));\n\t\t}\n\t\telse if (name == 'fontcolor')\n\t\t{\n\t\t\tcanvas.setFontColor(node.getAttribute('color'));\n\t\t}\n\t\telse if (name == 'fontstyle')\n\t\t{\n\t\t\tcanvas.setFontStyle(node.getAttribute('style'));\n\t\t}\n\t\telse if (name == 'fontfamily')\n\t\t{\n\t\t\tcanvas.setFontFamily(node.getAttribute('family'));\n\t\t}\n\t\telse if (name == 'fontsize')\n\t\t{\n\t\t\tcanvas.setFontSize(Number(node.getAttribute('size')) * minScale);\n\t\t}\n\t\t\n\t\tif (disableShadow && (name == 'fillstroke' || name == 'fill' || name == 'stroke'))\n\t\t{\n\t\t\tdisableShadow = false;\n\t\t\tcanvas.setShadow(false);\n\t\t}\n\t}\n};\n\n__mxOutput.mxStencil = typeof mxStencil !== 'undefined' ? mxStencil : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n * \n * Code to add stencils.\n * \n * (code)\n * var req = mxUtils.load('test/stencils.xml');\n * var root = req.getDocumentElement();\n * var shape = root.firstChild;\n * \n * while (shape != null)\n * {\n * \t if (shape.nodeType == mxConstants.NODETYPE_ELEMENT)\n *   {\n *     mxStencilRegistry.addStencil(shape.getAttribute('name'), new mxStencil(shape));\n *   }\n *   \n *   shape = shape.nextSibling;\n * }\n * (end)\n */\nvar mxStencilRegistry =\n{\n\t/**\n\t * Class: mxStencilRegistry\n\t * \n\t * A singleton class that provides a registry for stencils and the methods\n\t * for painting those stencils onto a canvas or into a DOM.\n\t */\n\tstencils: {},\n\t\n\t/**\n\t * Function: addStencil\n\t * \n\t * Adds the given <mxStencil>.\n\t */\n\taddStencil: function(name, stencil)\n\t{\n\t\tmxStencilRegistry.stencils[name] = stencil;\n\t},\n\t\n\t/**\n\t * Function: getStencil\n\t * \n\t * Returns the <mxStencil> for the given name.\n\t */\n\tgetStencil: function(name)\n\t{\n\t\treturn mxStencilRegistry.stencils[name];\n\t}\n\n};\n\n__mxOutput.mxStencilRegistry = typeof mxStencilRegistry !== 'undefined' ? mxStencilRegistry : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxMarker =\n{\n\t/**\n\t * Class: mxMarker\n\t * \n\t * A static class that implements all markers for VML and SVG using a\n\t * registry. NOTE: The signatures in this class will change.\n\t * \n\t * Variable: markers\n\t * \n\t * Maps from markers names to functions to paint the markers.\n\t */\n\tmarkers: [],\n\t\n\t/**\n\t * Function: addMarker\n\t * \n\t * Adds a factory method that updates a given endpoint and returns a\n\t * function to paint the marker onto the given canvas.\n\t */\n\taddMarker: function(type, funct)\n\t{\n\t\tmxMarker.markers[type] = funct;\n\t},\n\t\n\t/**\n\t * Function: createMarker\n\t * \n\t * Returns a function to paint the given marker.\n\t */\n\tcreateMarker: function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t{\n\t\tvar funct = mxMarker.markers[type];\n\t\t\n\t\treturn (funct != null) ? funct(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled) : null;\n\t}\n\n};\n\n/**\n * Adds the classic and block marker factory method.\n */\n(function()\n{\n\tfunction createArrow(widthFactor)\n\t{\n\t\twidthFactor = (widthFactor != null) ? widthFactor : 2;\n\t\t\n\t\treturn function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t\t{\n\t\t\t// The angle of the forward facing arrow sides against the x axis is\n\t\t\t// 26.565 degrees, 1/sin(26.565) = 2.236 / 2 = 1.118 ( / 2 allows for\n\t\t\t// only half the strokewidth is processed ).\n\t\t\tvar endOffsetX = unitX * sw * 1.118;\n\t\t\tvar endOffsetY = unitY * sw * 1.118;\n\t\t\t\n\t\t\tunitX = unitX * (size + sw);\n\t\t\tunitY = unitY * (size + sw);\n\t\n\t\t\tvar pt = pe.clone();\n\t\t\tpt.x -= endOffsetX;\n\t\t\tpt.y -= endOffsetY;\n\t\t\t\n\t\t\tvar f = (type != mxConstants.ARROW_CLASSIC && type != mxConstants.ARROW_CLASSIC_THIN) ? 1 : 3 / 4;\n\t\t\tpe.x += -unitX * f - endOffsetX;\n\t\t\tpe.y += -unitY * f - endOffsetY;\n\t\t\t\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tcanvas.begin();\n\t\t\t\tcanvas.moveTo(pt.x, pt.y);\n\t\t\t\tcanvas.lineTo(pt.x - unitX - unitY / widthFactor, pt.y - unitY + unitX / widthFactor);\n\t\t\t\n\t\t\t\tif (type == mxConstants.ARROW_CLASSIC || type == mxConstants.ARROW_CLASSIC_THIN)\n\t\t\t\t{\n\t\t\t\t\tcanvas.lineTo(pt.x - unitX * 3 / 4, pt.y - unitY * 3 / 4);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tcanvas.lineTo(pt.x + unitY / widthFactor - unitX, pt.y - unitY - unitX / widthFactor);\n\t\t\t\tcanvas.close();\n\t\n\t\t\t\tif (filled)\n\t\t\t\t{\n\t\t\t\t\tcanvas.fillAndStroke();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcanvas.stroke();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n\t\n\tmxMarker.addMarker('classic', createArrow(2));\n\tmxMarker.addMarker('classicThin', createArrow(3));\n\tmxMarker.addMarker('block', createArrow(2));\n\tmxMarker.addMarker('blockThin', createArrow(3));\n\t\n\tfunction createOpenArrow(widthFactor)\n\t{\n\t\twidthFactor = (widthFactor != null) ? widthFactor : 2;\n\t\t\n\t\treturn function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t\t{\n\t\t\t// The angle of the forward facing arrow sides against the x axis is\n\t\t\t// 26.565 degrees, 1/sin(26.565) = 2.236 / 2 = 1.118 ( / 2 allows for\n\t\t\t// only half the strokewidth is processed ).\n\t\t\tvar endOffsetX = unitX * sw * 1.118;\n\t\t\tvar endOffsetY = unitY * sw * 1.118;\n\t\t\t\n\t\t\tunitX = unitX * (size + sw);\n\t\t\tunitY = unitY * (size + sw);\n\t\t\t\n\t\t\tvar pt = pe.clone();\n\t\t\tpt.x -= endOffsetX;\n\t\t\tpt.y -= endOffsetY;\n\t\t\t\n\t\t\tpe.x += -endOffsetX * 2;\n\t\t\tpe.y += -endOffsetY * 2;\n\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tcanvas.begin();\n\t\t\t\tcanvas.moveTo(pt.x - unitX - unitY / widthFactor, pt.y - unitY + unitX / widthFactor);\n\t\t\t\tcanvas.lineTo(pt.x, pt.y);\n\t\t\t\tcanvas.lineTo(pt.x + unitY / widthFactor - unitX, pt.y - unitY - unitX / widthFactor);\n\t\t\t\tcanvas.stroke();\n\t\t\t};\n\t\t}\n\t};\n\t\n\tmxMarker.addMarker('open', createOpenArrow(2));\n\tmxMarker.addMarker('openThin', createOpenArrow(3));\n\t\n\tmxMarker.addMarker('oval', function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t{\n\t\tvar a = size / 2;\n\t\t\n\t\tvar pt = pe.clone();\n\t\tpe.x -= unitX * a;\n\t\tpe.y -= unitY * a;\n\n\t\treturn function()\n\t\t{\n\t\t\tcanvas.ellipse(pt.x - a, pt.y - a, size, size);\n\t\t\t\t\t\t\n\t\t\tif (filled)\n\t\t\t{\n\t\t\t\tcanvas.fillAndStroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcanvas.stroke();\n\t\t\t}\n\t\t};\n\t});\n\n\tfunction diamond(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t{\n\t\t// The angle of the forward facing arrow sides against the x axis is\n\t\t// 45 degrees, 1/sin(45) = 1.4142 / 2 = 0.7071 ( / 2 allows for\n\t\t// only half the strokewidth is processed ). Or 0.9862 for thin diamond.\n\t\t// Note these values and the tk variable below are dependent, update\n\t\t// both together (saves trig hard coding it).\n\t\tvar swFactor = (type == mxConstants.ARROW_DIAMOND) ?  0.7071 : 0.9862;\n\t\tvar endOffsetX = unitX * sw * swFactor;\n\t\tvar endOffsetY = unitY * sw * swFactor;\n\t\t\n\t\tunitX = unitX * (size + sw);\n\t\tunitY = unitY * (size + sw);\n\t\t\n\t\tvar pt = pe.clone();\n\t\tpt.x -= endOffsetX;\n\t\tpt.y -= endOffsetY;\n\t\t\n\t\tpe.x += -unitX - endOffsetX;\n\t\tpe.y += -unitY - endOffsetY;\n\t\t\n\t\t// thickness factor for diamond\n\t\tvar tk = ((type == mxConstants.ARROW_DIAMOND) ?  2 : 3.4);\n\t\t\n\t\treturn function()\n\t\t{\n\t\t\tcanvas.begin();\n\t\t\tcanvas.moveTo(pt.x, pt.y);\n\t\t\tcanvas.lineTo(pt.x - unitX / 2 - unitY / tk, pt.y + unitX / tk - unitY / 2);\n\t\t\tcanvas.lineTo(pt.x - unitX, pt.y - unitY);\n\t\t\tcanvas.lineTo(pt.x - unitX / 2 + unitY / tk, pt.y - unitY / 2 - unitX / tk);\n\t\t\tcanvas.close();\n\t\t\t\n\t\t\tif (filled)\n\t\t\t{\n\t\t\t\tcanvas.fillAndStroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcanvas.stroke();\n\t\t\t}\n\t\t};\n\t};\n\n\tmxMarker.addMarker('diamond', diamond);\n\tmxMarker.addMarker('diamondThin', diamond);\n})();\n\n__mxOutput.mxMarker = typeof mxMarker !== 'undefined' ? mxMarker : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxActor\n *\n * Extends <mxShape> to implement an actor shape. If a custom shape with one\n * filled area is needed, then this shape's <redrawPath> should be overridden.\n * \n * Example:\n * \n * (code)\n * function SampleShape() { }\n * \n * SampleShape.prototype = new mxActor();\n * SampleShape.prototype.constructor = vsAseShape;\n * \n * mxCellRenderer.registerShape('sample', SampleShape);\n * SampleShape.prototype.redrawPath = function(path, x, y, w, h)\n * {\n *   path.moveTo(0, 0);\n *   path.lineTo(w, h);\n *   // ...\n *   path.close();\n * }\n * (end)\n * \n * This shape is registered under <mxConstants.SHAPE_ACTOR> in\n * <mxCellRenderer>.\n * \n * Constructor: mxActor\n *\n * Constructs a new actor shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxActor(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxActor, mxShape);\n\n/**\n * Function: paintVertexShape\n * \n * Redirects to redrawPath for subclasses to work.\n */\nmxActor.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tc.translate(x, y);\n\tc.begin();\n\tthis.redrawPath(c, x, y, w, h);\n\tc.fillAndStroke();\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxActor.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tvar width = w/3;\n\tc.moveTo(0, h);\n\tc.curveTo(0, 3 * h / 5, 0, 2 * h / 5, w / 2, 2 * h / 5);\n\tc.curveTo(w / 2 - width, 2 * h / 5, w / 2 - width, 0, w / 2, 0);\n\tc.curveTo(w / 2 + width, 0, w / 2 + width, 2 * h / 5, w / 2, 2 * h / 5);\n\tc.curveTo(w, 2 * h / 5, w, 3 * h / 5, w, h);\n\tc.close();\n};\n\n__mxOutput.mxActor = typeof mxActor !== 'undefined' ? mxActor : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCloud\n *\n * Extends <mxActor> to implement a cloud shape.\n * \n * This shape is registered under <mxConstants.SHAPE_CLOUD> in\n * <mxCellRenderer>.\n * \n * Constructor: mxCloud\n *\n * Constructs a new cloud shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxCloud(bounds, fill, stroke, strokewidth)\n{\n\tmxActor.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxActor.\n */\nmxUtils.extend(mxCloud, mxActor);\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxCloud.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tc.moveTo(0.25 * w, 0.25 * h);\n\tc.curveTo(0.05 * w, 0.25 * h, 0, 0.5 * h, 0.16 * w, 0.55 * h);\n\tc.curveTo(0, 0.66 * h, 0.18 * w, 0.9 * h, 0.31 * w, 0.8 * h);\n\tc.curveTo(0.4 * w, h, 0.7 * w, h, 0.8 * w, 0.8 * h);\n\tc.curveTo(w, 0.8 * h, w, 0.6 * h, 0.875 * w, 0.5 * h);\n\tc.curveTo(w, 0.3 * h, 0.8 * w, 0.1 * h, 0.625 * w, 0.2 * h);\n\tc.curveTo(0.5 * w, 0.05 * h, 0.3 * w, 0.05 * h, 0.25 * w, 0.25 * h);\n\tc.close();\n};\n\n__mxOutput.mxCloud = typeof mxCloud !== 'undefined' ? mxCloud : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRectangleShape\n *\n * Extends <mxShape> to implement a rectangle shape.\n * This shape is registered under <mxConstants.SHAPE_RECTANGLE>\n * in <mxCellRenderer>.\n * \n * Constructor: mxRectangleShape\n *\n * Constructs a new rectangle shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxRectangleShape(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxRectangleShape, mxShape);\n\n/**\n * Function: isHtmlAllowed\n *\n * Returns true for non-rounded, non-rotated shapes with no glass gradient.\n */\nmxRectangleShape.prototype.isHtmlAllowed = function()\n{\n\tvar events = true;\n\t\n\tif (this.style != null)\n\t{\n\t\tevents = mxUtils.getValue(this.style, mxConstants.STYLE_POINTER_EVENTS, '1') == '1';\t\t\n\t}\n\t\n\treturn !this.isRounded && !this.glass && this.rotation == 0 && (events ||\n\t\t(this.fill != null && this.fill != mxConstants.NONE));\n};\n\n/**\n * Function: paintBackground\n * \n * Generic background painting implementation.\n */\nmxRectangleShape.prototype.paintBackground = function(c, x, y, w, h)\n{\n\tvar events = true;\n\t\n\tif (this.style != null)\n\t{\n\t\tevents = mxUtils.getValue(this.style, mxConstants.STYLE_POINTER_EVENTS, '1') == '1';\n\t}\n\t\n\tif (events || (this.fill != null && this.fill != mxConstants.NONE) ||\n\t\t(this.stroke != null && this.stroke != mxConstants.NONE))\n\t{\n\t\tif (!events && (this.fill == null || this.fill == mxConstants.NONE))\n\t\t{\n\t\t\tc.pointerEvents = false;\n\t\t}\n\t\t\n\t\tif (this.isRounded)\n\t\t{\n\t\t\tvar r = 0;\n\t\t\t\n\t\t\tif (mxUtils.getValue(this.style, mxConstants.STYLE_ABSOLUTE_ARCSIZE, 0) == '1')\n\t\t\t{\n\t\t\t\tr = Math.min(w / 2, Math.min(h / 2, mxUtils.getValue(this.style,\n\t\t\t\t\tmxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar f = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE,\n\t\t\t\t\tmxConstants.RECTANGLE_ROUNDING_FACTOR * 100) / 100;\n\t\t\t\tr = Math.min(w * f, h * f);\n\t\t\t}\n\t\t\t\n\t\t\tc.roundrect(x, y, w, h, r, r);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.rect(x, y, w, h);\n\t\t}\n\t\t\t\n\t\tc.fillAndStroke();\n\t}\n};\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxRectangleShape.prototype.isRoundable = function(c, x, y, w, h)\n{\n\treturn true;\n};\n\n/**\n * Function: paintForeground\n * \n * Generic background painting implementation.\n */\nmxRectangleShape.prototype.paintForeground = function(c, x, y, w, h)\n{\n\tif (this.glass && !this.outline && this.fill != null && this.fill != mxConstants.NONE)\n\t{\n\t\tthis.paintGlassEffect(c, x, y, w, h, this.getArcSize(w + this.strokewidth, h + this.strokewidth));\n\t}\n};\n\n__mxOutput.mxRectangleShape = typeof mxRectangleShape !== 'undefined' ? mxRectangleShape : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEllipse\n *\n * Extends <mxShape> to implement an ellipse shape.\n * This shape is registered under <mxConstants.SHAPE_ELLIPSE>\n * in <mxCellRenderer>.\n * \n * Constructor: mxEllipse\n *\n * Constructs a new ellipse shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxEllipse(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxEllipse, mxShape);\n\n/**\n * Function: paintVertexShape\n * \n * Paints the ellipse shape.\n */\nmxEllipse.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tc.ellipse(x, y, w, h);\n\tc.fillAndStroke();\n};\n\n__mxOutput.mxEllipse = typeof mxEllipse !== 'undefined' ? mxEllipse : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDoubleEllipse\n *\n * Extends <mxShape> to implement a double ellipse shape. This shape is\n * registered under <mxConstants.SHAPE_DOUBLE_ELLIPSE> in <mxCellRenderer>.\n * Use the following override to only fill the inner ellipse in this shape:\n * \n * (code)\n * mxDoubleEllipse.prototype.paintVertexShape = function(c, x, y, w, h)\n * {\n *   c.ellipse(x, y, w, h);\n *   c.stroke();\n *   \n *   var inset = mxUtils.getValue(this.style, mxConstants.STYLE_MARGIN, Math.min(3 + this.strokewidth, Math.min(w / 5, h / 5)));\n *   x += inset;\n *   y += inset;\n *   w -= 2 * inset;\n *   h -= 2 * inset;\n *   \n *   if (w > 0 && h > 0)\n *   {\n *     c.ellipse(x, y, w, h);\n *   }\n *   \n *   c.fillAndStroke();\n * };\n * (end)\n * \n * Constructor: mxDoubleEllipse\n *\n * Constructs a new ellipse shape.\n *\n * Parameters:\n *\n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxDoubleEllipse(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxDoubleEllipse, mxShape);\n\n/**\n * Variable: vmlScale\n * \n * Scale for improving the precision of VML rendering. Default is 10.\n */\nmxDoubleEllipse.prototype.vmlScale = 10;\n\n/**\n * Function: paintBackground\n * \n * Paints the background.\n */\nmxDoubleEllipse.prototype.paintBackground = function(c, x, y, w, h)\n{\n\tc.ellipse(x, y, w, h);\n\tc.fillAndStroke();\n};\n\n/**\n * Function: paintForeground\n * \n * Paints the foreground.\n */\nmxDoubleEllipse.prototype.paintForeground = function(c, x, y, w, h)\n{\n\tif (!this.outline)\n\t{\n\t\tvar margin = mxUtils.getValue(this.style, mxConstants.STYLE_MARGIN, Math.min(3 + this.strokewidth, Math.min(w / 5, h / 5)));\n\t\tx += margin;\n\t\ty += margin;\n\t\tw -= 2 * margin;\n\t\th -= 2 * margin;\n\t\t\n\t\t// FIXME: Rounding issues in IE8 standards mode (not in 1.x)\n\t\tif (w > 0 && h > 0)\n\t\t{\n\t\t\tc.ellipse(x, y, w, h);\n\t\t}\n\t\t\n\t\tc.stroke();\n\t}\n};\n\n/**\n * Function: getLabelBounds\n * \n * Returns the bounds for the label.\n */\nmxDoubleEllipse.prototype.getLabelBounds = function(rect)\n{\n\tvar margin = (mxUtils.getValue(this.style, mxConstants.STYLE_MARGIN, Math.min(3 + this.strokewidth,\n\t\t\tMath.min(rect.width / 5 / this.scale, rect.height / 5 / this.scale)))) * this.scale;\n\n\treturn new mxRectangle(rect.x + margin, rect.y + margin, rect.width - 2 * margin, rect.height - 2 * margin);\n};\n\n__mxOutput.mxDoubleEllipse = typeof mxDoubleEllipse !== 'undefined' ? mxDoubleEllipse : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRhombus\n *\n * Extends <mxShape> to implement a rhombus (aka diamond) shape.\n * This shape is registered under <mxConstants.SHAPE_RHOMBUS>\n * in <mxCellRenderer>.\n * \n * Constructor: mxRhombus\n *\n * Constructs a new rhombus shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxRhombus(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxRhombus, mxShape);\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxRhombus.prototype.isRoundable = function()\n{\n\treturn true;\n};\n\n/**\n * Function: paintVertexShape\n * \n * Generic painting implementation.\n */\nmxRhombus.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tvar hw = w / 2;\n\tvar hh = h / 2;\n\t\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tc.begin();\n\tthis.addPoints(c, [new mxPoint(x + hw, y), new mxPoint(x + w, y + hh), new mxPoint(x + hw, y + h),\n\t     new mxPoint(x, y + hh)], this.isRounded, arcSize, true);\n\tc.fillAndStroke();\n};\n\n__mxOutput.mxRhombus = typeof mxRhombus !== 'undefined' ? mxRhombus : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPolyline\n *\n * Extends <mxShape> to implement a polyline (a line with multiple points).\n * This shape is registered under <mxConstants.SHAPE_POLYLINE> in\n * <mxCellRenderer>.\n * \n * Constructor: mxPolyline\n *\n * Constructs a new polyline shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * stroke - String that defines the stroke color. Default is 'black'. This is\n * stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxPolyline(points, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.points = points;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxPolyline, mxShape);\n\n/**\n * Function: getRotation\n * \n * Returns 0.\n */\nmxPolyline.prototype.getRotation = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: getShapeRotation\n * \n * Returns 0.\n */\nmxPolyline.prototype.getShapeRotation = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: isPaintBoundsInverted\n * \n * Returns false.\n */\nmxPolyline.prototype.isPaintBoundsInverted = function()\n{\n\treturn false;\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxPolyline.prototype.paintEdgeShape = function(c, pts)\n{\n\tvar prev = c.pointerEventsValue;\n\tc.pointerEventsValue = 'stroke';\n\t\n\tif (this.style == null || this.style[mxConstants.STYLE_CURVED] != 1)\n\t{\n\t\tthis.paintLine(c, pts, this.isRounded);\n\t}\n\telse\n\t{\n\t\tthis.paintCurvedLine(c, pts);\n\t}\n\t\n\tc.pointerEventsValue = prev;\n};\n\n/**\n * Function: paintLine\n * \n * Paints the line shape.\n */\nmxPolyline.prototype.paintLine = function(c, pts, rounded)\n{\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tc.begin();\n\tthis.addPoints(c, pts, rounded, arcSize, false);\n\tc.stroke();\n};\n\n/**\n * Function: paintCurvedLine\n * \n * Paints a curved line.\n */\nmxPolyline.prototype.paintCurvedLine = function(c, pts)\n{\n\tc.begin();\n\t\n\tvar pt = pts[0];\n\tvar n = pts.length;\n\t\n\tc.moveTo(pt.x, pt.y);\n\t\n\tfor (var i = 1; i < n - 2; i++)\n\t{\n\t\tvar p0 = pts[i];\n\t\tvar p1 = pts[i + 1];\n\t\tvar ix = (p0.x + p1.x) / 2;\n\t\tvar iy = (p0.y + p1.y) / 2;\n\t\t\n\t\tc.quadTo(p0.x, p0.y, ix, iy);\n\t}\n\t\n\tvar p0 = pts[n - 2];\n\tvar p1 = pts[n - 1];\n\t\n\tc.quadTo(p0.x, p0.y, p1.x, p1.y);\n\tc.stroke();\n};\n\n__mxOutput.mxPolyline = typeof mxPolyline !== 'undefined' ? mxPolyline : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxArrow\n *\n * Extends <mxShape> to implement an arrow shape. (The shape\n * is used to represent edges, not vertices.)\n * This shape is registered under <mxConstants.SHAPE_ARROW>\n * in <mxCellRenderer>.\n * \n * Constructor: mxArrow\n *\n * Constructs a new arrow shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n * arrowWidth - Optional integer that defines the arrow width. Default is\n * <mxConstants.ARROW_WIDTH>. This is stored in <arrowWidth>.\n * spacing - Optional integer that defines the spacing between the arrow shape\n * and its endpoints. Default is <mxConstants.ARROW_SPACING>. This is stored in\n * <spacing>.\n * endSize - Optional integer that defines the size of the arrowhead. Default\n * is <mxConstants.ARROW_SIZE>. This is stored in <endSize>.\n */\nfunction mxArrow(points, fill, stroke, strokewidth, arrowWidth, spacing, endSize)\n{\n\tmxShape.call(this);\n\tthis.points = points;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n\tthis.arrowWidth = (arrowWidth != null) ? arrowWidth : mxConstants.ARROW_WIDTH;\n\tthis.spacing = (spacing != null) ? spacing : mxConstants.ARROW_SPACING;\n\tthis.endSize = (endSize != null) ? endSize : mxConstants.ARROW_SIZE;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxArrow, mxShape);\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the edge width and markers.\n */\nmxArrow.prototype.augmentBoundingBox = function(bbox)\n{\n\tmxShape.prototype.augmentBoundingBox.apply(this, arguments);\n\t\n\tvar w = Math.max(this.arrowWidth, this.endSize);\n\tbbox.grow((w / 2 + this.strokewidth) * this.scale);\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxArrow.prototype.paintEdgeShape = function(c, pts)\n{\n\t// Geometry of arrow\n\tvar spacing =  mxConstants.ARROW_SPACING;\n\tvar width = mxConstants.ARROW_WIDTH;\n\tvar arrow = mxConstants.ARROW_SIZE;\n\n\t// Base vector (between end points)\n\tvar p0 = pts[0];\n\tvar pe = pts[pts.length - 1];\n\tvar dx = pe.x - p0.x;\n\tvar dy = pe.y - p0.y;\n\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\tvar length = dist - 2 * spacing - arrow;\n\t\n\t// Computes the norm and the inverse norm\n\tvar nx = dx / dist;\n\tvar ny = dy / dist;\n\tvar basex = length * nx;\n\tvar basey = length * ny;\n\tvar floorx = width * ny/3;\n\tvar floory = -width * nx/3;\n\t\n\t// Computes points\n\tvar p0x = p0.x - floorx / 2 + spacing * nx;\n\tvar p0y = p0.y - floory / 2 + spacing * ny;\n\tvar p1x = p0x + floorx;\n\tvar p1y = p0y + floory;\n\tvar p2x = p1x + basex;\n\tvar p2y = p1y + basey;\n\tvar p3x = p2x + floorx;\n\tvar p3y = p2y + floory;\n\t// p4 not necessary\n\tvar p5x = p3x - 3 * floorx;\n\tvar p5y = p3y - 3 * floory;\n\t\n\tc.begin();\n\tc.moveTo(p0x, p0y);\n\tc.lineTo(p1x, p1y);\n\tc.lineTo(p2x, p2y);\n\tc.lineTo(p3x, p3y);\n\tc.lineTo(pe.x - spacing * nx, pe.y - spacing * ny);\n\tc.lineTo(p5x, p5y);\n\tc.lineTo(p5x + floorx, p5y + floory);\n\tc.close();\n\n\tc.fillAndStroke();\n};\n\n__mxOutput.mxArrow = typeof mxArrow !== 'undefined' ? mxArrow : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxArrowConnector\n *\n * Extends <mxShape> to implement an new rounded arrow shape with support for\n * waypoints and double arrows. (The shape is used to represent edges, not\n * vertices.) This shape is registered under <mxConstants.SHAPE_ARROW_CONNECTOR>\n * in <mxCellRenderer>.\n * \n * Constructor: mxArrowConnector\n *\n * Constructs a new arrow shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n * arrowWidth - Optional integer that defines the arrow width. Default is\n * <mxConstants.ARROW_WIDTH>. This is stored in <arrowWidth>.\n * spacing - Optional integer that defines the spacing between the arrow shape\n * and its endpoints. Default is <mxConstants.ARROW_SPACING>. This is stored in\n * <spacing>.\n * endSize - Optional integer that defines the size of the arrowhead. Default\n * is <mxConstants.ARROW_SIZE>. This is stored in <endSize>.\n */\nfunction mxArrowConnector(points, fill, stroke, strokewidth, arrowWidth, spacing, endSize)\n{\n\tmxShape.call(this);\n\tthis.points = points;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n\tthis.arrowWidth = (arrowWidth != null) ? arrowWidth : mxConstants.ARROW_WIDTH;\n\tthis.arrowSpacing = (spacing != null) ? spacing : mxConstants.ARROW_SPACING;\n\tthis.startSize = mxConstants.ARROW_SIZE / 5;\n\tthis.endSize = mxConstants.ARROW_SIZE / 5;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxArrowConnector, mxShape);\n\n/**\n * Variable: useSvgBoundingBox\n * \n * Allows to use the SVG bounding box in SVG. Default is false for performance\n * reasons.\n */\nmxArrowConnector.prototype.useSvgBoundingBox = true;\n\n/**\n * Function: isRoundable\n * \n * Hook for subclassers.\n */\nmxArrowConnector.prototype.isRoundable = function()\n{\n\treturn true;\n};\n\n/**\n * Variable: resetStyles\n * \n * Overrides mxShape to reset spacing.\n */\nmxArrowConnector.prototype.resetStyles = function()\n{\n\tmxShape.prototype.resetStyles.apply(this, arguments);\n\t\n\tthis.arrowSpacing = mxConstants.ARROW_SPACING;\n};\n\n/**\n * Overrides apply to get smooth transition from default start- and endsize.\n */\nmxArrowConnector.prototype.apply = function(state)\n{\n\tmxShape.prototype.apply.apply(this, arguments);\n\n\tif (this.style != null)\n\t{\n\t\tthis.startSize = mxUtils.getNumber(this.style, mxConstants.STYLE_STARTSIZE, mxConstants.ARROW_SIZE / 5) * 3;\n\t\tthis.endSize = mxUtils.getNumber(this.style, mxConstants.STYLE_ENDSIZE, mxConstants.ARROW_SIZE / 5) * 3;\n\t}\n};\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the edge width and markers.\n */\nmxArrowConnector.prototype.augmentBoundingBox = function(bbox)\n{\n\tmxShape.prototype.augmentBoundingBox.apply(this, arguments);\n\t\n\tvar w = this.getEdgeWidth();\n\t\n\tif (this.isMarkerStart())\n\t{\n\t\tw = Math.max(w, this.getStartArrowWidth());\n\t}\n\t\n\tif (this.isMarkerEnd())\n\t{\n\t\tw = Math.max(w, this.getEndArrowWidth());\n\t}\n\t\n\tbbox.grow((w / 2 + this.strokewidth) * this.scale);\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxArrowConnector.prototype.paintEdgeShape = function(c, pts)\n{\n\t// Geometry of arrow\n\tvar strokeWidth = this.strokewidth;\n\t\n\tif (this.outline)\n\t{\n\t\tstrokeWidth = Math.max(1, mxUtils.getNumber(this.style, mxConstants.STYLE_STROKEWIDTH, this.strokewidth));\n\t}\n\t\n\tvar startWidth = this.getStartArrowWidth() + strokeWidth;\n\tvar endWidth = this.getEndArrowWidth() + strokeWidth;\n\tvar edgeWidth = this.outline ? this.getEdgeWidth() + strokeWidth : this.getEdgeWidth();\n\tvar openEnded = this.isOpenEnded();\n\tvar markerStart = this.isMarkerStart();\n\tvar markerEnd = this.isMarkerEnd();\n\tvar spacing = (openEnded) ? 0 : this.arrowSpacing + strokeWidth / 2;\n\tvar startSize = this.startSize + strokeWidth;\n\tvar endSize = this.endSize + strokeWidth;\n\tvar isRounded = this.isArrowRounded();\n\t\n\t// Base vector (between first points)\n\tvar pe = pts[pts.length - 1];\n\n\t// Finds first non-overlapping point\n\tvar i0 = 1;\n\t\n\twhile (i0 < pts.length - 1 && pts[i0].x == pts[0].x && pts[i0].y == pts[0].y)\n\t{\n\t\ti0++;\n\t}\n\t\n\tvar dx = pts[i0].x - pts[0].x;\n\tvar dy = pts[i0].y - pts[0].y;\n\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\t\n\tif (dist == 0)\n\t{\n\t\treturn;\n\t}\n\t\n\t// Computes the norm and the inverse norm\n\tvar nx = dx / dist;\n\tvar nx2, nx1 = nx;\n\tvar ny = dy / dist;\n\tvar ny2, ny1 = ny;\n\tvar orthx = edgeWidth * ny;\n\tvar orthy = -edgeWidth * nx;\n\t\n\t// Stores the inbound function calls in reverse order in fns\n\tvar fns = [];\n\t\n\tif (isRounded)\n\t{\n\t\tc.setLineJoin('round');\n\t}\n\telse if (pts.length > 2)\n\t{\n\t\t// Only mitre if there are waypoints\n\t\tc.setMiterLimit(1.42);\n\t}\n\n\tc.begin();\n\n\tvar startNx = nx;\n\tvar startNy = ny;\n\n\tif (markerStart && !openEnded)\n\t{\n\t\tthis.paintMarker(c, pts[0].x, pts[0].y, nx, ny, startSize, startWidth, edgeWidth, spacing, true);\n\t}\n\telse\n\t{\n\t\tvar outStartX = pts[0].x + orthx / 2 + spacing * nx;\n\t\tvar outStartY = pts[0].y + orthy / 2 + spacing * ny;\n\t\tvar inEndX = pts[0].x - orthx / 2 + spacing * nx;\n\t\tvar inEndY = pts[0].y - orthy / 2 + spacing * ny;\n\t\t\n\t\tif (openEnded)\n\t\t{\n\t\t\tc.moveTo(outStartX, outStartY);\n\t\t\t\n\t\t\tfns.push(function()\n\t\t\t{\n\t\t\t\tc.lineTo(inEndX, inEndY);\n\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.moveTo(inEndX, inEndY);\n\t\t\tc.lineTo(outStartX, outStartY);\n\t\t}\n\t}\n\t\n\tvar dx1 = 0;\n\tvar dy1 = 0;\n\tvar dist1 = 0;\n\n\tfor (var i = 0; i < pts.length - 2; i++)\n\t{\n\t\t// Work out in which direction the line is bending\n\t\tvar pos = mxUtils.relativeCcw(pts[i].x, pts[i].y, pts[i+1].x, pts[i+1].y, pts[i+2].x, pts[i+2].y);\n\n\t\tdx1 = pts[i+2].x - pts[i+1].x;\n\t\tdy1 = pts[i+2].y - pts[i+1].y;\n\n\t\tdist1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n\t\t\n\t\tif (dist1 != 0)\n\t\t{\n\t\t\tnx1 = dx1 / dist1;\n\t\t\tny1 = dy1 / dist1;\n\t\t\t\n\t\t\tvar tmp1 = nx * nx1 + ny * ny1;\n\t\t\tvar tmp = Math.max(Math.sqrt((tmp1 + 1) / 2), 0.04);\n\t\t\t\n\t\t\t// Work out the normal orthogonal to the line through the control point and the edge sides intersection\n\t\t\tnx2 = (nx + nx1);\n\t\t\tny2 = (ny + ny1);\n\t\n\t\t\tvar dist2 = Math.sqrt(nx2 * nx2 + ny2 * ny2);\n\t\t\t\n\t\t\tif (dist2 != 0)\n\t\t\t{\n\t\t\t\tnx2 = nx2 / dist2;\n\t\t\t\tny2 = ny2 / dist2;\n\t\t\t\t\n\t\t\t\t// Higher strokewidths require a larger minimum bend, 0.35 covers all but the most extreme cases\n\t\t\t\tvar strokeWidthFactor = Math.max(tmp, Math.min(this.strokewidth / 200 + 0.04, 0.35));\n\t\t\t\tvar angleFactor = (pos != 0 && isRounded) ? Math.max(0.1, strokeWidthFactor) : Math.max(tmp, 0.06);\n\n\t\t\t\tvar outX = pts[i+1].x + ny2 * edgeWidth / 2 / angleFactor;\n\t\t\t\tvar outY = pts[i+1].y - nx2 * edgeWidth / 2 / angleFactor;\n\t\t\t\tvar inX = pts[i+1].x - ny2 * edgeWidth / 2 / angleFactor;\n\t\t\t\tvar inY = pts[i+1].y + nx2 * edgeWidth / 2 / angleFactor;\n\t\t\t\t\n\t\t\t\tif (pos == 0 || !isRounded)\n\t\t\t\t{\n\t\t\t\t\t// If the two segments are aligned, or if we're not drawing curved sections between segments\n\t\t\t\t\t// just draw straight to the intersection point\n\t\t\t\t\tc.lineTo(outX, outY);\n\t\t\t\t\t\n\t\t\t\t\t(function(x, y)\n\t\t\t\t\t{\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.lineTo(x, y);\n\t\t\t\t\t\t});\n\t\t\t\t\t})(inX, inY);\n\t\t\t\t}\n\t\t\t\telse if (pos == -1)\n\t\t\t\t{\n\t\t\t\t\tvar c1x = inX + ny * edgeWidth;\n\t\t\t\t\tvar c1y = inY - nx * edgeWidth;\n\t\t\t\t\tvar c2x = inX + ny1 * edgeWidth;\n\t\t\t\t\tvar c2y = inY - nx1 * edgeWidth;\n\t\t\t\t\tc.lineTo(c1x, c1y);\n\t\t\t\t\tc.quadTo(outX, outY, c2x, c2y);\n\t\t\t\t\t\n\t\t\t\t\t(function(x, y)\n\t\t\t\t\t{\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.lineTo(x, y);\n\t\t\t\t\t\t});\n\t\t\t\t\t})(inX, inY);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tc.lineTo(outX, outY);\n\t\t\t\t\t\n\t\t\t\t\t(function(x, y)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar c1x = outX - ny * edgeWidth;\n\t\t\t\t\t\tvar c1y = outY + nx * edgeWidth;\n\t\t\t\t\t\tvar c2x = outX - ny1 * edgeWidth;\n\t\t\t\t\t\tvar c2y = outY + nx1 * edgeWidth;\n\t\t\t\t\t\t\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.quadTo(x, y, c1x, c1y);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.lineTo(c2x, c2y);\n\t\t\t\t\t\t});\n\t\t\t\t\t})(inX, inY);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnx = nx1;\n\t\t\t\tny = ny1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\torthx = edgeWidth * ny1;\n\torthy = - edgeWidth * nx1;\n\n\tif (markerEnd && !openEnded)\n\t{\n\t\tthis.paintMarker(c, pe.x, pe.y, -nx, -ny, endSize, endWidth, edgeWidth, spacing, false);\n\t}\n\telse\n\t{\n\t\tc.lineTo(pe.x - spacing * nx1 + orthx / 2, pe.y - spacing * ny1 + orthy / 2);\n\t\t\n\t\tvar inStartX = pe.x - spacing * nx1 - orthx / 2;\n\t\tvar inStartY = pe.y - spacing * ny1 - orthy / 2;\n\n\t\tif (!openEnded)\n\t\t{\n\t\t\tc.lineTo(inStartX, inStartY);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.moveTo(inStartX, inStartY);\n\t\t\t\n\t\t\tfns.splice(0, 0, function()\n\t\t\t{\n\t\t\t\tc.moveTo(inStartX, inStartY);\n\t\t\t});\n\t\t}\n\t}\n\t\n\tfor (var i = fns.length - 1; i >= 0; i--)\n\t{\n\t\tfns[i]();\n\t}\n\n\tif (openEnded)\n\t{\n\t\tc.end();\n\t\tc.stroke();\n\t}\n\telse\n\t{\n\t\tc.close();\n\t\tc.fillAndStroke();\n\t}\n\t\n\t// Workaround for shadow on top of base arrow\n\tc.setShadow(false);\n\t\n\t// Need to redraw the markers without the low miter limit\n\tc.setMiterLimit(4);\n\t\n\tif (isRounded)\n\t{\n\t\tc.setLineJoin('flat');\n\t}\n\n\tif (pts.length > 2)\n\t{\n\t\t// Only to repaint markers if no waypoints\n\t\t// Need to redraw the markers without the low miter limit\n\t\tc.setMiterLimit(4);\n\t\tif (markerStart && !openEnded)\n\t\t{\n\t\t\tc.begin();\n\t\t\tthis.paintMarker(c, pts[0].x, pts[0].y, startNx, startNy, startSize, startWidth, edgeWidth, spacing, true);\n\t\t\tc.stroke();\n\t\t\tc.end();\n\t\t}\n\t\t\n\t\tif (markerEnd && !openEnded)\n\t\t{\n\t\t\tc.begin();\n\t\t\tthis.paintMarker(c, pe.x, pe.y, -nx, -ny, endSize, endWidth, edgeWidth, spacing, true);\n\t\t\tc.stroke();\n\t\t\tc.end();\n\t\t}\n\t}\n};\n\n/**\n * Function: paintMarker\n * \n * Paints the marker.\n */\nmxArrowConnector.prototype.paintMarker = function(c, ptX, ptY, nx, ny, size, arrowWidth, edgeWidth, spacing, initialMove)\n{\n\tvar widthArrowRatio = edgeWidth / arrowWidth;\n\tvar orthx = edgeWidth * ny / 2;\n\tvar orthy = -edgeWidth * nx / 2;\n\n\tvar spaceX = (spacing + size) * nx;\n\tvar spaceY = (spacing + size) * ny;\n\n\tif (initialMove)\n\t{\n\t\tc.moveTo(ptX - orthx + spaceX, ptY - orthy + spaceY);\n\t}\n\telse\n\t{\n\t\tc.lineTo(ptX - orthx + spaceX, ptY - orthy + spaceY);\n\t}\n\n\tc.lineTo(ptX - orthx / widthArrowRatio + spaceX, ptY - orthy / widthArrowRatio + spaceY);\n\tc.lineTo(ptX + spacing * nx, ptY + spacing * ny);\n\tc.lineTo(ptX + orthx / widthArrowRatio + spaceX, ptY + orthy / widthArrowRatio + spaceY);\n\tc.lineTo(ptX + orthx + spaceX, ptY + orthy + spaceY);\n}\n\n/**\n * Function: isArrowRounded\n * \n * Returns wether the arrow is rounded\n */\nmxArrowConnector.prototype.isArrowRounded = function()\n{\n\treturn this.isRounded;\n};\n\n/**\n * Function: getStartArrowWidth\n * \n * Returns the width of the start arrow\n */\nmxArrowConnector.prototype.getStartArrowWidth = function()\n{\n\treturn mxConstants.ARROW_WIDTH;\n};\n\n/**\n * Function: getEndArrowWidth\n * \n * Returns the width of the end arrow\n */\nmxArrowConnector.prototype.getEndArrowWidth = function()\n{\n\treturn mxConstants.ARROW_WIDTH;\n};\n\n/**\n * Function: getEdgeWidth\n * \n * Returns the width of the body of the edge\n */\nmxArrowConnector.prototype.getEdgeWidth = function()\n{\n\treturn mxConstants.ARROW_WIDTH / 3;\n};\n\n/**\n * Function: isOpenEnded\n * \n * Returns whether the ends of the shape are drawn\n */\nmxArrowConnector.prototype.isOpenEnded = function()\n{\n\treturn false;\n};\n\n/**\n * Function: isMarkerStart\n * \n * Returns whether the start marker is drawn\n */\nmxArrowConnector.prototype.isMarkerStart = function()\n{\n\treturn (mxUtils.getValue(this.style, mxConstants.STYLE_STARTARROW, mxConstants.NONE) != mxConstants.NONE);\n};\n\n/**\n * Function: isMarkerEnd\n * \n * Returns whether the end marker is drawn\n */\nmxArrowConnector.prototype.isMarkerEnd = function()\n{\n\treturn (mxUtils.getValue(this.style, mxConstants.STYLE_ENDARROW, mxConstants.NONE) != mxConstants.NONE);\n};\n__mxOutput.mxArrowConnector = typeof mxArrowConnector !== 'undefined' ? mxArrowConnector : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxText\n *\n * Extends <mxShape> to implement a text shape. To change vertical text from\n * bottom to top to top to bottom, the following code can be used:\n * \n * (code)\n * mxText.prototype.verticalTextRotation = 90;\n * (end)\n * \n * Constructor: mxText\n *\n * Constructs a new text shape.\n * \n * Parameters:\n * \n * value - String that represents the text to be displayed. This is stored in\n * <value>.\n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * align - Specifies the horizontal alignment. Default is ''. This is stored in\n * <align>.\n * valign - Specifies the vertical alignment. Default is ''. This is stored in\n * <valign>.\n * color - String that specifies the text color. Default is 'black'. This is\n * stored in <color>.\n * family - String that specifies the font family. Default is\n * <mxConstants.DEFAULT_FONTFAMILY>. This is stored in <family>.\n * size - Integer that specifies the font size. Default is\n * <mxConstants.DEFAULT_FONTSIZE>. This is stored in <size>.\n * fontStyle - Specifies the font style. Default is 0. This is stored in\n * <fontStyle>.\n * spacing - Integer that specifies the global spacing. Default is 2. This is\n * stored in <spacing>.\n * spacingTop - Integer that specifies the top spacing. Default is 0. The\n * sum of the spacing and this is stored in <spacingTop>.\n * spacingRight - Integer that specifies the right spacing. Default is 0. The\n * sum of the spacing and this is stored in <spacingRight>.\n * spacingBottom - Integer that specifies the bottom spacing. Default is 0.The\n * sum of the spacing and this is stored in <spacingBottom>.\n * spacingLeft - Integer that specifies the left spacing. Default is 0. The\n * sum of the spacing and this is stored in <spacingLeft>.\n * horizontal - Boolean that specifies if the label is horizontal. Default is\n * true. This is stored in <horizontal>.\n * background - String that specifies the background color. Default is null.\n * This is stored in <background>.\n * border - String that specifies the label border color. Default is null.\n * This is stored in <border>.\n * wrap - Specifies if word-wrapping should be enabled. Default is false.\n * This is stored in <wrap>.\n * clipped - Specifies if the label should be clipped. Default is false.\n * This is stored in <clipped>.\n * overflow - Value of the overflow style. Default is 'visible'.\n */\nfunction mxText(value, bounds, align, valign, color,\n\tfamily,\tsize, fontStyle, spacing, spacingTop, spacingRight,\n\tspacingBottom, spacingLeft, horizontal, background, border,\n\twrap, clipped, overflow, labelPadding, textDirection)\n{\n\tmxShape.call(this);\n\tthis.value = value;\n\tthis.bounds = bounds;\n\tthis.color = (color != null) ? color : 'black';\n\tthis.align = (align != null) ? align : mxConstants.ALIGN_CENTER;\n\tthis.valign = (valign != null) ? valign : mxConstants.ALIGN_MIDDLE;\n\tthis.family = (family != null) ? family : mxConstants.DEFAULT_FONTFAMILY;\n\tthis.size = (size != null) ? size : mxConstants.DEFAULT_FONTSIZE;\n\tthis.fontStyle = (fontStyle != null) ? fontStyle : mxConstants.DEFAULT_FONTSTYLE;\n\tthis.spacing = parseInt(spacing || 2);\n\tthis.spacingTop = this.spacing + parseInt(spacingTop || 0);\n\tthis.spacingRight = this.spacing + parseInt(spacingRight || 0);\n\tthis.spacingBottom = this.spacing + parseInt(spacingBottom || 0);\n\tthis.spacingLeft = this.spacing + parseInt(spacingLeft || 0);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.background = background;\n\tthis.border = border;\n\tthis.wrap = (wrap != null) ? wrap : false;\n\tthis.clipped = (clipped != null) ? clipped : false;\n\tthis.overflow = (overflow != null) ? overflow : 'visible';\n\tthis.labelPadding = (labelPadding != null) ? labelPadding : 0;\n\tthis.textDirection = textDirection;\n\tthis.rotation = 0;\n\tthis.updateMargin();\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxText, mxShape);\n\n/**\n * Variable: baseSpacingTop\n * \n * Specifies the spacing to be added to the top spacing. Default is 0. Use the\n * value 5 here to get the same label positions as in mxGraph 1.x.\n */\nmxText.prototype.baseSpacingTop = 0;\n\n/**\n * Variable: baseSpacingBottom\n * \n * Specifies the spacing to be added to the bottom spacing. Default is 0. Use the\n * value 1 here to get the same label positions as in mxGraph 1.x.\n */\nmxText.prototype.baseSpacingBottom = 0;\n\n/**\n * Variable: baseSpacingLeft\n * \n * Specifies the spacing to be added to the left spacing. Default is 0.\n */\nmxText.prototype.baseSpacingLeft = 0;\n\n/**\n * Variable: baseSpacingRight\n * \n * Specifies the spacing to be added to the right spacing. Default is 0.\n */\nmxText.prototype.baseSpacingRight = 0;\n\n/**\n * Variable: replaceLinefeeds\n * \n * Specifies if linefeeds in HTML labels should be replaced with BR tags.\n * Default is true.\n */\nmxText.prototype.replaceLinefeeds = true;\n\n/**\n * Variable: verticalTextRotation\n * \n * Rotation for vertical text. Default is -90 (bottom to top).\n */\nmxText.prototype.verticalTextRotation = -90;\n\n/**\n * Variable: ignoreClippedStringSize\n * \n * Specifies if the string size should be measured in <updateBoundingBox> if\n * the label is clipped and the label position is center and middle. If this is\n * true, then the bounding box will be set to <bounds>. Default is true.\n * <ignoreStringSize> has precedence over this switch.\n */\nmxText.prototype.ignoreClippedStringSize = true;\n\n/**\n * Variable: ignoreStringSize\n * \n * Specifies if the actual string size should be measured. If disabled the\n * boundingBox will not ignore the actual size of the string, otherwise\n * <bounds> will be used instead. Default is false.\n */\nmxText.prototype.ignoreStringSize = false;\n\n/**\n * Variable: textWidthPadding\n * \n * Specifies the padding to be added to the text width for the bounding box.\n * This is needed to make sure no clipping is applied to borders. Default is 4\n * for IE 8 standards mode and 3 for all others.\n */\nmxText.prototype.textWidthPadding = (document.documentMode == 8 && !mxClient.IS_EM) ? 4 : 3;\n\n/**\n * Variable: lastValue\n * \n * Contains the last rendered text value. Used for caching.\n */\nmxText.prototype.lastValue = null;\n\n/**\n * Variable: cacheEnabled\n * \n * Specifies if caching for HTML labels should be enabled. Default is true.\n */\nmxText.prototype.cacheEnabled = true;\n\n/**\n * Function: isParseVml\n * \n * Text shapes do not contain VML markup and do not need to be parsed. This\n * method returns false to speed up rendering in IE8.\n */\nmxText.prototype.isParseVml = function()\n{\n\treturn false;\n};\n\n/**\n * Function: isHtmlAllowed\n * \n * Returns true if HTML is allowed for this shape. This implementation returns\n * true if the browser is not in IE8 standards mode.\n */\nmxText.prototype.isHtmlAllowed = function()\n{\n\treturn document.documentMode != 8 || mxClient.IS_EM;\n};\n\n/**\n * Function: getSvgScreenOffset\n * \n * Disables offset in IE9 for crisper image output.\n */\nmxText.prototype.getSvgScreenOffset = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: checkBounds\n * \n * Returns true if the bounds are not null and all of its variables are numeric.\n */\nmxText.prototype.checkBounds = function()\n{\n\treturn (!isNaN(this.scale) && isFinite(this.scale) && this.scale > 0 &&\n\t\t\tthis.bounds != null && !isNaN(this.bounds.x) && !isNaN(this.bounds.y) &&\n\t\t\t!isNaN(this.bounds.width) && !isNaN(this.bounds.height));\n};\n\n/**\n * Function: paint\n * \n * Generic rendering code.\n */\nmxText.prototype.paint = function(c, update)\n{\n\t// Scale is passed-through to canvas\n\tvar s = this.scale;\n\tvar x = this.bounds.x / s;\n\tvar y = this.bounds.y / s;\n\tvar w = this.bounds.width / s;\n\tvar h = this.bounds.height / s;\n\t\n\tthis.updateTransform(c, x, y, w, h);\n\tthis.configureCanvas(c, x, y, w, h);\n\t\n\tif (update)\n\t{\n\t\tc.updateText(x, y, w, h, this.align, this.valign, this.wrap, this.overflow,\n\t\t\t\tthis.clipped, this.getTextRotation(), this.node);\n\t}\n\telse\n\t{\n\t\t// Checks if text contains HTML markup\n\t\tvar realHtml = mxUtils.isNode(this.value) || this.dialect == mxConstants.DIALECT_STRICTHTML;\n\t\t\n\t\t// Always renders labels as HTML in VML\n\t\tvar fmt = (realHtml || c instanceof mxVmlCanvas2D) ? 'html' : '';\n\t\tvar val = this.value;\n\t\t\n\t\tif (!realHtml && fmt == 'html')\n\t\t{\n\t\t\tval = mxUtils.htmlEntities(val, false);\n\t\t}\n\t\t\n\t\tif (fmt == 'html' && !mxUtils.isNode(this.value))\n\t\t{\n\t\t\tval = mxUtils.replaceTrailingNewlines(val, '<div><br></div>');\t\t\t\n\t\t}\n\t\t\n\t\t// Handles trailing newlines to make sure they are visible in rendering output\n\t\tval = (!mxUtils.isNode(this.value) && this.replaceLinefeeds && fmt == 'html') ?\n\t\t\tval.replace(/\\n/g, '<br/>') : val;\n\t\t\t\n\t\tvar dir = this.textDirection;\n\t\n\t\tif (dir == mxConstants.TEXT_DIRECTION_AUTO && !realHtml)\n\t\t{\n\t\t\tdir = this.getAutoDirection();\n\t\t}\n\t\t\n\t\tif (dir != mxConstants.TEXT_DIRECTION_LTR && dir != mxConstants.TEXT_DIRECTION_RTL)\n\t\t{\n\t\t\tdir = null;\n\t\t}\n\t\t\n\t\tc.text(x, y, w, h, val, this.align, this.valign, this.wrap, fmt,\n\t\t\tthis.overflow, this.clipped, this.getTextRotation(), dir);\n\t}\n};\n\n/**\n * Function: redraw\n * \n * Renders the text using the given DOM nodes.\n */\nmxText.prototype.redraw = function()\n{\n\tif (this.visible && this.checkBounds() && this.cacheEnabled && this.lastValue == this.value &&\n\t\t(mxUtils.isNode(this.value) || this.dialect == mxConstants.DIALECT_STRICTHTML))\n\t{\n\t\tif (this.node.nodeName == 'DIV' && (this.isHtmlAllowed() || !mxClient.IS_VML))\n\t\t{\n\t\t\tif (mxClient.IS_SVG)\n\t\t\t{\n\t\t\t\tthis.redrawHtmlShapeWithCss3();\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.updateSize(this.node, (this.state == null || this.state.view.textDiv == null));\n\t\n\t\t\t\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode <= 8))\n\t\t\t\t{\n\t\t\t\t\tthis.updateHtmlFilter();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.updateHtmlTransform();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.updateBoundingBox();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar canvas = this.createCanvas();\n\n\t\t\tif (canvas != null && canvas.updateText != null)\n\t\t\t{\n\t\t\t\t// Specifies if events should be handled\n\t\t\t\tcanvas.pointerEvents = this.pointerEvents;\n\t\n\t\t\t\tthis.paint(canvas, true);\n\t\t\t\tthis.destroyCanvas(canvas);\n\t\t\t\tthis.updateBoundingBox();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Fallback if canvas does not support updateText (VML)\n\t\t\t\tmxShape.prototype.redraw.apply(this, arguments);\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tmxShape.prototype.redraw.apply(this, arguments);\n\t\t\n\t\tif (mxUtils.isNode(this.value) || this.dialect == mxConstants.DIALECT_STRICTHTML)\n\t\t{\n\t\t\tthis.lastValue = this.value;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.lastValue = null;\n\t\t}\n\t}\n};\n\n/**\n * Function: resetStyles\n * \n * Resets all styles.\n */\nmxText.prototype.resetStyles = function()\n{\n\tmxShape.prototype.resetStyles.apply(this, arguments);\n\t\n\tthis.color = 'black';\n\tthis.align = mxConstants.ALIGN_CENTER;\n\tthis.valign = mxConstants.ALIGN_MIDDLE;\n\tthis.family = mxConstants.DEFAULT_FONTFAMILY;\n\tthis.size = mxConstants.DEFAULT_FONTSIZE;\n\tthis.fontStyle = mxConstants.DEFAULT_FONTSTYLE;\n\tthis.spacing = 2;\n\tthis.spacingTop = 2;\n\tthis.spacingRight = 2;\n\tthis.spacingBottom = 2;\n\tthis.spacingLeft = 2;\n\tthis.horizontal = true;\n\tdelete this.background;\n\tdelete this.border;\n\tthis.textDirection = mxConstants.DEFAULT_TEXT_DIRECTION;\n\tdelete this.margin;\n};\n\n/**\n * Function: apply\n * \n * Extends mxShape to update the text styles.\n *\n * Parameters:\n *\n * state - <mxCellState> of the corresponding cell.\n */\nmxText.prototype.apply = function(state)\n{\n\tvar old = this.spacing;\n\tmxShape.prototype.apply.apply(this, arguments);\n\t\n\tif (this.style != null)\n\t{\n\t\tthis.fontStyle = mxUtils.getValue(this.style, mxConstants.STYLE_FONTSTYLE, this.fontStyle);\n\t\tthis.family = mxUtils.getValue(this.style, mxConstants.STYLE_FONTFAMILY, this.family);\n\t\tthis.size = mxUtils.getValue(this.style, mxConstants.STYLE_FONTSIZE, this.size);\n\t\tthis.color = mxUtils.getValue(this.style, mxConstants.STYLE_FONTCOLOR, this.color);\n\t\tthis.align = mxUtils.getValue(this.style, mxConstants.STYLE_ALIGN, this.align);\n\t\tthis.valign = mxUtils.getValue(this.style, mxConstants.STYLE_VERTICAL_ALIGN, this.valign);\n\t\tthis.spacing = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING, this.spacing));\n\t\tthis.spacingTop = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_TOP, this.spacingTop - old)) + this.spacing;\n\t\tthis.spacingRight = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_RIGHT, this.spacingRight - old)) + this.spacing;\n\t\tthis.spacingBottom = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_BOTTOM, this.spacingBottom - old)) + this.spacing;\n\t\tthis.spacingLeft = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_LEFT, this.spacingLeft - old)) + this.spacing;\n\t\tthis.horizontal = mxUtils.getValue(this.style, mxConstants.STYLE_HORIZONTAL, this.horizontal);\n\t\tthis.background = mxUtils.getValue(this.style, mxConstants.STYLE_LABEL_BACKGROUNDCOLOR, this.background);\n\t\tthis.border = mxUtils.getValue(this.style, mxConstants.STYLE_LABEL_BORDERCOLOR, this.border);\n\t\tthis.textDirection = mxUtils.getValue(this.style, mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION);\n\t\tthis.opacity = mxUtils.getValue(this.style, mxConstants.STYLE_TEXT_OPACITY, 100);\n\t\tthis.updateMargin();\n\t}\n\t\n\tthis.flipV = null;\n\tthis.flipH = null;\n};\n\n/**\n * Function: getAutoDirection\n * \n * Used to determine the automatic text direction. Returns\n * <mxConstants.TEXT_DIRECTION_LTR> or <mxConstants.TEXT_DIRECTION_RTL>\n * depending on the contents of <value>. This is not invoked for HTML, wrapped\n * content or if <value> is a DOM node.\n */\nmxText.prototype.getAutoDirection = function()\n{\n\t// Looks for strong (directional) characters\n\tvar tmp = /[A-Za-z\\u05d0-\\u065f\\u066a-\\u06ef\\u06fa-\\u07ff\\ufb1d-\\ufdff\\ufe70-\\ufefc]/.exec(this.value);\n\t\n\t// Returns the direction defined by the character\n\treturn (tmp != null && tmp.length > 0 && tmp[0] > 'z') ?\n\t\tmxConstants.TEXT_DIRECTION_RTL : mxConstants.TEXT_DIRECTION_LTR;\n};\n\n/**\n * Function: getContentNode\n * \n * Returns the node that contains the rendered input.\n */\nmxText.prototype.getContentNode = function()\n{\n\tvar result = this.node;\n\t\n\tif (result != null)\n\t{\n\t\t// Rendered with no foreignObject\n\t\tif (result.ownerSVGElement == null)\n\t\t{\n\t\t\tresult = this.node.firstChild.firstChild;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Innermost DIV that contains the actual content\n\t\t\tresult = result.firstChild.firstChild.firstChild.firstChild.firstChild;\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: updateBoundingBox\n *\n * Updates the <boundingBox> for this shape using the given node and position.\n */\nmxText.prototype.updateBoundingBox = function()\n{\n\tvar node = this.node;\n\tthis.boundingBox = this.bounds.clone();\n\tvar rot = this.getTextRotation();\n\t\n\tvar h = (this.style != null) ? mxUtils.getValue(this.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER) : null;\n\tvar v = (this.style != null) ? mxUtils.getValue(this.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE) : null;\n\n\tif (!this.ignoreStringSize && node != null && this.overflow != 'fill' && (!this.clipped ||\n\t\t!this.ignoreClippedStringSize || h != mxConstants.ALIGN_CENTER || v != mxConstants.ALIGN_MIDDLE))\n\t{\n\t\tvar ow = null;\n\t\tvar oh = null;\n\t\t\n\t\tif (node.ownerSVGElement != null)\n\t\t{\n\t\t\tif (node.firstChild != null && node.firstChild.firstChild != null &&\n\t\t\t\tnode.firstChild.firstChild.nodeName == 'foreignObject')\n\t\t\t{\n\t\t\t\t// Uses second inner DIV for font metrics\n\t\t\t\tnode = node.firstChild.firstChild.firstChild.firstChild;\n\t\t\t\toh = node.offsetHeight * this.scale;\n\t\t\t\t\n\t\t\t\tif (this.overflow == 'width')\n\t\t\t\t{\n\t\t\t\t\tow = this.boundingBox.width;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tow = node.offsetWidth * this.scale;\t\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tvar b = node.getBBox();\n\t\t\t\t\t\n\t\t\t\t\t// Workaround for bounding box of empty string\n\t\t\t\t\tif (typeof(this.value) == 'string' && mxUtils.trim(this.value) == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.boundingBox = null;\n\t\t\t\t\t}\n\t\t\t\t\telse if (b.width == 0 && b.height == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.boundingBox = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.boundingBox = new mxRectangle(b.x, b.y, b.width, b.height);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\t// Ignores NS_ERROR_FAILURE in FF if container display is none.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar td = (this.state != null) ? this.state.view.textDiv : null;\n\n\t\t\t// Use cached offset size\n\t\t\tif (this.offsetWidth != null && this.offsetHeight != null)\n\t\t\t{\n\t\t\t\tow = this.offsetWidth * this.scale;\n\t\t\t\toh = this.offsetHeight * this.scale;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Cannot get node size while container hidden so a\n\t\t\t\t// shared temporary DIV is used for text measuring\n\t\t\t\tif (td != null)\n\t\t\t\t{\n\t\t\t\t\tthis.updateFont(td);\n\t\t\t\t\tthis.updateSize(td, false);\n\t\t\t\t\tthis.updateInnerHtml(td);\n\n\t\t\t\t\tnode = td;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar sizeDiv = node;\n\n\t\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t\t{\n\t\t\t\t\tvar w = Math.round(this.bounds.width / this.scale);\n\t\n\t\t\t\t\tif (this.wrap && w > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\t\t\tnode.style.whiteSpace = 'normal';\n\n\t\t\t\t\t\tif (node.style.wordWrap != 'break-word')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Innermost DIV is used for measuring text\n\t\t\t\t\t\t\tvar divs = sizeDiv.getElementsByTagName('div');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (divs.length > 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsizeDiv = divs[divs.length - 1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tow = sizeDiv.offsetWidth + 2;\n\t\t\t\t\t\t\tdivs = this.node.getElementsByTagName('div');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (this.clipped)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tow = Math.min(w, ow);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Second last DIV width must be updated in DOM tree\n\t\t\t\t\t\t\tif (divs.length > 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdivs[divs.length - 2].style.width = ow + 'px';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.style.whiteSpace = 'nowrap';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t}\n\n\t\t\t\tthis.offsetWidth = sizeDiv.offsetWidth + this.textWidthPadding;\n\t\t\t\tthis.offsetHeight = sizeDiv.offsetHeight;\n\t\t\t\t\n\t\t\t\tow = this.offsetWidth * this.scale;\n\t\t\t\toh = this.offsetHeight * this.scale;\n\t\t\t}\n\t\t}\n\n\t\tif (ow != null && oh != null)\n\t\t{\t\n\t\t\tthis.boundingBox = new mxRectangle(this.bounds.x,\n\t\t\t\tthis.bounds.y, ow, oh);\n\t\t}\n\t}\n\n\tif (this.boundingBox != null)\n\t{\n\t\tif (rot != 0)\n\t\t{\n\t\t\t// Accounts for pre-rotated x and y\n\t\t\tvar bbox = mxUtils.getBoundingBox(new mxRectangle(\n\t\t\t\tthis.margin.x * this.boundingBox.width,\n\t\t\t\tthis.margin.y * this.boundingBox.height,\n\t\t\t\tthis.boundingBox.width, this.boundingBox.height),\n\t\t\t\trot, new mxPoint(0, 0));\n\t\t\t\n\t\t\tthis.unrotatedBoundingBox = mxRectangle.fromRectangle(this.boundingBox);\n\t\t\tthis.unrotatedBoundingBox.x += this.margin.x * this.unrotatedBoundingBox.width;\n\t\t\tthis.unrotatedBoundingBox.y += this.margin.y * this.unrotatedBoundingBox.height;\n\t\t\t\n\t\t\tthis.boundingBox.x += bbox.x;\n\t\t\tthis.boundingBox.y += bbox.y;\n\t\t\tthis.boundingBox.width = bbox.width;\n\t\t\tthis.boundingBox.height = bbox.height;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.boundingBox.x += this.margin.x * this.boundingBox.width;\n\t\t\tthis.boundingBox.y += this.margin.y * this.boundingBox.height;\n\t\t\tthis.unrotatedBoundingBox = null;\n\t\t}\n\t}\n};\n\n/**\n * Function: getShapeRotation\n * \n * Returns 0 to avoid using rotation in the canvas via updateTransform.\n */\nmxText.prototype.getShapeRotation = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: getTextRotation\n * \n * Returns the rotation for the text label of the corresponding shape.\n */\nmxText.prototype.getTextRotation = function()\n{\n\treturn (this.state != null && this.state.shape != null) ? this.state.shape.getTextRotation() : 0;\n};\n\n/**\n * Function: isPaintBoundsInverted\n * \n * Inverts the bounds if <mxShape.isBoundsInverted> returns true or if the\n * horizontal style is false.\n */\nmxText.prototype.isPaintBoundsInverted = function()\n{\n\treturn !this.horizontal && this.state != null && this.state.view.graph.model.isVertex(this.state.cell);\n};\n\n/**\n * Function: configureCanvas\n * \n * Sets the state of the canvas for drawing the shape.\n */\nmxText.prototype.configureCanvas = function(c, x, y, w, h)\n{\n\tmxShape.prototype.configureCanvas.apply(this, arguments);\n\t\n\tc.setFontColor(this.color);\n\tc.setFontBackgroundColor(this.background);\n\tc.setFontBorderColor(this.border);\n\tc.setFontFamily(this.family);\n\tc.setFontSize(this.size);\n\tc.setFontStyle(this.fontStyle);\n};\n\n/**\n * Function: updateVmlContainer\n * \n * Sets the width and height of the container to 1px.\n */\nmxText.prototype.updateVmlContainer = function()\n{\n\tthis.node.style.left = Math.round(this.bounds.x) + 'px';\n\tthis.node.style.top = Math.round(this.bounds.y) + 'px';\n\tthis.node.style.width = '1px';\n\tthis.node.style.height = '1px';\n\tthis.node.style.overflow = 'visible';\n};\n\n/**\n * Function: getHtmlValue\n * \n * Private helper function to create SVG elements\n */\nmxText.prototype.getHtmlValue = function()\n{\n\tvar val = this.value;\n\t\n\tif (this.dialect != mxConstants.DIALECT_STRICTHTML)\n\t{\n\t\tval = mxUtils.htmlEntities(val, false);\n\t}\n\t\n\t// Handles trailing newlines to make sure they are visible in rendering output\n\tval = mxUtils.replaceTrailingNewlines(val, '<div><br></div>');\n\tval = (this.replaceLinefeeds) ? val.replace(/\\n/g, '<br/>') : val;\n\t\n\treturn val;\n};\n\n/**\n * Function: getTextCss\n * \n * Private helper function to create SVG elements\n */\nmxText.prototype.getTextCss = function()\n{\n\tvar lh = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (this.size * mxConstants.LINE_HEIGHT) + 'px' :\n\t\tmxConstants.LINE_HEIGHT;\n\n\tvar css = 'display: inline-block; font-size: ' + this.size + 'px; ' +\n\t\t'font-family: ' + this.family + '; color: ' + this.color + '; line-height: ' + lh +\n\t\t'; pointer-events: ' + ((this.pointerEvents) ? 'all' : 'none') + '; ';\n\n\tif ((this.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tcss += 'font-weight: bold; ';\n\t}\n\n\tif ((this.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tcss += 'font-style: italic; ';\n\t}\n\t\n\tvar deco = [];\n\t\n\tif ((this.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tdeco.push('underline');\n\t}\n\t\n\tif ((this.fontStyle & mxConstants.FONT_STRIKETHROUGH) == mxConstants.FONT_STRIKETHROUGH)\n\t{\n\t\tdeco.push('line-through');\n\t}\n\t\n\tif (deco.length > 0)\n\t{\n\t\tcss += 'text-decoration: ' + deco.join(' ') + '; ';\n\t}\n\n\treturn css;\n};\n\n/**\n * Function: redrawHtmlShape\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.redrawHtmlShape = function()\n{\n\tif (mxClient.IS_SVG)\n\t{\n\t\tthis.redrawHtmlShapeWithCss3();\t\n\t}\n\telse\n\t{\n\t\tvar style = this.node.style;\n\t\n\t\t// Resets CSS styles\n\t\tstyle.whiteSpace = 'normal';\n\t\tstyle.overflow = '';\n\t\tstyle.width = '';\n\t\tstyle.height = '';\n\t\t\n\t\tthis.updateValue();\n\t\tthis.updateFont(this.node);\n\t\tthis.updateSize(this.node, (this.state == null || this.state.view.textDiv == null));\n\t\t\n\t\tthis.offsetWidth = null;\n\t\tthis.offsetHeight = null;\n\t\n\t\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode <= 8))\n\t\t{\n\t\t\tthis.updateHtmlFilter();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.updateHtmlTransform();\n\t\t}\n\t}\n};\n\n/**\n * Function: redrawHtmlShapeWithCss3\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.redrawHtmlShapeWithCss3 = function()\n{\n\tvar w = Math.max(0, Math.round(this.bounds.width / this.scale));\n\tvar h = Math.max(0, Math.round(this.bounds.height / this.scale));\n\tvar flex = 'position: absolute; left: ' + Math.round(this.bounds.x) + 'px; ' +\n\t\t'top: ' + Math.round(this.bounds.y) + 'px; pointer-events: none; ';\n\tvar block = this.getTextCss();\n\t\n\tmxSvgCanvas2D.createCss(w + 2, h, this.align, this.valign, this.wrap, this.overflow, this.clipped,\n\t\t(this.background != null) ? mxUtils.htmlEntities(this.background) : null,\n\t\t(this.border != null) ? mxUtils.htmlEntities(this.border) : null,\n\t\tflex, block, this.scale, mxUtils.bind(this, function(dx, dy, flex, item, block, ofl)\n\t{\n\t\tvar r = this.getTextRotation();\n\t\tvar tr = ((this.scale != 1) ? 'scale(' + this.scale + ') ' : '') +\n\t\t\t((r != 0) ? 'rotate(' + r + 'deg) ' : '') +\n\t\t\t((this.margin.x != 0 || this.margin.y != 0) ?\n\t\t\t\t'translate(' + (this.margin.x * 100) + '%,' +\n\t\t\t\t\t(this.margin.y * 100) + '%)' : '');\n\t\t\n\t\tif (tr != '')\n\t\t{\n\t\t\ttr = 'transform-origin: 0 0; transform: ' + tr + '; ';\n\t\t}\n\n\t\tif (ofl == '')\n\t\t{\n\t\t\tflex += item;\n\t\t\titem = 'display:inline-block; min-width: 100%; ' + tr;\n\t\t}\n\t\telse\n\t\t{\n\t\t\titem += tr;\n\t\t\t\n\t\t\tif (mxClient.IS_SF)\n\t\t\t{\n\t\t\t\titem += '-webkit-clip-path: content-box;';\n\t\t\t}\n\t\t}\n\n\t\tif (this.opacity < 100)\n\t\t{\n\t\t\tblock += 'opacity: ' + (this.opacity / 100) + '; ';\n\t\t}\n\t\t\n\t\tthis.node.setAttribute('style', flex);\n\t\t\n\t\tvar html = (mxUtils.isNode(this.value)) ? this.value.outerHTML : this.getHtmlValue();\n\t\t\n\t\tif (this.node.firstChild == null)\n\t\t{\n\t\t\tthis.node.innerHTML = '<div><div>' + html +'</div></div>';\n\t\t}\n\n\t\tthis.node.firstChild.firstChild.setAttribute('style', block);\n\t\tthis.node.firstChild.setAttribute('style', item);\n\t}));\n};\n\n/**\n * Function: updateHtmlTransform\n *\n * Returns the spacing as an <mxPoint>.\n */\nmxText.prototype.updateHtmlTransform = function()\n{\n\tvar theta = this.getTextRotation();\n\tvar style = this.node.style;\n\tvar dx = this.margin.x;\n\tvar dy = this.margin.y;\n\t\n\tif (theta != 0)\n\t{\n\t\tmxUtils.setPrefixedStyle(style, 'transformOrigin', (-dx * 100) + '%' + ' ' + (-dy * 100) + '%');\n\t\tmxUtils.setPrefixedStyle(style, 'transform', 'translate(' + (dx * 100) + '%' + ',' + (dy * 100) + '%) ' +\n\t\t\t'scale(' + this.scale + ') rotate(' + theta + 'deg)');\n\t}\n\telse\n\t{\n\t\tmxUtils.setPrefixedStyle(style, 'transformOrigin', '0% 0%');\n\t\tmxUtils.setPrefixedStyle(style, 'transform', 'scale(' + this.scale + ') ' +\n\t\t\t'translate(' + (dx * 100) + '%' + ',' + (dy * 100) + '%)');\n\t}\n\n\tstyle.left = Math.round(this.bounds.x - Math.ceil(dx * ((this.overflow != 'fill' &&\n\t\tthis.overflow != 'width') ? 3 : 1))) + 'px';\n\tstyle.top = Math.round(this.bounds.y - dy * ((this.overflow != 'fill') ? 3 : 1)) + 'px';\n\t\n\tif (this.opacity < 100)\n\t{\n\t\tstyle.opacity = this.opacity / 100;\n\t}\n\telse\n\t{\n\t\tstyle.opacity = '';\n\t}\n};\n\n/**\n * Function: updateInnerHtml\n * \n * Sets the inner HTML of the given element to the <value>.\n */\nmxText.prototype.updateInnerHtml = function(elt)\n{\n\tif (mxUtils.isNode(this.value))\n\t{\n\t\telt.innerHTML = this.value.outerHTML;\n\t}\n\telse\n\t{\n\t\tvar val = this.value;\n\t\t\n\t\tif (this.dialect != mxConstants.DIALECT_STRICTHTML)\n\t\t{\n\t\t\t// LATER: Can be cached in updateValue\n\t\t\tval = mxUtils.htmlEntities(val, false);\n\t\t}\n\t\t\n\t\t// Handles trailing newlines to make sure they are visible in rendering output\n\t\tval = mxUtils.replaceTrailingNewlines(val, '<div>&nbsp;</div>');\n\t\tval = (this.replaceLinefeeds) ? val.replace(/\\n/g, '<br/>') : val;\n\t\tval = '<div style=\"display:inline-block;_display:inline;\">' + val + '</div>';\n\t\t\n\t\telt.innerHTML = val;\n\t}\n};\n\n/**\n * Function: updateHtmlFilter\n *\n * Rotated text rendering quality is bad for IE9 quirks/IE8 standards\n */\nmxText.prototype.updateHtmlFilter = function()\n{\n\tvar style = this.node.style;\n\tvar dx = this.margin.x;\n\tvar dy = this.margin.y;\n\tvar s = this.scale;\n\t\n\t// Resets filter before getting offsetWidth\n\tmxUtils.setOpacity(this.node, this.opacity);\n\t\n\t// Adds 1 to match table height in 1.x\n\tvar ow = 0;\n\tvar oh = 0;\n\tvar td = (this.state != null) ? this.state.view.textDiv : null;\n\tvar sizeDiv = this.node;\n\t\n\t// Fallback for hidden text rendering in IE quirks mode\n\tif (td != null)\n\t{\n\t\ttd.style.overflow = '';\n\t\ttd.style.height = '';\n\t\ttd.style.width = '';\n\t\t\n\t\tthis.updateFont(td);\n\t\tthis.updateSize(td, false);\n\t\tthis.updateInnerHtml(td);\n\t\t\n\t\tvar w = Math.round(this.bounds.width / this.scale);\n\n\t\tif (this.wrap && w > 0)\n\t\t{\n\t\t\ttd.style.whiteSpace = 'normal';\n\t\t\ttd.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\tow = w;\n\t\t\t\n\t\t\tif (this.clipped)\n\t\t\t{\n\t\t\t\tow = Math.min(ow, this.bounds.width);\n\t\t\t}\n\n\t\t\ttd.style.width = ow + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttd.style.whiteSpace = 'nowrap';\n\t\t}\n\t\t\n\t\tsizeDiv = td;\n\t\t\n\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t{\n\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\n\t\t\tif (this.wrap && td.style.wordWrap == 'break-word')\n\t\t\t{\n\t\t\t\tsizeDiv.style.width = '100%';\n\t\t\t}\n\t\t}\n\n\t\t// Required to update the height of the text box after wrapping width is known \n\t\tif (!this.clipped && this.wrap && w > 0)\n\t\t{\n\t\t\tow = sizeDiv.offsetWidth + this.textWidthPadding;\n\t\t\ttd.style.width = ow + 'px';\n\t\t}\n\t\t\n\t\toh = sizeDiv.offsetHeight + 2;\n\t\t\n\t\tif (mxClient.IS_QUIRKS && this.border != null && this.border != mxConstants.NONE)\n\t\t{\n\t\t\toh += 3;\n\t\t}\n\t}\n\telse if (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t{\n\t\tsizeDiv = sizeDiv.firstChild;\n\t\toh = sizeDiv.offsetHeight;\n\t}\n\n\tow = sizeDiv.offsetWidth + this.textWidthPadding;\n\t\n\tif (this.clipped)\n\t{\n\t\toh = Math.min(oh, this.bounds.height);\n\t}\n\n\tvar w = this.bounds.width / s;\n\tvar h = this.bounds.height / s;\n\n\t// Handles special case for live preview with no wrapper DIV and no textDiv\n\tif (this.overflow == 'fill')\n\t{\n\t\toh = h;\n\t\tow = w;\n\t}\n\telse if (this.overflow == 'width')\n\t{\n\t\toh = sizeDiv.scrollHeight;\n\t\tow = w;\n\t}\n\t\n\t// Stores for later use\n\tthis.offsetWidth = ow;\n\tthis.offsetHeight = oh;\n\t\n\t// Simulates max-height CSS in quirks mode\n\tif (mxClient.IS_QUIRKS && (this.clipped || (this.overflow == 'width' && h > 0)))\n\t{\n\t\th = Math.min(h, oh);\n\t\tstyle.height = Math.round(h) + 'px';\n\t}\n\telse\n\t{\n\t\th = oh;\n\t}\n\n\tif (this.overflow != 'fill' && this.overflow != 'width')\n\t{\n\t\tif (this.clipped)\n\t\t{\n\t\t\tow = Math.min(w, ow);\n\t\t}\n\t\t\n\t\tw = ow;\n\n\t\t// Simulates max-width CSS in quirks mode\n\t\tif ((mxClient.IS_QUIRKS && this.clipped) || this.wrap)\n\t\t{\n\t\t\tstyle.width = Math.round(w) + 'px';\n\t\t}\n\t}\n\n\th *= s;\n\tw *= s;\n\t\n\t// Rotation case is handled via VML canvas\n\tvar rad = this.getTextRotation() * (Math.PI / 180);\n\t\n\t// Precalculate cos and sin for the rotation\n\tvar real_cos = parseFloat(parseFloat(Math.cos(rad)).toFixed(8));\n\tvar real_sin = parseFloat(parseFloat(Math.sin(-rad)).toFixed(8));\n\n\trad %= 2 * Math.PI;\n\t\n\tif (rad < 0)\n\t{\n\t\trad += 2 * Math.PI;\n\t}\n\t\n\trad %= Math.PI;\n\t\n\tif (rad > Math.PI / 2)\n\t{\n\t\trad = Math.PI - rad;\n\t}\n\t\n\tvar cos = Math.cos(rad);\n\tvar sin = Math.sin(-rad);\n\n\tvar tx = w * -(dx + 0.5);\n\tvar ty = h * -(dy + 0.5);\n\n\tvar top_fix = (h - h * cos + w * sin) / 2 + real_sin * tx - real_cos * ty;\n\tvar left_fix = (w - w * cos + h * sin) / 2 - real_cos * tx - real_sin * ty;\n\t\n\tif (rad != 0)\n\t{\n\t\tvar f = 'progid:DXImageTransform.Microsoft.Matrix(M11=' + real_cos + ', M12='+\n\t\t\treal_sin + ', M21=' + (-real_sin) + ', M22=' + real_cos + ', sizingMethod=\\'auto expand\\')';\n\t\t\n\t\tif (style.filter != null && style.filter.length > 0)\n\t\t{\n\t\t\tstyle.filter += ' ' + f;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle.filter = f;\n\t\t}\n\t}\n\t\n\t// Workaround for rendering offsets\n\tvar dy = 0;\n\t\n\tif (this.overflow != 'fill' && mxClient.IS_QUIRKS)\n\t{\n\t\tif (this.valign == mxConstants.ALIGN_TOP)\n\t\t{\n\t\t\tdy -= 1;\n\t\t}\n\t\telse if (this.valign == mxConstants.ALIGN_BOTTOM)\n\t\t{\n\t\t\tdy += 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdy += 1;\n\t\t}\n\t}\n\n\tstyle.zoom = s;\n\tstyle.left = Math.round(this.bounds.x + left_fix - w / 2) + 'px';\n\tstyle.top = Math.round(this.bounds.y + top_fix - h / 2 + dy) + 'px';\n};\n\n/**\n * Function: updateValue\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.updateValue = function()\n{\n\tif (mxUtils.isNode(this.value))\n\t{\n\t\tthis.node.innerHTML = '';\n\t\tthis.node.appendChild(this.value);\n\t}\n\telse\n\t{\n\t\tvar val = this.value;\n\t\t\n\t\tif (this.dialect != mxConstants.DIALECT_STRICTHTML)\n\t\t{\n\t\t\tval = mxUtils.htmlEntities(val, false);\n\t\t}\n\t\t\n\t\t// Handles trailing newlines to make sure they are visible in rendering output\n\t\tval = mxUtils.replaceTrailingNewlines(val, '<div><br></div>');\n\t\tval = (this.replaceLinefeeds) ? val.replace(/\\n/g, '<br/>') : val;\n\t\tvar bg = (this.background != null && this.background != mxConstants.NONE) ? this.background : null;\n\t\tvar bd = (this.border != null && this.border != mxConstants.NONE) ? this.border : null;\n\n\t\tif (this.overflow == 'fill' || this.overflow == 'width')\n\t\t{\n\t\t\tif (bg != null)\n\t\t\t{\n\t\t\t\tthis.node.style.backgroundColor = bg;\n\t\t\t}\n\t\t\t\n\t\t\tif (bd != null)\n\t\t\t{\n\t\t\t\tthis.node.style.border = '1px solid ' + bd;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar css = '';\n\t\t\t\n\t\t\tif (bg != null)\n\t\t\t{\n\t\t\t\tcss += 'background-color:' + mxUtils.htmlEntities(bg) + ';';\n\t\t\t}\n\t\t\t\n\t\t\tif (bd != null)\n\t\t\t{\n\t\t\t\tcss += 'border:1px solid ' + mxUtils.htmlEntities(bd) + ';';\n\t\t\t}\n\t\t\t\n\t\t\t// Wrapper DIV for background, zoom needed for inline in quirks\n\t\t\t// and to measure wrapped font sizes in all browsers\n\t\t\t// FIXME: Background size in quirks mode for wrapped text\n\t\t\tvar lh = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (this.size * mxConstants.LINE_HEIGHT) + 'px' :\n\t\t\t\tmxConstants.LINE_HEIGHT;\n\t\t\tval = '<div style=\"zoom:1;' + css + 'display:inline-block;_display:inline;text-decoration:inherit;' +\n\t\t\t\t'padding-bottom:1px;padding-right:1px;line-height:' + lh + '\">' + val + '</div>';\n\t\t}\n\n\t\tthis.node.innerHTML = val;\n\t\t\n\t\t// Sets text direction\n\t\tvar divs = this.node.getElementsByTagName('div');\n\t\t\n\t\tif (divs.length > 0)\n\t\t{\n\t\t\tvar dir = this.textDirection;\n\n\t\t\tif (dir == mxConstants.TEXT_DIRECTION_AUTO && this.dialect != mxConstants.DIALECT_STRICTHTML)\n\t\t\t{\n\t\t\t\tdir = this.getAutoDirection();\n\t\t\t}\n\t\t\t\n\t\t\tif (dir == mxConstants.TEXT_DIRECTION_LTR || dir == mxConstants.TEXT_DIRECTION_RTL)\n\t\t\t{\n\t\t\t\tdivs[divs.length - 1].setAttribute('dir', dir);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdivs[divs.length - 1].removeAttribute('dir');\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: updateFont\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.updateFont = function(node)\n{\n\tvar style = node.style;\n\t\n\tstyle.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (this.size * mxConstants.LINE_HEIGHT) + 'px' : mxConstants.LINE_HEIGHT;\n\tstyle.fontSize = this.size + 'px';\n\tstyle.fontFamily = this.family;\n\tstyle.verticalAlign = 'top';\n\tstyle.color = this.color;\n\t\n\tif ((this.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tstyle.fontWeight = 'bold';\n\t}\n\telse\n\t{\n\t\tstyle.fontWeight = '';\n\t}\n\n\tif ((this.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tstyle.fontStyle = 'italic';\n\t}\n\telse\n\t{\n\t\tstyle.fontStyle = '';\n\t}\n\t\n\tvar txtDecor = [];\n\t\n\tif ((this.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\ttxtDecor.push('underline');\n\t}\n\t\n\tif ((this.fontStyle & mxConstants.FONT_STRIKETHROUGH) == mxConstants.FONT_STRIKETHROUGH)\n\t{\n\t\ttxtDecor.push('line-through');\n\t}\n\t\n\tstyle.textDecoration = txtDecor.join(' ');\n\t\n\tif (this.align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tstyle.textAlign = 'center';\n\t}\n\telse if (this.align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tstyle.textAlign = 'right';\n\t}\n\telse\n\t{\n\t\tstyle.textAlign = 'left';\n\t}\n};\n\n/**\n * Function: updateSize\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.updateSize = function(node, enableWrap)\n{\n\tvar w = Math.max(0, Math.round(this.bounds.width / this.scale));\n\tvar h = Math.max(0, Math.round(this.bounds.height / this.scale));\n\tvar style = node.style;\n\t\n\t// NOTE: Do not use maxWidth here because wrapping will\n\t// go wrong if the cell is outside of the viewable area\n\tif (this.clipped)\n\t{\n\t\tstyle.overflow = 'hidden';\n\t\t\n\t\tif (!mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tstyle.maxHeight = h + 'px';\n\t\t\tstyle.maxWidth = w + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle.width = w + 'px';\n\t\t}\n\t}\n\telse if (this.overflow == 'fill')\n\t{\n\t\tstyle.width = (w + 1) + 'px';\n\t\tstyle.height = (h + 1) + 'px';\n\t\tstyle.overflow = 'hidden';\n\t}\n\telse if (this.overflow == 'width')\n\t{\n\t\tstyle.width = (w + 1) + 'px';\n\t\tstyle.maxHeight = (h + 1) + 'px';\n\t\tstyle.overflow = 'hidden';\n\t}\n\t\n\tif (this.wrap && w > 0)\n\t{\n\t\tstyle.wordWrap = mxConstants.WORD_WRAP;\n\t\tstyle.whiteSpace = 'normal';\n\t\tstyle.width = w + 'px';\n\n\t\tif (enableWrap && this.overflow != 'fill' && this.overflow != 'width')\n\t\t{\n\t\t\tvar sizeDiv = node;\n\t\t\t\n\t\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t{\n\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t\n\t\t\t\tif (node.style.wordWrap == 'break-word')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv.style.width = '100%';\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar tmp = sizeDiv.offsetWidth;\n\t\t\t\n\t\t\t// Workaround for text measuring in hidden containers\n\t\t\tif (tmp == 0)\n\t\t\t{\n\t\t\t\tvar prev = node.parentNode;\n\t\t\t\tnode.style.visibility = 'hidden';\n\t\t\t\tdocument.body.appendChild(node);\n\t\t\t\ttmp = sizeDiv.offsetWidth;\n\t\t\t\tnode.style.visibility = '';\n\t\t\t\tprev.appendChild(node);\n\t\t\t}\n\n\t\t\ttmp += 3;\n\t\t\t\n\t\t\tif (this.clipped)\n\t\t\t{\n\t\t\t\ttmp = Math.min(tmp, w);\n\t\t\t}\n\t\t\t\n\t\t\tstyle.width = tmp + 'px';\n\t\t}\n\t}\n\telse\n\t{\n\t\tstyle.whiteSpace = 'nowrap';\n\t}\n};\n\n/**\n * Function: getMargin\n *\n * Returns the spacing as an <mxPoint>.\n */\nmxText.prototype.updateMargin = function()\n{\n\tthis.margin = mxUtils.getAlignmentAsPoint(this.align, this.valign);\n};\n\n/**\n * Function: getSpacing\n *\n * Returns the spacing as an <mxPoint>.\n */\nmxText.prototype.getSpacing = function()\n{\n\tvar dx = 0;\n\tvar dy = 0;\n\n\tif (this.align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tdx = (this.spacingLeft - this.spacingRight) / 2;\n\t}\n\telse if (this.align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tdx = -this.spacingRight - this.baseSpacingRight;\n\t}\n\telse\n\t{\n\t\tdx = this.spacingLeft + this.baseSpacingLeft;\n\t}\n\n\tif (this.valign == mxConstants.ALIGN_MIDDLE)\n\t{\n\t\tdy = (this.spacingTop - this.spacingBottom) / 2;\n\t}\n\telse if (this.valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tdy = -this.spacingBottom - this.baseSpacingBottom;;\n\t}\n\telse\n\t{\n\t\tdy = this.spacingTop + this.baseSpacingTop;\n\t}\n\t\n\treturn new mxPoint(dx, dy);\n};\n\n__mxOutput.mxText = typeof mxText !== 'undefined' ? mxText : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxTriangle\n * \n * Implementation of the triangle shape.\n * \n * Constructor: mxTriangle\n *\n * Constructs a new triangle shape.\n */\nfunction mxTriangle()\n{\n\tmxActor.call(this);\n};\n\n/**\n * Extends mxActor.\n */\nmxUtils.extend(mxTriangle, mxActor);\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxTriangle.prototype.isRoundable = function()\n{\n\treturn true;\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxTriangle.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tthis.addPoints(c, [new mxPoint(0, 0), new mxPoint(w, 0.5 * h), new mxPoint(0, h)], this.isRounded, arcSize, true);\n};\n\n__mxOutput.mxTriangle = typeof mxTriangle !== 'undefined' ? mxTriangle : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxHexagon\n * \n * Implementation of the hexagon shape.\n * \n * Constructor: mxHexagon\n *\n * Constructs a new hexagon shape.\n */\nfunction mxHexagon()\n{\n\tmxActor.call(this);\n};\n\n/**\n * Extends mxActor.\n */\nmxUtils.extend(mxHexagon, mxActor);\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxHexagon.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tthis.addPoints(c, [new mxPoint(0.25 * w, 0), new mxPoint(0.75 * w, 0), new mxPoint(w, 0.5 * h), new mxPoint(0.75 * w, h),\n\t                   new mxPoint(0.25 * w, h), new mxPoint(0, 0.5 * h)], this.isRounded, arcSize, true);\n};\n\n__mxOutput.mxHexagon = typeof mxHexagon !== 'undefined' ? mxHexagon : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxLine\n *\n * Extends <mxShape> to implement a horizontal line shape.\n * This shape is registered under <mxConstants.SHAPE_LINE> in\n * <mxCellRenderer>.\n * \n * Constructor: mxLine\n *\n * Constructs a new line shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * stroke - String that defines the stroke color. Default is 'black'. This is\n * stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxLine(bounds, stroke, strokewidth, vertical)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n\tthis.vertical = (vertical != null) ? vertical : this.vertical;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxLine, mxShape);\n\n/**\n * Function: vertical\n * \n * Whether to paint a vertical line.\n */\nmxLine.prototype.vertical = false;\n\n/**\n * Function: paintVertexShape\n * \n * Redirects to redrawPath for subclasses to work.\n */\nmxLine.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tc.begin();\n\n\tif (this.vertical)\n\t{\n\t\tvar mid = x + w / 2;\n\t\tc.moveTo(mid, y);\n\t\tc.lineTo(mid, y + h);\n\t}\n\telse\n\t{\n\t\tvar mid = y + h / 2;\n\t\tc.moveTo(x, mid);\n\t\tc.lineTo(x + w, mid);\n\t}\n\n\tc.stroke();\n};\n\n__mxOutput.mxLine = typeof mxLine !== 'undefined' ? mxLine : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImageShape\n *\n * Extends <mxShape> to implement an image shape. This shape is registered\n * under <mxConstants.SHAPE_IMAGE> in <mxCellRenderer>.\n * \n * Constructor: mxImageShape\n * \n * Constructs a new image shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * image - String that specifies the URL of the image. This is stored in\n * <image>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 0. This is stored in <strokewidth>.\n */\nfunction mxImageShape(bounds, image, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.image = image;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n\tthis.shadow = false;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxImageShape, mxRectangleShape);\n\n/**\n * Variable: preserveImageAspect\n *\n * Switch to preserve image aspect. Default is true.\n */\nmxImageShape.prototype.preserveImageAspect = true;\n\n/**\n * Function: getSvgScreenOffset\n * \n * Disables offset in IE9 for crisper image output.\n */\nmxImageShape.prototype.getSvgScreenOffset = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: apply\n * \n * Overrides <mxShape.apply> to replace the fill and stroke colors with the\n * respective values from <mxConstants.STYLE_IMAGE_BACKGROUND> and\n * <mxConstants.STYLE_IMAGE_BORDER>.\n * \n * Applies the style of the given <mxCellState> to the shape. This\n * implementation assigns the following styles to local fields:\n * \n * - <mxConstants.STYLE_IMAGE_BACKGROUND> => fill\n * - <mxConstants.STYLE_IMAGE_BORDER> => stroke\n *\n * Parameters:\n *\n * state - <mxCellState> of the corresponding cell.\n */\nmxImageShape.prototype.apply = function(state)\n{\n\tmxShape.prototype.apply.apply(this, arguments);\n\t\n\tthis.fill = null;\n\tthis.stroke = null;\n\tthis.gradient = null;\n\t\n\tif (this.style != null)\n\t{\n\t\tthis.preserveImageAspect = mxUtils.getNumber(this.style, mxConstants.STYLE_IMAGE_ASPECT, 1) == 1;\n\t\t\n\t\t// Legacy support for imageFlipH/V\n\t\tthis.flipH = this.flipH || mxUtils.getValue(this.style, 'imageFlipH', 0) == 1;\n\t\tthis.flipV = this.flipV || mxUtils.getValue(this.style, 'imageFlipV', 0) == 1;\n\t}\n};\n\n/**\n * Function: isHtmlAllowed\n * \n * Returns true if HTML is allowed for this shape. This implementation always\n * returns false.\n */\nmxImageShape.prototype.isHtmlAllowed = function()\n{\n\treturn !this.preserveImageAspect;\n};\n\n/**\n * Function: createHtml\n *\n * Creates and returns the HTML DOM node(s) to represent\n * this shape. This implementation falls back to <createVml>\n * so that the HTML creation is optional.\n */\nmxImageShape.prototype.createHtml = function()\n{\n\tvar node = document.createElement('div');\n\tnode.style.position = 'absolute';\n\n\treturn node;\n};\n\n/**\n * Function: isRoundable\n * \n * Disables inherited roundable support.\n */\nmxImageShape.prototype.isRoundable = function(c, x, y, w, h)\n{\n\treturn false;\n};\n\n/**\n * Function: paintVertexShape\n * \n * Generic background painting implementation.\n */\nmxImageShape.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tif (this.image != null)\n\t{\n\t\tvar fill = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BACKGROUND, null);\n\t\tvar stroke = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BORDER, null);\n\t\t\n\t\tif (fill != null)\n\t\t{\n\t\t\t// Stroke rendering required for shadow\n\t\t\tc.setFillColor(fill);\n\t\t\tc.setStrokeColor(stroke);\n\t\t\tc.rect(x, y, w, h);\n\t\t\tc.fillAndStroke();\n\t\t}\n\n\t\t// FlipH/V are implicit via mxShape.updateTransform\n\t\tc.image(x, y, w, h, this.image, this.preserveImageAspect, false, false);\n\t\t\n\t\tvar stroke = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BORDER, null);\n\t\t\n\t\tif (stroke != null)\n\t\t{\n\t\t\tc.setShadow(false);\n\t\t\tc.setStrokeColor(stroke);\n\t\t\tc.rect(x, y, w, h);\n\t\t\tc.stroke();\n\t\t}\n\t}\n\telse\n\t{\n\t\tmxRectangleShape.prototype.paintBackground.apply(this, arguments);\n\t}\n};\n\n/**\n * Function: redraw\n * \n * Overrides <mxShape.redraw> to preserve the aspect ratio of images.\n */\nmxImageShape.prototype.redrawHtmlShape = function()\n{\n\tthis.node.style.left = Math.round(this.bounds.x) + 'px';\n\tthis.node.style.top = Math.round(this.bounds.y) + 'px';\n\tthis.node.style.width = Math.max(0, Math.round(this.bounds.width)) + 'px';\n\tthis.node.style.height = Math.max(0, Math.round(this.bounds.height)) + 'px';\n\tthis.node.innerHTML = '';\n\n\tif (this.image != null)\n\t{\n\t\tvar fill = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BACKGROUND, '');\n\t\tvar stroke = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BORDER, '');\n\t\tthis.node.style.backgroundColor = fill;\n\t\tthis.node.style.borderColor = stroke;\n\t\t\n\t\t// VML image supports PNG in IE6\n\t\tvar useVml = mxClient.IS_IE6 || ((document.documentMode == null || document.documentMode <= 8) && this.rotation != 0);\n\t\tvar img = document.createElement((useVml) ? mxClient.VML_PREFIX + ':image' : 'img');\n\t\timg.setAttribute('border', '0');\n\t\timg.style.position = 'absolute';\n\t\timg.src = this.image;\n\n\t\tvar filter = (this.opacity < 100) ? 'alpha(opacity=' + this.opacity + ')' : '';\n\t\tthis.node.style.filter = filter;\n\t\t\n\t\tif (this.flipH && this.flipV)\n\t\t{\n\t\t\tfilter += 'progid:DXImageTransform.Microsoft.BasicImage(rotation=2)';\n\t\t}\n\t\telse if (this.flipH)\n\t\t{\n\t\t\tfilter += 'progid:DXImageTransform.Microsoft.BasicImage(mirror=1)';\n\t\t}\n\t\telse if (this.flipV)\n\t\t{\n\t\t\tfilter += 'progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)';\n\t\t}\n\n\t\tif (img.style.filter != filter)\n\t\t{\n\t\t\timg.style.filter = filter;\n\t\t}\n\n\t\tif (img.nodeName == 'image')\n\t\t{\n\t\t\timg.style.rotation = this.rotation;\n\t\t}\n\t\telse if (this.rotation != 0)\n\t\t{\n\t\t\t// LATER: Add flipV/H support\n\t\t\tmxUtils.setPrefixedStyle(img.style, 'transform', 'rotate(' + this.rotation + 'deg)');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.setPrefixedStyle(img.style, 'transform', '');\n\t\t}\n\n\t\t// Known problem: IE clips top line of image for certain angles\n\t\timg.style.width = this.node.style.width;\n\t\timg.style.height = this.node.style.height;\n\t\t\n\t\tthis.node.style.backgroundImage = '';\n\t\tthis.node.appendChild(img);\n\t}\n\telse\n\t{\n\t\tthis.setTransparentBackgroundImage(this.node);\n\t}\n};\n\n__mxOutput.mxImageShape = typeof mxImageShape !== 'undefined' ? mxImageShape : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxLabel\n *\n * Extends <mxShape> to implement an image shape with a label.\n * This shape is registered under <mxConstants.SHAPE_LABEL> in\n * <mxCellRenderer>.\n * \n * Constructor: mxLabel\n *\n * Constructs a new label shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxLabel(bounds, fill, stroke, strokewidth)\n{\n\tmxRectangleShape.call(this, bounds, fill, stroke, strokewidth);\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxLabel, mxRectangleShape);\n\n/**\n * Variable: imageSize\n *\n * Default width and height for the image. Default is\n * <mxConstants.DEFAULT_IMAGESIZE>.\n */\nmxLabel.prototype.imageSize = mxConstants.DEFAULT_IMAGESIZE;\n\n/**\n * Variable: spacing\n *\n * Default value for image spacing. Default is 2.\n */\nmxLabel.prototype.spacing = 2;\n\n/**\n * Variable: indicatorSize\n *\n * Default width and height for the indicicator. Default is 10.\n */\nmxLabel.prototype.indicatorSize = 10;\n\n/**\n * Variable: indicatorSpacing\n *\n * Default spacing between image and indicator. Default is 2.\n */\nmxLabel.prototype.indicatorSpacing = 2;\n\n/**\n * Function: init\n *\n * Initializes the shape and the <indicator>.\n */\nmxLabel.prototype.init = function(container)\n{\n\tmxShape.prototype.init.apply(this, arguments);\n\n\tif (this.indicatorShape != null)\n\t{\n\t\tthis.indicator = new this.indicatorShape();\n\t\tthis.indicator.dialect = this.dialect;\n\t\tthis.indicator.init(this.node);\n\t}\n};\n\n/**\n * Function: redraw\n *\n * Reconfigures this shape. This will update the colors of the indicator\n * and reconfigure it if required.\n */\nmxLabel.prototype.redraw = function()\n{\n\tif (this.indicator != null)\n\t{\n\t\tthis.indicator.fill = this.indicatorColor;\n\t\tthis.indicator.stroke = this.indicatorStrokeColor;\n\t\tthis.indicator.gradient = this.indicatorGradientColor;\n\t\tthis.indicator.direction = this.indicatorDirection;\n\t\tthis.indicator.redraw();\n\t}\n\t\n\tmxShape.prototype.redraw.apply(this, arguments);\n};\n\n/**\n * Function: isHtmlAllowed\n *\n * Returns true for non-rounded, non-rotated shapes with no glass gradient and\n * no indicator shape.\n */\nmxLabel.prototype.isHtmlAllowed = function()\n{\n\treturn mxRectangleShape.prototype.isHtmlAllowed.apply(this, arguments) &&\n\t\tthis.indicatorColor == null && this.indicatorShape == null;\n};\n\n/**\n * Function: paintForeground\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.paintForeground = function(c, x, y, w, h)\n{\n\tthis.paintImage(c, x, y, w, h);\n\tthis.paintIndicator(c, x, y, w, h);\n\t\n\tmxRectangleShape.prototype.paintForeground.apply(this, arguments);\n};\n\n/**\n * Function: paintImage\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.paintImage = function(c, x, y, w, h)\n{\n\tif (this.image != null)\n\t{\n\t\tvar bounds = this.getImageBounds(x, y, w, h);\n\t\tc.image(bounds.x, bounds.y, bounds.width, bounds.height, this.image, false, false, false);\n\t}\n};\n\n/**\n * Function: getImageBounds\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.getImageBounds = function(x, y, w, h)\n{\n\tvar align = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_ALIGN, mxConstants.ALIGN_LEFT);\n\tvar valign = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_VERTICAL_ALIGN, mxConstants.ALIGN_MIDDLE);\n\tvar width = mxUtils.getNumber(this.style, mxConstants.STYLE_IMAGE_WIDTH, mxConstants.DEFAULT_IMAGESIZE);\n\tvar height = mxUtils.getNumber(this.style, mxConstants.STYLE_IMAGE_HEIGHT, mxConstants.DEFAULT_IMAGESIZE);\n\tvar spacing = mxUtils.getNumber(this.style, mxConstants.STYLE_SPACING, this.spacing) + 5;\n\n\tif (align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tx += (w - width) / 2;\n\t}\n\telse if (align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tx += w - width - spacing;\n\t}\n\telse // default is left\n\t{\n\t\tx += spacing;\n\t}\n\n\tif (valign == mxConstants.ALIGN_TOP)\n\t{\n\t\ty += spacing;\n\t}\n\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\ty += h - height - spacing;\n\t}\n\telse // default is middle\n\t{\n\t\ty += (h - height) / 2;\n\t}\n\t\n\treturn new mxRectangle(x, y, width, height);\n};\n\n/**\n * Function: paintIndicator\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.paintIndicator = function(c, x, y, w, h)\n{\n\tif (this.indicator != null)\n\t{\n\t\tthis.indicator.bounds = this.getIndicatorBounds(x, y, w, h);\n\t\tthis.indicator.paint(c);\n\t}\n\telse if (this.indicatorImage != null)\n\t{\n\t\tvar bounds = this.getIndicatorBounds(x, y, w, h);\n\t\tc.image(bounds.x, bounds.y, bounds.width, bounds.height, this.indicatorImage, false, false, false);\n\t}\n};\n\n/**\n * Function: getIndicatorBounds\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.getIndicatorBounds = function(x, y, w, h)\n{\n\tvar align = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_ALIGN, mxConstants.ALIGN_LEFT);\n\tvar valign = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_VERTICAL_ALIGN, mxConstants.ALIGN_MIDDLE);\n\tvar width = mxUtils.getNumber(this.style, mxConstants.STYLE_INDICATOR_WIDTH, this.indicatorSize);\n\tvar height = mxUtils.getNumber(this.style, mxConstants.STYLE_INDICATOR_HEIGHT, this.indicatorSize);\n\tvar spacing = this.spacing + 5;\t\t\n\t\n\tif (align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tx += w - width - spacing;\n\t}\n\telse if (align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tx += (w - width) / 2;\n\t}\n\telse // default is left\n\t{\n\t\tx += spacing;\n\t}\n\t\n\tif (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\ty += h - height - spacing;\n\t}\n\telse if (valign == mxConstants.ALIGN_TOP)\n\t{\n\t\ty += spacing;\n\t}\n\telse // default is middle\n\t{\n\t\ty += (h - height) / 2;\n\t}\n\t\n\treturn new mxRectangle(x, y, width, height);\n};\n/**\n * Function: redrawHtmlShape\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.redrawHtmlShape = function()\n{\n\tmxRectangleShape.prototype.redrawHtmlShape.apply(this, arguments);\n\t\n\t// Removes all children\n\twhile(this.node.hasChildNodes())\n\t{\n\t\tthis.node.removeChild(this.node.lastChild);\n\t}\n\t\n\tif (this.image != null)\n\t{\n\t\tvar node = document.createElement('img');\n\t\tnode.style.position = 'relative';\n\t\tnode.setAttribute('border', '0');\n\t\t\n\t\tvar bounds = this.getImageBounds(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height);\n\t\tbounds.x -= this.bounds.x;\n\t\tbounds.y -= this.bounds.y;\n\n\t\tnode.style.left = Math.round(bounds.x) + 'px';\n\t\tnode.style.top = Math.round(bounds.y) + 'px';\n\t\tnode.style.width = Math.round(bounds.width) + 'px';\n\t\tnode.style.height = Math.round(bounds.height) + 'px';\n\t\t\n\t\tnode.src = this.image;\n\t\t\n\t\tthis.node.appendChild(node);\n\t}\n};\n\n__mxOutput.mxLabel = typeof mxLabel !== 'undefined' ? mxLabel : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCylinder\n *\n * Extends <mxShape> to implement an cylinder shape. If a\n * custom shape with one filled area and an overlay path is\n * needed, then this shape's <redrawPath> should be overridden.\n * This shape is registered under <mxConstants.SHAPE_CYLINDER>\n * in <mxCellRenderer>.\n * \n * Constructor: mxCylinder\n *\n * Constructs a new cylinder shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxCylinder(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxCylinder, mxShape);\n\n/**\n * Variable: maxHeight\n *\n * Defines the maximum height of the top and bottom part\n * of the cylinder shape.\n */\nmxCylinder.prototype.maxHeight = 40;\n\n/**\n * Variable: svgStrokeTolerance\n *\n * Sets stroke tolerance to 0 for SVG.\n */\nmxCylinder.prototype.svgStrokeTolerance = 0;\n\n/**\n * Function: paintVertexShape\n * \n * Redirects to redrawPath for subclasses to work.\n */\nmxCylinder.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tc.translate(x, y);\n\tc.begin();\n\tthis.redrawPath(c, x, y, w, h, false);\n\tc.fillAndStroke();\n\t\n\tif (!this.outline || this.style == null || mxUtils.getValue(\n\t\tthis.style, mxConstants.STYLE_BACKGROUND_OUTLINE, 0) == 0)\n\t{\n\t\tc.setShadow(false);\n\t\tc.begin();\n\t\tthis.redrawPath(c, x, y, w, h, true);\n\t\tc.stroke();\n\t}\n};\n\n/**\n * Function: getCylinderSize\n *\n * Returns the cylinder size.\n */\nmxCylinder.prototype.getCylinderSize = function(x, y, w, h)\n{\n\treturn Math.min(this.maxHeight, Math.round(h / 5));\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxCylinder.prototype.redrawPath = function(c, x, y, w, h, isForeground)\n{\n\tvar dy = this.getCylinderSize(x, y, w, h);\n\t\n\tif ((isForeground && this.fill != null) || (!isForeground && this.fill == null))\n\t{\n\t\tc.moveTo(0, dy);\n\t\tc.curveTo(0, 2 * dy, w, 2 * dy, w, dy);\n\t\t\n\t\t// Needs separate shapes for correct hit-detection\n\t\tif (!isForeground)\n\t\t{\n\t\t\tc.stroke();\n\t\t\tc.begin();\n\t\t}\n\t}\n\t\n\tif (!isForeground)\n\t{\n\t\tc.moveTo(0, dy);\n\t\tc.curveTo(0, -dy / 3, w, -dy / 3, w, dy);\n\t\tc.lineTo(w, h - dy);\n\t\tc.curveTo(w, h + dy / 3, 0, h + dy / 3, 0, h - dy);\n\t\tc.close();\n\t}\n};\n\n__mxOutput.mxCylinder = typeof mxCylinder !== 'undefined' ? mxCylinder : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxConnector\n * \n * Extends <mxShape> to implement a connector shape. The connector\n * shape allows for arrow heads on either side.\n * \n * This shape is registered under <mxConstants.SHAPE_CONNECTOR> in\n * <mxCellRenderer>.\n * \n * Constructor: mxConnector\n * \n * Constructs a new connector shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * Default is 'black'.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxConnector(points, stroke, strokewidth)\n{\n\tmxPolyline.call(this, points, stroke, strokewidth);\n};\n\n/**\n * Extends mxPolyline.\n */\nmxUtils.extend(mxConnector, mxPolyline);\n\n/**\n * Function: updateBoundingBox\n *\n * Updates the <boundingBox> for this shape using <createBoundingBox> and\n * <augmentBoundingBox> and stores the result in <boundingBox>.\n */\nmxConnector.prototype.updateBoundingBox = function()\n{\n\tthis.useSvgBoundingBox = this.style != null && this.style[mxConstants.STYLE_CURVED] == 1;\n\tmxShape.prototype.updateBoundingBox.apply(this, arguments);\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxConnector.prototype.paintEdgeShape = function(c, pts)\n{\n\t// The indirection via functions for markers is needed in\n\t// order to apply the offsets before painting the line and\n\t// paint the markers after painting the line.\n\tvar sourceMarker = this.createMarker(c, pts, true);\n\tvar targetMarker = this.createMarker(c, pts, false);\n\n\tmxPolyline.prototype.paintEdgeShape.apply(this, arguments);\n\t\n\t// Disables shadows, dashed styles and fixes fill color for markers\n\tc.setFillColor(this.stroke);\n\tc.setShadow(false);\n\tc.setDashed(false);\n\t\n\tif (sourceMarker != null)\n\t{\n\t\tsourceMarker();\n\t}\n\t\n\tif (targetMarker != null)\n\t{\n\t\ttargetMarker();\n\t}\n};\n\n/**\n * Function: createMarker\n * \n * Prepares the marker by adding offsets in pts and returning a function to\n * paint the marker.\n */\nmxConnector.prototype.createMarker = function(c, pts, source)\n{\n\tvar result = null;\n\tvar n = pts.length;\n\tvar type = mxUtils.getValue(this.style, (source) ? mxConstants.STYLE_STARTARROW : mxConstants.STYLE_ENDARROW);\n\tvar p0 = (source) ? pts[1] : pts[n - 2];\n\tvar pe = (source) ? pts[0] : pts[n - 1];\n\t\n\tif (type != null && p0 != null && pe != null)\n\t{\n\t\tvar count = 1;\n\t\t\n\t\t// Uses next non-overlapping point\n\t\twhile (count < n - 1 && Math.round(p0.x - pe.x) == 0 && Math.round(p0.y - pe.y) == 0)\n\t\t{\n\t\t\tp0 = (source) ? pts[1 + count] : pts[n - 2 - count];\n\t\t\tcount++;\n\t\t}\n\t\n\t\t// Computes the norm and the inverse norm\n\t\tvar dx = pe.x - p0.x;\n\t\tvar dy = pe.y - p0.y;\n\t\n\t\tvar dist = Math.max(1, Math.sqrt(dx * dx + dy * dy));\n\t\t\n\t\tvar unitX = dx / dist;\n\t\tvar unitY = dy / dist;\n\t\n\t\tvar size = mxUtils.getNumber(this.style, (source) ? mxConstants.STYLE_STARTSIZE : mxConstants.STYLE_ENDSIZE, mxConstants.DEFAULT_MARKERSIZE);\n\t\t\n\t\t// Allow for stroke width in the end point used and the \n\t\t// orthogonal vectors describing the direction of the marker\n\t\tvar filled = this.style[(source) ? mxConstants.STYLE_STARTFILL : mxConstants.STYLE_ENDFILL] != 0;\n\t\t\n\t\tresult = mxMarker.createMarker(c, this, type, pe, unitX, unitY, size, source, this.strokewidth, filled);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the strokewidth and shadow offsets.\n */\nmxConnector.prototype.augmentBoundingBox = function(bbox)\n{\n\tmxShape.prototype.augmentBoundingBox.apply(this, arguments);\n\t\n\t// Adds marker sizes\n\tvar size = 0;\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_STARTARROW, mxConstants.NONE) != mxConstants.NONE)\n\t{\n\t\tsize = mxUtils.getNumber(this.style, mxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_MARKERSIZE) + 1;\n\t}\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_ENDARROW, mxConstants.NONE) != mxConstants.NONE)\n\t{\n\t\tsize = Math.max(size, mxUtils.getNumber(this.style, mxConstants.STYLE_ENDSIZE, mxConstants.DEFAULT_MARKERSIZE)) + 1;\n\t}\n\t\n\tbbox.grow(size * this.scale);\n};\n\n__mxOutput.mxConnector = typeof mxConnector !== 'undefined' ? mxConnector : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlane\n *\n * Extends <mxShape> to implement a swimlane shape. This shape is registered\n * under <mxConstants.SHAPE_SWIMLANE> in <mxCellRenderer>. Use the\n * <mxConstants.STYLE_STYLE_STARTSIZE> to define the size of the title\n * region, <mxConstants.STYLE_SWIMLANE_FILLCOLOR> for the content area fill,\n * <mxConstants.STYLE_SEPARATORCOLOR> to draw an additional vertical separator\n * and <mxConstants.STYLE_SWIMLANE_LINE> to hide the line between the title\n * region and the content area. The <mxConstants.STYLE_HORIZONTAL> affects\n * the orientation of this shape, not only its label.\n * \n * Constructor: mxSwimlane\n *\n * Constructs a new swimlane shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxSwimlane(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxSwimlane, mxShape);\n\n/**\n * Variable: imageSize\n *\n * Default imagewidth and imageheight if an image but no imagewidth\n * and imageheight are defined in the style. Value is 16.\n */\nmxSwimlane.prototype.imageSize = 16;\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxSwimlane.prototype.isRoundable = function(c, x, y, w, h)\n{\n\treturn true;\n};\n\n/**\n * Function: getTitleSize\n * \n * Returns the title size.\n */\nmxSwimlane.prototype.getTitleSize = function()\n{\n\treturn Math.max(0, mxUtils.getValue(this.style, mxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_STARTSIZE));\n};\n\n/**\n * Function: getLabelBounds\n * \n * Returns the bounding box for the label.\n */\nmxSwimlane.prototype.getLabelBounds = function(rect)\n{\n\tvar start = this.getTitleSize();\n\tvar bounds = new mxRectangle(rect.x, rect.y, rect.width, rect.height);\n\tvar horizontal = this.isHorizontal();\n\t\n\tvar flipH = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\tvar flipV = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPV, 0) == 1;\t\n\t\n\t// East is default\n\tvar shapeVertical = (this.direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_SOUTH);\n\tvar realHorizontal = horizontal == !shapeVertical;\n\t\n\tvar realFlipH = !realHorizontal && flipH != (this.direction == mxConstants.DIRECTION_SOUTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_WEST);\n\tvar realFlipV = realHorizontal && flipV != (this.direction == mxConstants.DIRECTION_SOUTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_WEST);\n\n\t// Shape is horizontal\n\tif (!shapeVertical)\n\t{\n\t\tvar tmp = Math.min(bounds.height, start * this.scale);\n\n\t\tif (realFlipH || realFlipV)\n\t\t{\n\t\t\tbounds.y += bounds.height - tmp;\n\t\t}\n\n\t\tbounds.height = tmp;\n\t}\n\telse\n\t{\n\t\tvar tmp = Math.min(bounds.width, start * this.scale);\n\t\t\n\t\tif (realFlipH || realFlipV)\n\t\t{\n\t\t\tbounds.x += bounds.width - tmp;\t\n\t\t}\n\n\t\tbounds.width = tmp;\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxSwimlane.prototype.getGradientBounds = function(c, x, y, w, h)\n{\n\tvar start = this.getTitleSize();\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tstart = Math.min(start, h);\n\t\treturn new mxRectangle(x, y, w, start);\n\t}\n\telse\n\t{\n\t\tstart = Math.min(start, w);\n\t\treturn new mxRectangle(x, y, start, h);\n\t}\n};\n\n/**\n * Function: getSwimlaneArcSize\n * \n * Returns the arcsize for the swimlane.\n */\nmxSwimlane.prototype.getSwimlaneArcSize = function(w, h, start)\n{\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_ABSOLUTE_ARCSIZE, 0) == '1')\n\t{\n\t\treturn Math.min(w / 2, Math.min(h / 2, mxUtils.getValue(this.style,\n\t\t\tmxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2));\n\t}\n\telse\n\t{\n\t\tvar f = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.RECTANGLE_ROUNDING_FACTOR * 100) / 100;\n\n\t\treturn start * f * 3; \n\t}\n};\n\n/**\n * Function: isHorizontal\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.isHorizontal = function()\n{\n\treturn mxUtils.getValue(this.style, mxConstants.STYLE_HORIZONTAL, 1) == 1;\n};\n\n/**\n * Function: paintVertexShape\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tvar start = this.getTitleSize();\n\tvar fill = mxUtils.getValue(this.style, mxConstants.STYLE_SWIMLANE_FILLCOLOR, mxConstants.NONE);\n\tvar swimlaneLine = mxUtils.getValue(this.style, mxConstants.STYLE_SWIMLANE_LINE, 1) == 1;\n\tvar r = 0;\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tstart = Math.min(start, h);\n\t}\n\telse\n\t{\n\t\tstart = Math.min(start, w);\n\t}\n\t\n\tc.translate(x, y);\n\t\n\tif (!this.isRounded)\n\t{\n\t\tthis.paintSwimlane(c, x, y, w, h, start, fill, swimlaneLine);\n\t}\n\telse\n\t{\n\t\tr = this.getSwimlaneArcSize(w, h, start);\n\t\tr = Math.min(((this.isHorizontal()) ? h : w) - start, Math.min(start, r));\n\t\tthis.paintRoundedSwimlane(c, x, y, w, h, start, r, fill, swimlaneLine);\n\t}\n\t\n\tvar sep = mxUtils.getValue(this.style, mxConstants.STYLE_SEPARATORCOLOR, mxConstants.NONE);\n\tthis.paintSeparator(c, x, y, w, h, start, sep);\n\n\tif (this.image != null)\n\t{\n\t\tvar bounds = this.getImageBounds(x, y, w, h);\n\t\tc.image(bounds.x - x, bounds.y - y, bounds.width, bounds.height,\n\t\t\t\tthis.image, false, false, false);\n\t}\n\t\n\tif (this.glass)\n\t{\n\t\tc.setShadow(false);\n\t\tthis.paintGlassEffect(c, 0, 0, w, start, r);\n\t}\n};\n\n/**\n * Function: paintSwimlane\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.paintSwimlane = function(c, x, y, w, h, start, fill, swimlaneLine)\n{\n\tc.begin();\n\t\n\tvar events = true;\n\t\n\tif (this.style != null)\n\t{\n\t\tevents = mxUtils.getValue(this.style, mxConstants.STYLE_POINTER_EVENTS, '1') == '1';\n\t}\n\t\n\tif (!events && (this.fill == null || this.fill == mxConstants.NONE))\n\t{\n\t\tc.pointerEvents = false;\n\t}\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tc.moveTo(0, start);\n\t\tc.lineTo(0, 0);\n\t\tc.lineTo(w, 0);\n\t\tc.lineTo(w, start);\n\t\tc.fillAndStroke();\n\n\t\tif (start < h)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE || !events)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\t\n\t\t\tif (fill != mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(0, start);\n\t\t\tc.lineTo(0, h);\n\t\t\tc.lineTo(w, h);\n\t\t\tc.lineTo(w, start);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tc.moveTo(start, 0);\n\t\tc.lineTo(0, 0);\n\t\tc.lineTo(0, h);\n\t\tc.lineTo(start, h);\n\t\tc.fillAndStroke();\n\t\t\n\t\tif (start < w)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE || !events)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\t\n\t\t\tif (fill != mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(start, 0);\n\t\t\tc.lineTo(w, 0);\n\t\t\tc.lineTo(w, h);\n\t\t\tc.lineTo(start, h);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (swimlaneLine)\n\t{\n\t\tthis.paintDivider(c, x, y, w, h, start, fill == mxConstants.NONE);\n\t}\n};\n\n/**\n * Function: paintRoundedSwimlane\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.paintRoundedSwimlane = function(c, x, y, w, h, start, r, fill, swimlaneLine)\n{\n\tc.begin();\n\t\n\tvar events = true;\n\t\n\tif (this.style != null)\n\t{\n\t\tevents = mxUtils.getValue(this.style, mxConstants.STYLE_POINTER_EVENTS, '1') == '1';\n\t}\n\t\n\tif (!events && (this.fill == null || this.fill == mxConstants.NONE))\n\t{\n\t\tc.pointerEvents = false;\n\t}\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tc.moveTo(w, start);\n\t\tc.lineTo(w, r);\n\t\tc.quadTo(w, 0, w - Math.min(w / 2, r), 0);\n\t\tc.lineTo(Math.min(w / 2, r), 0);\n\t\tc.quadTo(0, 0, 0, r);\n\t\tc.lineTo(0, start);\n\t\tc.fillAndStroke();\n\t\t\n\t\tif (start < h)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE || !events)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\t\n\t\t\tif (fill != mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(0, start);\n\t\t\tc.lineTo(0, h - r);\n\t\t\tc.quadTo(0, h, Math.min(w / 2, r), h);\n\t\t\tc.lineTo(w - Math.min(w / 2, r), h);\n\t\t\tc.quadTo(w, h, w, h - r);\n\t\t\tc.lineTo(w, start);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tc.moveTo(start, 0);\n\t\tc.lineTo(r, 0);\n\t\tc.quadTo(0, 0, 0, Math.min(h / 2, r));\n\t\tc.lineTo(0, h - Math.min(h / 2, r));\n\t\tc.quadTo(0, h, r, h);\n\t\tc.lineTo(start, h);\n\t\tc.fillAndStroke();\n\n\t\tif (start < w)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE || !events)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\t\n\t\t\tif (fill != mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(start, h);\n\t\t\tc.lineTo(w - r, h);\n\t\t\tc.quadTo(w, h, w, h - Math.min(h / 2, r));\n\t\t\tc.lineTo(w, Math.min(h / 2, r));\n\t\t\tc.quadTo(w, 0, w - r, 0);\n\t\t\tc.lineTo(start, 0);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\n\tif (swimlaneLine)\n\t{\n\t\tthis.paintDivider(c, x, y, w, h, start, fill == mxConstants.NONE);\n\t}\n};\n\n/**\n * Function: paintDivider\n *\n * Paints the divider between swimlane title and content area.\n */\nmxSwimlane.prototype.paintDivider = function(c, x, y, w, h, start, shadow)\n{\n\tif (!shadow)\n\t{\n\t\tc.setShadow(false);\n\t}\n\n\tc.begin();\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tc.moveTo(0, start);\n\t\tc.lineTo(w, start);\n\t}\n\telse\n\t{\n\t\tc.moveTo(start, 0);\n\t\tc.lineTo(start, h);\n\t}\n\n\tc.stroke();\n};\n\n/**\n * Function: paintSeparator\n *\n * Paints the vertical or horizontal separator line between swimlanes.\n */\nmxSwimlane.prototype.paintSeparator = function(c, x, y, w, h, start, color)\n{\n\tif (color != mxConstants.NONE)\n\t{\n\t\tc.setStrokeColor(color);\n\t\tc.setDashed(true);\n\t\tc.begin();\n\t\t\n\t\tif (this.isHorizontal())\n\t\t{\n\t\t\tc.moveTo(w, start);\n\t\t\tc.lineTo(w, h);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.moveTo(start, 0);\n\t\t\tc.lineTo(w, 0);\n\t\t}\n\t\t\n\t\tc.stroke();\n\t\tc.setDashed(false);\n\t}\n};\n\n/**\n * Function: getImageBounds\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.getImageBounds = function(x, y, w, h)\n{\n\tif (this.isHorizontal())\n\t{\n\t\treturn new mxRectangle(x + w - this.imageSize, y, this.imageSize, this.imageSize);\n\t}\n\telse\n\t{\n\t\treturn new mxRectangle(x, y, this.imageSize, this.imageSize);\n\t}\n};\n\n__mxOutput.mxSwimlane = typeof mxSwimlane !== 'undefined' ? mxSwimlane : undefined;\n\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxGraphLayout\n * \n * Base class for all layout algorithms in mxGraph. Main public functions are\n * <moveCell> for handling a moved cell within a layouted parent, and <execute> for\n * running the layout on a given parent cell.\n *\n * Known Subclasses:\n *\n * <mxCircleLayout>, <mxCompactTreeLayout>, <mxCompositeLayout>,\n * <mxFastOrganicLayout>, <mxParallelEdgeLayout>, <mxPartitionLayout>,\n * <mxStackLayout>\n * \n * Constructor: mxGraphLayout\n *\n * Constructs a new layout using the given layouts.\n *\n * Arguments:\n * \n * graph - Enclosing \n */\nfunction mxGraphLayout(graph)\n{\n\tthis.graph = graph;\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxGraphLayout.prototype.graph = null;\n\n/**\n * Variable: useBoundingBox\n *\n * Boolean indicating if the bounding box of the label should be used if\n * its available. Default is true.\n */\nmxGraphLayout.prototype.useBoundingBox = true;\n\n/**\n * Variable: parent\n *\n * The parent cell of the layout, if any\n */\nmxGraphLayout.prototype.parent = null;\n\n/**\n * Function: moveCell\n * \n * Notified when a cell is being moved in a parent that has automatic\n * layout to update the cell state (eg. index) so that the outcome of the\n * layout will position the vertex as close to the point (x, y) as\n * possible.\n * \n * Empty implementation.\n * \n * Parameters:\n * \n * cell - <mxCell> which has been moved.\n * x - X-coordinate of the new cell location.\n * y - Y-coordinate of the new cell location.\n */\nmxGraphLayout.prototype.moveCell = function(cell, x, y) { };\n\n/**\n * Function: resizeCell\n * \n * Notified when a cell is being resized in a parent that has automatic\n * layout to update the other cells in the layout.\n * \n * Empty implementation.\n * \n * Parameters:\n * \n * cell - <mxCell> which has been moved.\n * bounds - <mxRectangle> that represents the new cell bounds.\n */\nmxGraphLayout.prototype.resizeCell = function(cell, bounds) { };\n\n/**\n * Function: execute\n * \n * Executes the layout algorithm for the children of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be layed out.\n */\nmxGraphLayout.prototype.execute = function(parent) { };\n\n/**\n * Function: getGraph\n * \n * Returns the graph that this layout operates on.\n */\nmxGraphLayout.prototype.getGraph = function()\n{\n\treturn this.graph;\n};\n\n/**\n * Function: getConstraint\n * \n * Returns the constraint for the given key and cell. The optional edge and\n * source arguments are used to return inbound and outgoing routing-\n * constraints for the given edge and vertex. This implementation always\n * returns the value for the given key in the style of the given cell.\n * \n * Parameters:\n * \n * key - Key of the constraint to be returned.\n * cell - <mxCell> whose constraint should be returned.\n * edge - Optional <mxCell> that represents the connection whose constraint\n * should be returned. Default is null.\n * source - Optional boolean that specifies if the connection is incoming\n * or outgoing. Default is null.\n */\nmxGraphLayout.prototype.getConstraint = function(key, cell, edge, source)\n{\n\treturn this.graph.getCurrentCellStyle(cell)[key]\n};\n\n/**\n * Function: traverse\n * \n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Example:\n * \n * (code)\n * mxLog.show();\n * var cell = graph.getSelectionCell();\n * graph.traverse(cell, false, function(vertex, edge)\n * {\n *   mxLog.debug(graph.getLabel(vertex));\n * });\n * (end)\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - Optional boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * func - Visitor function that takes the current vertex and the incoming\n * edge as arguments. The traversal stops if the function returns false.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * visited - Optional <mxDictionary> of cell paths for the visited cells.\n */\nmxGraphLayout.traverse = function(vertex, directed, func, edge, visited)\n{\n\tif (func != null && vertex != null)\n\t{\n\t\tdirected = (directed != null) ? directed : true;\n\t\tvisited = visited || new mxDictionary();\n\t\t\n\t\tif (!visited.get(vertex))\n\t\t{\n\t\t\tvisited.put(vertex, true);\n\t\t\tvar result = func(vertex, edge);\n\t\t\t\n\t\t\tif (result == null || result)\n\t\t\t{\n\t\t\t\tvar edgeCount = this.graph.model.getEdgeCount(vertex);\n\t\t\t\t\n\t\t\t\tif (edgeCount > 0)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < edgeCount; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar e = this.graph.model.getEdgeAt(vertex, i);\n\t\t\t\t\t\tvar isSource = this.graph.model.getTerminal(e, true) == vertex;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tif (!directed || isSource)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar next = this.graph.view.getVisibleTerminal(e, !isSource);\n\t\t\t\t\t\t\tthis.traverse(next, directed, func, e, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isAncestor\n * \n * Returns true if the given parent is an ancestor of the given child.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent.\n * child - <mxCell> that specifies the child.\n * traverseAncestors - boolean whether to \n */\nmxGraphLayout.prototype.isAncestor = function(parent, child, traverseAncestors)\n{\n\tif (!traverseAncestors)\n\t{\n\t\treturn (this.graph.model.getParent(child) == parent);\n\t}\t\n\t\n\tif (child == parent)\n\t{\n\t\treturn false;\n\t}\n\n\twhile (child != null && child != parent)\n\t{\n\t\tchild = this.graph.model.getParent(child);\n\t}\n\t\n\treturn child == parent;\n};\n\n/**\n * Function: isVertexMovable\n * \n * Returns a boolean indicating if the given <mxCell> is movable or\n * bendable by the algorithm. This implementation returns true if the given\n * cell is movable in the graph.\n * \n * Parameters:\n * \n * cell - <mxCell> whose movable state should be returned.\n */\nmxGraphLayout.prototype.isVertexMovable = function(cell)\n{\n\treturn this.graph.isCellMovable(cell);\n};\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored by\n * the algorithm. This implementation returns false for all vertices.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxGraphLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn !this.graph.getModel().isVertex(vertex) ||\n\t\t!this.graph.isCellVisible(vertex);\n};\n\n/**\n * Function: isEdgeIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored by\n * the algorithm. This implementation returns false for all vertices.\n * \n * Parameters:\n * \n * cell - <mxCell> whose ignored state should be returned.\n */\nmxGraphLayout.prototype.isEdgeIgnored = function(edge)\n{\n\tvar model = this.graph.getModel();\n\t\n\treturn !model.isEdge(edge) ||\n\t\t!this.graph.isCellVisible(edge) ||\n\t\tmodel.getTerminal(edge, true) == null ||\n\t\tmodel.getTerminal(edge, false) == null;\n};\n\n/**\n * Function: setEdgeStyleEnabled\n * \n * Disables or enables the edge style of the given edge.\n */\nmxGraphLayout.prototype.setEdgeStyleEnabled = function(edge, value)\n{\n\tthis.graph.setCellStyles(mxConstants.STYLE_NOEDGESTYLE,\n\t\t\t(value) ? '0' : '1', [edge]);\n};\n\n/**\n * Function: setOrthogonalEdge\n * \n * Disables or enables orthogonal end segments of the given edge.\n */\nmxGraphLayout.prototype.setOrthogonalEdge = function(edge, value)\n{\n\tthis.graph.setCellStyles(mxConstants.STYLE_ORTHOGONAL,\n\t\t\t(value) ? '1' : '0', [edge]);\n};\n\n/**\n * Function: getParentOffset\n * \n * Determines the offset of the given parent to the parent\n * of the layout\n */\nmxGraphLayout.prototype.getParentOffset = function(parent)\n{\n\tvar result = new mxPoint();\n\n\tif (parent != null && parent != this.parent)\n\t{\n\t\tvar model = this.graph.getModel();\n\n\t\tif (model.isAncestor(this.parent, parent))\n\t\t{\n\t\t\tvar parentGeo = model.getGeometry(parent);\n\n\t\t\twhile (parent != this.parent)\n\t\t\t{\n\t\t\t\tresult.x = result.x + parentGeo.x;\n\t\t\t\tresult.y = result.y + parentGeo.y;\n\n\t\t\t\tparent = model.getParent(parent);;\n\t\t\t\tparentGeo = model.getGeometry(parent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: setEdgePoints\n * \n * Replaces the array of mxPoints in the geometry of the given edge\n * with the given array of mxPoints.\n */\nmxGraphLayout.prototype.setEdgePoints = function(edge, points)\n{\n\tif (edge != null)\n\t{\n\t\tvar model = this.graph.model;\n\t\tvar geometry = model.getGeometry(edge);\n\n\t\tif (geometry == null)\n\t\t{\n\t\t\tgeometry = new mxGeometry();\n\t\t\tgeometry.setRelative(true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgeometry = geometry.clone();\n\t\t}\n\n\t\tif (this.parent != null && points != null)\n\t\t{\n\t\t\tvar parent = model.getParent(edge);\n\n\t\t\tvar parentOffset = this.getParentOffset(parent);\n\n\t\t\tfor (var i = 0; i < points.length; i++)\n\t\t\t{\n\t\t\t\tpoints[i].x = points[i].x - parentOffset.x;\n\t\t\t\tpoints[i].y = points[i].y - parentOffset.y;\n\t\t\t}\n\t\t}\n\n\t\tgeometry.points = points;\n\t\tmodel.setGeometry(edge, geometry);\n\t}\n};\n\n/**\n * Function: setVertexLocation\n * \n * Sets the new position of the given cell taking into account the size of\n * the bounding box if <useBoundingBox> is true. The change is only carried\n * out if the new location is not equal to the existing location, otherwise\n * the geometry is not replaced with an updated instance. The new or old\n * bounds are returned (including overlapping labels).\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry is to be set.\n * x - Integer that defines the x-coordinate of the new location.\n * y - Integer that defines the y-coordinate of the new location.\n */\nmxGraphLayout.prototype.setVertexLocation = function(cell, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar geometry = model.getGeometry(cell);\n\tvar result = null;\n\t\n\tif (geometry != null)\n\t{\n\t\tresult = new mxRectangle(x, y, geometry.width, geometry.height);\n\t\t\n\t\t// Checks for oversize labels and shifts the result\n\t\t// TODO: Use mxUtils.getStringSize for label bounds\n\t\tif (this.useBoundingBox)\n\t\t{\n\t\t\tvar state = this.graph.getView().getState(cell);\n\t\t\t\n\t\t\tif (state != null && state.text != null && state.text.boundingBox != null)\n\t\t\t{\n\t\t\t\tvar scale = this.graph.getView().scale;\n\t\t\t\tvar box = state.text.boundingBox;\n\t\t\t\t\n\t\t\t\tif (state.text.boundingBox.x < state.x)\n\t\t\t\t{\n\t\t\t\t\tx += (state.x - box.x) / scale;\n\t\t\t\t\tresult.width = box.width;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (state.text.boundingBox.y < state.y)\n\t\t\t\t{\n\t\t\t\t\ty += (state.y - box.y) / scale;\n\t\t\t\t\tresult.height = box.height;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.parent != null)\n\t\t{\n\t\t\tvar parent = model.getParent(cell);\n\n\t\t\tif (parent != null && parent != this.parent)\n\t\t\t{\n\t\t\t\tvar parentOffset = this.getParentOffset(parent);\n\n\t\t\t\tx = x - parentOffset.x;\n\t\t\t\ty = y - parentOffset.y;\n\t\t\t}\n\t\t}\n\n\t\tif (geometry.x != x || geometry.y != y)\n\t\t{\n\t\t\tgeometry = geometry.clone();\n\t\t\tgeometry.x = x;\n\t\t\tgeometry.y = y;\n\t\t\t\n\t\t\tmodel.setGeometry(cell, geometry);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getVertexBounds\n * \n * Returns an <mxRectangle> that defines the bounds of the given cell or\n * the bounding box if <useBoundingBox> is true.\n */\nmxGraphLayout.prototype.getVertexBounds = function(cell)\n{\n\tvar geo = this.graph.getModel().getGeometry(cell);\n\n\t// Checks for oversize label bounding box and corrects\n\t// the return value accordingly\n\t// TODO: Use mxUtils.getStringSize for label bounds\n\tif (this.useBoundingBox)\n\t{\n\t\tvar state = this.graph.getView().getState(cell);\n\n\t\tif (state != null && state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tvar scale = this.graph.getView().scale;\n\t\t\tvar tmp = state.text.boundingBox;\n\n\t\t\tvar dx0 = Math.max(state.x - tmp.x, 0) / scale;\n\t\t\tvar dy0 = Math.max(state.y - tmp.y, 0) / scale;\n\t\t\tvar dx1 = Math.max((tmp.x + tmp.width) - (state.x + state.width), 0) / scale;\n  \t\t\tvar dy1 = Math.max((tmp.y + tmp.height) - (state.y + state.height), 0) / scale;\n\n\t\t\tgeo = new mxRectangle(geo.x - dx0, geo.y - dy0, geo.width + dx0 + dx1, geo.height + dy0 + dy1);\n\t\t}\n\t}\n\n\tif (this.parent != null)\n\t{\n\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\tgeo = geo.clone();\n\n\t\tif (parent != null && parent != this.parent)\n\t\t{\n\t\t\tvar parentOffset = this.getParentOffset(parent);\n\t\t\tgeo.x = geo.x + parentOffset.x;\n\t\t\tgeo.y = geo.y + parentOffset.y;\n\t\t}\n\t}\n\n\treturn new mxRectangle(geo.x, geo.y, geo.width, geo.height);\n};\n\n/**\n * Function: arrangeGroups\n * \n * Shortcut to <mxGraph.updateGroupBounds> with moveGroup set to true.\n */\nmxGraphLayout.prototype.arrangeGroups = function(cells, border, topBorder, rightBorder, bottomBorder, leftBorder)\n{\n\treturn this.graph.updateGroupBounds(cells, border, true, topBorder, rightBorder, bottomBorder, leftBorder);\n};\n\n/**\n * Class: WeightedCellSorter\n * \n * A utility class used to track cells whilst sorting occurs on the weighted\n * sum of their connected edges. Does not violate (x.compareTo(y)==0) ==\n * (x.equals(y))\n *\n * Constructor: WeightedCellSorter\n * \n * Constructs a new weighted cell sorted for the given cell and weight.\n */\nfunction WeightedCellSorter(cell, weightedValue)\n{\n\tthis.cell = cell;\n\tthis.weightedValue = weightedValue;\n};\n\n/**\n * Variable: weightedValue\n * \n * The weighted value of the cell stored.\n */\nWeightedCellSorter.prototype.weightedValue = 0;\n\n/**\n * Variable: nudge\n * \n * Whether or not to flip equal weight values.\n */\nWeightedCellSorter.prototype.nudge = false;\n\n/**\n * Variable: visited\n * \n * Whether or not this cell has been visited in the current assignment.\n */\nWeightedCellSorter.prototype.visited = false;\n\n/**\n * Variable: rankIndex\n * \n * The index this cell is in the model rank.\n */\nWeightedCellSorter.prototype.rankIndex = null;\n\n/**\n * Variable: cell\n * \n * The cell whose median value is being calculated.\n */\nWeightedCellSorter.prototype.cell = null;\n\n/**\n * Function: compare\n * \n * Compares two WeightedCellSorters.\n */\nWeightedCellSorter.prototype.compare = function(a, b)\n{\n\tif (a != null && b != null)\n\t{\n\t\tif (b.weightedValue > a.weightedValue)\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t\telse if (b.weightedValue < a.weightedValue)\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (b.nudge)\n\t\t\t{\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n};\n\n__mxOutput.mxGraphLayout = typeof mxGraphLayout !== 'undefined' ? mxGraphLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStackLayout\n * \n * Extends <mxGraphLayout> to create a horizontal or vertical stack of the\n * child vertices. The children do not need to be connected for this layout\n * to work.\n * \n * Example:\n * \n * (code)\n * var layout = new mxStackLayout(graph, true);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxStackLayout\n * \n * Constructs a new stack layout layout for the specified graph,\n * spacing, orientation and offset.\n */\nfunction mxStackLayout(graph, horizontal, spacing, x0, y0, border)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.spacing = (spacing != null) ? spacing : 0;\n\tthis.x0 = (x0 != null) ? x0 : 0;\n\tthis.y0 = (y0 != null) ? y0 : 0;\n\tthis.border = (border != null) ? border : 0;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxStackLayout.prototype = new mxGraphLayout();\nmxStackLayout.prototype.constructor = mxStackLayout;\n\n/**\n * Variable: horizontal\n *\n * Specifies the orientation of the layout. Default is true.\n */\nmxStackLayout.prototype.horizontal = null;\n\n/**\n * Variable: spacing\n *\n * Specifies the spacing between the cells. Default is 0.\n */\nmxStackLayout.prototype.spacing = null;\n\n/**\n * Variable: x0\n *\n * Specifies the horizontal origin of the layout. Default is 0.\n */\nmxStackLayout.prototype.x0 = null;\n\n/**\n * Variable: y0\n *\n * Specifies the vertical origin of the layout. Default is 0.\n */\nmxStackLayout.prototype.y0 = null;\n\n/**\n * Variable: border\n *\n * Border to be added if fill is true. Default is 0.\n */\nmxStackLayout.prototype.border = 0;\n\n/**\n * Variable: marginTop\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginTop = 0;\n\n/**\n * Variable: marginLeft\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginLeft = 0;\n\n/**\n * Variable: marginRight\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginRight = 0;\n\n/**\n * Variable: marginBottom\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginBottom = 0;\n\n/**\n * Variable: keepFirstLocation\n * \n * Boolean indicating if the location of the first cell should be\n * kept, that is, it will not be moved to x0 or y0. Default is false.\n */\nmxStackLayout.prototype.keepFirstLocation = false;\n\n/**\n * Variable: fill\n * \n * Boolean indicating if dimension should be changed to fill out the parent\n * cell. Default is false.\n */\nmxStackLayout.prototype.fill = false;\n\t\n/**\n * Variable: resizeParent\n * \n * If the parent should be resized to match the width/height of the\n * stack. Default is false.\n */\nmxStackLayout.prototype.resizeParent = false;\n\n/**\n * Variable: resizeParentMax\n * \n * Use maximum of existing value and new value for resize of parent.\n * Default is false.\n */\nmxStackLayout.prototype.resizeParentMax = false;\n\n/**\n * Variable: resizeLast\n * \n * If the last element should be resized to fill out the parent. Default is\n * false. If <resizeParent> is true then this is ignored.\n */\nmxStackLayout.prototype.resizeLast = false;\n\n/**\n * Variable: wrap\n * \n * Value at which a new column or row should be created. Default is null.\n */\nmxStackLayout.prototype.wrap = null;\n\n/**\n * Variable: borderCollapse\n * \n * If the strokeWidth should be ignored. Default is true.\n */\nmxStackLayout.prototype.borderCollapse = true;\n\n/**\n * Variable: allowGaps\n * \n * If gaps should be allowed in the stack. Default is false.\n */\nmxStackLayout.prototype.allowGaps = false;\n\n/**\n * Variable: gridSize\n * \n * Grid size for alignment of position and size. Default is 0.\n */\nmxStackLayout.prototype.gridSize = 0;\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxStackLayout.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: moveCell\n * \n * Implements <mxGraphLayout.moveCell>.\n */\nmxStackLayout.prototype.moveCell = function(cell, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar parent = model.getParent(cell);\n\tvar horizontal = this.isHorizontal();\n\t\n\tif (cell != null && parent != null)\n\t{\n\t\tvar i = 0;\n\t\tvar last = 0;\n\t\tvar childCount = model.getChildCount(parent);\n\t\tvar value = (horizontal) ? x : y;\n\t\tvar pstate = this.graph.getView().getState(parent);\n\n\t\tif (pstate != null)\n\t\t{\n\t\t\tvalue -= (horizontal) ? pstate.x : pstate.y;\n\t\t}\n\t\t\n\t\tvalue /= this.graph.view.scale;\n\t\t\n\t\tfor (i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (child != cell)\n\t\t\t{\n\t\t\t\tvar bounds = model.getGeometry(child);\n\t\t\t\t\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tvar tmp = (horizontal) ?\n\t\t\t\t\t\tbounds.x + bounds.width / 2 :\n\t\t\t\t\t\tbounds.y + bounds.height / 2;\n\t\t\t\t\t\n\t\t\t\t\tif (last <= value && tmp > value)\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlast = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Changes child order in parent\n\t\tvar idx = parent.getIndex(cell);\n\t\tidx = Math.max(0, i - ((i > idx) ? 1 : 0));\n\n\t\tmodel.add(parent, cell, idx);\n\t}\n};\n\n/**\n * Function: getParentSize\n * \n * Returns the size for the parent container or the size of the graph\n * container if the parent is a layer or the root of the model.\n */\nmxStackLayout.prototype.getParentSize = function(parent)\n{\n\tvar model = this.graph.getModel();\t\t\t\n\tvar pgeo = model.getGeometry(parent);\n\t\n\t// Handles special case where the parent is either a layer with no\n\t// geometry or the current root of the view in which case the size\n\t// of the graph's container will be used.\n\tif (this.graph.container != null && ((pgeo == null &&\n\t\tmodel.isLayer(parent)) || parent == this.graph.getView().currentRoot))\n\t{\n\t\tvar width = this.graph.container.offsetWidth - 1;\n\t\tvar height = this.graph.container.offsetHeight - 1;\n\t\tpgeo = new mxRectangle(0, 0, width, height);\n\t}\n\t\n\treturn pgeo;\n};\n\n/**\n * Function: getLayoutCells\n * \n * Returns the cells to be layouted.\n */\nmxStackLayout.prototype.getLayoutCells = function(parent)\n{\n\tvar model = this.graph.getModel();\n\tvar childCount = model.getChildCount(parent);\n\tvar cells = [];\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(parent, i);\n\t\t\n\t\tif (!this.isVertexIgnored(child) && this.isVertexMovable(child))\n\t\t{\n\t\t\tcells.push(child);\n\t\t}\n\t}\n\t\n\tif (this.allowGaps)\n\t{\n\t\tcells.sort(mxUtils.bind(this, function(c1, c2)\n\t\t{\n\t\t\tvar geo1 = this.graph.getCellGeometry(c1);\n\t\t\tvar geo2 = this.graph.getCellGeometry(c2);\n\t\t\t\n\t\t\treturn (this.horizontal) ?\n\t\t\t\t((geo1.x == geo2.x) ? 0 : ((geo1.x > geo2.x > 0) ? 1 : -1)) :\n\t\t\t\t((geo1.y == geo2.y) ? 0 : ((geo1.y > geo2.y > 0) ? 1 : -1));\n\t\t}));\n\t}\n\t\n\treturn cells;\n};\n\n/**\n * Function: snap\n * \n * Snaps the given value to the grid size.\n */\nmxStackLayout.prototype.snap = function(value)\n{\n\tif (this.gridSize != null && this.gridSize > 0)\n\t{\n\t\tvalue = Math.max(value, this.gridSize);\n\t\t\n\t\tif (value / this.gridSize > 1)\n\t\t{\n\t\t\tvar mod = value % this.gridSize;\n\t\t\tvalue += mod > this.gridSize / 2 ? (this.gridSize - mod) : -mod;\n\t\t}\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * Only children where <isVertexIgnored> returns false are taken into\n * account.\n */\nmxStackLayout.prototype.execute = function(parent)\n{\n\tif (parent != null)\n\t{\n\t\tvar pgeo = this.getParentSize(parent);\n\t\tvar horizontal = this.isHorizontal();\n\t\tvar model = this.graph.getModel();\t\n\t\tvar fillValue = null;\n\t\t\n\t\tif (pgeo != null)\n\t\t{\n\t\t\tfillValue = (horizontal) ? pgeo.height - this.marginTop - this.marginBottom :\n\t\t\t\tpgeo.width - this.marginLeft - this.marginRight;\n\t\t}\n\t\t\n\t\tfillValue -= 2 * this.border;\n\t\tvar x0 = this.x0 + this.border + this.marginLeft;\n\t\tvar y0 = this.y0 + this.border + this.marginTop;\n\t\t\n\t\t// Handles swimlane start size\n\t\tif (this.graph.isSwimlane(parent))\n\t\t{\n\t\t\t// Uses computed style to get latest \n\t\t\tvar style = this.graph.getCellStyle(parent);\n\t\t\tvar start = mxUtils.getNumber(style, mxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_STARTSIZE);\n\t\t\tvar horz = mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true) == 1;\n\n\t\t\tif (pgeo != null)\n\t\t\t{\n\t\t\t\tif (horz)\n\t\t\t\t{\n\t\t\t\t\tstart = Math.min(start, pgeo.height);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstart = Math.min(start, pgeo.width);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (horizontal == horz)\n\t\t\t{\n\t\t\t\tfillValue -= start;\n\t\t\t}\n\n\t\t\tif (horz)\n\t\t\t{\n\t\t\t\ty0 += start;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx0 += start;\n\t\t\t}\n\t\t}\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar tmp = 0;\n\t\t\tvar last = null;\n\t\t\tvar lastValue = 0;\n\t\t\tvar lastChild = null;\n\t\t\tvar cells = this.getLayoutCells(parent);\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar child = cells[i];\n\t\t\t\tvar geo = model.getGeometry(child);\n\t\t\t\t\n\t\t\t\tif (geo != null)\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\n\t\t\t\t\tif (this.wrap != null && last != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ((horizontal && last.x + last.width +\n\t\t\t\t\t\t\tgeo.width + 2 * this.spacing > this.wrap) ||\n\t\t\t\t\t\t\t(!horizontal && last.y + last.height +\n\t\t\t\t\t\t\tgeo.height + 2 * this.spacing > this.wrap))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ty0 += tmp + this.spacing;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tx0 += tmp + this.spacing;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttmp = 0;\n\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttmp = Math.max(tmp, (horizontal) ? geo.height : geo.width);\n\t\t\t\t\tvar sw = 0;\n\t\t\t\t\t\n\t\t\t\t\tif (!this.borderCollapse)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar childStyle = this.graph.getCellStyle(child);\n\t\t\t\t\t\tsw = mxUtils.getNumber(childStyle, mxConstants.STYLE_STROKEWIDTH, 1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (last != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar temp = lastValue + this.spacing + Math.floor(sw / 2);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.x = this.snap(((this.allowGaps) ? Math.max(temp, geo.x) :\n\t\t\t\t\t\t\t\ttemp) - this.marginLeft) + this.marginLeft;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.y = this.snap(((this.allowGaps) ? Math.max(temp, geo.y) :\n\t\t\t\t\t\t\t\ttemp) - this.marginTop) + this.marginTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (!this.keepFirstLocation)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.x = (this.allowGaps && geo.x > x0) ? Math.max(this.snap(geo.x -\n\t\t\t\t\t\t\t\tthis.marginLeft) + this.marginLeft, x0) : x0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.y = (this.allowGaps && geo.y > y0) ? Math.max(this.snap(geo.y -\n\t\t\t\t\t\t\t\tthis.marginTop) + this.marginTop, y0) : y0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (horizontal)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.y = y0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.x = x0;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.fill && fillValue != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.height = fillValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.width = fillValue;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (horizontal)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.width = this.snap(geo.width);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.height = this.snap(geo.height);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.setChildGeometry(child, geo);\n\t\t\t\t\tlastChild = child;\n\t\t\t\t\tlast = geo;\n\t\t\t\t\t\n\t\t\t\t\tif (horizontal)\n\t\t\t\t\t{\n\t\t\t\t\t\tlastValue = last.x + last.width + Math.floor(sw / 2);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tlastValue = last.y + last.height + Math.floor(sw / 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.resizeParent && pgeo != null && last != null && !this.graph.isCellCollapsed(parent))\n\t\t\t{\n\t\t\t\tthis.updateParentGeometry(parent, pgeo, last);\n\t\t\t}\n\t\t\telse if (this.resizeLast && pgeo != null && last != null && lastChild != null)\n\t\t\t{\n\t\t\t\tif (horizontal)\n\t\t\t\t{\n\t\t\t\t\tlast.width = pgeo.width - last.x - this.spacing - this.marginRight - this.marginLeft;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlast.height = pgeo.height - last.y - this.spacing - this.marginBottom;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.setChildGeometry(lastChild, last);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: setChildGeometry\n * \n * Sets the specific geometry to the given child cell.\n * \n * Parameters:\n * \n * child - The given child of <mxCell>.\n * geo - The specific geometry of <mxGeometry>.\n */\nmxStackLayout.prototype.setChildGeometry = function(child, geo)\n{\n\tvar geo2 = this.graph.getCellGeometry(child);\n\t\n\tif (geo2 == null || geo.x != geo2.x || geo.y != geo2.y ||\n\t\tgeo.width != geo2.width || geo.height != geo2.height)\n\t{\n\t\tthis.graph.getModel().setGeometry(child, geo);\n\t}\n};\n\n/**\n * Function: updateParentGeometry\n * \n * Updates the geometry of the given parent cell.\n * \n * Parameters:\n * \n * parent - The given parent of <mxCell>.\n * pgeo - The new <mxGeometry> for parent.\n * last - The last <mxGeometry>.\n */\nmxStackLayout.prototype.updateParentGeometry = function(parent, pgeo, last)\n{\n\tvar horizontal = this.isHorizontal();\n\tvar model = this.graph.getModel();\t\n\n\tvar pgeo2 = pgeo.clone();\n\t\n\tif (horizontal)\n\t{\n\t\tvar tmp = last.x + last.width + this.marginRight + this.border;\n\t\t\n\t\tif (this.resizeParentMax)\n\t\t{\n\t\t\tpgeo2.width = Math.max(pgeo2.width, tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpgeo2.width = tmp;\n\t\t}\n\t}\n\telse\n\t{\n\t\tvar tmp = last.y + last.height + this.marginBottom + this.border;\n\t\t\n\t\tif (this.resizeParentMax)\n\t\t{\n\t\t\tpgeo2.height = Math.max(pgeo2.height, tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpgeo2.height = tmp;\n\t\t}\n\t}\n\t\n\tif (pgeo.x != pgeo2.x || pgeo.y != pgeo2.y ||\n\t\tpgeo.width != pgeo2.width || pgeo.height != pgeo2.height)\n\t{\n\t\tmodel.setGeometry(parent, pgeo2);\n\t}\n};\n\n__mxOutput.mxStackLayout = typeof mxStackLayout !== 'undefined' ? mxStackLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPartitionLayout\n * \n * Extends <mxGraphLayout> for partitioning the parent cell vertically or\n * horizontally by filling the complete area with the child cells. A horizontal\n * layout partitions the height of the given parent whereas a a non-horizontal\n * layout partitions the width. If the parent is a layer (that is, a child of\n * the root node), then the current graph size is partitioned. The children do\n * not need to be connected for this layout to work.\n * \n * Example:\n * \n * (code)\n * var layout = new mxPartitionLayout(graph, true, 10, 20);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxPartitionLayout\n * \n * Constructs a new stack layout layout for the specified graph,\n * spacing, orientation and offset.\n */\nfunction mxPartitionLayout(graph, horizontal, spacing, border)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.spacing = spacing || 0;\n\tthis.border = border || 0;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxPartitionLayout.prototype = new mxGraphLayout();\nmxPartitionLayout.prototype.constructor = mxPartitionLayout;\n\n/**\n * Variable: horizontal\n * \n * Boolean indicating the direction in which the space is partitioned.\n * Default is true.\n */\nmxPartitionLayout.prototype.horizontal = null;\n\n/**\n * Variable: spacing\n * \n * Integer that specifies the absolute spacing in pixels between the\n * children. Default is 0.\n */\nmxPartitionLayout.prototype.spacing = null;\n\n/**\n * Variable: border\n * \n * Integer that specifies the absolute inset in pixels for the parent that\n * contains the children. Default is 0.\n */\nmxPartitionLayout.prototype.border = null;\n\n/**\n * Variable: resizeVertices\n * \n * Boolean that specifies if vertices should be resized. Default is true.\n */\nmxPartitionLayout.prototype.resizeVertices = true;\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxPartitionLayout.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: moveCell\n * \n * Implements <mxGraphLayout.moveCell>.\n */\nmxPartitionLayout.prototype.moveCell = function(cell, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar parent = model.getParent(cell);\n\t\n\tif (cell != null &&\n\t\tparent != null)\n\t{\n\t\tvar i = 0;\n\t\tvar last = 0;\n\t\tvar childCount = model.getChildCount(parent);\n\t\t\n\t\t// Finds index of the closest swimlane\n\t\t// TODO: Take into account the orientation\n\t\tfor (i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(parent, i);\n\t\t\tvar bounds = this.getVertexBounds(child);\n\t\t\t\n\t\t\tif (bounds != null)\n\t\t\t{\n\t\t\t\tvar tmp = bounds.x + bounds.width / 2;\n\t\t\t\t\n\t\t\t\tif (last < x && tmp > x)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlast = tmp;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Changes child order in parent\n\t\tvar idx = parent.getIndex(cell);\n\t\tidx = Math.max(0, i - ((i > idx) ? 1 : 0));\n\t\t\n\t\tmodel.add(parent, cell, idx);\n\t}\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>. All children where <isVertexIgnored>\n * returns false and <isVertexMovable> returns true are modified.\n */\nmxPartitionLayout.prototype.execute = function(parent)\n{\n\tvar horizontal = this.isHorizontal();\n\tvar model = this.graph.getModel();\n\tvar pgeo = model.getGeometry(parent);\n\t\n\t// Handles special case where the parent is either a layer with no\n\t// geometry or the current root of the view in which case the size\n\t// of the graph's container will be used.\n\tif (this.graph.container != null &&\n\t\t((pgeo == null &&\n\t\tmodel.isLayer(parent)) ||\n\t\tparent == this.graph.getView().currentRoot))\n\t{\n\t\tvar width = this.graph.container.offsetWidth - 1;\n\t\tvar height = this.graph.container.offsetHeight - 1;\n\t\tpgeo = new mxRectangle(0, 0, width, height);\n\t}\n\n\tif (pgeo != null)\n\t{\n\t\tvar children = [];\n\t\tvar childCount = model.getChildCount(parent);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (!this.isVertexIgnored(child) &&\n\t\t\t\tthis.isVertexMovable(child))\n\t\t\t{\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar n = children.length;\n\n\t\tif (n > 0)\n\t\t{\n\t\t\tvar x0 = this.border;\n\t\t\tvar y0 = this.border;\n\t\t\tvar other = (horizontal) ? pgeo.height : pgeo.width;\n\t\t\tother -= 2 * this.border;\n\n\t\t\tvar size = (this.graph.isSwimlane(parent)) ?\n\t\t\t\tthis.graph.getStartSize(parent) :\n\t\t\t\tnew mxRectangle();\n\n\t\t\tother -= (horizontal) ? size.height : size.width;\n\t\t\tx0 = x0 + size.width;\n\t\t\ty0 = y0 + size.height;\n\n\t\t\tvar tmp = this.border + (n - 1) * this.spacing;\n\t\t\tvar value = (horizontal) ?\n\t\t\t\t((pgeo.width - x0 - tmp) / n) :\n\t\t\t\t((pgeo.height - y0 - tmp) / n);\n\t\t\t\n\t\t\t// Avoids negative values, that is values where the sum of the\n\t\t\t// spacing plus the border is larger then the available space\n\t\t\tif (value > 0)\n\t\t\t{\n\t\t\t\tmodel.beginUpdate();\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < n; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar child = children[i];\n\t\t\t\t\t\tvar geo = model.getGeometry(child);\n\t\t\t\t\t\n\t\t\t\t\t\tif (geo != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\tgeo.x = x0;\n\t\t\t\t\t\t\tgeo.y = y0;\n\n\t\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (this.resizeVertices)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgeo.width = value;\n\t\t\t\t\t\t\t\t\tgeo.height = other;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tx0 += value + this.spacing;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (this.resizeVertices)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgeo.height = value;\n\t\t\t\t\t\t\t\t\tgeo.width = other;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ty0 += value + this.spacing;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmodel.setGeometry(child, geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfinally\n\t\t\t\t{\n\t\t\t\t\tmodel.endUpdate();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n__mxOutput.mxPartitionLayout = typeof mxPartitionLayout !== 'undefined' ? mxPartitionLayout : undefined;\n\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxCompactTreeLayout\n * \n * Extends <mxGraphLayout> to implement a compact tree (Moen) algorithm. This\n * layout is suitable for graphs that have no cycles (trees). Vertices that are\n * not connected to the tree will be ignored by this layout.\n * \n * Example:\n * \n * (code)\n * var layout = new mxCompactTreeLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCompactTreeLayout\n * \n * Constructs a new compact tree layout for the specified graph\n * and orientation.\n */\nfunction mxCompactTreeLayout(graph, horizontal, invert)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.invert = (invert != null) ? invert : false;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxCompactTreeLayout.prototype = new mxGraphLayout();\nmxCompactTreeLayout.prototype.constructor = mxCompactTreeLayout;\n\n/**\n * Variable: horizontal\n *\n * Specifies the orientation of the layout. Default is true.\n */\nmxCompactTreeLayout.prototype.horizontal = null;\t \n\n/**\n * Variable: invert\n *\n * Specifies if edge directions should be inverted. Default is false.\n */\nmxCompactTreeLayout.prototype.invert = null;\t \n\n/**\n * Variable: resizeParent\n * \n * If the parents should be resized to match the width/height of the\n * children. Default is true.\n */\nmxCompactTreeLayout.prototype.resizeParent = true;\n\n/**\n * Variable: maintainParentLocation\n * \n * Specifies if the parent location should be maintained, so that the\n * top, left corner stays the same before and after execution of\n * the layout. Default is false for backwards compatibility.\n */\nmxCompactTreeLayout.prototype.maintainParentLocation = false;\n\n/**\n * Variable: groupPadding\n * \n * Padding added to resized parents. Default is 10.\n */\nmxCompactTreeLayout.prototype.groupPadding = 10;\n\n/**\n * Variable: groupPaddingTop\n * \n * Top padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingTop = 0;\n\n/**\n * Variable: groupPaddingRight\n * \n * Right padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingRight = 0;\n\n/**\n * Variable: groupPaddingBottom\n * \n * Bottom padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingBottom = 0;\n\n/**\n * Variable: groupPaddingLeft\n * \n * Left padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingLeft = 0;\n\n/**\n * Variable: parentsChanged\n *\n * A set of the parents that need updating based on children\n * process as part of the layout.\n */\nmxCompactTreeLayout.prototype.parentsChanged = null;\n\n/**\n * Variable: moveTree\n * \n * Specifies if the tree should be moved to the top, left corner\n * if it is inside a top-level layer. Default is false.\n */\nmxCompactTreeLayout.prototype.moveTree = false;\n\n/**\n * Variable: visited\n * \n * Specifies if the tree should be moved to the top, left corner\n * if it is inside a top-level layer. Default is false.\n */\nmxCompactTreeLayout.prototype.visited = null;\n\n/**\n * Variable: levelDistance\n *\n * Holds the levelDistance. Default is 10.\n */\nmxCompactTreeLayout.prototype.levelDistance = 10;\n\n/**\n * Variable: nodeDistance\n *\n * Holds the nodeDistance. Default is 20.\n */\nmxCompactTreeLayout.prototype.nodeDistance = 20;\n\n/**\n * Variable: resetEdges\n * \n * Specifies if all edge points of traversed edges should be removed.\n * Default is true.\n */\nmxCompactTreeLayout.prototype.resetEdges = true;\n\n/**\n * Variable: prefHozEdgeSep\n * \n * The preferred horizontal distance between edges exiting a vertex.\n */\nmxCompactTreeLayout.prototype.prefHozEdgeSep = 5;\n\n/**\n * Variable: prefVertEdgeOff\n * \n * The preferred vertical offset between edges exiting a vertex.\n */\nmxCompactTreeLayout.prototype.prefVertEdgeOff = 4;\n\n/**\n * Variable: minEdgeJetty\n * \n * The minimum distance for an edge jetty from a vertex.\n */\nmxCompactTreeLayout.prototype.minEdgeJetty = 8;\n\n/**\n * Variable: channelBuffer\n * \n * The size of the vertical buffer in the center of inter-rank channels\n * where edge control points should not be placed.\n */\nmxCompactTreeLayout.prototype.channelBuffer = 4;\n\n/**\n * Variable: edgeRouting\n * \n * Whether or not to apply the internal tree edge routing.\n */\nmxCompactTreeLayout.prototype.edgeRouting = true;\n\n/**\n * Variable: sortEdges\n * \n * Specifies if edges should be sorted according to the order of their\n * opposite terminal cell in the model.\n */\nmxCompactTreeLayout.prototype.sortEdges = false;\n\n/**\n * Variable: alignRanks\n * \n * Whether or not the tops of cells in each rank should be aligned\n * across the rank\n */\nmxCompactTreeLayout.prototype.alignRanks = false;\n\n/**\n * Variable: maxRankHeight\n * \n * An array of the maximum height of cells (relative to the layout direction)\n * per rank\n */\nmxCompactTreeLayout.prototype.maxRankHeight = null;\n\n/**\n * Variable: root\n * \n * The cell to use as the root of the tree\n */\nmxCompactTreeLayout.prototype.root = null;\n\n/**\n * Variable: node\n * \n * The internal node representation of the root cell. Do not set directly\n * , this value is only exposed to assist with post-processing functionality\n */\nmxCompactTreeLayout.prototype.node = null;\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored as a\n * vertex. This returns true if the cell has no connections.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxCompactTreeLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn mxGraphLayout.prototype.isVertexIgnored.apply(this, arguments) ||\n\t\tthis.graph.getConnections(vertex).length == 0;\n};\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxCompactTreeLayout.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * If the parent has any connected edges, then it is used as the root of\n * the tree. Else, <mxGraph.findTreeRoots> will be used to find a suitable\n * root node within the set of children of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be laid out.\n * root - Optional <mxCell> that will be used as the root of the tree.\n * Overrides <root> if specified.\n */\nmxCompactTreeLayout.prototype.execute = function(parent, root)\n{\n\tthis.parent = parent;\n\tvar model = this.graph.getModel();\n\n\tif (root == null)\n\t{\n\t\t// Takes the parent as the root if it has outgoing edges\n\t\tif (this.graph.getEdges(parent, model.getParent(parent),\n\t\t\tthis.invert, !this.invert, false).length > 0)\n\t\t{\n\t\t\tthis.root = parent;\n\t\t}\n\t\t\n\t\t// Tries to find a suitable root in the parent's\n\t\t// children\n\t\telse\n\t\t{\n\t\t\tvar roots = this.graph.findTreeRoots(parent, true, this.invert);\n\t\t\t\n\t\t\tif (roots.length > 0)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < roots.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (!this.isVertexIgnored(roots[i]) &&\n\t\t\t\t\t\tthis.graph.getEdges(roots[i], null,\n\t\t\t\t\t\t\tthis.invert, !this.invert, false).length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.root = roots[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.root = root;\n\t}\n\t\n\tif (this.root != null)\n\t{\n\t\tif (this.resizeParent)\n\t\t{\n\t\t\tthis.parentsChanged = new Object();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.parentsChanged = null;\n\t\t}\n\n\t\t//  Maintaining parent location\n\t\tthis.parentX = null;\n\t\tthis.parentY = null;\n\t\t\n\t\tif (parent != this.root && model.isVertex(parent) != null && this.maintainParentLocation)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tthis.parentX = geo.x;\n\t\t\t\tthis.parentY = geo.y;\n\t\t\t}\n\t\t}\n\t\t\n\t\tmodel.beginUpdate();\n\t\t\n\t\ttry\n\t\t{\n\t\t\tthis.visited = new Object();\n\t\t\tthis.node = this.dfs(this.root, parent);\n\t\t\t\n\t\t\tif (this.alignRanks)\n\t\t\t{\n\t\t\t\tthis.maxRankHeight = [];\n\t\t\t\tthis.findRankHeights(this.node, 0);\n\t\t\t\tthis.setCellHeights(this.node, 0);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.node != null)\n\t\t\t{\n\t\t\t\tthis.layout(this.node);\n\t\t\t\tvar x0 = this.graph.gridSize;\n\t\t\t\tvar y0 = x0;\n\t\t\t\t\n\t\t\t\tif (!this.moveTree)\n\t\t\t\t{\n\t\t\t\t\tvar g = this.getVertexBounds(this.root);\n\t\t\t\t\t\n\t\t\t\t\tif (g != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tx0 = g.x;\n\t\t\t\t\t\ty0 = g.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar bounds = null;\n\t\t\t\t\n\t\t\t\tif (this.isHorizontal())\n\t\t\t\t{\n\t\t\t\t\tbounds = this.horizontalLayout(this.node, x0, y0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbounds = this.verticalLayout(this.node, null, x0, y0);\n\t\t\t\t}\n\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tvar dx = 0;\n\t\t\t\t\tvar dy = 0;\n\n\t\t\t\t\tif (bounds.x < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx = Math.abs(x0 - bounds.x);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (bounds.y < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy = Math.abs(y0 - bounds.y);\t\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dx != 0 || dy != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.moveNode(this.node, dx, dy);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.resizeParent)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.adjustParents();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.edgeRouting)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Iterate through all edges setting their positions\n\t\t\t\t\t\tthis.localEdgeProcessing(this.node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Maintaining parent location\n\t\t\t\tif (this.parentX != null && this.parentY != null)\n\t\t\t\t{\n\t\t\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\t\t\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\tgeo.x = this.parentX;\n\t\t\t\t\t\tgeo.y = this.parentY;\n\t\t\t\t\t\tmodel.setGeometry(parent, geo);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: moveNode\n * \n * Moves the specified node and all of its children by the given amount.\n */\nmxCompactTreeLayout.prototype.moveNode = function(node, dx, dy)\n{\n\tnode.x += dx;\n\tnode.y += dy;\n\tthis.apply(node);\n\t\n\tvar child = node.child;\n\t\n\twhile (child != null)\n\t{\n\t\tthis.moveNode(child, dx, dy);\n\t\tchild = child.next;\n\t}\n};\n\n\n/**\n * Function: sortOutgoingEdges\n * \n * Called if <sortEdges> is true to sort the array of outgoing edges in place.\n */\nmxCompactTreeLayout.prototype.sortOutgoingEdges = function(source, edges)\n{\n\tvar lookup = new mxDictionary();\n\t\n\tedges.sort(function(e1, e2)\n\t{\n\t\tvar end1 = e1.getTerminal(e1.getTerminal(false) == source);\n\t\tvar p1 = lookup.get(end1);\n\t\t\n\t\tif (p1 == null)\n\t\t{\n\t\t\tp1 = mxCellPath.create(end1).split(mxCellPath.PATH_SEPARATOR);\n\t\t\tlookup.put(end1, p1);\n\t\t}\n\n\t\tvar end2 = e2.getTerminal(e2.getTerminal(false) == source);\n\t\tvar p2 = lookup.get(end2);\n\t\t\n\t\tif (p2 == null)\n\t\t{\n\t\t\tp2 = mxCellPath.create(end2).split(mxCellPath.PATH_SEPARATOR);\n\t\t\tlookup.put(end2, p2);\n\t\t}\n\n\t\treturn mxCellPath.compare(p1, p2);\n\t});\n};\n\n/**\n * Function: findRankHeights\n * \n * Stores the maximum height (relative to the layout\n * direction) of cells in each rank\n */\nmxCompactTreeLayout.prototype.findRankHeights = function(node, rank)\n{\n\tif (this.maxRankHeight[rank] == null || this.maxRankHeight[rank] < node.height)\n\t{\n\t\tthis.maxRankHeight[rank] = node.height;\n\t}\n\n\tvar child = node.child;\n\t\n\twhile (child != null)\n\t{\n\t\tthis.findRankHeights(child, rank + 1);\n\t\tchild = child.next;\n\t}\n};\n\n/**\n * Function: setCellHeights\n * \n * Set the cells heights (relative to the layout\n * direction) when the tops of each rank are to be aligned\n */\nmxCompactTreeLayout.prototype.setCellHeights = function(node, rank)\n{\n\tif (this.maxRankHeight[rank] != null && this.maxRankHeight[rank] > node.height)\n\t{\n\t\tnode.height = this.maxRankHeight[rank];\n\t}\n\n\tvar child = node.child;\n\t\n\twhile (child != null)\n\t{\n\t\tthis.setCellHeights(child, rank + 1);\n\t\tchild = child.next;\n\t}\n};\n\n/**\n * Function: dfs\n * \n * Does a depth first search starting at the specified cell.\n * Makes sure the specified parent is never left by the\n * algorithm.\n */\nmxCompactTreeLayout.prototype.dfs = function(cell, parent)\n{\n\tvar id = mxCellPath.create(cell);\n\tvar node = null;\n\t\n\tif (cell != null && this.visited[id] == null && !this.isVertexIgnored(cell))\n\t{\n\t\tthis.visited[id] = cell;\n\t\tnode = this.createNode(cell);\n\n\t\tvar model = this.graph.getModel();\n\t\tvar prev = null;\n\t\tvar out = this.graph.getEdges(cell, parent, this.invert, !this.invert, false, true);\n\t\tvar view = this.graph.getView();\n\t\t\n\t\tif (this.sortEdges)\n\t\t{\n\t\t\tthis.sortOutgoingEdges(cell, out);\n\t\t}\n\n\t\tfor (var i = 0; i < out.length; i++)\n\t\t{\n\t\t\tvar edge = out[i];\n\t\t\t\n\t\t\tif (!this.isEdgeIgnored(edge))\n\t\t\t{\n\t\t\t\t// Resets the points on the traversed edge\n\t\t\t\tif (this.resetEdges)\n\t\t\t\t{\n\t\t\t\t\tthis.setEdgePoints(edge, null);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.edgeRouting)\n\t\t\t\t{\n\t\t\t\t\tthis.setEdgeStyleEnabled(edge, false);\n\t\t\t\t\tthis.setEdgePoints(edge, null);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Checks if terminal in same swimlane\n\t\t\t\tvar state = view.getState(edge);\n\t\t\t\tvar target = (state != null) ? state.getVisibleTerminal(this.invert) : view.getVisibleTerminal(edge, this.invert);\n\t\t\t\tvar tmp = this.dfs(target, parent);\n\t\t\t\t\n\t\t\t\tif (tmp != null && model.getGeometry(target) != null)\n\t\t\t\t{\n\t\t\t\t\tif (prev == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.child = tmp;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprev.next = tmp;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tprev = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: layout\n * \n * Starts the actual compact tree layout algorithm\n * at the given node.\n */\nmxCompactTreeLayout.prototype.layout = function(node)\n{\n\tif (node != null)\n\t{\n\t\tvar child = node.child;\n\t\t\n\t\twhile (child != null)\n\t\t{\n\t\t\tthis.layout(child);\n\t\t\tchild = child.next;\n\t\t}\n\t\t\n\t\tif (node.child != null)\n\t\t{\n\t\t\tthis.attachParent(node, this.join(node));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.layoutLeaf(node);\n\t\t}\n\t}\n};\n\n/**\n * Function: horizontalLayout\n */\nmxCompactTreeLayout.prototype.horizontalLayout = function(node, x0, y0, bounds)\n{\n\tnode.x += x0 + node.offsetX;\n\tnode.y += y0 + node.offsetY;\n\tbounds = this.apply(node, bounds);\n\tvar child = node.child;\n\t\n\tif (child != null)\n\t{\n\t\tbounds = this.horizontalLayout(child, node.x, node.y, bounds);\n\t\tvar siblingOffset = node.y + child.offsetY;\n\t\tvar s = child.next;\n\t\t\n\t\twhile (s != null)\n\t\t{\n\t\t\tbounds = this.horizontalLayout(s, node.x + child.offsetX, siblingOffset, bounds);\n\t\t\tsiblingOffset += s.offsetY;\n\t\t\ts = s.next;\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\t\n/**\n * Function: verticalLayout\n */\nmxCompactTreeLayout.prototype.verticalLayout = function(node, parent, x0, y0, bounds)\n{\n\tnode.x += x0 + node.offsetY;\n\tnode.y += y0 + node.offsetX;\n\tbounds = this.apply(node, bounds);\n\tvar child = node.child;\n\t\n\tif (child != null)\n\t{\n\t\tbounds = this.verticalLayout(child, node, node.x, node.y, bounds);\n\t\tvar siblingOffset = node.x + child.offsetY;\n\t\tvar s = child.next;\n\t\t\n\t\twhile (s != null)\n\t\t{\n\t\t\tbounds = this.verticalLayout(s, node, siblingOffset, node.y + child.offsetX, bounds);\n\t\t\tsiblingOffset += s.offsetY;\n\t\t\ts = s.next;\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: attachParent\n */\nmxCompactTreeLayout.prototype.attachParent = function(node, height)\n{\n\tvar x = this.nodeDistance + this.levelDistance;\n\tvar y2 = (height - node.width) / 2 - this.nodeDistance;\n\tvar y1 = y2 + node.width + 2 * this.nodeDistance - height;\n\t\n\tnode.child.offsetX = x + node.height;\n\tnode.child.offsetY = y1;\n\t\n\tnode.contour.upperHead = this.createLine(node.height, 0,\n\t\tthis.createLine(x, y1, node.contour.upperHead));\n\tnode.contour.lowerHead = this.createLine(node.height, 0,\n\t\tthis.createLine(x, y2, node.contour.lowerHead));\n};\n\n/**\n * Function: layoutLeaf\n */\nmxCompactTreeLayout.prototype.layoutLeaf = function(node)\n{\n\tvar dist = 2 * this.nodeDistance;\n\t\n\tnode.contour.upperTail = this.createLine(\n\t\tnode.height + dist, 0);\n\tnode.contour.upperHead = node.contour.upperTail;\n\tnode.contour.lowerTail = this.createLine(\n\t\t0, -node.width - dist);\n\tnode.contour.lowerHead = this.createLine(\n\t\tnode.height + dist, 0, node.contour.lowerTail);\n};\n\n/**\n * Function: join\n */\nmxCompactTreeLayout.prototype.join = function(node)\n{\n\tvar dist = 2 * this.nodeDistance;\n\t\n\tvar child = node.child;\n\tnode.contour = child.contour;\n\tvar h = child.width + dist;\n\tvar sum = h;\n\tchild = child.next;\n\t\n\twhile (child != null)\n\t{\n\t\tvar d = this.merge(node.contour, child.contour);\n\t\tchild.offsetY = d + h;\n\t\tchild.offsetX = 0;\n\t\th = child.width + dist;\n\t\tsum += d + h;\n\t\tchild = child.next;\n\t}\n\t\n\treturn sum;\n};\n\n/**\n * Function: merge\n */\nmxCompactTreeLayout.prototype.merge = function(p1, p2)\n{\n\tvar x = 0;\n\tvar y = 0;\n\tvar total = 0;\n\t\n\tvar upper = p1.lowerHead;\n\tvar lower = p2.upperHead;\n\t\n\twhile (lower != null && upper != null)\n\t{\n\t\tvar d = this.offset(x, y, lower.dx, lower.dy,\n\t\t\tupper.dx, upper.dy);\n\t\ty += d;\n\t\ttotal += d;\n\t\t\n\t\tif (x + lower.dx <= upper.dx)\n\t\t{\n\t\t\tx += lower.dx;\n\t\t\ty += lower.dy;\n\t\t\tlower = lower.next;\n\t\t}\n\t\telse\n\t\t{\t\t\t\t\n\t\t\tx -= upper.dx;\n\t\t\ty -= upper.dy;\n\t\t\tupper = upper.next;\n\t\t}\n\t}\n\t\n\tif (lower != null)\n\t{\n\t\tvar b = this.bridge(p1.upperTail, 0, 0, lower, x, y);\n\t\tp1.upperTail = (b.next != null) ? p2.upperTail : b;\n\t\tp1.lowerTail = p2.lowerTail;\n\t}\n\telse\n\t{\n\t\tvar b = this.bridge(p2.lowerTail, x, y, upper, 0, 0);\n\t\t\n\t\tif (b.next == null)\n\t\t{\n\t\t\tp1.lowerTail = b;\n\t\t}\n\t}\n\t\n\tp1.lowerHead = p2.lowerHead;\n\t\n\treturn total;\n};\n\n/**\n * Function: offset\n */\nmxCompactTreeLayout.prototype.offset = function(p1, p2, a1, a2, b1, b2)\n{\n\tvar d = 0;\n\t\n\tif (b1 <= p1 || p1 + a1 <= 0)\n\t{\n\t\treturn 0;\n\t}\n\n\tvar t = b1 * a2 - a1 * b2;\n\t\n\tif (t > 0)\n\t{\n\t\tif (p1 < 0)\n\t\t{\n\t\t\tvar s = p1 * a2;\n\t\t\td = s / a1 - p2;\n\t\t}\n\t\telse if (p1 > 0)\n\t\t{\n\t\t\tvar s = p1 * b2;\n\t\t\td = s / b1 - p2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\td = -p2;\n\t\t}\n\t}\n\telse if (b1 < p1 + a1)\n\t{\n\t\tvar s = (b1 - p1) * a2;\n\t\td = b2 - (p2 + s / a1);\n\t}\n\telse if (b1 > p1 + a1)\n\t{\n\t\tvar s = (a1 + p1) * b2;\n\t\td = s / b1 - (p2 + a2);\n\t}\n\telse\n\t{\n\t\td = b2 - (p2 + a2);\n\t}\n\n\tif (d > 0)\n\t{\n\t\treturn d;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n};\n\n/**\n * Function: bridge\n */\nmxCompactTreeLayout.prototype.bridge = function(line1, x1, y1, line2, x2, y2)\n{\n\tvar dx = x2 + line2.dx - x1;\n\tvar dy = 0;\n\tvar s = 0;\n\t\n\tif (line2.dx == 0)\n\t{\n\t\tdy = line2.dy;\n\t}\n\telse\n\t{\n\t\ts = dx * line2.dy;\n\t\tdy = s / line2.dx;\n\t}\n\t\n\tvar r = this.createLine(dx, dy, line2.next);\n\tline1.next = this.createLine(0, y2 + line2.dy - dy - y1, r);\n\t\n\treturn r;\n};\n\n/**\n * Function: createNode\n */\nmxCompactTreeLayout.prototype.createNode = function(cell)\n{\n\tvar node = new Object();\n\tnode.cell = cell;\n\tnode.x = 0;\n\tnode.y = 0;\n\tnode.width = 0;\n\tnode.height = 0;\n\t\n\tvar geo = this.getVertexBounds(cell);\n\t\n\tif (geo != null)\n\t{\n\t\tif (this.isHorizontal())\n\t\t{\n\t\t\tnode.width = geo.height;\n\t\t\tnode.height = geo.width;\t\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.width = geo.width;\n\t\t\tnode.height = geo.height;\n\t\t}\n\t}\n\t\n\tnode.offsetX = 0;\n\tnode.offsetY = 0;\n\tnode.contour = new Object();\n\t\n\treturn node;\n};\n\n/**\n * Function: apply\n */\nmxCompactTreeLayout.prototype.apply = function(node, bounds)\n{\n\tvar model = this.graph.getModel();\n\tvar cell = node.cell;\n\tvar g = model.getGeometry(cell);\n\n\tif (cell != null && g != null)\n\t{\n\t\tif (this.isVertexMovable(cell))\n\t\t{\n\t\t\tg = this.setVertexLocation(cell, node.x, node.y);\n\t\t\t\n\t\t\tif (this.resizeParent)\n\t\t\t{\n\t\t\t\tvar parent = model.getParent(cell);\n\t\t\t\tvar id = mxCellPath.create(parent);\n\t\t\t\t\n\t\t\t\t// Implements set semantic\n\t\t\t\tif (this.parentsChanged[id] == null)\n\t\t\t\t{\n\t\t\t\t\tthis.parentsChanged[id] = parent;\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (bounds == null)\n\t\t{\n\t\t\tbounds = new mxRectangle(g.x, g.y, g.width, g.height);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbounds = new mxRectangle(Math.min(bounds.x, g.x),\n\t\t\t\tMath.min(bounds.y, g.y),\n\t\t\t\tMath.max(bounds.x + bounds.width, g.x + g.width),\n\t\t\t\tMath.max(bounds.y + bounds.height, g.y + g.height));\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: createLine\n */\nmxCompactTreeLayout.prototype.createLine = function(dx, dy, next)\n{\n\tvar line = new Object();\n\tline.dx = dx;\n\tline.dy = dy;\n\tline.next = next;\n\t\n\treturn line;\n};\n\n/**\n * Function: adjustParents\n * \n * Adjust parent cells whose child geometries have changed. The default \n * implementation adjusts the group to just fit around the children with \n * a padding.\n */\nmxCompactTreeLayout.prototype.adjustParents = function()\n{\n\tvar tmp = [];\n\t\n\tfor (var id in this.parentsChanged)\n\t{\n\t\ttmp.push(this.parentsChanged[id]);\n\t}\n\t\n\tthis.arrangeGroups(mxUtils.sortCells(tmp, true), this.groupPadding, this.groupPaddingTop,\n\t\tthis.groupPaddingRight, this.groupPaddingBottom, this.groupPaddingLeft);\n};\n\n/**\n * Function: localEdgeProcessing\n *\n * Moves the specified node and all of its children by the given amount.\n */\nmxCompactTreeLayout.prototype.localEdgeProcessing = function(node)\n{\n\tthis.processNodeOutgoing(node);\n\tvar child = node.child;\n\n\twhile (child != null)\n\t{\n\t\tthis.localEdgeProcessing(child);\n\t\tchild = child.next;\n\t}\n};\n\n/**\n * Function: processNodeOutgoing\n *\n * Separates the x position of edges as they connect to vertices\n */\nmxCompactTreeLayout.prototype.processNodeOutgoing = function(node)\n{\n\tvar child = node.child;\n\tvar parentCell = node.cell;\n\n\tvar childCount = 0;\n\tvar sortedCells = [];\n\n\twhile (child != null)\n\t{\n\t\tchildCount++;\n\n\t\tvar sortingCriterion = child.x;\n\n\t\tif (this.horizontal)\n\t\t{\n\t\t\tsortingCriterion = child.y;\n\t\t}\n\n\t\tsortedCells.push(new WeightedCellSorter(child, sortingCriterion));\n\t\tchild = child.next;\n\t}\n\n\tsortedCells.sort(WeightedCellSorter.prototype.compare);\n\n\tvar availableWidth = node.width;\n\n\tvar requiredWidth = (childCount + 1) * this.prefHozEdgeSep;\n\n\t// Add a buffer on the edges of the vertex if the edge count allows\n\tif (availableWidth > requiredWidth + (2 * this.prefHozEdgeSep))\n\t{\n\t\tavailableWidth -= 2 * this.prefHozEdgeSep;\n\t}\n\n\tvar edgeSpacing = availableWidth / childCount;\n\n\tvar currentXOffset = edgeSpacing / 2.0;\n\n\tif (availableWidth > requiredWidth + (2 * this.prefHozEdgeSep))\n\t{\n\t\tcurrentXOffset += this.prefHozEdgeSep;\n\t}\n\n\tvar currentYOffset = this.minEdgeJetty - this.prefVertEdgeOff;\n\tvar maxYOffset = 0;\n\n\tvar parentBounds = this.getVertexBounds(parentCell);\n\tchild = node.child;\n\n\tfor (var j = 0; j < sortedCells.length; j++)\n\t{\n\t\tvar childCell = sortedCells[j].cell.cell;\n\t\tvar childBounds = this.getVertexBounds(childCell);\n\n\t\tvar edges = this.graph.getEdgesBetween(parentCell,\n\t\t\t\tchildCell, false);\n\t\t\n\t\tvar newPoints = [];\n\t\tvar x = 0;\n\t\tvar y = 0;\n\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tif (this.horizontal)\n\t\t\t{\n\t\t\t\t// Use opposite co-ords, calculation was done for \n\t\t\t\t// \n\t\t\t\tx = parentBounds.x + parentBounds.width;\n\t\t\t\ty = parentBounds.y + currentXOffset;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tx = parentBounds.x + parentBounds.width\n\t\t\t\t\t\t+ currentYOffset;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\ty = childBounds.y + childBounds.height / 2.0;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tthis.setEdgePoints(edges[i], newPoints);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx = parentBounds.x + currentXOffset;\n\t\t\t\ty = parentBounds.y + parentBounds.height;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\ty = parentBounds.y + parentBounds.height\n\t\t\t\t\t\t+ currentYOffset;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tx = childBounds.x + childBounds.width / 2.0;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tthis.setEdgePoints(edges[i], newPoints);\n\t\t\t}\n\t\t}\n\n\t\tif (j < childCount / 2)\n\t\t{\n\t\t\tcurrentYOffset += this.prefVertEdgeOff;\n\t\t}\n\t\telse if (j > childCount / 2)\n\t\t{\n\t\t\tcurrentYOffset -= this.prefVertEdgeOff;\n\t\t}\n\t\t// Ignore the case if equals, this means the second of 2\n\t\t// jettys with the same y (even number of edges)\n\n\t\t//\t\t\t\t\t\t\t\tpos[k * 2] = currentX;\n\t\tcurrentXOffset += edgeSpacing;\n\t\t//\t\t\t\t\t\t\t\tpos[k * 2 + 1] = currentYOffset;\n\n\t\tmaxYOffset = Math.max(maxYOffset, currentYOffset);\n\t}\n};\n__mxOutput.mxCompactTreeLayout = typeof mxCompactTreeLayout !== 'undefined' ? mxCompactTreeLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRadialTreeLayout\n * \n * Extends <mxGraphLayout> to implement a radial tree algorithm. This\n * layout is suitable for graphs that have no cycles (trees). Vertices that are\n * not connected to the tree will be ignored by this layout.\n * \n * Example:\n * \n * (code)\n * var layout = new mxRadialTreeLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxRadialTreeLayout\n * \n * Constructs a new radial tree layout for the specified graph\n */\nfunction mxRadialTreeLayout(graph)\n{\n\tmxCompactTreeLayout.call(this, graph , false);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxUtils.extend(mxRadialTreeLayout, mxCompactTreeLayout);\n\n/**\n * Variable: angleOffset\n *\n * The initial offset to compute the angle position.\n */\nmxRadialTreeLayout.prototype.angleOffset = 0.5;\n\n/**\n * Variable: rootx\n *\n * The X co-ordinate of the root cell\n */\nmxRadialTreeLayout.prototype.rootx = 0;\n\n/**\n * Variable: rooty\n *\n * The Y co-ordinate of the root cell\n */\nmxRadialTreeLayout.prototype.rooty = 0;\n\n/**\n * Variable: levelDistance\n *\n * Holds the levelDistance. Default is 120.\n */\nmxRadialTreeLayout.prototype.levelDistance = 120;\n\n/**\n * Variable: nodeDistance\n *\n * Holds the nodeDistance. Default is 10.\n */\nmxRadialTreeLayout.prototype.nodeDistance = 10;\n\n/**\n * Variable: autoRadius\n * \n * Specifies if the radios should be computed automatically\n */\nmxRadialTreeLayout.prototype.autoRadius = false;\n\n/**\n * Variable: sortEdges\n * \n * Specifies if edges should be sorted according to the order of their\n * opposite terminal cell in the model.\n */\nmxRadialTreeLayout.prototype.sortEdges = false;\n\n/**\n * Variable: rowMinX\n * \n * Array of leftmost x coordinate of each row\n */\nmxRadialTreeLayout.prototype.rowMinX = [];\n\n/**\n * Variable: rowMaxX\n * \n * Array of rightmost x coordinate of each row\n */\nmxRadialTreeLayout.prototype.rowMaxX = [];\n\n/**\n * Variable: rowMinCenX\n * \n * Array of x coordinate of leftmost vertex of each row\n */\nmxRadialTreeLayout.prototype.rowMinCenX = [];\n\n/**\n * Variable: rowMaxCenX\n * \n * Array of x coordinate of rightmost vertex of each row\n */\nmxRadialTreeLayout.prototype.rowMaxCenX = [];\n\n/**\n * Variable: rowRadi\n * \n * Array of y deltas of each row behind root vertex, also the radius in the tree\n */\nmxRadialTreeLayout.prototype.rowRadi = [];\n\n/**\n * Variable: row\n * \n * Array of vertices on each row\n */\nmxRadialTreeLayout.prototype.row = [];\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored as a\n * vertex. This returns true if the cell has no connections.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxRadialTreeLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn mxGraphLayout.prototype.isVertexIgnored.apply(this, arguments) ||\n\t\tthis.graph.getConnections(vertex).length == 0;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * If the parent has any connected edges, then it is used as the root of\n * the tree. Else, <mxGraph.findTreeRoots> will be used to find a suitable\n * root node within the set of children of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be laid out.\n * root - Optional <mxCell> that will be used as the root of the tree.\n */\nmxRadialTreeLayout.prototype.execute = function(parent, root)\n{\n\tthis.parent = parent;\n\t\n\tthis.useBoundingBox = false;\n\tthis.edgeRouting = false;\n\t//this.horizontal = false;\n\n\tmxCompactTreeLayout.prototype.execute.apply(this, arguments);\n\t\n\tvar bounds = null;\n\tvar rootBounds = this.getVertexBounds(this.root);\n\tthis.centerX = rootBounds.x + rootBounds.width / 2;\n\tthis.centerY = rootBounds.y + rootBounds.height / 2;\n\n\t// Calculate the bounds of the involved vertices directly from the values set in the compact tree\n\tfor (var vertex in this.visited)\n\t{\n\t\tvar vertexBounds = this.getVertexBounds(this.visited[vertex]);\n\t\tbounds = (bounds != null) ? bounds : vertexBounds.clone();\n\t\tbounds.add(vertexBounds);\n\t}\n\t\n\tthis.calcRowDims([this.node], 0);\n\t\n\tvar maxLeftGrad = 0;\n\tvar maxRightGrad = 0;\n\n\t// Find the steepest left and right gradients\n\tfor (var i = 0; i < this.row.length; i++)\n\t{\n\t\tvar leftGrad = (this.centerX - this.rowMinX[i] - this.nodeDistance) / this.rowRadi[i];\n\t\tvar rightGrad = (this.rowMaxX[i] - this.centerX - this.nodeDistance) / this.rowRadi[i];\n\t\t\n\t\tmaxLeftGrad = Math.max (maxLeftGrad, leftGrad);\n\t\tmaxRightGrad = Math.max (maxRightGrad, rightGrad);\n\t}\n\t\n\t// Extend out row so they meet the maximum gradient and convert to polar co-ords\n\tfor (var i = 0; i < this.row.length; i++)\n\t{\n\t\tvar xLeftLimit = this.centerX - this.nodeDistance - maxLeftGrad * this.rowRadi[i];\n\t\tvar xRightLimit = this.centerX + this.nodeDistance + maxRightGrad * this.rowRadi[i];\n\t\tvar fullWidth = xRightLimit - xLeftLimit;\n\t\t\n\t\tfor (var j = 0; j < this.row[i].length; j ++)\n\t\t{\n\t\t\tvar row = this.row[i];\n\t\t\tvar node = row[j];\n\t\t\tvar vertexBounds = this.getVertexBounds(node.cell);\n\t\t\tvar xProportion = (vertexBounds.x + vertexBounds.width / 2 - xLeftLimit) / (fullWidth);\n\t\t\tvar theta =  2 * Math.PI * xProportion;\n\t\t\tnode.theta = theta;\n\t\t}\n\t}\n\n\t// Post-process from outside inwards to try to align parents with children\n\tfor (var i = this.row.length - 2; i >= 0; i--)\n\t{\n\t\tvar row = this.row[i];\n\t\t\n\t\tfor (var j = 0; j < row.length; j++)\n\t\t{\n\t\t\tvar node = row[j];\n\t\t\tvar child = node.child;\n\t\t\tvar counter = 0;\n\t\t\tvar totalTheta = 0;\n\t\t\t\n\t\t\twhile (child != null)\n\t\t\t{\n\t\t\t\ttotalTheta += child.theta;\n\t\t\t\tcounter++;\n\t\t\t\tchild = child.next;\n\t\t\t}\n\t\t\t\n\t\t\tif (counter > 0)\n\t\t\t{\n\t\t\t\tvar averTheta = totalTheta / counter;\n\t\t\t\t\n\t\t\t\tif (averTheta > node.theta && j < row.length - 1)\n\t\t\t\t{\n\t\t\t\t\tvar nextTheta = row[j+1].theta;\n\t\t\t\t\tnode.theta = Math.min (averTheta, nextTheta - Math.PI/10);\n\t\t\t\t}\n\t\t\t\telse if (averTheta < node.theta && j > 0 )\n\t\t\t\t{\n\t\t\t\t\tvar lastTheta = row[j-1].theta;\n\t\t\t\t\tnode.theta = Math.max (averTheta, lastTheta + Math.PI/10);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Set locations\n\tfor (var i = 0; i < this.row.length; i++)\n\t{\n\t\tfor (var j = 0; j < this.row[i].length; j ++)\n\t\t{\n\t\t\tvar row = this.row[i];\n\t\t\tvar node = row[j];\n\t\t\tvar vertexBounds = this.getVertexBounds(node.cell);\n\t\t\tthis.setVertexLocation(node.cell,\n\t\t\t\t\t\t\t\t\tthis.centerX - vertexBounds.width / 2 + this.rowRadi[i] * Math.cos(node.theta),\n\t\t\t\t\t\t\t\t\tthis.centerY - vertexBounds.height / 2 + this.rowRadi[i] * Math.sin(node.theta));\n\t\t}\n\t}\n};\n\n/**\n * Function: calcRowDims\n * \n * Recursive function to calculate the dimensions of each row\n * \n * Parameters:\n * \n * row - Array of internal nodes, the children of which are to be processed.\n * rowNum - Integer indicating which row is being processed.\n */\nmxRadialTreeLayout.prototype.calcRowDims = function(row, rowNum)\n{\n\tif (row == null || row.length == 0)\n\t{\n\t\treturn;\n\t}\n\n\t// Place root's children proportionally around the first level\n\tthis.rowMinX[rowNum] = this.centerX;\n\tthis.rowMaxX[rowNum] = this.centerX;\n\tthis.rowMinCenX[rowNum] = this.centerX;\n\tthis.rowMaxCenX[rowNum] = this.centerX;\n\tthis.row[rowNum] = [];\n\n\tvar rowHasChildren = false;\n\n\tfor (var i = 0; i < row.length; i++)\n\t{\n\t\tvar child = row[i] != null ? row[i].child : null;\n\n\t\twhile (child != null)\n\t\t{\n\t\t\tvar cell = child.cell;\n\t\t\tvar vertexBounds = this.getVertexBounds(cell);\n\t\t\t\n\t\t\tthis.rowMinX[rowNum] = Math.min(vertexBounds.x, this.rowMinX[rowNum]);\n\t\t\tthis.rowMaxX[rowNum] = Math.max(vertexBounds.x + vertexBounds.width, this.rowMaxX[rowNum]);\n\t\t\tthis.rowMinCenX[rowNum] = Math.min(vertexBounds.x + vertexBounds.width / 2, this.rowMinCenX[rowNum]);\n\t\t\tthis.rowMaxCenX[rowNum] = Math.max(vertexBounds.x + vertexBounds.width / 2, this.rowMaxCenX[rowNum]);\n\t\t\tthis.rowRadi[rowNum] = vertexBounds.y - this.getVertexBounds(this.root).y;\n\t\n\t\t\tif (child.child != null)\n\t\t\t{\n\t\t\t\trowHasChildren = true;\n\t\t\t}\n\t\t\t\n\t\t\tthis.row[rowNum].push(child);\n\t\t\tchild = child.next;\n\t\t}\n\t}\n\t\n\tif (rowHasChildren)\n\t{\n\t\tthis.calcRowDims(this.row[rowNum], rowNum + 1);\n\t}\n};\n\n__mxOutput.mxRadialTreeLayout = typeof mxRadialTreeLayout !== 'undefined' ? mxRadialTreeLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxFastOrganicLayout\n * \n * Extends <mxGraphLayout> to implement a fast organic layout algorithm.\n * The vertices need to be connected for this layout to work, vertices\n * with no connections are ignored.\n * \n * Example:\n * \n * (code)\n * var layout = new mxFastOrganicLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCompactTreeLayout\n * \n * Constructs a new fast organic layout for the specified graph.\n */\nfunction mxFastOrganicLayout(graph)\n{\n\tmxGraphLayout.call(this, graph);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxFastOrganicLayout.prototype = new mxGraphLayout();\nmxFastOrganicLayout.prototype.constructor = mxFastOrganicLayout;\n\n/**\n * Variable: useInputOrigin\n * \n * Specifies if the top left corner of the input cells should be the origin\n * of the layout result. Default is true.\n */\nmxFastOrganicLayout.prototype.useInputOrigin = true;\n\n/**\n * Variable: resetEdges\n * \n * Specifies if all edge points of traversed edges should be removed.\n * Default is true.\n */\nmxFastOrganicLayout.prototype.resetEdges = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxFastOrganicLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Variable: forceConstant\n * \n * The force constant by which the attractive forces are divided and the\n * replusive forces are multiple by the square of. The value equates to the\n * average radius there is of free space around each node. Default is 50.\n */\nmxFastOrganicLayout.prototype.forceConstant = 50;\n\n/**\n * Variable: forceConstantSquared\n * \n * Cache of <forceConstant>^2 for performance.\n */\nmxFastOrganicLayout.prototype.forceConstantSquared = 0;\n\n/**\n * Variable: minDistanceLimit\n * \n * Minimal distance limit. Default is 2. Prevents of\n * dividing by zero.\n */\nmxFastOrganicLayout.prototype.minDistanceLimit = 2;\n\n/**\n * Variable: maxDistanceLimit\n * \n * Maximal distance limit. Default is 500. Prevents of\n * dividing by zero.\n */\nmxFastOrganicLayout.prototype.maxDistanceLimit = 500;\n\n/**\n * Variable: minDistanceLimitSquared\n * \n * Cached version of <minDistanceLimit> squared.\n */\nmxFastOrganicLayout.prototype.minDistanceLimitSquared = 4;\n\n/**\n * Variable: initialTemp\n * \n * Start value of temperature. Default is 200.\n */\nmxFastOrganicLayout.prototype.initialTemp = 200;\n\n/**\n * Variable: temperature\n * \n * Temperature to limit displacement at later stages of layout.\n */\nmxFastOrganicLayout.prototype.temperature = 0;\n\n/**\n * Variable: maxIterations\n * \n * Total number of iterations to run the layout though.\n */\nmxFastOrganicLayout.prototype.maxIterations = 0;\n\n/**\n * Variable: iteration\n * \n * Current iteration count.\n */\nmxFastOrganicLayout.prototype.iteration = 0;\n\n/**\n * Variable: vertexArray\n * \n * An array of all vertices to be laid out.\n */\nmxFastOrganicLayout.prototype.vertexArray;\n\n/**\n * Variable: dispX\n * \n * An array of locally stored X co-ordinate displacements for the vertices.\n */\nmxFastOrganicLayout.prototype.dispX;\n\n/**\n * Variable: dispY\n * \n * An array of locally stored Y co-ordinate displacements for the vertices.\n */\nmxFastOrganicLayout.prototype.dispY;\n\n/**\n * Variable: cellLocation\n * \n * An array of locally stored co-ordinate positions for the vertices.\n */\nmxFastOrganicLayout.prototype.cellLocation;\n\n/**\n * Variable: radius\n * \n * The approximate radius of each cell, nodes only.\n */\nmxFastOrganicLayout.prototype.radius;\n\n/**\n * Variable: radiusSquared\n * \n * The approximate radius squared of each cell, nodes only.\n */\nmxFastOrganicLayout.prototype.radiusSquared;\n\n/**\n * Variable: isMoveable\n * \n * Array of booleans representing the movable states of the vertices.\n */\nmxFastOrganicLayout.prototype.isMoveable;\n\n/**\n * Variable: neighbours\n * \n * Local copy of cell neighbours.\n */\nmxFastOrganicLayout.prototype.neighbours;\n\n/**\n * Variable: indices\n * \n * Hashtable from cells to local indices.\n */\nmxFastOrganicLayout.prototype.indices;\n\n/**\n * Variable: allowedToRun\n * \n * Boolean flag that specifies if the layout is allowed to run. If this is\n * set to false, then the layout exits in the following iteration.\n */\nmxFastOrganicLayout.prototype.allowedToRun = true;\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored as a\n * vertex. This returns true if the cell has no connections.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxFastOrganicLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn mxGraphLayout.prototype.isVertexIgnored.apply(this, arguments) ||\n\t\tthis.graph.getConnections(vertex).length == 0;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>. This operates on all children of the\n * given parent where <isVertexIgnored> returns false.\n */\nmxFastOrganicLayout.prototype.execute = function(parent)\n{\n\tvar model = this.graph.getModel();\n\tthis.vertexArray = [];\n\tvar cells = this.graph.getChildVertices(parent);\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tif (!this.isVertexIgnored(cells[i]))\n\t\t{\n\t\t\tthis.vertexArray.push(cells[i]);\n\t\t}\n\t}\n\t\n\tvar initialBounds = (this.useInputOrigin) ?\n\t\t\tthis.graph.getBoundingBoxFromGeometry(this.vertexArray) :\n\t\t\t\tnull;\n\tvar n = this.vertexArray.length;\n\n\tthis.indices = [];\n\tthis.dispX = [];\n\tthis.dispY = [];\n\tthis.cellLocation = [];\n\tthis.isMoveable = [];\n\tthis.neighbours = [];\n\tthis.radius = [];\n\tthis.radiusSquared = [];\n\n\tif (this.forceConstant < 0.001)\n\t{\n\t\tthis.forceConstant = 0.001;\n\t}\n\n\tthis.forceConstantSquared = this.forceConstant * this.forceConstant;\n\n\t// Create a map of vertices first. This is required for the array of\n\t// arrays called neighbours which holds, for each vertex, a list of\n\t// ints which represents the neighbours cells to that vertex as\n\t// the indices into vertexArray\n\tfor (var i = 0; i < this.vertexArray.length; i++)\n\t{\n\t\tvar vertex = this.vertexArray[i];\n\t\tthis.cellLocation[i] = [];\n\t\t\n\t\t// Set up the mapping from array indices to cells\n\t\tvar id = mxObjectIdentity.get(vertex);\n\t\tthis.indices[id] = i;\n\t\tvar bounds = this.getVertexBounds(vertex);\n\n\t\t// Set the X,Y value of the internal version of the cell to\n\t\t// the center point of the vertex for better positioning\n\t\tvar width = bounds.width;\n\t\tvar height = bounds.height;\n\t\t\n\t\t// Randomize (0, 0) locations\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\t\n\t\tthis.cellLocation[i][0] = x + width / 2.0;\n\t\tthis.cellLocation[i][1] = y + height / 2.0;\n\t\tthis.radius[i] = Math.min(width, height);\n\t\tthis.radiusSquared[i] = this.radius[i] * this.radius[i];\n\t}\n\n\t// Moves cell location back to top-left from center locations used in\n\t// algorithm, resetting the edge points is part of the transaction\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = 0; i < n; i++)\n\t\t{\n\t\t\tthis.dispX[i] = 0;\n\t\t\tthis.dispY[i] = 0;\n\t\t\tthis.isMoveable[i] = this.isVertexMovable(this.vertexArray[i]);\n\n\t\t\t// Get lists of neighbours to all vertices, translate the cells\n\t\t\t// obtained in indices into vertexArray and store as an array\n\t\t\t// against the orginial cell index\n\t\t\tvar edges = this.graph.getConnections(this.vertexArray[i], parent);\n\t\t\tvar cells = this.graph.getOpposites(edges, this.vertexArray[i]);\n\t\t\tthis.neighbours[i] = [];\n\n\t\t\tfor (var j = 0; j < cells.length; j++)\n\t\t\t{\n\t\t\t\t// Resets the points on the traversed edge\n\t\t\t\tif (this.resetEdges)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.resetEdge(edges[j]);\n\t\t\t\t}\n\n\t\t\t    if (this.disableEdgeStyle)\n\t\t\t    {\n\t\t\t    \tthis.setEdgeStyleEnabled(edges[j], false);\n\t\t\t    }\n\n\t\t\t\t// Looks the cell up in the indices dictionary\n\t\t\t\tvar id = mxObjectIdentity.get(cells[j]);\n\t\t\t\tvar index = this.indices[id];\n\n\t\t\t\t// Check the connected cell in part of the vertex list to be\n\t\t\t\t// acted on by this layout\n\t\t\t\tif (index != null)\n\t\t\t\t{\n\t\t\t\t\tthis.neighbours[i][j] = index;\n\t\t\t\t}\n\n\t\t\t\t// Else if index of the other cell doesn't correspond to\n\t\t\t\t// any cell listed to be acted upon in this layout. Set\n\t\t\t\t// the index to the value of this vertex (a dummy self-loop)\n\t\t\t\t// so the attraction force of the edge is not calculated\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.neighbours[i][j] = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.temperature = this.initialTemp;\n\n\t\t// If max number of iterations has not been set, guess it\n\t\tif (this.maxIterations == 0)\n\t\t{\n\t\t\tthis.maxIterations = 20 * Math.sqrt(n);\n\t\t}\n\t\t\n\t\t// Main iteration loop\n\t\tfor (this.iteration = 0; this.iteration < this.maxIterations; this.iteration++)\n\t\t{\n\t\t\tif (!this.allowedToRun)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// Calculate repulsive forces on all vertices\n\t\t\tthis.calcRepulsion();\n\n\t\t\t// Calculate attractive forces through edges\n\t\t\tthis.calcAttraction();\n\n\t\t\tthis.calcPositions();\n\t\t\tthis.reduceTemperature();\n\t\t}\n\n\t\tvar minx = null;\n\t\tvar miny = null;\n\t\t\n\t\tfor (var i = 0; i < this.vertexArray.length; i++)\n\t\t{\n\t\t\tvar vertex = this.vertexArray[i];\n\t\t\t\n\t\t\tif (this.isVertexMovable(vertex))\n\t\t\t{\n\t\t\t\tvar bounds = this.getVertexBounds(vertex);\n\t\t\t\t\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tthis.cellLocation[i][0] -= bounds.width / 2.0;\n\t\t\t\t\tthis.cellLocation[i][1] -= bounds.height / 2.0;\n\t\t\t\t\t\n\t\t\t\t\tvar x = this.graph.snap(Math.round(this.cellLocation[i][0]));\n\t\t\t\t\tvar y = this.graph.snap(Math.round(this.cellLocation[i][1]));\n\t\t\t\t\t\n\t\t\t\t\tthis.setVertexLocation(vertex, x, y);\n\t\t\t\t\t\n\t\t\t\t\tif (minx == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tminx = x;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tminx = Math.min(minx, x);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (miny == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tminy = y;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tminy = Math.min(miny, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Modifies the cloned geometries in-place. Not needed\n\t\t// to clone the geometries again as we're in the same\n\t\t// undoable change.\n\t\tvar dx = -(minx || 0) + 1;\n\t\tvar dy = -(miny || 0) + 1;\n\t\t\n\t\tif (initialBounds != null)\n\t\t{\n\t\t\tdx += initialBounds.x;\n\t\t\tdy += initialBounds.y;\n\t\t}\n\t\t\n\t\tthis.graph.moveCells(this.vertexArray, dx, dy);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: calcPositions\n * \n * Takes the displacements calculated for each cell and applies them to the\n * local cache of cell positions. Limits the displacement to the current\n * temperature.\n */\nmxFastOrganicLayout.prototype.calcPositions = function()\n{\n\tfor (var index = 0; index < this.vertexArray.length; index++)\n\t{\n\t\tif (this.isMoveable[index])\n\t\t{\n\t\t\t// Get the distance of displacement for this node for this\n\t\t\t// iteration\n\t\t\tvar deltaLength = Math.sqrt(this.dispX[index] * this.dispX[index] +\n\t\t\t\tthis.dispY[index] * this.dispY[index]);\n\n\t\t\tif (deltaLength < 0.001)\n\t\t\t{\n\t\t\t\tdeltaLength = 0.001;\n\t\t\t}\n\n\t\t\t// Scale down by the current temperature if less than the\n\t\t\t// displacement distance\n\t\t\tvar newXDisp = this.dispX[index] / deltaLength\n\t\t\t\t* Math.min(deltaLength, this.temperature);\n\n\t\t\tvar newYDisp = this.dispY[index] / deltaLength\n\t\t\t\t* Math.min(deltaLength, this.temperature);\n\n\t\t\t// reset displacements\n\t\t\tthis.dispX[index] = 0;\n\t\t\tthis.dispY[index] = 0;\n\n\t\t\t// Update the cached cell locations\n\t\t\tthis.cellLocation[index][0] += newXDisp;\n\t\t\tthis.cellLocation[index][1] += newYDisp;\n\t\t}\n\t}\n};\n\n/**\n * Function: calcAttraction\n * \n * Calculates the attractive forces between all laid out nodes linked by\n * edges\n */\nmxFastOrganicLayout.prototype.calcAttraction = function()\n{\n\t// Check the neighbours of each vertex and calculate the attractive\n\t// force of the edge connecting them\n\tfor (var i = 0; i < this.vertexArray.length; i++)\n\t{\n\t\tfor (var k = 0; k < this.neighbours[i].length; k++)\n\t\t{\n\t\t\t// Get the index of the othe cell in the vertex array\n\t\t\tvar j = this.neighbours[i][k];\n\t\t\t\n\t\t\t// Do not proceed self-loops\n\t\t\tif (i != j &&\n\t\t\t\tthis.isMoveable[i] &&\n\t\t\t\tthis.isMoveable[j])\n\t\t\t{\n\t\t\t\tvar xDelta = this.cellLocation[i][0] - this.cellLocation[j][0];\n\t\t\t\tvar yDelta = this.cellLocation[i][1] - this.cellLocation[j][1];\n\n\t\t\t\t// The distance between the nodes\n\t\t\t\tvar deltaLengthSquared = xDelta * xDelta + yDelta\n\t\t\t\t\t\t* yDelta - this.radiusSquared[i] - this.radiusSquared[j];\n\n\t\t\t\tif (deltaLengthSquared < this.minDistanceLimitSquared)\n\t\t\t\t{\n\t\t\t\t\tdeltaLengthSquared = this.minDistanceLimitSquared;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar deltaLength = Math.sqrt(deltaLengthSquared);\n\t\t\t\tvar force = (deltaLengthSquared) / this.forceConstant;\n\n\t\t\t\tvar displacementX = (xDelta / deltaLength) * force;\n\t\t\t\tvar displacementY = (yDelta / deltaLength) * force;\n\t\t\t\t\n\t\t\t\tthis.dispX[i] -= displacementX;\n\t\t\t\tthis.dispY[i] -= displacementY;\n\t\t\t\t\n\t\t\t\tthis.dispX[j] += displacementX;\n\t\t\t\tthis.dispY[j] += displacementY;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: calcRepulsion\n * \n * Calculates the repulsive forces between all laid out nodes\n */\nmxFastOrganicLayout.prototype.calcRepulsion = function()\n{\n\tvar vertexCount = this.vertexArray.length;\n\n\tfor (var i = 0; i < vertexCount; i++)\n\t{\n\t\tfor (var j = i; j < vertexCount; j++)\n\t\t{\n\t\t\t// Exits if the layout is no longer allowed to run\n\t\t\tif (!this.allowedToRun)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (j != i &&\n\t\t\t\tthis.isMoveable[i] &&\n\t\t\t\tthis.isMoveable[j])\n\t\t\t{\n\t\t\t\tvar xDelta = this.cellLocation[i][0] - this.cellLocation[j][0];\n\t\t\t\tvar yDelta = this.cellLocation[i][1] - this.cellLocation[j][1];\n\n\t\t\t\tif (xDelta == 0)\n\t\t\t\t{\n\t\t\t\t\txDelta = 0.01 + Math.random();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (yDelta == 0)\n\t\t\t\t{\n\t\t\t\t\tyDelta = 0.01 + Math.random();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Distance between nodes\n\t\t\t\tvar deltaLength = Math.sqrt((xDelta * xDelta)\n\t\t\t\t\t\t+ (yDelta * yDelta));\n\t\t\t\tvar deltaLengthWithRadius = deltaLength - this.radius[i]\n\t\t\t\t\t\t- this.radius[j];\n\n\t\t\t\tif (deltaLengthWithRadius > this.maxDistanceLimit)\n\t\t\t\t{\n\t\t\t\t\t// Ignore vertices too far apart\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (deltaLengthWithRadius < this.minDistanceLimit)\n\t\t\t\t{\n\t\t\t\t\tdeltaLengthWithRadius = this.minDistanceLimit;\n\t\t\t\t}\n\n\t\t\t\tvar force = this.forceConstantSquared / deltaLengthWithRadius;\n\n\t\t\t\tvar displacementX = (xDelta / deltaLength) * force;\n\t\t\t\tvar displacementY = (yDelta / deltaLength) * force;\n\t\t\t\t\n\t\t\t\tthis.dispX[i] += displacementX;\n\t\t\t\tthis.dispY[i] += displacementY;\n\n\t\t\t\tthis.dispX[j] -= displacementX;\n\t\t\t\tthis.dispY[j] -= displacementY;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: reduceTemperature\n * \n * Reduces the temperature of the layout from an initial setting in a linear\n * fashion to zero.\n */\nmxFastOrganicLayout.prototype.reduceTemperature = function()\n{\n\tthis.temperature = this.initialTemp * (1.0 - this.iteration / this.maxIterations);\n};\n\n__mxOutput.mxFastOrganicLayout = typeof mxFastOrganicLayout !== 'undefined' ? mxFastOrganicLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCircleLayout\n * \n * Extends <mxGraphLayout> to implement a circluar layout for a given radius.\n * The vertices do not need to be connected for this layout to work and all\n * connections between vertices are not taken into account.\n * \n * Example:\n * \n * (code)\n * var layout = new mxCircleLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCircleLayout\n *\n * Constructs a new circular layout for the specified radius.\n *\n * Arguments:\n * \n * graph - <mxGraph> that contains the cells.\n * radius - Optional radius as an int. Default is 100.\n */\nfunction mxCircleLayout(graph, radius)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.radius = (radius != null) ? radius : 100;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxCircleLayout.prototype = new mxGraphLayout();\nmxCircleLayout.prototype.constructor = mxCircleLayout;\n\n/**\n * Variable: radius\n * \n * Integer specifying the size of the radius. Default is 100.\n */\nmxCircleLayout.prototype.radius = null;\n\n/**\n * Variable: moveCircle\n * \n * Boolean specifying if the circle should be moved to the top,\n * left corner specified by <x0> and <y0>. Default is false.\n */\nmxCircleLayout.prototype.moveCircle = false;\n\n/**\n * Variable: x0\n * \n * Integer specifying the left coordinate of the circle.\n * Default is 0.\n */\nmxCircleLayout.prototype.x0 = 0;\n\n/**\n * Variable: y0\n * \n * Integer specifying the top coordinate of the circle.\n * Default is 0.\n */\nmxCircleLayout.prototype.y0 = 0;\n\n/**\n * Variable: resetEdges\n * \n * Specifies if all edge points of traversed edges should be removed.\n * Default is true.\n */\nmxCircleLayout.prototype.resetEdges = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxCircleLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n */\nmxCircleLayout.prototype.execute = function(parent)\n{\n\tvar model = this.graph.getModel();\n\n\t// Moves the vertices to build a circle. Makes sure the\n\t// radius is large enough for the vertices to not\n\t// overlap\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\t// Gets all vertices inside the parent and finds\n\t\t// the maximum dimension of the largest vertex\n\t\tvar max = 0;\n\t\tvar top = null;\n\t\tvar left = null;\n\t\tvar vertices = [];\n\t\tvar childCount = model.getChildCount(parent);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar cell = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (!this.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\tvertices.push(cell);\n\t\t\t\tvar bounds = this.getVertexBounds(cell);\n\t\t\t\t\n\t\t\t\tif (top == null)\n\t\t\t\t{\n\t\t\t\t\ttop = bounds.y;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttop = Math.min(top, bounds.y);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (left == null)\n\t\t\t\t{\n\t\t\t\t\tleft = bounds.x;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tleft = Math.min(left, bounds.x);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tmax = Math.max(max, Math.max(bounds.width, bounds.height));\n\t\t\t}\n\t\t\telse if (!this.isEdgeIgnored(cell))\n\t\t\t{\n\t\t\t\t// Resets the points on the traversed edge\n\t\t\t\tif (this.resetEdges)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.resetEdge(cell);\n\t\t\t\t}\n\n\t\t\t    if (this.disableEdgeStyle)\n\t\t\t    {\n\t\t\t    \t\tthis.setEdgeStyleEnabled(cell, false);\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar r = this.getRadius(vertices.length, max);\n\n\t\t// Moves the circle to the specified origin\n\t\tif (this.moveCircle)\n\t\t{\n\t\t\tleft = this.x0;\n\t\t\ttop = this.y0;\n\t\t}\n\t\t\n\t\tthis.circle(vertices, r, left, top);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: getRadius\n * \n * Returns the radius to be used for the given vertex count. Max is the maximum\n * width or height of all vertices in the layout.\n */\nmxCircleLayout.prototype.getRadius = function(count, max)\n{\n\treturn Math.max(count * max / Math.PI, this.radius);\n};\n\n/**\n * Function: circle\n * \n * Executes the circular layout for the specified array\n * of vertices and the given radius. This is called from\n * <execute>.\n */\nmxCircleLayout.prototype.circle = function(vertices, r, left, top)\n{\n\tvar vertexCount = vertices.length;\n\tvar phi = 2 * Math.PI / vertexCount;\n\t\n\tfor (var i = 0; i < vertexCount; i++)\n\t{\n\t\tif (this.isVertexMovable(vertices[i]))\n\t\t{\n\t\t\tthis.setVertexLocation(vertices[i],\n\t\t\t\tMath.round(left + r + r * Math.sin(i * phi)),\n\t\t\t\tMath.round(top + r + r * Math.cos(i * phi)));\n\t\t}\n\t}\n};\n\n__mxOutput.mxCircleLayout = typeof mxCircleLayout !== 'undefined' ? mxCircleLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxParallelEdgeLayout\n * \n * Extends <mxGraphLayout> for arranging parallel edges. This layout works\n * on edges for all pairs of vertices where there is more than one edge\n * connecting the latter.\n * \n * Example:\n * \n * (code)\n * var layout = new mxParallelEdgeLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * To run the layout for the parallel edges of a changed edge only, the\n * following code can be used.\n * \n * (code)\n * var layout = new mxParallelEdgeLayout(graph);\n * \n * graph.addListener(mxEvent.CELL_CONNECTED, function(sender, evt)\n * {\n *   var model = graph.getModel();\n *   var edge = evt.getProperty('edge');\n *   var src = model.getTerminal(edge, true);\n *   var trg = model.getTerminal(edge, false);\n *   \n *   layout.isEdgeIgnored = function(edge2)\n *   {\n *     var src2 = model.getTerminal(edge2, true);\n *     var trg2 = model.getTerminal(edge2, false);\n *     \n *     return !(model.isEdge(edge2) && ((src == src2 && trg == trg2) || (src == trg2 && trg == src2)));\n *   };\n *   \n *   layout.execute(graph.getDefaultParent());\n * });\n * (end)\n * \n * Constructor: mxParallelEdgeLayout\n * \n * Constructs a new parallel edge layout for the specified graph.\n */\nfunction mxParallelEdgeLayout(graph)\n{\n\tmxGraphLayout.call(this, graph);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxParallelEdgeLayout.prototype = new mxGraphLayout();\nmxParallelEdgeLayout.prototype.constructor = mxParallelEdgeLayout;\n\n/**\n * Variable: spacing\n * \n * Defines the spacing between the parallels. Default is 20.\n */\nmxParallelEdgeLayout.prototype.spacing = 20;\n\n/**\n * Variable: checkOverlap\n * \n * Specifies if only overlapping edges should be considered\n * parallel. Default is false.\n */\nmxParallelEdgeLayout.prototype.checkOverlap = false;\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n */\nmxParallelEdgeLayout.prototype.execute = function(parent, cells)\n{\n\tvar lookup = this.findParallels(parent, cells);\n\t\n\tthis.graph.model.beginUpdate();\t\n\ttry\n\t{\n\t\tfor (var i in lookup)\n\t\t{\n\t\t\tvar parallels = lookup[i];\n\n\t\t\tif (parallels.length > 1)\n\t\t\t{\n\t\t\t\tthis.layout(parallels);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.graph.model.endUpdate();\n\t}\n};\n\n/**\n * Function: findParallels\n * \n * Finds the parallel edges in the given parent.\n */\nmxParallelEdgeLayout.prototype.findParallels = function(parent, cells)\n{\n\tvar lookup = [];\n\t\n\tvar addCell = mxUtils.bind(this, function(cell)\n\t{\n\t\tif (!this.isEdgeIgnored(cell))\n\t\t{\n\t\t\tvar id = this.getEdgeId(cell);\n\t\t\t\n\t\t\tif (id != null)\n\t\t\t{\n\t\t\t\tif (lookup[id] == null)\n\t\t\t\t{\n\t\t\t\t\tlookup[id] = [];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlookup[id].push(cell);\n\t\t\t}\n\t\t}\n\t});\n\t\n\tif (cells != null)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\taddCell(cells[i]);\n\t\t}\n\t}\n\telse\n\t{\n\t\tvar model = this.graph.getModel();\n\t\tvar childCount = model.getChildCount(parent);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\taddCell(model.getChildAt(parent, i));\n\t\t}\n\t}\n\t\n\treturn lookup;\n};\n\n/**\n * Function: getEdgeId\n * \n * Returns a unique ID for the given edge. The id is independent of the\n * edge direction and is built using the visible terminal of the given\n * edge.\n */\nmxParallelEdgeLayout.prototype.getEdgeId = function(edge)\n{\n\tvar view = this.graph.getView();\n\t\n\t// Cannot used cached visible terminal because this could be triggered in BEFORE_UNDO\n\tvar src = view.getVisibleTerminal(edge, true);\n\tvar trg = view.getVisibleTerminal(edge, false);\n\tvar pts = '';\n\n\tif (src != null && trg != null)\n\t{\n\t\tsrc = mxObjectIdentity.get(src);\n\t\ttrg = mxObjectIdentity.get(trg);\n\t\t\n\t\tif (this.checkOverlap)\n\t\t{\n\t\t\tvar state = this.graph.view.getState(edge);\n\t\t\t\n\t\t\tif (state != null && state.absolutePoints != null)\n\t\t\t{\n\t\t\t\tvar tmp = [];\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < state.absolutePoints.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar pt = state.absolutePoints[i];\n\t\t\t\t\t\n\t\t\t\t\tif (pt != null)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp.push(pt.x, pt.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpts = tmp.join(',');\n\t\t\t}\n\t\t};\n\t\t\n\t\treturn ((src > trg) ? trg + '-' + src : src + '-' + trg) + pts;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: layout\n * \n * Lays out the parallel edges in the given array.\n */\nmxParallelEdgeLayout.prototype.layout = function(parallels)\n{\n\tvar edge = parallels[0];\n\tvar view = this.graph.getView();\n\tvar model = this.graph.getModel();\n\tvar src = model.getGeometry(view.getVisibleTerminal(edge, true));\n\tvar trg = model.getGeometry(view.getVisibleTerminal(edge, false));\n\t\n\t// Routes multiple loops\n\tif (src == trg)\n\t{\n\t\tvar x0 = src.x + src.width + this.spacing;\n\t\tvar y0 = src.y + src.height / 2;\n\n\t\tfor (var i = 0; i < parallels.length; i++)\n\t\t{\n\t\t\tthis.route(parallels[i], x0, y0);\n\t\t\tx0 += this.spacing;\n\t\t}\n\t}\n\telse if (src != null && trg != null)\n\t{\n\t\t// Routes parallel edges\n\t\tvar scx = src.x + src.width / 2;\n\t\tvar scy = src.y + src.height / 2;\n\t\t\n\t\tvar tcx = trg.x + trg.width / 2;\n\t\tvar tcy = trg.y + trg.height / 2;\n\t\t\n\t\tvar dx = tcx - scx;\n\t\tvar dy = tcy - scy;\n\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\t\n\t\tif (len > 0)\n\t\t{\n\t\t\tvar x0 = scx + dx / 2;\n\t\t\tvar y0 = scy + dy / 2;\n\t\t\t\n\t\t\tvar nx = dy * this.spacing / len;\n\t\t\tvar ny = dx * this.spacing / len;\n\t\t\t\n\t\t\tx0 += nx * (parallels.length - 1) / 2;\n\t\t\ty0 -= ny * (parallels.length - 1) / 2;\n\t\n\t\t\tfor (var i = 0; i < parallels.length; i++)\n\t\t\t{\n\t\t\t\tthis.route(parallels[i], x0, y0);\n\t\t\t\tx0 -= nx;\n\t\t\t\ty0 += ny;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: route\n * \n * Routes the given edge via the given point.\n */\nmxParallelEdgeLayout.prototype.route = function(edge, x, y)\n{\n\tif (this.graph.isCellMovable(edge))\n\t{\n\t\tthis.setEdgePoints(edge, [new mxPoint(x, y)]);\n\t}\n};\n\n__mxOutput.mxParallelEdgeLayout = typeof mxParallelEdgeLayout !== 'undefined' ? mxParallelEdgeLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCompositeLayout\n * \n * Allows to compose multiple layouts into a single layout. The master layout\n * is the layout that handles move operations if another layout than the first\n * element in <layouts> should be used. The <master> layout is not executed as\n * the code assumes that it is part of <layouts>.\n * \n * Example:\n * (code)\n * var first = new mxFastOrganicLayout(graph);\n * var second = new mxParallelEdgeLayout(graph);\n * var layout = new mxCompositeLayout(graph, [first, second], first);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCompositeLayout\n *\n * Constructs a new layout using the given layouts. The graph instance is\n * required for creating the transaction that contains all layouts.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * layouts - Array of <mxGraphLayouts>.\n * master - Optional layout that handles moves. If no layout is given then\n * the first layout of the above array is used to handle moves.\n */\nfunction mxCompositeLayout(graph, layouts, master)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.layouts = layouts;\n\tthis.master = master;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxCompositeLayout.prototype = new mxGraphLayout();\nmxCompositeLayout.prototype.constructor = mxCompositeLayout;\n\t\n/**\n * Variable: layouts\n * \n * Holds the array of <mxGraphLayouts> that this layout contains.\n */\nmxCompositeLayout.prototype.layouts = null;\n\n/**\n * Variable: master\n * \n * Reference to the <mxGraphLayouts> that handles moves. If this is null\n * then the first layout in <layouts> is used.\n */\nmxCompositeLayout.prototype.master = null;\n\n/**\n * Function: moveCell\n * \n * Implements <mxGraphLayout.moveCell> by calling move on <master> or the first\n * layout in <layouts>.\n */\nmxCompositeLayout.prototype.moveCell = function(cell, x, y)\n{\n\tif (this.master != null)\n\t{\n\t\tthis.master.moveCell.apply(this.master, arguments);\n\t}\n\telse\n\t{\n\t\tthis.layouts[0].moveCell.apply(this.layouts[0], arguments);\n\t}\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute> by executing all <layouts> in a\n * single transaction.\n */\nmxCompositeLayout.prototype.execute = function(parent)\n{\n\tvar model = this.graph.getModel();\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = 0; i < this.layouts.length; i++)\n\t\t{\n\t\t\tthis.layouts[i].execute.apply(this.layouts[i], arguments);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n__mxOutput.mxCompositeLayout = typeof mxCompositeLayout !== 'undefined' ? mxCompositeLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEdgeLabelLayout\n * \n * Extends <mxGraphLayout> to implement an edge label layout. This layout\n * makes use of cell states, which means the graph must be validated in\n * a graph view (so that the label bounds are available) before this layout\n * can be executed.\n * \n * Example:\n * \n * (code)\n * var layout = new mxEdgeLabelLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxEdgeLabelLayout\n *\n * Constructs a new edge label layout.\n *\n * Arguments:\n * \n * graph - <mxGraph> that contains the cells.\n */\nfunction mxEdgeLabelLayout(graph, radius)\n{\n\tmxGraphLayout.call(this, graph);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxEdgeLabelLayout.prototype = new mxGraphLayout();\nmxEdgeLabelLayout.prototype.constructor = mxEdgeLabelLayout;\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n */\nmxEdgeLabelLayout.prototype.execute = function(parent)\n{\n\tvar view = this.graph.view;\n\tvar model = this.graph.getModel();\n\t\n\t// Gets all vertices and edges inside the parent\n\tvar edges = [];\n\tvar vertices = [];\n\tvar childCount = model.getChildCount(parent);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar cell = model.getChildAt(parent, i);\n\t\tvar state = view.getState(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tif (!this.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\tvertices.push(state);\n\t\t\t}\n\t\t\telse if (!this.isEdgeIgnored(cell))\n\t\t\t{\n\t\t\t\tedges.push(state);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.placeLabels(vertices, edges);\n};\n\n/**\n * Function: placeLabels\n * \n * Places the labels of the given edges.\n */\nmxEdgeLabelLayout.prototype.placeLabels = function(v, e)\n{\n\tvar model = this.graph.getModel();\n\t\n\t// Moves the vertices to build a circle. Makes sure the\n\t// radius is large enough for the vertices to not\n\t// overlap\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = 0; i < e.length; i++)\n\t\t{\n\t\t\tvar edge = e[i];\n\t\t\t\n\t\t\tif (edge != null && edge.text != null &&\n\t\t\t\tedge.text.boundingBox != null)\n\t\t\t{\n\t\t\t\tfor (var j = 0; j < v.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar vertex = v[j];\n\t\t\t\t\t\n\t\t\t\t\tif (vertex != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.avoid(edge, vertex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: avoid\n * \n * Places the labels of the given edges.\n */\nmxEdgeLabelLayout.prototype.avoid = function(edge, vertex)\n{\n\tvar model = this.graph.getModel();\n\tvar labRect = edge.text.boundingBox;\n\t\n\tif (mxUtils.intersects(labRect, vertex))\n\t{\n\t\tvar dy1 = -labRect.y - labRect.height + vertex.y;\n\t\tvar dy2 = -labRect.y + vertex.y + vertex.height;\n\t\t\n\t\tvar dy = (Math.abs(dy1) < Math.abs(dy2)) ? dy1 : dy2;\n\t\t\n\t\tvar dx1 = -labRect.x - labRect.width + vertex.x;\n\t\tvar dx2 = -labRect.x + vertex.x + vertex.width;\n\t\n\t\tvar dx = (Math.abs(dx1) < Math.abs(dx2)) ? dx1 : dx2;\n\t\t\n\t\tif (Math.abs(dx) < Math.abs(dy))\n\t\t{\n\t\t\tdy = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdx = 0;\n\t\t}\n\t\n\t\tvar g = model.getGeometry(edge.cell);\n\t\t\n\t\tif (g != null)\n\t\t{\n\t\t\tg = g.clone();\n\t\t\t\n\t\t\tif (g.offset != null)\n\t\t\t{\n\t\t\t\tg.offset.x += dx;\n\t\t\t\tg.offset.y += dy;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tg.offset = new mxPoint(dx, dy);\n\t\t\t}\n\t\t\t\n\t\t\tmodel.setGeometry(edge.cell, g);\n\t\t}\n\t}\n};\n\n__mxOutput.mxEdgeLabelLayout = typeof mxEdgeLabelLayout !== 'undefined' ? mxEdgeLabelLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphAbstractHierarchyCell\n * \n * An abstraction of an internal hierarchy node or edge\n * \n * Constructor: mxGraphAbstractHierarchyCell\n *\n * Constructs a new hierarchical layout algorithm.\n */\nfunction mxGraphAbstractHierarchyCell()\n{\n\tthis.x = [];\n\tthis.y = [];\n\tthis.temp = [];\n};\n\n/**\n * Variable: maxRank\n * \n * The maximum rank this cell occupies. Default is -1.\n */\nmxGraphAbstractHierarchyCell.prototype.maxRank = -1;\n\n/**\n * Variable: minRank\n * \n * The minimum rank this cell occupies. Default is -1.\n */\nmxGraphAbstractHierarchyCell.prototype.minRank = -1;\n\n/**\n * Variable: x\n * \n * The x position of this cell for each layer it occupies\n */\nmxGraphAbstractHierarchyCell.prototype.x = null;\n\n/**\n * Variable: y\n * \n * The y position of this cell for each layer it occupies\n */\nmxGraphAbstractHierarchyCell.prototype.y = null;\n\n/**\n * Variable: width\n * \n * The width of this cell. Default is 0.\n */\nmxGraphAbstractHierarchyCell.prototype.width = 0;\n\n/**\n * Variable: height\n * \n * The height of this cell. Default is 0.\n */\nmxGraphAbstractHierarchyCell.prototype.height = 0;\n\n/**\n * Variable: nextLayerConnectedCells\n * \n * A cached version of the cells this cell connects to on the next layer up\n */\nmxGraphAbstractHierarchyCell.prototype.nextLayerConnectedCells = null;\n\n/**\n * Variable: previousLayerConnectedCells\n * \n * A cached version of the cells this cell connects to on the next layer down\n */\nmxGraphAbstractHierarchyCell.prototype.previousLayerConnectedCells = null;\n\n/**\n * Variable: temp\n * \n * Temporary variable for general use. Generally, try to avoid\n * carrying information between stages. Currently, the longest\n * path layering sets temp to the rank position in fixRanks()\n * and the crossing reduction uses this. This meant temp couldn't\n * be used for hashing the nodes in the model dfs and so hashCode\n * was created\n */\nmxGraphAbstractHierarchyCell.prototype.temp = null;\n\n/**\n * Function: getNextLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer up\n */\nmxGraphAbstractHierarchyCell.prototype.getNextLayerConnectedCells = function(layer)\n{\n\treturn null;\n};\n\n/**\n * Function: getPreviousLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer down\n */\nmxGraphAbstractHierarchyCell.prototype.getPreviousLayerConnectedCells = function(layer)\n{\n\treturn null;\n};\n\n/**\n * Function: isEdge\n * \n * Returns whether or not this cell is an edge\n */\nmxGraphAbstractHierarchyCell.prototype.isEdge = function()\n{\n\treturn false;\n};\n\n/**\n * Function: isVertex\n * \n * Returns whether or not this cell is a node\n */\nmxGraphAbstractHierarchyCell.prototype.isVertex = function()\n{\n\treturn false;\n};\n\n/**\n * Function: getGeneralPurposeVariable\n * \n * Gets the value of temp for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.getGeneralPurposeVariable = function(layer)\n{\n\treturn null;\n};\n\n/**\n * Function: setGeneralPurposeVariable\n * \n * Set the value of temp for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.setGeneralPurposeVariable = function(layer, value)\n{\n\treturn null;\n};\n\n/**\n * Function: setX\n * \n * Set the value of x for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.setX = function(layer, value)\n{\n\tif (this.isVertex())\n\t{\n\t\tthis.x[0] = value;\n\t}\n\telse if (this.isEdge())\n\t{\n\t\tthis.x[layer - this.minRank - 1] = value;\n\t}\n};\n\n/**\n * Function: getX\n * \n * Gets the value of x on the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.getX = function(layer)\n{\n\tif (this.isVertex())\n\t{\n\t\treturn this.x[0];\n\t}\n\telse if (this.isEdge())\n\t{\n\t\treturn this.x[layer - this.minRank - 1];\n\t}\n\n\treturn 0.0;\n};\n\n/**\n * Function: setY\n * \n * Set the value of y for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.setY = function(layer, value)\n{\n\tif (this.isVertex())\n\t{\n\t\tthis.y[0] = value;\n\t}\n\telse if (this.isEdge())\n\t{\n\t\tthis.y[layer -this. minRank - 1] = value;\n\t}\n};\n\n__mxOutput.mxGraphAbstractHierarchyCell = typeof mxGraphAbstractHierarchyCell !== 'undefined' ? mxGraphAbstractHierarchyCell : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHierarchyNode\n * \n * An abstraction of a hierarchical edge for the hierarchy layout\n * \n * Constructor: mxGraphHierarchyNode\n *\n * Constructs an internal node to represent the specified real graph cell\n *\n * Arguments:\n * \n * cell - the real graph cell this node represents\n */\nfunction mxGraphHierarchyNode(cell)\n{\n\tmxGraphAbstractHierarchyCell.apply(this, arguments);\n\tthis.cell = cell;\n\tthis.id = mxObjectIdentity.get(cell);\n\tthis.connectsAsTarget = [];\n\tthis.connectsAsSource = [];\n};\n\n/**\n * Extends mxGraphAbstractHierarchyCell.\n */\nmxGraphHierarchyNode.prototype = new mxGraphAbstractHierarchyCell();\nmxGraphHierarchyNode.prototype.constructor = mxGraphHierarchyNode;\n\n/**\n * Variable: cell\n * \n * The graph cell this object represents.\n */\nmxGraphHierarchyNode.prototype.cell = null;\n\n/**\n * Variable: id\n * \n * The object identity of the wrapped cell\n */\nmxGraphHierarchyNode.prototype.id = null;\n\n/**\n * Variable: connectsAsTarget\n * \n * Collection of hierarchy edges that have this node as a target\n */\nmxGraphHierarchyNode.prototype.connectsAsTarget = null;\n\n/**\n * Variable: connectsAsSource\n * \n * Collection of hierarchy edges that have this node as a source\n */\nmxGraphHierarchyNode.prototype.connectsAsSource = null;\n\n/**\n * Variable: hashCode\n * \n * Assigns a unique hashcode for each node. Used by the model dfs instead\n * of copying HashSets\n */\nmxGraphHierarchyNode.prototype.hashCode = false;\n\n/**\n * Function: getRankValue\n * \n * Returns the integer value of the layer that this node resides in\n */\nmxGraphHierarchyNode.prototype.getRankValue = function(layer)\n{\n\treturn this.maxRank;\n};\n\n/**\n * Function: getNextLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer up\n */\nmxGraphHierarchyNode.prototype.getNextLayerConnectedCells = function(layer)\n{\n\tif (this.nextLayerConnectedCells == null)\n\t{\n\t\tthis.nextLayerConnectedCells = [];\n\t\tthis.nextLayerConnectedCells[0] = [];\n\t\t\n\t\tfor (var i = 0; i < this.connectsAsTarget.length; i++)\n\t\t{\n\t\t\tvar edge = this.connectsAsTarget[i];\n\n\t\t\tif (edge.maxRank == -1 || edge.maxRank == layer + 1)\n\t\t\t{\n\t\t\t\t// Either edge is not in any rank or\n\t\t\t\t// no dummy nodes in edge, add node of other side of edge\n\t\t\t\tthis.nextLayerConnectedCells[0].push(edge.source);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Edge spans at least two layers, add edge\n\t\t\t\tthis.nextLayerConnectedCells[0].push(edge);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.nextLayerConnectedCells[0];\n};\n\n/**\n * Function: getPreviousLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer down\n */\nmxGraphHierarchyNode.prototype.getPreviousLayerConnectedCells = function(layer)\n{\n\tif (this.previousLayerConnectedCells == null)\n\t{\n\t\tthis.previousLayerConnectedCells = [];\n\t\tthis.previousLayerConnectedCells[0] = [];\n\t\t\n\t\tfor (var i = 0; i < this.connectsAsSource.length; i++)\n\t\t{\n\t\t\tvar edge = this.connectsAsSource[i];\n\n\t\t\tif (edge.minRank == -1 || edge.minRank == layer - 1)\n\t\t\t{\n\t\t\t\t// No dummy nodes in edge, add node of other side of edge\n\t\t\t\tthis.previousLayerConnectedCells[0].push(edge.target);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Edge spans at least two layers, add edge\n\t\t\t\tthis.previousLayerConnectedCells[0].push(edge);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.previousLayerConnectedCells[0];\n};\n\n/**\n * Function: isVertex\n * \n * Returns true.\n */\nmxGraphHierarchyNode.prototype.isVertex = function()\n{\n\treturn true;\n};\n\n/**\n * Function: getGeneralPurposeVariable\n * \n * Gets the value of temp for the specified layer\n */\nmxGraphHierarchyNode.prototype.getGeneralPurposeVariable = function(layer)\n{\n\treturn this.temp[0];\n};\n\n/**\n * Function: setGeneralPurposeVariable\n * \n * Set the value of temp for the specified layer\n */\nmxGraphHierarchyNode.prototype.setGeneralPurposeVariable = function(layer, value)\n{\n\tthis.temp[0] = value;\n};\n\n/**\n * Function: isAncestor\n */\nmxGraphHierarchyNode.prototype.isAncestor = function(otherNode)\n{\n\t// Firstly, the hash code of this node needs to be shorter than the\n\t// other node\n\tif (otherNode != null && this.hashCode != null && otherNode.hashCode != null\n\t\t\t&& this.hashCode.length < otherNode.hashCode.length)\n\t{\n\t\tif (this.hashCode == otherNode.hashCode)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\tif (this.hashCode == null || this.hashCode == null)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\t// Secondly, this hash code must match the start of the other\n\t\t// node's hash code. Arrays.equals cannot be used here since\n\t\t// the arrays are different length, and we do not want to\n\t\t// perform another array copy.\n\t\tfor (var i = 0; i < this.hashCode.length; i++)\n\t\t{\n\t\t\tif (this.hashCode[i] != otherNode.hashCode[i])\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n/**\n * Function: getCoreCell\n * \n * Gets the core vertex associated with this wrapper\n */\nmxGraphHierarchyNode.prototype.getCoreCell = function()\n{\n\treturn this.cell;\n};\n\n__mxOutput.mxGraphHierarchyNode = typeof mxGraphHierarchyNode !== 'undefined' ? mxGraphHierarchyNode : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHierarchyEdge\n * \n * An abstraction of a hierarchical edge for the hierarchy layout\n * \n * Constructor: mxGraphHierarchyEdge\n *\n * Constructs a hierarchy edge\n *\n * Arguments:\n * \n * edges - a list of real graph edges this abstraction represents\n */\nfunction mxGraphHierarchyEdge(edges)\n{\n\tmxGraphAbstractHierarchyCell.apply(this, arguments);\n\tthis.edges = edges;\n\tthis.ids = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tthis.ids.push(mxObjectIdentity.get(edges[i]));\n\t}\n};\n\n/**\n * Extends mxGraphAbstractHierarchyCell.\n */\nmxGraphHierarchyEdge.prototype = new mxGraphAbstractHierarchyCell();\nmxGraphHierarchyEdge.prototype.constructor = mxGraphHierarchyEdge;\n\n/**\n * Variable: edges\n * \n * The graph edge(s) this object represents. Parallel edges are all grouped\n * together within one hierarchy edge.\n */\nmxGraphHierarchyEdge.prototype.edges = null;\n\n/**\n * Variable: ids\n * \n * The object identities of the wrapped cells\n */\nmxGraphHierarchyEdge.prototype.ids = null;\n\n/**\n * Variable: source\n * \n * The node this edge is sourced at\n */\nmxGraphHierarchyEdge.prototype.source = null;\n\n/**\n * Variable: target\n * \n * The node this edge targets\n */\nmxGraphHierarchyEdge.prototype.target = null;\n\n/**\n * Variable: isReversed\n * \n * Whether or not the direction of this edge has been reversed\n * internally to create a DAG for the hierarchical layout\n */\nmxGraphHierarchyEdge.prototype.isReversed = false;\n\n/**\n * Function: invert\n * \n * Inverts the direction of this internal edge(s)\n */\nmxGraphHierarchyEdge.prototype.invert = function(layer)\n{\n\tvar temp = this.source;\n\tthis.source = this.target;\n\tthis.target = temp;\n\tthis.isReversed = !this.isReversed;\n};\n\n/**\n * Function: getNextLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer up\n */\nmxGraphHierarchyEdge.prototype.getNextLayerConnectedCells = function(layer)\n{\n\tif (this.nextLayerConnectedCells == null)\n\t{\n\t\tthis.nextLayerConnectedCells = [];\n\t\t\n\t\tfor (var i = 0; i < this.temp.length; i++)\n\t\t{\n\t\t\tthis.nextLayerConnectedCells[i] = [];\n\t\t\t\n\t\t\tif (i == this.temp.length - 1)\n\t\t\t{\n\t\t\t\tthis.nextLayerConnectedCells[i].push(this.source);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.nextLayerConnectedCells[i].push(this);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn this.nextLayerConnectedCells[layer - this.minRank - 1];\n};\n\n/**\n * Function: getPreviousLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer down\n */\nmxGraphHierarchyEdge.prototype.getPreviousLayerConnectedCells = function(layer)\n{\n\tif (this.previousLayerConnectedCells == null)\n\t{\n\t\tthis.previousLayerConnectedCells = [];\n\n\t\tfor (var i = 0; i < this.temp.length; i++)\n\t\t{\n\t\t\tthis.previousLayerConnectedCells[i] = [];\n\t\t\t\n\t\t\tif (i == 0)\n\t\t\t{\n\t\t\t\tthis.previousLayerConnectedCells[i].push(this.target);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.previousLayerConnectedCells[i].push(this);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.previousLayerConnectedCells[layer - this.minRank - 1];\n};\n\n/**\n * Function: isEdge\n * \n * Returns true.\n */\nmxGraphHierarchyEdge.prototype.isEdge = function()\n{\n\treturn true;\n};\n\n/**\n * Function: getGeneralPurposeVariable\n * \n * Gets the value of temp for the specified layer\n */\nmxGraphHierarchyEdge.prototype.getGeneralPurposeVariable = function(layer)\n{\n\treturn this.temp[layer - this.minRank - 1];\n};\n\n/**\n * Function: setGeneralPurposeVariable\n * \n * Set the value of temp for the specified layer\n */\nmxGraphHierarchyEdge.prototype.setGeneralPurposeVariable = function(layer, value)\n{\n\tthis.temp[layer - this.minRank - 1] = value;\n};\n\n/**\n * Function: getCoreCell\n * \n * Gets the first core edge associated with this wrapper\n */\nmxGraphHierarchyEdge.prototype.getCoreCell = function()\n{\n\tif (this.edges != null && this.edges.length > 0)\n\t{\n\t\treturn this.edges[0];\n\t}\n\t\n\treturn null;\n};\n\n__mxOutput.mxGraphHierarchyEdge = typeof mxGraphHierarchyEdge !== 'undefined' ? mxGraphHierarchyEdge : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHierarchyModel\n *\n * Internal model of a hierarchical graph. This model stores nodes and edges\n * equivalent to the real graph nodes and edges, but also stores the rank of the\n * cells, the order within the ranks and the new candidate locations of cells.\n * The internal model also reverses edge direction were appropriate , ignores\n * self-loop and groups parallels together under one edge object.\n *\n * Constructor: mxGraphHierarchyModel\n *\n * Creates an internal ordered graph model using the vertices passed in. If\n * there are any, leftward edge need to be inverted in the internal model\n *\n * Arguments:\n *\n * graph - the facade describing the graph to be operated on\n * vertices - the vertices for this hierarchy\n * ordered - whether or not the vertices are already ordered\n * deterministic - whether or not this layout should be deterministic on each\n * tightenToSource - whether or not to tighten vertices towards the sources\n * scanRanksFromSinks - Whether rank assignment is from the sinks or sources.\n * usage\n */\nfunction mxGraphHierarchyModel(layout, vertices, roots, parent, tightenToSource)\n{\n\tvar graph = layout.getGraph();\n\tthis.tightenToSource = tightenToSource;\n\tthis.roots = roots;\n\tthis.parent = parent;\n\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly\n\tthis.vertexMapper = new mxDictionary();\n\tthis.edgeMapper = new mxDictionary();\n\tthis.maxRank = 0;\n\tvar internalVertices = [];\n\n\tif (vertices == null)\n\t{\n\t\tvertices = this.graph.getChildVertices(parent);\n\t}\n\n\tthis.maxRank = this.SOURCESCANSTARTRANK;\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly. Guess size by number\n\t// of edges is roughly same as number of vertices.\n\tthis.createInternalCells(layout, vertices, internalVertices);\n\n\t// Go through edges set their sink values. Also check the\n\t// ordering if and invert edges if necessary\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tvar edges = internalVertices[i].connectsAsSource;\n\n\t\tfor (var j = 0; j < edges.length; j++)\n\t\t{\n\t\t\tvar internalEdge = edges[j];\n\t\t\tvar realEdges = internalEdge.edges;\n\n\t\t\t// Only need to process the first real edge, since\n\t\t\t// all the edges connect to the same other vertex\n\t\t\tif (realEdges != null && realEdges.length > 0)\n\t\t\t{\n\t\t\t\tvar realEdge = realEdges[0];\n\t\t\t\tvar targetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\trealEdge, false);\n\t\t\t\tvar internalTargetCell = this.vertexMapper.get(targetCell);\n\n\t\t\t\tif (internalVertices[i] == internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\t// If there are parallel edges going between two vertices and not all are in the same direction\n\t\t\t\t\t// you can have navigated across one direction when doing the cycle reversal that isn't the same\n\t\t\t\t\t// direction as the first real edge in the array above. When that happens the if above catches\n\t\t\t\t\t// that and we correct the target cell before continuing.\n\t\t\t\t\t// This branch only detects this single case\n\t\t\t\t\ttargetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\t\trealEdge, true);\n\t\t\t\t\tinternalTargetCell = this.vertexMapper.get(targetCell);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (internalTargetCell != null\n\t\t\t\t\t\t&& internalVertices[i] != internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\tinternalEdge.target = internalTargetCell;\n\n\t\t\t\t\tif (internalTargetCell.connectsAsTarget.length == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mxUtils.indexOf(internalTargetCell.connectsAsTarget, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Use the temp variable in the internal nodes to mark this\n\t\t// internal vertex as having been visited.\n\t\tinternalVertices[i].temp[0] = 1;\n\t}\n};\n\n/**\n * Variable: maxRank\n *\n * Stores the largest rank number allocated\n */\nmxGraphHierarchyModel.prototype.maxRank = null;\n\n/**\n * Variable: vertexMapper\n *\n * Map from graph vertices to internal model nodes.\n */\nmxGraphHierarchyModel.prototype.vertexMapper = null;\n\n/**\n * Variable: edgeMapper\n *\n * Map from graph edges to internal model edges\n */\nmxGraphHierarchyModel.prototype.edgeMapper = null;\n\n/**\n * Variable: ranks\n *\n * Mapping from rank number to actual rank\n */\nmxGraphHierarchyModel.prototype.ranks = null;\n\n/**\n * Variable: roots\n *\n * Store of roots of this hierarchy model, these are real graph cells, not\n * internal cells\n */\nmxGraphHierarchyModel.prototype.roots = null;\n\n/**\n * Variable: parent\n *\n * The parent cell whose children are being laid out\n */\nmxGraphHierarchyModel.prototype.parent = null;\n\n/**\n * Variable: dfsCount\n *\n * Count of the number of times the ancestor dfs has been used.\n */\nmxGraphHierarchyModel.prototype.dfsCount = 0;\n\n/**\n * Variable: SOURCESCANSTARTRANK\n *\n * High value to start source layering scan rank value from.\n */\nmxGraphHierarchyModel.prototype.SOURCESCANSTARTRANK = 100000000;\n\n/**\n * Variable: tightenToSource\n *\n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells.\n */\nmxGraphHierarchyModel.prototype.tightenToSource = false;\n\n/**\n * Function: createInternalCells\n *\n * Creates all edges in the internal model\n *\n * Parameters:\n *\n * layout - Reference to the <mxHierarchicalLayout> algorithm.\n * vertices - Array of <mxCells> that represent the vertices whom are to\n * have an internal representation created.\n * internalVertices - The array of <mxGraphHierarchyNodes> to have their\n * information filled in using the real vertices.\n */\nmxGraphHierarchyModel.prototype.createInternalCells = function(layout, vertices, internalVertices)\n{\n\tvar graph = layout.getGraph();\n\n\t// Create internal edges\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tinternalVertices[i] = new mxGraphHierarchyNode(vertices[i]);\n\t\tthis.vertexMapper.put(vertices[i], internalVertices[i]);\n\n\t\t// If the layout is deterministic, order the cells\n\t\t//List outgoingCells = graph.getNeighbours(vertices[i], deterministic);\n\t\tvar conns = layout.getEdges(vertices[i]);\n\t\tinternalVertices[i].connectsAsSource = [];\n\n\t\t// Create internal edges, but don't do any rank assignment yet\n\t\t// First use the information from the greedy cycle remover to\n\t\t// invert the leftward edges internally\n\t\tfor (var j = 0; j < conns.length; j++)\n\t\t{\n\t\t\tvar cell = layout.getVisibleTerminal(conns[j], false);\n\n\t\t\t// Looking for outgoing edges only\n\t\t\tif (cell != vertices[i] && layout.graph.model.isVertex(cell) &&\n\t\t\t\t\t!layout.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\t// We process all edge between this source and its targets\n\t\t\t\t// If there are edges going both ways, we need to collect\n\t\t\t\t// them all into one internal edges to avoid looping problems\n\t\t\t\t// later. We assume this direction (source -> target) is the \n\t\t\t\t// natural direction if at least half the edges are going in\n\t\t\t\t// that direction.\n\n\t\t\t\t// The check below for edges[0] being in the vertex mapper is\n\t\t\t\t// in case we've processed this the other way around\n\t\t\t\t// (target -> source) and the number of edges in each direction\n\t\t\t\t// are the same. All the graph edges will have been assigned to\n\t\t\t\t// an internal edge going the other way, so we don't want to \n\t\t\t\t// process them again\n\t\t\t\tvar undirectedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, false);\n\t\t\t\tvar directedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, true);\n\t\t\t\t\n\t\t\t\tif (undirectedEdges != null &&\n\t\t\t\t\t\tundirectedEdges.length > 0 &&\n\t\t\t\t\t\tthis.edgeMapper.get(undirectedEdges[0]) == null &&\n\t\t\t\t\t\tdirectedEdges.length * 2 >= undirectedEdges.length)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = new mxGraphHierarchyEdge(undirectedEdges);\n\n\t\t\t\t\tfor (var k = 0; k < undirectedEdges.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar edge = undirectedEdges[k];\n\t\t\t\t\t\tthis.edgeMapper.put(edge, internalEdge);\n\n\t\t\t\t\t\t// Resets all point on the edge and disables the edge style\n\t\t\t\t\t\t// without deleting it from the cell style\n\t\t\t\t\t\tgraph.resetEdge(edge);\n\n\t\t\t\t\t    if (layout.disableEdgeStyle)\n\t\t\t\t\t    {\n\t\t\t\t\t    \tlayout.setEdgeStyleEnabled(edge, false);\n\t\t\t\t\t    \tlayout.setOrthogonalEdge(edge,true);\n\t\t\t\t\t    }\n\t\t\t\t\t}\n\n\t\t\t\t\tinternalEdge.source = internalVertices[i];\n\n\t\t\t\t\tif (mxUtils.indexOf(internalVertices[i].connectsAsSource, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalVertices[i].connectsAsSource.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Ensure temp variable is cleared from any previous use\n\t\tinternalVertices[i].temp[0] = 0;\n\t}\n};\n\n/**\n * Function: initialRank\n *\n * Basic determination of minimum layer ranking by working from from sources\n * or sinks and working through each node in the relevant edge direction.\n * Starting at the sinks is basically a longest path layering algorithm.\n*/\nmxGraphHierarchyModel.prototype.initialRank = function()\n{\n\tvar startNodes = [];\n\n\tif (this.roots != null)\n\t{\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar internalNode = this.vertexMapper.get(this.roots[i]);\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tstartNodes.push(internalNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar internalNodes = this.vertexMapper.getValues();\n\t\n\tfor (var i=0; i < internalNodes.length; i++)\n\t{\n\t\t// Mark the node as not having had a layer assigned\n\t\tinternalNodes[i].temp[0] = -1;\n\t}\n\n\tvar startNodesCopy = startNodes.slice();\n\n\twhile (startNodes.length > 0)\n\t{\n\t\tvar internalNode = startNodes[0];\n\t\tvar layerDeterminingEdges;\n\t\tvar edgesToBeMarked;\n\n\t\tlayerDeterminingEdges = internalNode.connectsAsTarget;\n\t\tedgesToBeMarked = internalNode.connectsAsSource;\n\n\t\t// flag to keep track of whether or not all layer determining\n\t\t// edges have been scanned\n\t\tvar allEdgesScanned = true;\n\n\t\t// Work out the layer of this node from the layer determining\n\t\t// edges. The minimum layer number of any node connected by one of\n\t\t// the layer determining edges variable\n\t\tvar minimumLayer = this.SOURCESCANSTARTRANK;\n\n\t\tfor (var i = 0; i < layerDeterminingEdges.length; i++)\n\t\t{\n\t\t\tvar internalEdge = layerDeterminingEdges[i];\n\n\t\t\tif (internalEdge.temp[0] == 5270620)\n\t\t\t{\n\t\t\t\t// This edge has been scanned, get the layer of the\n\t\t\t\t// node on the other end\n\t\t\t\tvar otherNode = internalEdge.source;\n\t\t\t\tminimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tallEdgesScanned = false;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If all edge have been scanned, assign the layer, mark all\n\t\t// edges in the other direction and remove from the nodes list\n\t\tif (allEdgesScanned)\n\t\t{\n\t\t\tinternalNode.temp[0] = minimumLayer;\n\t\t\tthis.maxRank = Math.min(this.maxRank, minimumLayer);\n\n\t\t\tif (edgesToBeMarked != null)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < edgesToBeMarked.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = edgesToBeMarked[i];\n\n\t\t\t\t\t// Assign unique stamp ( y/m/d/h )\n\t\t\t\t\tinternalEdge.temp[0] = 5270620;\n\n\t\t\t\t\t// Add node on other end of edge to LinkedList of\n\t\t\t\t\t// nodes to be analysed\n\t\t\t\t\tvar otherNode = internalEdge.target;\n\n\t\t\t\t\t// Only add node if it hasn't been assigned a layer\n\t\t\t\t\tif (otherNode.temp[0] == -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tstartNodes.push(otherNode);\n\n\t\t\t\t\t\t// Mark this other node as neither being\n\t\t\t\t\t\t// unassigned nor assigned so it isn't\n\t\t\t\t\t\t// added to this list again, but it's\n\t\t\t\t\t\t// layer isn't used in any calculation.\n\t\t\t\t\t\totherNode.temp[0] = -2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstartNodes.shift();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Not all the edges have been scanned, get to the back of\n\t\t\t// the class and put the dunces cap on\n\t\t\tvar removedCell = startNodes.shift();\n\t\t\tstartNodes.push(internalNode);\n\n\t\t\tif (removedCell == internalNode && startNodes.length == 1)\n\t\t\t{\n\t\t\t\t// This is an error condition, we can't get out of\n\t\t\t\t// this loop. It could happen for more than one node\n\t\t\t\t// but that's a lot harder to detect. Log the error\n\t\t\t\t// TODO make log comment\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize the ranks down from their large starting value to place\n\t// at least 1 sink on layer 0\n\tfor (var i=0; i < internalNodes.length; i++)\n\t{\n\t\t// Mark the node as not having had a layer assigned\n\t\tinternalNodes[i].temp[0] -= this.maxRank;\n\t}\n\t\n\t// Tighten the rank 0 nodes as far as possible\n\tfor ( var i = 0; i < startNodesCopy.length; i++)\n\t{\n\t\tvar internalNode = startNodesCopy[i];\n\t\tvar currentMaxLayer = 0;\n\t\tvar layerDeterminingEdges = internalNode.connectsAsSource;\n\n\t\tfor ( var j = 0; j < layerDeterminingEdges.length; j++)\n\t\t{\n\t\t\tvar internalEdge = layerDeterminingEdges[j];\n\t\t\tvar otherNode = internalEdge.target;\n\t\t\tinternalNode.temp[0] = Math.max(currentMaxLayer,\n\t\t\t\t\totherNode.temp[0] + 1);\n\t\t\tcurrentMaxLayer = internalNode.temp[0];\n\t\t}\n\t}\n\t\n\t// Reset the maxRank to that which would be expected for a from-sink\n\t// scan\n\tthis.maxRank = this.SOURCESCANSTARTRANK - this.maxRank;\n};\n\n/**\n * Function: fixRanks\n *\n * Fixes the layer assignments to the values stored in the nodes. Also needs\n * to create dummy nodes for edges that cross layers.\n */\nmxGraphHierarchyModel.prototype.fixRanks = function()\n{\n\tvar rankList = [];\n\tthis.ranks = [];\n\n\tfor (var i = 0; i < this.maxRank + 1; i++)\n\t{\n\t\trankList[i] = [];\n\t\tthis.ranks[i] = rankList[i];\n\t}\n\n\t// Perform a DFS to obtain an initial ordering for each rank.\n\t// Without doing this you would end up having to process\n\t// crossings for a standard tree.\n\tvar rootsArray = null;\n\n\tif (this.roots != null)\n\t{\n\t\tvar oldRootsArray = this.roots;\n\t\trootsArray = [];\n\n\t\tfor (var i = 0; i < oldRootsArray.length; i++)\n\t\t{\n\t\t\tvar cell = oldRootsArray[i];\n\t\t\tvar internalNode = this.vertexMapper.get(cell);\n\t\t\trootsArray[i] = internalNode;\n\t\t}\n\t}\n\n\tthis.visit(function(parent, node, edge, layer, seen)\n\t{\n\t\tif (seen == 0 && node.maxRank < 0 && node.minRank < 0)\n\t\t{\n\t\t\trankList[node.temp[0]].push(node);\n\t\t\tnode.maxRank = node.temp[0];\n\t\t\tnode.minRank = node.temp[0];\n\n\t\t\t// Set temp[0] to the nodes position in the rank\n\t\t\tnode.temp[0] = rankList[node.maxRank].length - 1;\n\t\t}\n\n\t\tif (parent != null && edge != null)\n\t\t{\n\t\t\tvar parentToCellRankDifference = parent.maxRank - node.maxRank;\n\n\t\t\tif (parentToCellRankDifference > 1)\n\t\t\t{\n\t\t\t\t// There are ranks in between the parent and current cell\n\t\t\t\tedge.maxRank = parent.maxRank;\n\t\t\t\tedge.minRank = node.maxRank;\n\t\t\t\tedge.temp = [];\n\t\t\t\tedge.x = [];\n\t\t\t\tedge.y = [];\n\n\t\t\t\tfor (var i = edge.minRank + 1; i < edge.maxRank; i++)\n\t\t\t\t{\n\t\t\t\t\t// The connecting edge must be added to the\n\t\t\t\t\t// appropriate ranks\n\t\t\t\t\trankList[i].push(edge);\n\t\t\t\t\tedge.setGeneralPurposeVariable(i, rankList[i]\n\t\t\t\t\t\t\t.length - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, rootsArray, false, null);\n};\n\n/**\n * Function: visit\n *\n * A depth first search through the internal heirarchy model.\n *\n * Parameters:\n *\n * visitor - The visitor function pattern to be called for each node.\n * trackAncestors - Whether or not the search is to keep track all nodes\n * directly above this one in the search path.\n */\nmxGraphHierarchyModel.prototype.visit = function(visitor, dfsRoots, trackAncestors, seenNodes)\n{\n\t// Run dfs through on all roots\n\tif (dfsRoots != null)\n\t{\n\t\tfor (var i = 0; i < dfsRoots.length; i++)\n\t\t{\n\t\t\tvar internalNode = dfsRoots[i];\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tif (seenNodes == null)\n\t\t\t\t{\n\t\t\t\t\tseenNodes = new Object();\n\t\t\t\t}\n\n\t\t\t\tif (trackAncestors)\n\t\t\t\t{\n\t\t\t\t\t// Set up hash code for root\n\t\t\t\t\tinternalNode.hashCode = [];\n\t\t\t\t\tinternalNode.hashCode[0] = this.dfsCount;\n\t\t\t\t\tinternalNode.hashCode[1] = i;\n\t\t\t\t\tthis.extendedDfs(null, internalNode, null, visitor, seenNodes,\n\t\t\t\t\t\t\tinternalNode.hashCode, i, 0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.dfs(null, internalNode, null, visitor, seenNodes, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.dfsCount++;\n\t}\n};\n\n/**\n * Function: dfs\n *\n * Performs a depth first search on the internal hierarchy model\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs a set of all of the\n * ancestor node of the current node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxGraphHierarchyModel.prototype.dfs = function(parent, root, connectingEdge, visitor, seen, layer)\n{\n\tif (root != null)\n\t{\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\t\t\t\n\t\t\tfor (var i = 0; i< outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Root check is O(|roots|)\n\t\t\t\tthis.dfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\tlayer + 1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n\n/**\n * Function: extendedDfs\n *\n * Performs a depth first search on the internal hierarchy model. This dfs\n * extends the default version by keeping track of cells ancestors, but it\n * should be only used when necessary because of it can be computationally\n * intensive for deep searches.\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs\n * ancestors - the parent hash code\n * childHash - the new hash code for this node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxGraphHierarchyModel.prototype.extendedDfs = function(parent, root, connectingEdge, visitor, seen, ancestors, childHash, layer)\n{\n\t// Explanation of custom hash set. Previously, the ancestors variable\n\t// was passed through the dfs as a HashSet. The ancestors were copied\n\t// into a new HashSet and when the new child was processed it was also\n\t// added to the set. If the current node was in its ancestor list it\n\t// meant there is a cycle in the graph and this information is passed\n\t// to the visitor.visit() in the seen parameter. The HashSet clone was\n\t// very expensive on CPU so a custom hash was developed using primitive\n\t// types. temp[] couldn't be used so hashCode[] was added to each node.\n\t// Each new child adds another int to the array, copying the prefix\n\t// from its parent. Child of the same parent add different ints (the\n\t// limit is therefore 2^32 children per parent...). If a node has a\n\t// child with the hashCode already set then the child code is compared\n\t// to the same portion of the current nodes array. If they match there\n\t// is a loop.\n\t// Note that the basic mechanism would only allow for 1 use of this\n\t// functionality, so the root nodes have two ints. The second int is\n\t// incremented through each node root and the first is incremented\n\t// through each run of the dfs algorithm (therefore the dfs is not\n\t// thread safe). The hash code of each node is set if not already set,\n\t// or if the first int does not match that of the current run.\n\tif (root != null)\n\t{\n\t\tif (parent != null)\n\t\t{\n\t\t\t// Form this nodes hash code if necessary, that is, if the\n\t\t\t// hashCode variable has not been initialized or if the\n\t\t\t// start of the parent hash code does not equal the start of\n\t\t\t// this nodes hash code, indicating the code was set on a\n\t\t\t// previous run of this dfs.\n\t\t\tif (root.hashCode == null ||\n\t\t\t\troot.hashCode[0] != parent.hashCode[0])\n\t\t\t{\n\t\t\t\tvar hashCodeLength = parent.hashCode.length + 1;\n\t\t\t\troot.hashCode = parent.hashCode.slice();\n\t\t\t\troot.hashCode[hashCodeLength - 1] = childHash;\n\t\t\t}\n\t\t}\n\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\n\t\t\tfor (var i = 0; i < outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Root check is O(|roots|)\n\t\t\t\tthis.extendedDfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\troot.hashCode, i, layer + 1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n\n__mxOutput.mxGraphHierarchyModel = typeof mxGraphHierarchyModel !== 'undefined' ? mxGraphHierarchyModel : undefined;\n\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneModel\n *\n * Internal model of a hierarchical graph. This model stores nodes and edges\n * equivalent to the real graph nodes and edges, but also stores the rank of the\n * cells, the order within the ranks and the new candidate locations of cells.\n * The internal model also reverses edge direction were appropriate , ignores\n * self-loop and groups parallels together under one edge object.\n *\n * Constructor: mxSwimlaneModel\n *\n * Creates an internal ordered graph model using the vertices passed in. If\n * there are any, leftward edge need to be inverted in the internal model\n *\n * Arguments:\n *\n * graph - the facade describing the graph to be operated on\n * vertices - the vertices for this hierarchy\n * ordered - whether or not the vertices are already ordered\n * deterministic - whether or not this layout should be deterministic on each\n * tightenToSource - whether or not to tighten vertices towards the sources\n * scanRanksFromSinks - Whether rank assignment is from the sinks or sources.\n * usage\n */\nfunction mxSwimlaneModel(layout, vertices, roots, parent, tightenToSource)\n{\n\tvar graph = layout.getGraph();\n\tthis.tightenToSource = tightenToSource;\n\tthis.roots = roots;\n\tthis.parent = parent;\n\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly\n\tthis.vertexMapper = new mxDictionary();\n\tthis.edgeMapper = new mxDictionary();\n\tthis.maxRank = 0;\n\tvar internalVertices = [];\n\n\tif (vertices == null)\n\t{\n\t\tvertices = this.graph.getChildVertices(parent);\n\t}\n\n\tthis.maxRank = this.SOURCESCANSTARTRANK;\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly. Guess size by number\n\t// of edges is roughly same as number of vertices.\n\tthis.createInternalCells(layout, vertices, internalVertices);\n\n\t// Go through edges set their sink values. Also check the\n\t// ordering if and invert edges if necessary\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tvar edges = internalVertices[i].connectsAsSource;\n\n\t\tfor (var j = 0; j < edges.length; j++)\n\t\t{\n\t\t\tvar internalEdge = edges[j];\n\t\t\tvar realEdges = internalEdge.edges;\n\n\t\t\t// Only need to process the first real edge, since\n\t\t\t// all the edges connect to the same other vertex\n\t\t\tif (realEdges != null && realEdges.length > 0)\n\t\t\t{\n\t\t\t\tvar realEdge = realEdges[0];\n\t\t\t\tvar targetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\trealEdge, false);\n\t\t\t\tvar internalTargetCell = this.vertexMapper.get(targetCell);\n\n\t\t\t\tif (internalVertices[i] == internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\t// If there are parallel edges going between two vertices and not all are in the same direction\n\t\t\t\t\t// you can have navigated across one direction when doing the cycle reversal that isn't the same\n\t\t\t\t\t// direction as the first real edge in the array above. When that happens the if above catches\n\t\t\t\t\t// that and we correct the target cell before continuing.\n\t\t\t\t\t// This branch only detects this single case\n\t\t\t\t\ttargetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\t\trealEdge, true);\n\t\t\t\t\tinternalTargetCell = this.vertexMapper.get(targetCell);\n\t\t\t\t}\n\n\t\t\t\tif (internalTargetCell != null\n\t\t\t\t\t\t&& internalVertices[i] != internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\tinternalEdge.target = internalTargetCell;\n\n\t\t\t\t\tif (internalTargetCell.connectsAsTarget.length == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mxUtils.indexOf(internalTargetCell.connectsAsTarget, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Use the temp variable in the internal nodes to mark this\n\t\t// internal vertex as having been visited.\n\t\tinternalVertices[i].temp[0] = 1;\n\t}\n};\n\n/**\n * Variable: maxRank\n *\n * Stores the largest rank number allocated\n */\nmxSwimlaneModel.prototype.maxRank = null;\n\n/**\n * Variable: vertexMapper\n *\n * Map from graph vertices to internal model nodes.\n */\nmxSwimlaneModel.prototype.vertexMapper = null;\n\n/**\n * Variable: edgeMapper\n *\n * Map from graph edges to internal model edges\n */\nmxSwimlaneModel.prototype.edgeMapper = null;\n\n/**\n * Variable: ranks\n *\n * Mapping from rank number to actual rank\n */\nmxSwimlaneModel.prototype.ranks = null;\n\n/**\n * Variable: roots\n *\n * Store of roots of this hierarchy model, these are real graph cells, not\n * internal cells\n */\nmxSwimlaneModel.prototype.roots = null;\n\n/**\n * Variable: parent\n *\n * The parent cell whose children are being laid out\n */\nmxSwimlaneModel.prototype.parent = null;\n\n/**\n * Variable: dfsCount\n *\n * Count of the number of times the ancestor dfs has been used.\n */\nmxSwimlaneModel.prototype.dfsCount = 0;\n\n/**\n * Variable: SOURCESCANSTARTRANK\n *\n * High value to start source layering scan rank value from.\n */\nmxSwimlaneModel.prototype.SOURCESCANSTARTRANK = 100000000;\n\n/**\n * Variable: tightenToSource\n *\n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells.\n */\nmxSwimlaneModel.prototype.tightenToSource = false;\n\n/**\n * Variable: ranksPerGroup\n *\n * An array of the number of ranks within each swimlane\n */\nmxSwimlaneModel.prototype.ranksPerGroup = null;\n\n/**\n * Function: createInternalCells\n *\n * Creates all edges in the internal model\n *\n * Parameters:\n *\n * layout - Reference to the <mxHierarchicalLayout> algorithm.\n * vertices - Array of <mxCells> that represent the vertices whom are to\n * have an internal representation created.\n * internalVertices - The array of <mxGraphHierarchyNodes> to have their\n * information filled in using the real vertices.\n */\nmxSwimlaneModel.prototype.createInternalCells = function(layout, vertices, internalVertices)\n{\n\tvar graph = layout.getGraph();\n\tvar swimlanes = layout.swimlanes;\n\n\t// Create internal edges\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tinternalVertices[i] = new mxGraphHierarchyNode(vertices[i]);\n\t\tthis.vertexMapper.put(vertices[i], internalVertices[i]);\n\t\tinternalVertices[i].swimlaneIndex = -1;\n\n\t\tfor (var ii = 0; ii < swimlanes.length; ii++)\n\t\t{\n\t\t\tif (graph.model.getParent(vertices[i]) == swimlanes[ii])\n\t\t\t{\n\t\t\t\tinternalVertices[i].swimlaneIndex = ii;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If the layout is deterministic, order the cells\n\t\t//List outgoingCells = graph.getNeighbours(vertices[i], deterministic);\n\t\tvar conns = layout.getEdges(vertices[i]);\n\t\tinternalVertices[i].connectsAsSource = [];\n\n\t\t// Create internal edges, but don't do any rank assignment yet\n\t\t// First use the information from the greedy cycle remover to\n\t\t// invert the leftward edges internally\n\t\tfor (var j = 0; j < conns.length; j++)\n\t\t{\n\t\t\tvar cell = layout.getVisibleTerminal(conns[j], false);\n\n\t\t\t// Looking for outgoing edges only\n\t\t\tif (cell != vertices[i] && layout.graph.model.isVertex(cell) &&\n\t\t\t\t\t!layout.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\t// We process all edge between this source and its targets\n\t\t\t\t// If there are edges going both ways, we need to collect\n\t\t\t\t// them all into one internal edges to avoid looping problems\n\t\t\t\t// later. We assume this direction (source -> target) is the \n\t\t\t\t// natural direction if at least half the edges are going in\n\t\t\t\t// that direction.\n\n\t\t\t\t// The check below for edges[0] being in the vertex mapper is\n\t\t\t\t// in case we've processed this the other way around\n\t\t\t\t// (target -> source) and the number of edges in each direction\n\t\t\t\t// are the same. All the graph edges will have been assigned to\n\t\t\t\t// an internal edge going the other way, so we don't want to \n\t\t\t\t// process them again\n\t\t\t\tvar undirectedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, false);\n\t\t\t\tvar directedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, true);\n\t\t\t\t\n\t\t\t\tif (undirectedEdges != null &&\n\t\t\t\t\t\tundirectedEdges.length > 0 &&\n\t\t\t\t\t\tthis.edgeMapper.get(undirectedEdges[0]) == null &&\n\t\t\t\t\t\tdirectedEdges.length * 2 >= undirectedEdges.length)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = new mxGraphHierarchyEdge(undirectedEdges);\n\n\t\t\t\t\tfor (var k = 0; k < undirectedEdges.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar edge = undirectedEdges[k];\n\t\t\t\t\t\tthis.edgeMapper.put(edge, internalEdge);\n\n\t\t\t\t\t\t// Resets all point on the edge and disables the edge style\n\t\t\t\t\t\t// without deleting it from the cell style\n\t\t\t\t\t\tgraph.resetEdge(edge);\n\n\t\t\t\t\t    if (layout.disableEdgeStyle)\n\t\t\t\t\t    {\n\t\t\t\t\t    \tlayout.setEdgeStyleEnabled(edge, false);\n\t\t\t\t\t    \tlayout.setOrthogonalEdge(edge,true);\n\t\t\t\t\t    }\n\t\t\t\t\t}\n\n\t\t\t\t\tinternalEdge.source = internalVertices[i];\n\n\t\t\t\t\tif (mxUtils.indexOf(internalVertices[i].connectsAsSource, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalVertices[i].connectsAsSource.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Ensure temp variable is cleared from any previous use\n\t\tinternalVertices[i].temp[0] = 0;\n\t}\n};\n\n/**\n * Function: initialRank\n *\n * Basic determination of minimum layer ranking by working from from sources\n * or sinks and working through each node in the relevant edge direction.\n * Starting at the sinks is basically a longest path layering algorithm.\n*/\nmxSwimlaneModel.prototype.initialRank = function()\n{\n\tthis.ranksPerGroup = [];\n\t\n\tvar startNodes = [];\n\tvar seen = new Object();\n\n\tif (this.roots != null)\n\t{\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar internalNode = this.vertexMapper.get(this.roots[i]);\n\t\t\tthis.maxChainDfs(null, internalNode, null, seen, 0);\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tstartNodes.push(internalNode);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Calculate the lower and upper rank bounds of each swimlane\n\tvar lowerRank = [];\n\tvar upperRank = [];\n\t\n\tfor (var i = this.ranksPerGroup.length - 1; i >= 0; i--)\n\t{\n\t\tif (i == this.ranksPerGroup.length - 1)\n\t\t{\n\t\t\tlowerRank[i] = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlowerRank[i] = upperRank[i+1] + 1;\n\t\t}\n\t\t\n\t\tupperRank[i] = lowerRank[i] + this.ranksPerGroup[i];\n\t}\n\t\n\tthis.maxRank = upperRank[0];\n\n\tvar internalNodes = this.vertexMapper.getValues();\n\t\n\tfor (var i=0; i < internalNodes.length; i++)\n\t{\n\t\t// Mark the node as not having had a layer assigned\n\t\tinternalNodes[i].temp[0] = -1;\n\t}\n\n\tvar startNodesCopy = startNodes.slice();\n\t\n\twhile (startNodes.length > 0)\n\t{\n\t\tvar internalNode = startNodes[0];\n\t\tvar layerDeterminingEdges;\n\t\tvar edgesToBeMarked;\n\n\t\tlayerDeterminingEdges = internalNode.connectsAsTarget;\n\t\tedgesToBeMarked = internalNode.connectsAsSource;\n\n\t\t// flag to keep track of whether or not all layer determining\n\t\t// edges have been scanned\n\t\tvar allEdgesScanned = true;\n\n\t\t// Work out the layer of this node from the layer determining\n\t\t// edges. The minimum layer number of any node connected by one of\n\t\t// the layer determining edges variable\n\t\tvar minimumLayer = upperRank[0];\n\n\t\tfor (var i = 0; i < layerDeterminingEdges.length; i++)\n\t\t{\n\t\t\tvar internalEdge = layerDeterminingEdges[i];\n\n\t\t\tif (internalEdge.temp[0] == 5270620)\n\t\t\t{\n\t\t\t\t// This edge has been scanned, get the layer of the\n\t\t\t\t// node on the other end\n\t\t\t\tvar otherNode = internalEdge.source;\n\t\t\t\tminimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tallEdgesScanned = false;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If all edge have been scanned, assign the layer, mark all\n\t\t// edges in the other direction and remove from the nodes list\n\t\tif (allEdgesScanned)\n\t\t{\n\t\t\tif (minimumLayer > upperRank[internalNode.swimlaneIndex])\n\t\t\t{\n\t\t\t\tminimumLayer = upperRank[internalNode.swimlaneIndex];\n\t\t\t}\n\n\t\t\tinternalNode.temp[0] = minimumLayer;\n\n\t\t\tif (edgesToBeMarked != null)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < edgesToBeMarked.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = edgesToBeMarked[i];\n\n\t\t\t\t\t// Assign unique stamp ( y/m/d/h )\n\t\t\t\t\tinternalEdge.temp[0] = 5270620;\n\n\t\t\t\t\t// Add node on other end of edge to LinkedList of\n\t\t\t\t\t// nodes to be analysed\n\t\t\t\t\tvar otherNode = internalEdge.target;\n\n\t\t\t\t\t// Only add node if it hasn't been assigned a layer\n\t\t\t\t\tif (otherNode.temp[0] == -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tstartNodes.push(otherNode);\n\n\t\t\t\t\t\t// Mark this other node as neither being\n\t\t\t\t\t\t// unassigned nor assigned so it isn't\n\t\t\t\t\t\t// added to this list again, but it's\n\t\t\t\t\t\t// layer isn't used in any calculation.\n\t\t\t\t\t\totherNode.temp[0] = -2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstartNodes.shift();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Not all the edges have been scanned, get to the back of\n\t\t\t// the class and put the dunces cap on\n\t\t\tvar removedCell = startNodes.shift();\n\t\t\tstartNodes.push(internalNode);\n\n\t\t\tif (removedCell == internalNode && startNodes.length == 1)\n\t\t\t{\n\t\t\t\t// This is an error condition, we can't get out of\n\t\t\t\t// this loop. It could happen for more than one node\n\t\t\t\t// but that's a lot harder to detect. Log the error\n\t\t\t\t// TODO make log comment\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize the ranks down from their large starting value to place\n\t// at least 1 sink on layer 0\n//\tfor (var key in this.vertexMapper)\n//\t{\n//\t\tvar internalNode = this.vertexMapper[key];\n//\t\t// Mark the node as not having had a layer assigned\n//\t\tinternalNode.temp[0] -= this.maxRank;\n//\t}\n\t\n\t// Tighten the rank 0 nodes as far as possible\n//\tfor ( var i = 0; i < startNodesCopy.length; i++)\n//\t{\n//\t\tvar internalNode = startNodesCopy[i];\n//\t\tvar currentMaxLayer = 0;\n//\t\tvar layerDeterminingEdges = internalNode.connectsAsSource;\n//\n//\t\tfor ( var j = 0; j < layerDeterminingEdges.length; j++)\n//\t\t{\n//\t\t\tvar internalEdge = layerDeterminingEdges[j];\n//\t\t\tvar otherNode = internalEdge.target;\n//\t\t\tinternalNode.temp[0] = Math.max(currentMaxLayer,\n//\t\t\t\t\totherNode.temp[0] + 1);\n//\t\t\tcurrentMaxLayer = internalNode.temp[0];\n//\t\t}\n//\t}\n};\n\n/**\n * Function: maxChainDfs\n *\n * Performs a depth first search on the internal hierarchy model. This dfs\n * extends the default version by keeping track of chains within groups.\n * Any cycles should be removed prior to running, but previously seen cells\n * are ignored.\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * seen - a set of all nodes seen by this dfs\n * chainCount - the number of edges in the chain of vertices going through\n * the current swimlane\n */\nmxSwimlaneModel.prototype.maxChainDfs = function(parent, root, connectingEdge, seen, chainCount)\n{\n\tif (root != null)\n\t{\n\t\tvar rootId = mxCellPath.create(root.cell);\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvar slIndex = root.swimlaneIndex;\n\t\t\t\n\t\t\tif (this.ranksPerGroup[slIndex] == null || this.ranksPerGroup[slIndex] < chainCount)\n\t\t\t{\n\t\t\t\tthis.ranksPerGroup[slIndex] = chainCount;\n\t\t\t}\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\n\t\t\tfor (var i = 0; i < outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Only navigate in source->target direction within the same\n\t\t\t\t// swimlane, or from a lower index swimlane to a higher one\n\t\t\t\tif (root.swimlaneIndex < targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.maxChainDfs(root, targetNode, internalEdge, mxUtils.clone(seen, null , true), 0);\n\t\t\t\t}\n\t\t\t\telse if (root.swimlaneIndex == targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.maxChainDfs(root, targetNode, internalEdge, mxUtils.clone(seen, null , true), chainCount + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: fixRanks\n *\n * Fixes the layer assignments to the values stored in the nodes. Also needs\n * to create dummy nodes for edges that cross layers.\n */\nmxSwimlaneModel.prototype.fixRanks = function()\n{\n\tvar rankList = [];\n\tthis.ranks = [];\n\n\tfor (var i = 0; i < this.maxRank + 1; i++)\n\t{\n\t\trankList[i] = [];\n\t\tthis.ranks[i] = rankList[i];\n\t}\n\n\t// Perform a DFS to obtain an initial ordering for each rank.\n\t// Without doing this you would end up having to process\n\t// crossings for a standard tree.\n\tvar rootsArray = null;\n\n\tif (this.roots != null)\n\t{\n\t\tvar oldRootsArray = this.roots;\n\t\trootsArray = [];\n\n\t\tfor (var i = 0; i < oldRootsArray.length; i++)\n\t\t{\n\t\t\tvar cell = oldRootsArray[i];\n\t\t\tvar internalNode = this.vertexMapper.get(cell);\n\t\t\trootsArray[i] = internalNode;\n\t\t}\n\t}\n\n\tthis.visit(function(parent, node, edge, layer, seen)\n\t{\n\t\tif (seen == 0 && node.maxRank < 0 && node.minRank < 0)\n\t\t{\n\t\t\trankList[node.temp[0]].push(node);\n\t\t\tnode.maxRank = node.temp[0];\n\t\t\tnode.minRank = node.temp[0];\n\n\t\t\t// Set temp[0] to the nodes position in the rank\n\t\t\tnode.temp[0] = rankList[node.maxRank].length - 1;\n\t\t}\n\n\t\tif (parent != null && edge != null)\n\t\t{\n\t\t\tvar parentToCellRankDifference = parent.maxRank - node.maxRank;\n\n\t\t\tif (parentToCellRankDifference > 1)\n\t\t\t{\n\t\t\t\t// There are ranks in between the parent and current cell\n\t\t\t\tedge.maxRank = parent.maxRank;\n\t\t\t\tedge.minRank = node.maxRank;\n\t\t\t\tedge.temp = [];\n\t\t\t\tedge.x = [];\n\t\t\t\tedge.y = [];\n\n\t\t\t\tfor (var i = edge.minRank + 1; i < edge.maxRank; i++)\n\t\t\t\t{\n\t\t\t\t\t// The connecting edge must be added to the\n\t\t\t\t\t// appropriate ranks\n\t\t\t\t\trankList[i].push(edge);\n\t\t\t\t\tedge.setGeneralPurposeVariable(i, rankList[i]\n\t\t\t\t\t\t\t.length - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, rootsArray, false, null);\n};\n\n/**\n * Function: visit\n *\n * A depth first search through the internal heirarchy model.\n *\n * Parameters:\n *\n * visitor - The visitor function pattern to be called for each node.\n * trackAncestors - Whether or not the search is to keep track all nodes\n * directly above this one in the search path.\n */\nmxSwimlaneModel.prototype.visit = function(visitor, dfsRoots, trackAncestors, seenNodes)\n{\n\t// Run dfs through on all roots\n\tif (dfsRoots != null)\n\t{\n\t\tfor (var i = 0; i < dfsRoots.length; i++)\n\t\t{\n\t\t\tvar internalNode = dfsRoots[i];\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tif (seenNodes == null)\n\t\t\t\t{\n\t\t\t\t\tseenNodes = new Object();\n\t\t\t\t}\n\n\t\t\t\tif (trackAncestors)\n\t\t\t\t{\n\t\t\t\t\t// Set up hash code for root\n\t\t\t\t\tinternalNode.hashCode = [];\n\t\t\t\t\tinternalNode.hashCode[0] = this.dfsCount;\n\t\t\t\t\tinternalNode.hashCode[1] = i;\n\t\t\t\t\tthis.extendedDfs(null, internalNode, null, visitor, seenNodes,\n\t\t\t\t\t\t\tinternalNode.hashCode, i, 0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.dfs(null, internalNode, null, visitor, seenNodes, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.dfsCount++;\n\t}\n};\n\n/**\n * Function: dfs\n *\n * Performs a depth first search on the internal hierarchy model\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs a set of all of the\n * ancestor node of the current node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxSwimlaneModel.prototype.dfs = function(parent, root, connectingEdge, visitor, seen, layer)\n{\n\tif (root != null)\n\t{\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\t\t\t\n\t\t\tfor (var i = 0; i< outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Root check is O(|roots|)\n\t\t\t\tthis.dfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\tlayer + 1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n\n/**\n * Function: extendedDfs\n *\n * Performs a depth first search on the internal hierarchy model. This dfs\n * extends the default version by keeping track of cells ancestors, but it\n * should be only used when necessary because of it can be computationally\n * intensive for deep searches.\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs\n * ancestors - the parent hash code\n * childHash - the new hash code for this node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxSwimlaneModel.prototype.extendedDfs = function(parent, root, connectingEdge, visitor, seen, ancestors, childHash, layer)\n{\n\t// Explanation of custom hash set. Previously, the ancestors variable\n\t// was passed through the dfs as a HashSet. The ancestors were copied\n\t// into a new HashSet and when the new child was processed it was also\n\t// added to the set. If the current node was in its ancestor list it\n\t// meant there is a cycle in the graph and this information is passed\n\t// to the visitor.visit() in the seen parameter. The HashSet clone was\n\t// very expensive on CPU so a custom hash was developed using primitive\n\t// types. temp[] couldn't be used so hashCode[] was added to each node.\n\t// Each new child adds another int to the array, copying the prefix\n\t// from its parent. Child of the same parent add different ints (the\n\t// limit is therefore 2^32 children per parent...). If a node has a\n\t// child with the hashCode already set then the child code is compared\n\t// to the same portion of the current nodes array. If they match there\n\t// is a loop.\n\t// Note that the basic mechanism would only allow for 1 use of this\n\t// functionality, so the root nodes have two ints. The second int is\n\t// incremented through each node root and the first is incremented\n\t// through each run of the dfs algorithm (therefore the dfs is not\n\t// thread safe). The hash code of each node is set if not already set,\n\t// or if the first int does not match that of the current run.\n\tif (root != null)\n\t{\n\t\tif (parent != null)\n\t\t{\n\t\t\t// Form this nodes hash code if necessary, that is, if the\n\t\t\t// hashCode variable has not been initialized or if the\n\t\t\t// start of the parent hash code does not equal the start of\n\t\t\t// this nodes hash code, indicating the code was set on a\n\t\t\t// previous run of this dfs.\n\t\t\tif (root.hashCode == null ||\n\t\t\t\troot.hashCode[0] != parent.hashCode[0])\n\t\t\t{\n\t\t\t\tvar hashCodeLength = parent.hashCode.length + 1;\n\t\t\t\troot.hashCode = parent.hashCode.slice();\n\t\t\t\troot.hashCode[hashCodeLength - 1] = childHash;\n\t\t\t}\n\t\t}\n\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\t\t\tvar incomingEdges = root.connectsAsTarget.slice();\n\n\t\t\tfor (var i = 0; i < outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\t\t\t\t\n\t\t\t\t// Only navigate in source->target direction within the same\n\t\t\t\t// swimlane, or from a lower index swimlane to a higher one\n\t\t\t\tif (root.swimlaneIndex <= targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.extendedDfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\t\troot.hashCode, i, layer + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < incomingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = incomingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.source;\n\n\t\t\t\t// Only navigate in target->source direction from a lower index \n\t\t\t\t// swimlane to a higher one\n\t\t\t\tif (root.swimlaneIndex < targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.extendedDfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\t\troot.hashCode, i, layer + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n\n__mxOutput.mxSwimlaneModel = typeof mxSwimlaneModel !== 'undefined' ? mxSwimlaneModel : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxHierarchicalLayoutStage\n * \n * The specific layout interface for hierarchical layouts. It adds a\n * <code>run</code> method with a parameter for the hierarchical layout model\n * that is shared between the layout stages.\n * \n * Constructor: mxHierarchicalLayoutStage\n *\n * Constructs a new hierarchical layout stage.\n */\nfunction mxHierarchicalLayoutStage() { };\n\n/**\n * Function: execute\n * \n * Takes the graph detail and configuration information within the facade\n * and creates the resulting laid out graph within that facade for further\n * use.\n */\nmxHierarchicalLayoutStage.prototype.execute = function(parent) { };\n\n__mxOutput.mxHierarchicalLayoutStage = typeof mxHierarchicalLayoutStage !== 'undefined' ? mxHierarchicalLayoutStage : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMedianHybridCrossingReduction\n * \n * Sets the horizontal locations of node and edge dummy nodes on each layer.\n * Uses median down and up weighings as well heuristic to straighten edges as\n * far as possible.\n * \n * Constructor: mxMedianHybridCrossingReduction\n *\n * Creates a coordinate assignment.\n * \n * Arguments:\n * \n * intraCellSpacing - the minimum buffer between cells on the same rank\n * interRankCellSpacing - the minimum distance between cells on adjacent ranks\n * orientation - the position of the root node(s) relative to the graph\n * initialX - the leftmost coordinate node placement starts at\n */\nfunction mxMedianHybridCrossingReduction(layout)\n{\n\tthis.layout = layout;\n};\n\n/**\n * Extends mxMedianHybridCrossingReduction.\n */\nmxMedianHybridCrossingReduction.prototype = new mxHierarchicalLayoutStage();\nmxMedianHybridCrossingReduction.prototype.constructor = mxMedianHybridCrossingReduction;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxMedianHybridCrossingReduction.prototype.layout = null;\n\n/**\n * Variable: maxIterations\n * \n * The maximum number of iterations to perform whilst reducing edge\n * crossings. Default is 24.\n */\nmxMedianHybridCrossingReduction.prototype.maxIterations = 24;\n\n/**\n * Variable: nestedBestRanks\n * \n * Stores each rank as a collection of cells in the best order found for\n * each layer so far\n */\nmxMedianHybridCrossingReduction.prototype.nestedBestRanks = null;\n\n/**\n * Variable: currentBestCrossings\n * \n * The total number of crossings found in the best configuration so far\n */\nmxMedianHybridCrossingReduction.prototype.currentBestCrossings = 0;\n\n/**\n * Variable: iterationsWithoutImprovement\n * \n * The total number of crossings found in the best configuration so far\n */\nmxMedianHybridCrossingReduction.prototype.iterationsWithoutImprovement = 0;\n\n/**\n * Variable: maxNoImprovementIterations\n * \n * The total number of crossings found in the best configuration so far\n */\nmxMedianHybridCrossingReduction.prototype.maxNoImprovementIterations = 2;\n\n/**\n * Function: execute\n * \n * Performs a vertex ordering within ranks as described by Gansner et al\n * 1993\n */\nmxMedianHybridCrossingReduction.prototype.execute = function(parent)\n{\n\tvar model = this.layout.getModel();\n\n\t// Stores initial ordering as being the best one found so far\n\tthis.nestedBestRanks = [];\n\t\n\tfor (var i = 0; i < model.ranks.length; i++)\n\t{\n\t\tthis.nestedBestRanks[i] = model.ranks[i].slice();\n\t}\n\n\tvar iterationsWithoutImprovement = 0;\n\tvar currentBestCrossings = this.calculateCrossings(model);\n\n\tfor (var i = 0; i < this.maxIterations &&\n\t\titerationsWithoutImprovement < this.maxNoImprovementIterations; i++)\n\t{\n\t\tthis.weightedMedian(i, model);\n\t\tthis.transpose(i, model);\n\t\tvar candidateCrossings = this.calculateCrossings(model);\n\n\t\tif (candidateCrossings < currentBestCrossings)\n\t\t{\n\t\t\tcurrentBestCrossings = candidateCrossings;\n\t\t\titerationsWithoutImprovement = 0;\n\n\t\t\t// Store the current rankings as the best ones\n\t\t\tfor (var j = 0; j < this.nestedBestRanks.length; j++)\n\t\t\t{\n\t\t\t\tvar rank = model.ranks[j];\n\n\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\tthis.nestedBestRanks[j][cell.getGeneralPurposeVariable(j)] = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Increase count of iterations where we haven't improved the\n\t\t\t// layout\n\t\t\titerationsWithoutImprovement++;\n\n\t\t\t// Restore the best values to the cells\n\t\t\tfor (var j = 0; j < this.nestedBestRanks.length; j++)\n\t\t\t{\n\t\t\t\tvar rank = model.ranks[j];\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\tcell.setGeneralPurposeVariable(j, k);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (currentBestCrossings == 0)\n\t\t{\n\t\t\t// Do nothing further\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Store the best rankings but in the model\n\tvar ranks = [];\n\tvar rankList = [];\n\n\tfor (var i = 0; i < model.maxRank + 1; i++)\n\t{\n\t\trankList[i] = [];\n\t\tranks[i] = rankList[i];\n\t}\n\n\tfor (var i = 0; i < this.nestedBestRanks.length; i++)\n\t{\n\t\tfor (var j = 0; j < this.nestedBestRanks[i].length; j++)\n\t\t{\n\t\t\trankList[i].push(this.nestedBestRanks[i][j]);\n\t\t}\n\t}\n\n\tmodel.ranks = ranks;\n};\n\n\n/**\n * Function: calculateCrossings\n * \n * Calculates the total number of edge crossing in the current graph.\n * Returns the current number of edge crossings in the hierarchy graph\n * model in the current candidate layout\n * \n * Parameters:\n * \n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.calculateCrossings = function(model)\n{\n\tvar numRanks = model.ranks.length;\n\tvar totalCrossings = 0;\n\n\tfor (var i = 1; i < numRanks; i++)\n\t{\n\t\ttotalCrossings += this.calculateRankCrossing(i, model);\n\t}\n\t\n\treturn totalCrossings;\n};\n\n/**\n * Function: calculateRankCrossing\n * \n * Calculates the number of edges crossings between the specified rank and\n * the rank below it. Returns the number of edges crossings with the rank\n * beneath\n * \n * Parameters:\n * \n * i -  the topmost rank of the pair ( higher rank value )\n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.calculateRankCrossing = function(i, model)\n{\n\tvar totalCrossings = 0;\n\tvar rank = model.ranks[i];\n\tvar previousRank = model.ranks[i - 1];\n\n\tvar tmpIndices = [];\n\n\t// Iterate over the top rank and fill in the connection information\n\tfor (var j = 0; j < rank.length; j++)\n\t{\n\t\tvar node = rank[j];\n\t\tvar rankPosition = node.getGeneralPurposeVariable(i);\n\t\tvar connectedCells = node.getPreviousLayerConnectedCells(i);\n\t\tvar nodeIndices = [];\n\n\t\tfor (var k = 0; k < connectedCells.length; k++)\n\t\t{\n\t\t\tvar connectedNode = connectedCells[k];\n\t\t\tvar otherCellRankPosition = connectedNode.getGeneralPurposeVariable(i - 1);\n\t\t\tnodeIndices.push(otherCellRankPosition);\n\t\t}\n\t\t\n\t\tnodeIndices.sort(function(x, y) { return x - y; });\n\t\ttmpIndices[rankPosition] = nodeIndices;\n\t}\n\t\n\tvar indices = [];\n\n\tfor (var j = 0; j < tmpIndices.length; j++)\n\t{\n\t\tindices = indices.concat(tmpIndices[j]);\n\t}\n\n\tvar firstIndex = 1;\n\t\n\twhile (firstIndex < previousRank.length)\n\t{\n\t\tfirstIndex <<= 1;\n\t}\n\n\tvar treeSize = 2 * firstIndex - 1;\n\tfirstIndex -= 1;\n\n\tvar tree = [];\n\t\n\tfor (var j = 0; j < treeSize; ++j)\n\t{\n\t\ttree[j] = 0;\n\t}\n\n\tfor (var j = 0; j < indices.length; j++)\n\t{\n\t\tvar index = indices[j];\n\t    var treeIndex = index + firstIndex;\n\t    ++tree[treeIndex];\n\t    \n\t    while (treeIndex > 0)\n\t    {\n\t    \tif (treeIndex % 2)\n\t    \t{\n\t    \t\ttotalCrossings += tree[treeIndex + 1];\n\t    \t}\n\t      \n\t    \ttreeIndex = (treeIndex - 1) >> 1;\n\t    \t++tree[treeIndex];\n\t    }\n\t}\n\n\treturn totalCrossings;\n};\n\n/**\n * Function: transpose\n * \n * Takes each possible adjacent cell pair on each rank and checks if\n * swapping them around reduces the number of crossing\n * \n * Parameters:\n * \n * mainLoopIteration - the iteration number of the main loop\n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.transpose = function(mainLoopIteration, model)\n{\n\tvar improved = true;\n\n\t// Track the number of iterations in case of looping\n\tvar count = 0;\n\tvar maxCount = 10;\n\twhile (improved && count++ < maxCount)\n\t{\n\t\t// On certain iterations allow allow swapping of cell pairs with\n\t\t// equal edge crossings switched or not switched. This help to\n\t\t// nudge a stuck layout into a lower crossing total.\n\t\tvar nudge = mainLoopIteration % 2 == 1 && count % 2 == 1;\n\t\timproved = false;\n\t\t\n\t\tfor (var i = 0; i < model.ranks.length; i++)\n\t\t{\n\t\t\tvar rank = model.ranks[i];\n\t\t\tvar orderedCells = [];\n\t\t\t\n\t\t\tfor (var j = 0; j < rank.length; j++)\n\t\t\t{\n\t\t\t\tvar cell = rank[j];\n\t\t\t\tvar tempRank = cell.getGeneralPurposeVariable(i);\n\t\t\t\t\n\t\t\t\t// FIXME: Workaround to avoid negative tempRanks\n\t\t\t\tif (tempRank < 0)\n\t\t\t\t{\n\t\t\t\t\ttempRank = j;\n\t\t\t\t}\n\t\t\t\torderedCells[tempRank] = cell;\n\t\t\t}\n\t\t\t\n\t\t\tvar leftCellAboveConnections = null;\n\t\t\tvar leftCellBelowConnections = null;\n\t\t\tvar rightCellAboveConnections = null;\n\t\t\tvar rightCellBelowConnections = null;\n\t\t\t\n\t\t\tvar leftAbovePositions = null;\n\t\t\tvar leftBelowPositions = null;\n\t\t\tvar rightAbovePositions = null;\n\t\t\tvar rightBelowPositions = null;\n\t\t\t\n\t\t\tvar leftCell = null;\n\t\t\tvar rightCell = null;\n\n\t\t\tfor (var j = 0; j < (rank.length - 1); j++)\n\t\t\t{\n\t\t\t\t// For each intra-rank adjacent pair of cells\n\t\t\t\t// see if swapping them around would reduce the\n\t\t\t\t// number of edges crossing they cause in total\n\t\t\t\t// On every cell pair except the first on each rank, we\n\t\t\t\t// can save processing using the previous values for the\n\t\t\t\t// right cell on the new left cell\n\t\t\t\tif (j == 0)\n\t\t\t\t{\n\t\t\t\t\tleftCell = orderedCells[j];\n\t\t\t\t\tleftCellAboveConnections = leftCell\n\t\t\t\t\t\t\t.getNextLayerConnectedCells(i);\n\t\t\t\t\tleftCellBelowConnections = leftCell\n\t\t\t\t\t\t\t.getPreviousLayerConnectedCells(i);\n\t\t\t\t\tleftAbovePositions = [];\n\t\t\t\t\tleftBelowPositions = [];\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < leftCellAboveConnections.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tleftAbovePositions[k] = leftCellAboveConnections[k].getGeneralPurposeVariable(i + 1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < leftCellBelowConnections.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tleftBelowPositions[k] = leftCellBelowConnections[k].getGeneralPurposeVariable(i - 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tleftCellAboveConnections = rightCellAboveConnections;\n\t\t\t\t\tleftCellBelowConnections = rightCellBelowConnections;\n\t\t\t\t\tleftAbovePositions = rightAbovePositions;\n\t\t\t\t\tleftBelowPositions = rightBelowPositions;\n\t\t\t\t\tleftCell = rightCell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trightCell = orderedCells[j + 1];\n\t\t\t\trightCellAboveConnections = rightCell\n\t\t\t\t\t\t.getNextLayerConnectedCells(i);\n\t\t\t\trightCellBelowConnections = rightCell\n\t\t\t\t\t\t.getPreviousLayerConnectedCells(i);\n\n\t\t\t\trightAbovePositions = [];\n\t\t\t\trightBelowPositions = [];\n\n\t\t\t\tfor (var k = 0; k < rightCellAboveConnections.length; k++)\n\t\t\t\t{\n\t\t\t\t\trightAbovePositions[k] = rightCellAboveConnections[k].getGeneralPurposeVariable(i + 1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < rightCellBelowConnections.length; k++)\n\t\t\t\t{\n\t\t\t\t\trightBelowPositions[k] = rightCellBelowConnections[k].getGeneralPurposeVariable(i - 1);\n\t\t\t\t}\n\n\t\t\t\tvar totalCurrentCrossings = 0;\n\t\t\t\tvar totalSwitchedCrossings = 0;\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < leftAbovePositions.length; k++)\n\t\t\t\t{\n\t\t\t\t\tfor (var ik = 0; ik < rightAbovePositions.length; ik++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (leftAbovePositions[k] > rightAbovePositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalCurrentCrossings++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (leftAbovePositions[k] < rightAbovePositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalSwitchedCrossings++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < leftBelowPositions.length; k++)\n\t\t\t\t{\n\t\t\t\t\tfor (var ik = 0; ik < rightBelowPositions.length; ik++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (leftBelowPositions[k] > rightBelowPositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalCurrentCrossings++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (leftBelowPositions[k] < rightBelowPositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalSwitchedCrossings++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ((totalSwitchedCrossings < totalCurrentCrossings) ||\n\t\t\t\t\t(totalSwitchedCrossings == totalCurrentCrossings &&\n\t\t\t\t\tnudge))\n\t\t\t\t{\n\t\t\t\t\tvar temp = leftCell.getGeneralPurposeVariable(i);\n\t\t\t\t\tleftCell.setGeneralPurposeVariable(i, rightCell\n\t\t\t\t\t\t\t.getGeneralPurposeVariable(i));\n\t\t\t\t\trightCell.setGeneralPurposeVariable(i, temp);\n\n\t\t\t\t\t// With this pair exchanged we have to switch all of\n\t\t\t\t\t// values for the left cell to the right cell so the\n\t\t\t\t\t// next iteration for this rank uses it as the left\n\t\t\t\t\t// cell again\n\t\t\t\t\trightCellAboveConnections = leftCellAboveConnections;\n\t\t\t\t\trightCellBelowConnections = leftCellBelowConnections;\n\t\t\t\t\trightAbovePositions = leftAbovePositions;\n\t\t\t\t\trightBelowPositions = leftBelowPositions;\n\t\t\t\t\trightCell = leftCell;\n\t\t\t\t\t\n\t\t\t\t\tif (!nudge)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Don't count nudges as improvement or we'll end\n\t\t\t\t\t\t// up stuck in two combinations and not finishing\n\t\t\t\t\t\t// as early as we should\n\t\t\t\t\t\timproved = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: weightedMedian\n * \n * Sweeps up or down the layout attempting to minimise the median placement\n * of connected cells on adjacent ranks\n * \n * Parameters:\n * \n * iteration - the iteration number of the main loop\n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.weightedMedian = function(iteration, model)\n{\n\t// Reverse sweep direction each time through this method\n\tvar downwardSweep = (iteration % 2 == 0);\n\tif (downwardSweep)\n\t{\n\t\tfor (var j = model.maxRank - 1; j >= 0; j--)\n\t\t{\n\t\t\tthis.medianRank(j, downwardSweep);\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor (var j = 1; j < model.maxRank; j++)\n\t\t{\n\t\t\tthis.medianRank(j, downwardSweep);\n\t\t}\n\t}\n};\n\n/**\n * Function: medianRank\n * \n * Attempts to minimise the median placement of connected cells on this rank\n * and one of the adjacent ranks\n * \n * Parameters:\n * \n * rankValue - the layer number of this rank\n * downwardSweep - whether or not this is a downward sweep through the graph\n */\nmxMedianHybridCrossingReduction.prototype.medianRank = function(rankValue, downwardSweep)\n{\n\tvar numCellsForRank = this.nestedBestRanks[rankValue].length;\n\tvar medianValues = [];\n\tvar reservedPositions = [];\n\n\tfor (var i = 0; i < numCellsForRank; i++)\n\t{\n\t\tvar cell = this.nestedBestRanks[rankValue][i];\n\t\tvar sorterEntry = new MedianCellSorter();\n\t\tsorterEntry.cell = cell;\n\n\t\t// Flip whether or not equal medians are flipped on up and down\n\t\t// sweeps\n\t\t// TODO re-implement some kind of nudge\n\t\t// medianValues[i].nudge = !downwardSweep;\n\t\tvar nextLevelConnectedCells;\n\t\t\n\t\tif (downwardSweep)\n\t\t{\n\t\t\tnextLevelConnectedCells = cell\n\t\t\t\t\t.getNextLayerConnectedCells(rankValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextLevelConnectedCells = cell\n\t\t\t\t\t.getPreviousLayerConnectedCells(rankValue);\n\t\t}\n\t\t\n\t\tvar nextRankValue;\n\t\t\n\t\tif (downwardSweep)\n\t\t{\n\t\t\tnextRankValue = rankValue + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextRankValue = rankValue - 1;\n\t\t}\n\n\t\tif (nextLevelConnectedCells != null\n\t\t\t\t&& nextLevelConnectedCells.length != 0)\n\t\t{\n\t\t\tsorterEntry.medianValue = this.medianValue(\n\t\t\t\t\tnextLevelConnectedCells, nextRankValue);\n\t\t\tmedianValues.push(sorterEntry);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Nodes with no adjacent vertices are flagged in the reserved array\n\t\t\t// to indicate they should be left in their current position.\n\t\t\treservedPositions[cell.getGeneralPurposeVariable(rankValue)] = true;\n\t\t}\n\t}\n\t\n\tmedianValues.sort(MedianCellSorter.prototype.compare);\n\t\n\t// Set the new position of each node within the rank using\n\t// its temp variable\n\tfor (var i = 0; i < numCellsForRank; i++)\n\t{\n\t\tif (reservedPositions[i] == null)\n\t\t{\n\t\t\tvar cell = medianValues.shift().cell;\n\t\t\tcell.setGeneralPurposeVariable(rankValue, i);\n\t\t}\n\t}\n};\n\n/**\n * Function: medianValue\n * \n * Calculates the median rank order positioning for the specified cell using\n * the connected cells on the specified rank. Returns the median rank\n * ordering value of the connected cells\n * \n * Parameters:\n * \n * connectedCells - the cells on the specified rank connected to the\n * specified cell\n * rankValue - the rank that the connected cell lie upon\n */\nmxMedianHybridCrossingReduction.prototype.medianValue = function(connectedCells, rankValue)\n{\n\tvar medianValues = [];\n\tvar arrayCount = 0;\n\t\n\tfor (var i = 0; i < connectedCells.length; i++)\n\t{\n\t\tvar cell = connectedCells[i];\n\t\tmedianValues[arrayCount++] = cell.getGeneralPurposeVariable(rankValue);\n\t}\n\n\t// Sort() sorts lexicographically by default (i.e. 11 before 9) so force\n\t// numerical order sort\n\tmedianValues.sort(function(a,b){return a - b;});\n\t\n\tif (arrayCount % 2 == 1)\n\t{\n\t\t// For odd numbers of adjacent vertices return the median\n\t\treturn medianValues[Math.floor(arrayCount / 2)];\n\t}\n\telse if (arrayCount == 2)\n\t{\n\t\treturn ((medianValues[0] + medianValues[1]) / 2.0);\n\t}\n\telse\n\t{\n\t\tvar medianPoint = arrayCount / 2;\n\t\tvar leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n\t\tvar rightMedian = medianValues[arrayCount - 1]\n\t\t\t\t- medianValues[medianPoint];\n\n\t\treturn (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint]\n\t\t\t\t* leftMedian)\n\t\t\t\t/ (leftMedian + rightMedian);\n\t}\n};\n\n/**\n * Class: MedianCellSorter\n * \n * A utility class used to track cells whilst sorting occurs on the median\n * values. Does not violate (x.compareTo(y)==0) == (x.equals(y))\n *\n * Constructor: MedianCellSorter\n * \n * Constructs a new median cell sorter.\n */\nfunction MedianCellSorter()\n{\n\t// empty\n};\n\n/**\n * Variable: medianValue\n * \n * The weighted value of the cell stored.\n */\nMedianCellSorter.prototype.medianValue = 0;\n\n/**\n * Variable: cell\n * \n * The cell whose median value is being calculated\n */\nMedianCellSorter.prototype.cell = false;\n\n/**\n * Function: compare\n * \n * Compares two MedianCellSorters.\n */\nMedianCellSorter.prototype.compare = function(a, b)\n{\n\tif (a != null && b != null)\n\t{\n\t\tif (b.medianValue > a.medianValue)\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t\telse if (b.medianValue < a.medianValue)\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n};\n\n__mxOutput.mxMedianHybridCrossingReduction = typeof mxMedianHybridCrossingReduction !== 'undefined' ? mxMedianHybridCrossingReduction : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMinimumCycleRemover\n * \n * An implementation of the first stage of the Sugiyama layout. Straightforward\n * longest path calculation of layer assignment\n * \n * Constructor: mxMinimumCycleRemover\n *\n * Creates a cycle remover for the given internal model.\n */\nfunction mxMinimumCycleRemover(layout)\n{\n\tthis.layout = layout;\n};\n\n/**\n * Extends mxHierarchicalLayoutStage.\n */\nmxMinimumCycleRemover.prototype = new mxHierarchicalLayoutStage();\nmxMinimumCycleRemover.prototype.constructor = mxMinimumCycleRemover;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxMinimumCycleRemover.prototype.layout = null;\n\n/**\n * Function: execute\n * \n * Takes the graph detail and configuration information within the facade\n * and creates the resulting laid out graph within that facade for further\n * use.\n */\nmxMinimumCycleRemover.prototype.execute = function(parent)\n{\n\tvar model = this.layout.getModel();\n\tvar seenNodes = new Object();\n\tvar unseenNodesArray = model.vertexMapper.getValues();\n\tvar unseenNodes = new Object();\n\t\n\tfor (var i = 0; i < unseenNodesArray.length; i++)\n\t{\n\t\tunseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n\t}\n\t\n\t// Perform a dfs through the internal model. If a cycle is found,\n\t// reverse it.\n\tvar rootsArray = null;\n\t\n\tif (model.roots != null)\n\t{\n\t\tvar modelRoots = model.roots;\n\t\trootsArray = [];\n\t\t\n\t\tfor (var i = 0; i < modelRoots.length; i++)\n\t\t{\n\t\t\trootsArray[i] = model.vertexMapper.get(modelRoots[i]);\n\t\t}\n\t}\n\n\tmodel.visit(function(parent, node, connectingEdge, layer, seen)\n\t{\n\t\t// Check if the cell is in it's own ancestor list, if so\n\t\t// invert the connecting edge and reverse the target/source\n\t\t// relationship to that edge in the parent and the cell\n\t\tif (node.isAncestor(parent))\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsSource);\n\t\t\tparent.connectsAsTarget.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsTarget);\n\t\t\tnode.connectsAsSource.push(connectingEdge);\n\t\t}\n\t\t\n\t\tseenNodes[node.id] = node;\n\t\tdelete unseenNodes[node.id];\n\t}, rootsArray, true, null);\n\n\t// If there are any nodes that should be nodes that the dfs can miss\n\t// these need to be processed with the dfs and the roots assigned\n\t// correctly to form a correct internal model\n\tvar seenNodesCopy = mxUtils.clone(seenNodes, null, true);\n\n\t// Pick a random cell and dfs from it\n\tmodel.visit(function(parent, node, connectingEdge, layer, seen)\n\t{\n\t\t// Check if the cell is in it's own ancestor list, if so\n\t\t// invert the connecting edge and reverse the target/source\n\t\t// relationship to that edge in the parent and the cell\n\t\tif (node.isAncestor(parent))\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsSource);\n\t\t\tnode.connectsAsSource.push(connectingEdge);\n\t\t\tparent.connectsAsTarget.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsTarget);\n\t\t}\n\t\t\n\t\tseenNodes[node.id] = node;\n\t\tdelete unseenNodes[node.id];\n\t}, unseenNodes, true, seenNodesCopy);\n};\n\n__mxOutput.mxMinimumCycleRemover = typeof mxMinimumCycleRemover !== 'undefined' ? mxMinimumCycleRemover : undefined;\n\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxCoordinateAssignment\n * \n * Sets the horizontal locations of node and edge dummy nodes on each layer.\n * Uses median down and up weighings as well as heuristics to straighten edges as\n * far as possible.\n * \n * Constructor: mxCoordinateAssignment\n *\n * Creates a coordinate assignment.\n * \n * Arguments:\n * \n * intraCellSpacing - the minimum buffer between cells on the same rank\n * interRankCellSpacing - the minimum distance between cells on adjacent ranks\n * orientation - the position of the root node(s) relative to the graph\n * initialX - the leftmost coordinate node placement starts at\n */\nfunction mxCoordinateAssignment(layout, intraCellSpacing, interRankCellSpacing,\n\torientation, initialX, parallelEdgeSpacing)\n{\n\tthis.layout = layout;\n\tthis.intraCellSpacing = intraCellSpacing;\n\tthis.interRankCellSpacing = interRankCellSpacing;\n\tthis.orientation = orientation;\n\tthis.initialX = initialX;\n\tthis.parallelEdgeSpacing = parallelEdgeSpacing;\n};\n\n/**\n * Extends mxHierarchicalLayoutStage.\n */\nmxCoordinateAssignment.prototype = new mxHierarchicalLayoutStage();\nmxCoordinateAssignment.prototype.constructor = mxCoordinateAssignment;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxCoordinateAssignment.prototype.layout = null;\n\n/**\n * Variable: intraCellSpacing\n * \n * The minimum buffer between cells on the same rank. Default is 30.\n */\nmxCoordinateAssignment.prototype.intraCellSpacing = 30;\n\n/**\n * Variable: interRankCellSpacing\n * \n * The minimum distance between cells on adjacent ranks. Default is 100.\n */\nmxCoordinateAssignment.prototype.interRankCellSpacing = 100;\n\n/**\n * Variable: parallelEdgeSpacing\n * \n * The distance between each parallel edge on each ranks for long edges.\n * Default is 10.\n */\nmxCoordinateAssignment.prototype.parallelEdgeSpacing = 10;\n\n/**\n * Variable: maxIterations\n * \n * The number of heuristic iterations to run. Default is 8.\n */\nmxCoordinateAssignment.prototype.maxIterations = 8;\n\n/**\n * Variable: prefHozEdgeSep\n * \n * The preferred horizontal distance between edges exiting a vertex Default is 5.\n */\nmxCoordinateAssignment.prototype.prefHozEdgeSep = 5;\n\n/**\n * Variable: prefVertEdgeOff\n * \n * The preferred vertical offset between edges exiting a vertex Default is 2.\n */\nmxCoordinateAssignment.prototype.prefVertEdgeOff = 2;\n\n/**\n * Variable: minEdgeJetty\n * \n * The minimum distance for an edge jetty from a vertex Default is 12.\n */\nmxCoordinateAssignment.prototype.minEdgeJetty = 12;\n\n/**\n * Variable: channelBuffer\n * \n * The size of the vertical buffer in the center of inter-rank channels\n * where edge control points should not be placed Default is 4.\n */\nmxCoordinateAssignment.prototype.channelBuffer = 4;\n\n/**\n * Variable: jettyPositions\n * \n * Map of internal edges and (x,y) pair of positions of the start and end jetty\n * for that edge where it connects to the source and target vertices.\n * Note this should technically be a WeakHashMap, but since JS does not\n * have an equivalent, housekeeping must be performed before using.\n * i.e. check all edges are still in the model and clear the values.\n * Note that the y co-ord is the offset of the jetty, not the\n * absolute point\n */\nmxCoordinateAssignment.prototype.jettyPositions = null;\n\n/**\n * Variable: orientation\n * \n * The position of the root ( start ) node(s) relative to the rest of the\n * laid out graph. Default is <mxConstants.DIRECTION_NORTH>.\n */\nmxCoordinateAssignment.prototype.orientation = mxConstants.DIRECTION_NORTH;\n\n/**\n * Variable: initialX\n * \n * The minimum x position node placement starts at\n */\nmxCoordinateAssignment.prototype.initialX = null;\n\n/**\n * Variable: limitX\n * \n * The maximum x value this positioning lays up to\n */\nmxCoordinateAssignment.prototype.limitX = null;\n\n/**\n * Variable: currentXDelta\n * \n * The sum of x-displacements for the current iteration\n */\nmxCoordinateAssignment.prototype.currentXDelta = null;\n\n/**\n * Variable: widestRank\n * \n * The rank that has the widest x position\n */\nmxCoordinateAssignment.prototype.widestRank = null;\n\n/**\n * Variable: rankTopY\n * \n * Internal cache of top-most values of Y for each rank\n */\nmxCoordinateAssignment.prototype.rankTopY = null;\n\n/**\n * Variable: rankBottomY\n * \n * Internal cache of bottom-most value of Y for each rank\n */\nmxCoordinateAssignment.prototype.rankBottomY = null;\n\n/**\n * Variable: widestRankValue\n * \n * The X-coordinate of the edge of the widest rank\n */\nmxCoordinateAssignment.prototype.widestRankValue = null;\n\n/**\n * Variable: rankWidths\n * \n * The width of all the ranks\n */\nmxCoordinateAssignment.prototype.rankWidths = null;\n\n/**\n * Variable: rankY\n * \n * The Y-coordinate of all the ranks\n */\nmxCoordinateAssignment.prototype.rankY = null;\n\n/**\n * Variable: fineTuning\n * \n * Whether or not to perform local optimisations and iterate multiple times\n * through the algorithm. Default is true.\n */\nmxCoordinateAssignment.prototype.fineTuning = true;\n\n/**\n * Variable: nextLayerConnectedCache\n * \n * A store of connections to the layer above for speed\n */\nmxCoordinateAssignment.prototype.nextLayerConnectedCache = null;\n\n/**\n * Variable: previousLayerConnectedCache\n * \n * A store of connections to the layer below for speed\n */\nmxCoordinateAssignment.prototype.previousLayerConnectedCache = null;\n\n/**\n * Variable: groupPadding\n * \n * Padding added to resized parents Default is 10.\n */\nmxCoordinateAssignment.prototype.groupPadding = 10;\n\n/**\n * Utility method to display current positions\n */\nmxCoordinateAssignment.prototype.printStatus = function()\n{\n\tvar model = this.layout.getModel();\n\tmxLog.show();\n\n\tmxLog.writeln('======Coord assignment debug=======');\n\n\tfor (var j = 0; j < model.ranks.length; j++)\n\t{\n\t\tmxLog.write('Rank ', j, ' : ' );\n\t\tvar rank = model.ranks[j];\n\t\t\n\t\tfor (var k = 0; k < rank.length; k++)\n\t\t{\n\t\t\tvar cell = rank[k];\n\t\t\t\n\t\t\tmxLog.write(cell.getGeneralPurposeVariable(j), '  ');\n\t\t}\n\t\tmxLog.writeln();\n\t}\n\t\n\tmxLog.writeln('====================================');\n};\n\n/**\n * Function: execute\n * \n * A basic horizontal coordinate assignment algorithm\n */\nmxCoordinateAssignment.prototype.execute = function(parent)\n{\n\tthis.jettyPositions = Object();\n\tvar model = this.layout.getModel();\n\tthis.currentXDelta = 0.0;\n\n\tthis.initialCoords(this.layout.getGraph(), model);\n\t\n//\tthis.printStatus();\n\t\n\tif (this.fineTuning)\n\t{\n\t\tthis.minNode(model);\n\t}\n\t\n\tvar bestXDelta = 100000000.0;\n\t\n\tif (this.fineTuning)\n\t{\n\t\tfor (var i = 0; i < this.maxIterations; i++)\n\t\t{\n//\t\t\tthis.printStatus();\n\t\t\n\t\t\t// Median Heuristic\n\t\t\tif (i != 0)\n\t\t\t{\n\t\t\t\tthis.medianPos(i, model);\n\t\t\t\tthis.minNode(model);\n\t\t\t}\n\t\t\t\n\t\t\t// if the total offset is less for the current positioning,\n\t\t\t// there are less heavily angled edges and so the current\n\t\t\t// positioning is used\n\t\t\tif (this.currentXDelta < bestXDelta)\n\t\t\t{\n\t\t\t\tfor (var j = 0; j < model.ranks.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar rank = model.ranks[j];\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\t\tcell.setX(j, cell.getGeneralPurposeVariable(j));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbestXDelta = this.currentXDelta;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Restore the best positions\n\t\t\t\tfor (var j = 0; j < model.ranks.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar rank = model.ranks[j];\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\t\tcell.setGeneralPurposeVariable(j, cell.getX(j));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.minPath(this.layout.getGraph(), model);\n\t\t\t\n\t\t\tthis.currentXDelta = 0;\n\t\t}\n\t}\n\t\n\tthis.setCellLocations(this.layout.getGraph(), model);\n};\n\n/**\n * Function: minNode\n * \n * Performs one median positioning sweep in both directions\n */\nmxCoordinateAssignment.prototype.minNode = function(model)\n{\n\t// Queue all nodes\n\tvar nodeList = [];\n\t\n\t// Need to be able to map from cell to cellWrapper\n\tvar map = new mxDictionary();\n\tvar rank = [];\n\t\n\tfor (var i = 0; i <= model.maxRank; i++)\n\t{\n\t\trank[i] = model.ranks[i];\n\t\t\n\t\tfor (var j = 0; j < rank[i].length; j++)\n\t\t{\n\t\t\t// Use the weight to store the rank and visited to store whether\n\t\t\t// or not the cell is in the list\n\t\t\tvar node = rank[i][j];\n\t\t\tvar nodeWrapper = new WeightedCellSorter(node, i);\n\t\t\tnodeWrapper.rankIndex = j;\n\t\t\tnodeWrapper.visited = true;\n\t\t\tnodeList.push(nodeWrapper);\n\t\t\t\n\t\t\tmap.put(node, nodeWrapper);\n\t\t}\n\t}\n\t\n\t// Set a limit of the maximum number of times we will access the queue\n\t// in case a loop appears\n\tvar maxTries = nodeList.length * 10;\n\tvar count = 0;\n\t\n\t// Don't move cell within this value of their median\n\tvar tolerance = 1;\n\t\n\twhile (nodeList.length > 0 && count <= maxTries)\n\t{\n\t\tvar cellWrapper = nodeList.shift();\n\t\tvar cell = cellWrapper.cell;\n\t\t\n\t\tvar rankValue = cellWrapper.weightedValue;\n\t\tvar rankIndex = parseInt(cellWrapper.rankIndex);\n\t\t\n\t\tvar nextLayerConnectedCells = cell.getNextLayerConnectedCells(rankValue);\n\t\tvar previousLayerConnectedCells = cell.getPreviousLayerConnectedCells(rankValue);\n\t\t\n\t\tvar numNextLayerConnected = nextLayerConnectedCells.length;\n\t\tvar numPreviousLayerConnected = previousLayerConnectedCells.length;\n\n\t\tvar medianNextLevel = this.medianXValue(nextLayerConnectedCells,\n\t\t\t\trankValue + 1);\n\t\tvar medianPreviousLevel = this.medianXValue(previousLayerConnectedCells,\n\t\t\t\trankValue - 1);\n\n\t\tvar numConnectedNeighbours = numNextLayerConnected\n\t\t\t\t+ numPreviousLayerConnected;\n\t\tvar currentPosition = cell.getGeneralPurposeVariable(rankValue);\n\t\tvar cellMedian = currentPosition;\n\t\t\n\t\tif (numConnectedNeighbours > 0)\n\t\t{\n\t\t\tcellMedian = (medianNextLevel * numNextLayerConnected + medianPreviousLevel\n\t\t\t\t\t* numPreviousLayerConnected)\n\t\t\t\t\t/ numConnectedNeighbours;\n\t\t}\n\n\t\t// Flag storing whether or not position has changed\n\t\tvar positionChanged = false;\n\t\t\n\t\tif (cellMedian < currentPosition - tolerance)\n\t\t{\n\t\t\tif (rankIndex == 0)\n\t\t\t{\n\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\tpositionChanged = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar leftCell = rank[rankValue][rankIndex - 1];\n\t\t\t\tvar leftLimit = leftCell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue);\n\t\t\t\tleftLimit = leftLimit + leftCell.width / 2\n\t\t\t\t\t\t+ this.intraCellSpacing + cell.width / 2;\n\n\t\t\t\tif (leftLimit < cellMedian)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t\telse if (leftLimit < cell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t- tolerance)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, leftLimit);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (cellMedian > currentPosition + tolerance)\n\t\t{\n\t\t\tvar rankSize = rank[rankValue].length;\n\t\t\t\n\t\t\tif (rankIndex == rankSize - 1)\n\t\t\t{\n\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\tpositionChanged = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar rightCell = rank[rankValue][rankIndex + 1];\n\t\t\t\tvar rightLimit = rightCell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue);\n\t\t\t\trightLimit = rightLimit - rightCell.width / 2\n\t\t\t\t\t\t- this.intraCellSpacing - cell.width / 2;\n\t\t\t\t\n\t\t\t\tif (rightLimit > cellMedian)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t\telse if (rightLimit > cell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t+ tolerance)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, rightLimit);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (positionChanged)\n\t\t{\n\t\t\t// Add connected nodes to map and list\n\t\t\tfor (var i = 0; i < nextLayerConnectedCells.length; i++)\n\t\t\t{\n\t\t\t\tvar connectedCell = nextLayerConnectedCells[i];\n\t\t\t\tvar connectedCellWrapper = map.get(connectedCell);\n\t\t\t\t\n\t\t\t\tif (connectedCellWrapper != null)\n\t\t\t\t{\n\t\t\t\t\tif (connectedCellWrapper.visited == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tconnectedCellWrapper.visited = true;\n\t\t\t\t\t\tnodeList.push(connectedCellWrapper);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add connected nodes to map and list\n\t\t\tfor (var i = 0; i < previousLayerConnectedCells.length; i++)\n\t\t\t{\n\t\t\t\tvar connectedCell = previousLayerConnectedCells[i];\n\t\t\t\tvar connectedCellWrapper = map.get(connectedCell);\n\n\t\t\t\tif (connectedCellWrapper != null)\n\t\t\t\t{\n\t\t\t\t\tif (connectedCellWrapper.visited == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tconnectedCellWrapper.visited = true;\n\t\t\t\t\t\tnodeList.push(connectedCellWrapper);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tcellWrapper.visited = false;\n\t\tcount++;\n\t}\n};\n\n/**\n * Function: medianPos\n * \n * Performs one median positioning sweep in one direction\n * \n * Parameters:\n * \n * i - the iteration of the whole process\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.medianPos = function(i, model)\n{\n\t// Reverse sweep direction each time through this method\n\tvar downwardSweep = (i % 2 == 0);\n\t\n\tif (downwardSweep)\n\t{\n\t\tfor (var j = model.maxRank; j > 0; j--)\n\t\t{\n\t\t\tthis.rankMedianPosition(j - 1, model, j);\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor (var j = 0; j < model.maxRank - 1; j++)\n\t\t{\n\t\t\tthis.rankMedianPosition(j + 1, model, j);\n\t\t}\n\t}\n};\n\n/**\n * Function: rankMedianPosition\n * \n * Performs median minimisation over one rank.\n * \n * Parameters:\n * \n * rankValue - the layer number of this rank\n * model - an internal model of the hierarchical layout\n * nextRankValue - the layer number whose connected cels are to be laid out\n * relative to\n */\nmxCoordinateAssignment.prototype.rankMedianPosition = function(rankValue, model, nextRankValue)\n{\n\tvar rank = model.ranks[rankValue];\n\n\t// Form an array of the order in which the cell are to be processed\n\t// , the order is given by the weighted sum of the in or out edges,\n\t// depending on whether we're traveling up or down the hierarchy.\n\tvar weightedValues = [];\n\tvar cellMap = new Object();\n\n\tfor (var i = 0; i < rank.length; i++)\n\t{\n\t\tvar currentCell = rank[i];\n\t\tweightedValues[i] = new WeightedCellSorter();\n\t\tweightedValues[i].cell = currentCell;\n\t\tweightedValues[i].rankIndex = i;\n\t\tcellMap[currentCell.id] = weightedValues[i];\n\t\tvar nextLayerConnectedCells = null;\n\t\t\n\t\tif (nextRankValue < rankValue)\n\t\t{\n\t\t\tnextLayerConnectedCells = currentCell\n\t\t\t\t\t.getPreviousLayerConnectedCells(rankValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextLayerConnectedCells = currentCell\n\t\t\t\t\t.getNextLayerConnectedCells(rankValue);\n\t\t}\n\n\t\t// Calculate the weighing based on this node type and those this\n\t\t// node is connected to on the next layer\n\t\tweightedValues[i].weightedValue = this.calculatedWeightedValue(\n\t\t\t\tcurrentCell, nextLayerConnectedCells);\n\t}\n\n\tweightedValues.sort(WeightedCellSorter.prototype.compare);\n\n\t// Set the new position of each node within the rank using\n\t// its temp variable\n\t\n\tfor (var i = 0; i < weightedValues.length; i++)\n\t{\n\t\tvar numConnectionsNextLevel = 0;\n\t\tvar cell = weightedValues[i].cell;\n\t\tvar nextLayerConnectedCells = null;\n\t\tvar medianNextLevel = 0;\n\n\t\tif (nextRankValue < rankValue)\n\t\t{\n\t\t\tnextLayerConnectedCells = cell.getPreviousLayerConnectedCells(\n\t\t\t\t\trankValue).slice();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextLayerConnectedCells = cell.getNextLayerConnectedCells(\n\t\t\t\t\trankValue).slice();\n\t\t}\n\n\t\tif (nextLayerConnectedCells != null)\n\t\t{\n\t\t\tnumConnectionsNextLevel = nextLayerConnectedCells.length;\n\t\t\t\n\t\t\tif (numConnectionsNextLevel > 0)\n\t\t\t{\n\t\t\t\tmedianNextLevel = this.medianXValue(nextLayerConnectedCells,\n\t\t\t\t\t\tnextRankValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// For case of no connections on the next level set the\n\t\t\t\t// median to be the current position and try to be\n\t\t\t\t// positioned there\n\t\t\t\tmedianNextLevel = cell.getGeneralPurposeVariable(rankValue);\n\t\t\t}\n\t\t}\n\n\t\tvar leftBuffer = 0.0;\n\t\tvar leftLimit = -100000000.0;\n\t\t\n\t\tfor (var j = weightedValues[i].rankIndex - 1; j >= 0;)\n\t\t{\n\t\t\tvar weightedValue = cellMap[rank[j].id];\n\t\t\t\n\t\t\tif (weightedValue != null)\n\t\t\t{\n\t\t\t\tvar leftCell = weightedValue.cell;\n\t\t\t\t\n\t\t\t\tif (weightedValue.visited)\n\t\t\t\t{\n\t\t\t\t\t// The left limit is the right hand limit of that\n\t\t\t\t\t// cell plus any allowance for unallocated cells\n\t\t\t\t\t// in-between\n\t\t\t\t\tleftLimit = leftCell\n\t\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t\t+ leftCell.width\n\t\t\t\t\t\t\t/ 2.0\n\t\t\t\t\t\t\t+ this.intraCellSpacing\n\t\t\t\t\t\t\t+ leftBuffer + cell.width / 2.0;\n\t\t\t\t\tj = -1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tleftBuffer += leftCell.width + this.intraCellSpacing;\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar rightBuffer = 0.0;\n\t\tvar rightLimit = 100000000.0;\n\t\t\n\t\tfor (var j = weightedValues[i].rankIndex + 1; j < weightedValues.length;)\n\t\t{\n\t\t\tvar weightedValue = cellMap[rank[j].id];\n\t\t\t\n\t\t\tif (weightedValue != null)\n\t\t\t{\n\t\t\t\tvar rightCell = weightedValue.cell;\n\t\t\t\t\n\t\t\t\tif (weightedValue.visited)\n\t\t\t\t{\n\t\t\t\t\t// The left limit is the right hand limit of that\n\t\t\t\t\t// cell plus any allowance for unallocated cells\n\t\t\t\t\t// in-between\n\t\t\t\t\trightLimit = rightCell\n\t\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t\t- rightCell.width\n\t\t\t\t\t\t\t/ 2.0\n\t\t\t\t\t\t\t- this.intraCellSpacing\n\t\t\t\t\t\t\t- rightBuffer - cell.width / 2.0;\n\t\t\t\t\tj = weightedValues.length;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\trightBuffer += rightCell.width + this.intraCellSpacing;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (medianNextLevel >= leftLimit && medianNextLevel <= rightLimit)\n\t\t{\n\t\t\tcell.setGeneralPurposeVariable(rankValue, medianNextLevel);\n\t\t}\n\t\telse if (medianNextLevel < leftLimit)\n\t\t{\n\t\t\t// Couldn't place at median value, place as close to that\n\t\t\t// value as possible\n\t\t\tcell.setGeneralPurposeVariable(rankValue, leftLimit);\n\t\t\tthis.currentXDelta += leftLimit - medianNextLevel;\n\t\t}\n\t\telse if (medianNextLevel > rightLimit)\n\t\t{\n\t\t\t// Couldn't place at median value, place as close to that\n\t\t\t// value as possible\n\t\t\tcell.setGeneralPurposeVariable(rankValue, rightLimit);\n\t\t\tthis.currentXDelta += medianNextLevel - rightLimit;\n\t\t}\n\n\t\tweightedValues[i].visited = true;\n\t}\n};\n\n/**\n * Function: calculatedWeightedValue\n * \n * Calculates the priority the specified cell has based on the type of its\n * cell and the cells it is connected to on the next layer\n * \n * Parameters:\n * \n * currentCell - the cell whose weight is to be calculated\n * collection - the cells the specified cell is connected to\n */\nmxCoordinateAssignment.prototype.calculatedWeightedValue = function(currentCell, collection)\n{\n\tvar totalWeight = 0;\n\t\n\tfor (var i = 0; i < collection.length; i++)\n\t{\n\t\tvar cell = collection[i];\n\n\t\tif (currentCell.isVertex() && cell.isVertex())\n\t\t{\n\t\t\ttotalWeight++;\n\t\t}\n\t\telse if (currentCell.isEdge() && cell.isEdge())\n\t\t{\n\t\t\ttotalWeight += 8;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttotalWeight += 2;\n\t\t}\n\t}\n\n\treturn totalWeight;\n};\n\n/**\n * Function: medianXValue\n * \n * Calculates the median position of the connected cell on the specified\n * rank\n * \n * Parameters:\n * \n * connectedCells - the cells the candidate connects to on this level\n * rankValue - the layer number of this rank\n */\nmxCoordinateAssignment.prototype.medianXValue = function(connectedCells, rankValue)\n{\n\tif (connectedCells.length == 0)\n\t{\n\t\treturn 0;\n\t}\n\n\tvar medianValues = [];\n\n\tfor (var i = 0; i < connectedCells.length; i++)\n\t{\n\t\tmedianValues[i] = connectedCells[i].getGeneralPurposeVariable(rankValue);\n\t}\n\n\tmedianValues.sort(function(a,b){return a - b;});\n\t\n\tif (connectedCells.length % 2 == 1)\n\t{\n\t\t// For odd numbers of adjacent vertices return the median\n\t\treturn medianValues[Math.floor(connectedCells.length / 2)];\n\t}\n\telse\n\t{\n\t\tvar medianPoint = connectedCells.length / 2;\n\t\tvar leftMedian = medianValues[medianPoint - 1];\n\t\tvar rightMedian = medianValues[medianPoint];\n\n\t\treturn ((leftMedian + rightMedian) / 2);\n\t}\n};\n\n/**\n * Function: initialCoords\n * \n * Sets up the layout in an initial positioning. The ranks are all centered\n * as much as possible along the middle vertex in each rank. The other cells\n * are then placed as close as possible on either side.\n * \n * Parameters:\n * \n * facade - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.initialCoords = function(facade, model)\n{\n\tthis.calculateWidestRank(facade, model);\n\n\t// Sweep up and down from the widest rank\n\tfor (var i = this.widestRank; i >= 0; i--)\n\t{\n\t\tif (i < model.maxRank)\n\t\t{\n\t\t\tthis.rankCoordinates(i, facade, model);\n\t\t}\n\t}\n\n\tfor (var i = this.widestRank+1; i <= model.maxRank; i++)\n\t{\n\t\tif (i > 0)\n\t\t{\n\t\t\tthis.rankCoordinates(i, facade, model);\n\t\t}\n\t}\n};\n\n/**\n * Function: rankCoordinates\n * \n * Sets up the layout in an initial positioning. All the first cells in each\n * rank are moved to the left and the rest of the rank inserted as close\n * together as their size and buffering permits. This method works on just\n * the specified rank.\n * \n * Parameters:\n * \n * rankValue - the current rank being processed\n * graph - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.rankCoordinates = function(rankValue, graph, model)\n{\n\tvar rank = model.ranks[rankValue];\n\tvar maxY = 0.0;\n\tvar localX = this.initialX + (this.widestRankValue - this.rankWidths[rankValue])\n\t\t\t/ 2;\n\n\t// Store whether or not any of the cells' bounds were unavailable so\n\t// to only issue the warning once for all cells\n\tvar boundsWarning = false;\n\t\n\tfor (var i = 0; i < rank.length; i++)\n\t{\n\t\tvar node = rank[i];\n\t\t\n\t\tif (node.isVertex())\n\t\t{\n\t\t\tvar bounds = this.layout.getVertexBounds(node.cell);\n\n\t\t\tif (bounds != null)\n\t\t\t{\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tnode.width = bounds.width;\n\t\t\t\t\tnode.height = bounds.height;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnode.width = bounds.height;\n\t\t\t\t\tnode.height = bounds.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tboundsWarning = true;\n\t\t\t}\n\n\t\t\tmaxY = Math.max(maxY, node.height);\n\t\t}\n\t\telse if (node.isEdge())\n\t\t{\n\t\t\t// The width is the number of additional parallel edges\n\t\t\t// time the parallel edge spacing\n\t\t\tvar numEdges = 1;\n\n\t\t\tif (node.edges != null)\n\t\t\t{\n\t\t\t\tnumEdges = node.edges.length;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxLog.warn('edge.edges is null');\n\t\t\t}\n\n\t\t\tnode.width = (numEdges - 1) * this.parallelEdgeSpacing;\n\t\t}\n\n\t\t// Set the initial x-value as being the best result so far\n\t\tlocalX += node.width / 2.0;\n\t\tnode.setX(rankValue, localX);\n\t\tnode.setGeneralPurposeVariable(rankValue, localX);\n\t\tlocalX += node.width / 2.0;\n\t\tlocalX += this.intraCellSpacing;\n\t}\n\n\tif (boundsWarning == true)\n\t{\n\t\tmxLog.warn('At least one cell has no bounds');\n\t}\n};\n\n/**\n * Function: calculateWidestRank\n * \n * Calculates the width rank in the hierarchy. Also set the y value of each\n * rank whilst performing the calculation\n * \n * Parameters:\n * \n * graph - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.calculateWidestRank = function(graph, model)\n{\n\t// Starting y co-ordinate\n\tvar y = -this.interRankCellSpacing;\n\t\n\t// Track the widest cell on the last rank since the y\n\t// difference depends on it\n\tvar lastRankMaxCellHeight = 0.0;\n\tthis.rankWidths = [];\n\tthis.rankY = [];\n\n\tfor (var rankValue = model.maxRank; rankValue >= 0; rankValue--)\n\t{\n\t\t// Keep track of the widest cell on this rank\n\t\tvar maxCellHeight = 0.0;\n\t\tvar rank = model.ranks[rankValue];\n\t\tvar localX = this.initialX;\n\n\t\t// Store whether or not any of the cells' bounds were unavailable so\n\t\t// to only issue the warning once for all cells\n\t\tvar boundsWarning = false;\n\t\t\n\t\tfor (var i = 0; i < rank.length; i++)\n\t\t{\n\t\t\tvar node = rank[i];\n\n\t\t\tif (node.isVertex())\n\t\t\t{\n\t\t\t\tvar bounds = this.layout.getVertexBounds(node.cell);\n\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.width = bounds.width;\n\t\t\t\t\t\tnode.height = bounds.height;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.width = bounds.height;\n\t\t\t\t\t\tnode.height = bounds.width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tboundsWarning = true;\n\t\t\t\t}\n\n\t\t\t\tmaxCellHeight = Math.max(maxCellHeight, node.height);\n\t\t\t}\n\t\t\telse if (node.isEdge())\n\t\t\t{\n\t\t\t\t// The width is the number of additional parallel edges\n\t\t\t\t// time the parallel edge spacing\n\t\t\t\tvar numEdges = 1;\n\n\t\t\t\tif (node.edges != null)\n\t\t\t\t{\n\t\t\t\t\tnumEdges = node.edges.length;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmxLog.warn('edge.edges is null');\n\t\t\t\t}\n\n\t\t\t\tnode.width = (numEdges - 1) * this.parallelEdgeSpacing;\n\t\t\t}\n\n\t\t\t// Set the initial x-value as being the best result so far\n\t\t\tlocalX += node.width / 2.0;\n\t\t\tnode.setX(rankValue, localX);\n\t\t\tnode.setGeneralPurposeVariable(rankValue, localX);\n\t\t\tlocalX += node.width / 2.0;\n\t\t\tlocalX += this.intraCellSpacing;\n\n\t\t\tif (localX > this.widestRankValue)\n\t\t\t{\n\t\t\t\tthis.widestRankValue = localX;\n\t\t\t\tthis.widestRank = rankValue;\n\t\t\t}\n\n\t\t\tthis.rankWidths[rankValue] = localX;\n\t\t}\n\n\t\tif (boundsWarning == true)\n\t\t{\n\t\t\tmxLog.warn('At least one cell has no bounds');\n\t\t}\n\n\t\tthis.rankY[rankValue] = y;\n\t\tvar distanceToNextRank = maxCellHeight / 2.0\n\t\t\t\t+ lastRankMaxCellHeight / 2.0 + this.interRankCellSpacing;\n\t\tlastRankMaxCellHeight = maxCellHeight;\n\n\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\tthis.orientation == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\ty += distanceToNextRank;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ty -= distanceToNextRank;\n\t\t}\n\n\t\tfor (var i = 0; i < rank.length; i++)\n\t\t{\n\t\t\tvar cell = rank[i];\n\t\t\tcell.setY(rankValue, y);\n\t\t}\n\t}\n};\n\n/**\n * Function: minPath\n * \n * Straightens out chains of virtual nodes where possibleacade to those stored after this layout\n * processing step has completed.\n * \n * Parameters:\n *\n * graph - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.minPath = function(graph, model)\n{\n\t// Work down and up each edge with at least 2 control points\n\t// trying to straighten each one out. If the same number of\n\t// straight segments are formed in both directions, the \n\t// preferred direction used is the one where the final\n\t// control points have the least offset from the connectable \n\t// region of the terminating vertices\n\tvar edges = model.edgeMapper.getValues();\n\t\n\tfor (var j = 0; j < edges.length; j++)\n\t{\n\t\tvar cell = edges[j];\n\t\t\n\t\tif (cell.maxRank - cell.minRank - 1 < 1)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\t// At least two virtual nodes in the edge\n\t\t// Check first whether the edge is already straight\n\t\tvar referenceX = cell\n\t\t\t\t.getGeneralPurposeVariable(cell.minRank + 1);\n\t\tvar edgeStraight = true;\n\t\tvar refSegCount = 0;\n\t\t\n\t\tfor (var i = cell.minRank + 2; i < cell.maxRank; i++)\n\t\t{\n\t\t\tvar x = cell.getGeneralPurposeVariable(i);\n\n\t\t\tif (referenceX != x)\n\t\t\t{\n\t\t\t\tedgeStraight = false;\n\t\t\t\treferenceX = x;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\trefSegCount++;\n\t\t\t}\n\t\t}\n\n\t\tif (!edgeStraight)\n\t\t{\n\t\t\tvar upSegCount = 0;\n\t\t\tvar downSegCount = 0;\n\t\t\tvar upXPositions = [];\n\t\t\tvar downXPositions = [];\n\n\t\t\tvar currentX = cell.getGeneralPurposeVariable(cell.minRank + 1);\n\n\t\t\tfor (var i = cell.minRank + 1; i < cell.maxRank - 1; i++)\n\t\t\t{\n\t\t\t\t// Attempt to straight out the control point on the\n\t\t\t\t// next segment up with the current control point.\n\t\t\t\tvar nextX = cell.getX(i + 1);\n\n\t\t\t\tif (currentX == nextX)\n\t\t\t\t{\n\t\t\t\t\tupXPositions[i - cell.minRank - 1] = currentX;\n\t\t\t\t\tupSegCount++;\n\t\t\t\t}\n\t\t\t\telse if (this.repositionValid(model, cell, i + 1, currentX))\n\t\t\t\t{\n\t\t\t\t\tupXPositions[i - cell.minRank - 1] = currentX;\n\t\t\t\t\tupSegCount++;\n\t\t\t\t\t// Leave currentX at same value\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tupXPositions[i - cell.minRank - 1] = nextX;\n\t\t\t\t\tcurrentX = nextX;\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\n\t\t\tcurrentX = cell.getX(i);\n\n\t\t\tfor (var i = cell.maxRank - 1; i > cell.minRank + 1; i--)\n\t\t\t{\n\t\t\t\t// Attempt to straight out the control point on the\n\t\t\t\t// next segment down with the current control point.\n\t\t\t\tvar nextX = cell.getX(i - 1);\n\n\t\t\t\tif (currentX == nextX)\n\t\t\t\t{\n\t\t\t\t\tdownXPositions[i - cell.minRank - 2] = currentX;\n\t\t\t\t\tdownSegCount++;\n\t\t\t\t}\n\t\t\t\telse if (this.repositionValid(model, cell, i - 1, currentX))\n\t\t\t\t{\n\t\t\t\t\tdownXPositions[i - cell.minRank - 2] = currentX;\n\t\t\t\t\tdownSegCount++;\n\t\t\t\t\t// Leave currentX at same value\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdownXPositions[i - cell.minRank - 2] = cell.getX(i-1);\n\t\t\t\t\tcurrentX = nextX;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (downSegCount > refSegCount || upSegCount > refSegCount)\n\t\t\t{\n\t\t\t\tif (downSegCount >= upSegCount)\n\t\t\t\t{\n\t\t\t\t\t// Apply down calculation values\n\t\t\t\t\tfor (var i = cell.maxRank - 2; i > cell.minRank; i--)\n\t\t\t\t\t{\n\t\t\t\t\t\tcell.setX(i, downXPositions[i - cell.minRank - 1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (upSegCount > downSegCount)\n\t\t\t\t{\n\t\t\t\t\t// Apply up calculation values\n\t\t\t\t\tfor (var i = cell.minRank + 2; i < cell.maxRank; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tcell.setX(i, upXPositions[i - cell.minRank - 2]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Neither direction provided a favourable result\n\t\t\t\t\t// But both calculations are better than the\n\t\t\t\t\t// existing solution, so apply the one with minimal\n\t\t\t\t\t// offset to attached vertices at either end.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: repositionValid\n * \n * Determines whether or not a node may be moved to the specified x \n * position on the specified rank\n * \n * Parameters:\n *\n * model - the layout model\n * cell - the cell being analysed\n * rank - the layer of the cell\n * position - the x position being sought\n */\nmxCoordinateAssignment.prototype.repositionValid = function(model, cell, rank, position)\n{\n\tvar rankArray = model.ranks[rank];\n\tvar rankIndex = -1;\n\n\tfor (var i = 0; i < rankArray.length; i++)\n\t{\n\t\tif (cell == rankArray[i])\n\t\t{\n\t\t\trankIndex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (rankIndex < 0)\n\t{\n\t\treturn false;\n\t}\n\n\tvar currentX = cell.getGeneralPurposeVariable(rank);\n\n\tif (position < currentX)\n\t{\n\t\t// Trying to move node to the left.\n\t\tif (rankIndex == 0)\n\t\t{\n\t\t\t// Left-most node, can move anywhere\n\t\t\treturn true;\n\t\t}\n\n\t\tvar leftCell = rankArray[rankIndex - 1];\n\t\tvar leftLimit = leftCell.getGeneralPurposeVariable(rank);\n\t\tleftLimit = leftLimit + leftCell.width / 2\n\t\t\t\t+ this.intraCellSpacing + cell.width / 2;\n\n\t\tif (leftLimit <= position)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse if (position > currentX)\n\t{\n\t\t// Trying to move node to the right.\n\t\tif (rankIndex == rankArray.length - 1)\n\t\t{\n\t\t\t// Right-most node, can move anywhere\n\t\t\treturn true;\n\t\t}\n\n\t\tvar rightCell = rankArray[rankIndex + 1];\n\t\tvar rightLimit = rightCell.getGeneralPurposeVariable(rank);\n\t\trightLimit = rightLimit - rightCell.width / 2\n\t\t\t\t- this.intraCellSpacing - cell.width / 2;\n\n\t\tif (rightLimit >= position)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\n/**\n * Function: setCellLocations\n * \n * Sets the cell locations in the facade to those stored after this layout\n * processing step has completed.\n * \n * Parameters:\n *\n * graph - the input graph\n * model - the layout model\n */\nmxCoordinateAssignment.prototype.setCellLocations = function(graph, model)\n{\n\tthis.rankTopY = [];\n\tthis.rankBottomY = [];\n\n\tfor (var i = 0; i < model.ranks.length; i++)\n\t{\n\t\tthis.rankTopY[i] = Number.MAX_VALUE;\n\t\tthis.rankBottomY[i] = -Number.MAX_VALUE;\n\t}\n\t\n\tvar vertices = model.vertexMapper.getValues();\n\n\t// Process vertices all first, since they define the lower and \n\t// limits of each rank. Between these limits lie the channels\n\t// where the edges can be routed across the graph\n\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tthis.setVertexLocation(vertices[i]);\n\t}\n\t\n\t// Post process edge styles. Needs the vertex locations set for initial\n\t// values of the top and bottoms of each rank\n\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.ORTHOGONAL\n\t\t\t|| this.layout.edgeStyle == mxHierarchicalEdgeStyle.POLYLINE\n\t\t\t|| this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t{\n\t\tthis.localEdgeProcessing(model);\n\t}\n\n\tvar edges = model.edgeMapper.getValues();\n\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tthis.setEdgePosition(edges[i]);\n\t}\n};\n\n/**\n * Function: localEdgeProcessing\n * \n * Separates the x position of edges as they connect to vertices\n * \n * Parameters:\n *\n * model - the layout model\n */\nmxCoordinateAssignment.prototype.localEdgeProcessing = function(model)\n{\n\t// Iterate through each vertex, look at the edges connected in\n\t// both directions.\n\tfor (var rankIndex = 0; rankIndex < model.ranks.length; rankIndex++)\n\t{\n\t\tvar rank = model.ranks[rankIndex];\n\n\t\tfor (var cellIndex = 0; cellIndex < rank.length; cellIndex++)\n\t\t{\n\t\t\tvar cell = rank[cellIndex];\n\n\t\t\tif (cell.isVertex())\n\t\t\t{\n\t\t\t\tvar currentCells = cell.getPreviousLayerConnectedCells(rankIndex);\n\n\t\t\t\tvar currentRank = rankIndex - 1;\n\n\t\t\t\t// Two loops, last connected cells, and next\n\t\t\t\tfor (var k = 0; k < 2; k++)\n\t\t\t\t{\n\t\t\t\t\tif (currentRank > -1\n\t\t\t\t\t\t\t&& currentRank < model.ranks.length\n\t\t\t\t\t\t\t&& currentCells != null\n\t\t\t\t\t\t\t&& currentCells.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar sortedCells = [];\n\n\t\t\t\t\t\tfor (var j = 0; j < currentCells.length; j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar sorter = new WeightedCellSorter(\n\t\t\t\t\t\t\t\t\tcurrentCells[j], currentCells[j].getX(currentRank));\n\t\t\t\t\t\t\tsortedCells.push(sorter);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsortedCells.sort(WeightedCellSorter.prototype.compare);\n\n\t\t\t\t\t\tvar leftLimit = cell.x[0] - cell.width / 2;\n\t\t\t\t\t\tvar rightLimit = leftLimit + cell.width;\n\n\t\t\t\t\t\t// Connected edge count starts at 1 to allow for buffer\n\t\t\t\t\t\t// with edge of vertex\n\t\t\t\t\t\tvar connectedEdgeCount = 0;\n\t\t\t\t\t\tvar connectedEdgeGroupCount = 0;\n\t\t\t\t\t\tvar connectedEdges = [];\n\t\t\t\t\t\t// Calculate width requirements for all connected edges\n\t\t\t\t\t\tfor (var j = 0; j < sortedCells.length; j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar innerCell = sortedCells[j].cell;\n\t\t\t\t\t\t\tvar connections;\n\n\t\t\t\t\t\t\tif (innerCell.isVertex())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// Get the connecting edge\n\t\t\t\t\t\t\t\tif (k == 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconnections = cell.connectsAsSource;\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconnections = cell.connectsAsTarget;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfor (var connIndex = 0; connIndex < connections.length; connIndex++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (connections[connIndex].source == innerCell\n\t\t\t\t\t\t\t\t\t\t\t|| connections[connIndex].target == innerCell)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconnectedEdgeCount += connections[connIndex].edges\n\t\t\t\t\t\t\t\t\t\t\t\t.length;\n\t\t\t\t\t\t\t\t\t\tconnectedEdgeGroupCount++;\n\n\t\t\t\t\t\t\t\t\t\tconnectedEdges.push(connections[connIndex]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconnectedEdgeCount += innerCell.edges.length;\n\t\t\t\t\t\t\t\tconnectedEdgeGroupCount++;\n\t\t\t\t\t\t\t\tconnectedEdges.push(innerCell);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar requiredWidth = (connectedEdgeCount + 1)\n\t\t\t\t\t\t\t\t* this.prefHozEdgeSep;\n\n\t\t\t\t\t\t// Add a buffer on the edges of the vertex if the edge count allows\n\t\t\t\t\t\tif (cell.width > requiredWidth\n\t\t\t\t\t\t\t\t+ (2 * this.prefHozEdgeSep))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tleftLimit += this.prefHozEdgeSep;\n\t\t\t\t\t\t\trightLimit -= this.prefHozEdgeSep;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar availableWidth = rightLimit - leftLimit;\n\t\t\t\t\t\tvar edgeSpacing = availableWidth / connectedEdgeCount;\n\n\t\t\t\t\t\tvar currentX = leftLimit + edgeSpacing / 2.0;\n\t\t\t\t\t\tvar currentYOffset = this.minEdgeJetty - this.prefVertEdgeOff;\n\t\t\t\t\t\tvar maxYOffset = 0;\n\n\t\t\t\t\t\tfor (var j = 0; j < connectedEdges.length; j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar numActualEdges = connectedEdges[j].edges\n\t\t\t\t\t\t\t\t\t.length;\n\t\t\t\t\t\t\tvar pos = this.jettyPositions[connectedEdges[j].ids[0]];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (pos == null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpos = [];\n\t\t\t\t\t\t\t\tthis.jettyPositions[connectedEdges[j].ids[0]] = pos;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (j < connectedEdgeCount / 2)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcurrentYOffset += this.prefVertEdgeOff;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (j > connectedEdgeCount / 2)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcurrentYOffset -= this.prefVertEdgeOff;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Ignore the case if equals, this means the second of 2\n\t\t\t\t\t\t\t// jettys with the same y (even number of edges)\n\n\t\t\t\t\t\t\tfor (var m = 0; m < numActualEdges; m++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpos[m * 4 + k * 2] = currentX;\n\t\t\t\t\t\t\t\tcurrentX += edgeSpacing;\n\t\t\t\t\t\t\t\tpos[m * 4 + k * 2 + 1] = currentYOffset;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tmaxYOffset = Math.max(maxYOffset,\n\t\t\t\t\t\t\t\t\tcurrentYOffset);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentCells = cell.getNextLayerConnectedCells(rankIndex);\n\n\t\t\t\t\tcurrentRank = rankIndex + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: setEdgePosition\n * \n * Fixes the control points\n */\nmxCoordinateAssignment.prototype.setEdgePosition = function(cell)\n{\n\t// For parallel edges we need to seperate out the points a\n\t// little\n\tvar offsetX = 0;\n\t// Only set the edge control points once\n\n\tif (cell.temp[0] != 101207)\n\t{\n\t\tvar maxRank = cell.maxRank;\n\t\tvar minRank = cell.minRank;\n\t\t\n\t\tif (maxRank == minRank)\n\t\t{\n\t\t\tmaxRank = cell.source.maxRank;\n\t\t\tminRank = cell.target.minRank;\n\t\t}\n\t\t\n\t\tvar parallelEdgeCount = 0;\n\t\tvar jettys = this.jettyPositions[cell.ids[0]];\n\n\t\tvar source = cell.isReversed ? cell.target.cell : cell.source.cell;\n\t\tvar graph = this.layout.graph;\n\t\tvar layoutReversed = this.orientation == mxConstants.DIRECTION_EAST\n\t\t\t\t|| this.orientation == mxConstants.DIRECTION_SOUTH;\n\n\t\tfor (var i = 0; i < cell.edges.length; i++)\n\t\t{\n\t\t\tvar realEdge = cell.edges[i];\n\t\t\tvar realSource = this.layout.getVisibleTerminal(realEdge, true);\n\n\t\t\t//List oldPoints = graph.getPoints(realEdge);\n\t\t\tvar newPoints = [];\n\n\t\t\t// Single length reversed edges end up with the jettys in the wrong\n\t\t\t// places. Since single length edges only have jettys, not segment\n\t\t\t// control points, we just say the edge isn't reversed in this section\n\t\t\tvar reversed = cell.isReversed;\n\t\t\t\n\t\t\tif (realSource != source)\n\t\t\t{\n\t\t\t\t// The real edges include all core model edges and these can go\n\t\t\t\t// in both directions. If the source of the hierarchical model edge\n\t\t\t\t// isn't the source of the specific real edge in this iteration\n\t\t\t\t// treat if as reversed\n\t\t\t\treversed = !reversed;\n\t\t\t}\n\n\t\t\t// First jetty of edge\n\t\t\tif (jettys != null)\n\t\t\t{\n\t\t\t\tvar arrayOffset = reversed ? 2 : 0;\n\t\t\t\tvar y = reversed ?\n\t\t\t\t\t\t(layoutReversed ? this.rankBottomY[minRank] : this.rankTopY[minRank]) :\n\t\t\t\t\t\t\t(layoutReversed ? this.rankTopY[maxRank] : this.rankBottomY[maxRank]);\n\t\t\t\tvar jetty = jettys[parallelEdgeCount * 4 + 1 + arrayOffset];\n\t\t\t\t\n\t\t\t\tif (reversed != layoutReversed)\n\t\t\t\t{\n\t\t\t\t\tjetty = -jetty;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ty += jetty;\n\t\t\t\tvar x = jettys[parallelEdgeCount * 4 + arrayOffset];\n\t\t\t\t\n\t\t\t\tvar modelSource = graph.model.getTerminal(realEdge, true);\n\n\t\t\t\tif (this.layout.isPort(modelSource) && graph.model.getParent(modelSource) == realSource)\n\t\t\t\t{\n\t\t\t\t\tvar state = graph.view.getState(modelSource);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tx = state.x;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tx = realSource.geometry.x + cell.source.width * modelSource.geometry.x;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH\n\t\t\t\t\t\t|| this.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\t\t\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(x, y + jetty));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(y, x));\n\t\t\t\t\t\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(y + jetty, x));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Declare variables to define loop through edge points and \n\t\t\t// change direction if edge is reversed\n\n\t\t\tvar loopStart = cell.x.length - 1;\n\t\t\tvar loopLimit = -1;\n\t\t\tvar loopDelta = -1;\n\t\t\tvar currentRank = cell.maxRank - 1;\n\n\t\t\tif (reversed)\n\t\t\t{\n\t\t\t\tloopStart = 0;\n\t\t\t\tloopLimit = cell.x.length;\n\t\t\t\tloopDelta = 1;\n\t\t\t\tcurrentRank = cell.minRank + 1;\n\t\t\t}\n\t\t\t// Reversed edges need the points inserted in\n\t\t\t// reverse order\n\t\t\tfor (var j = loopStart; (cell.maxRank != cell.minRank) && j != loopLimit; j += loopDelta)\n\t\t\t{\n\t\t\t\t// The horizontal position in a vertical layout\n\t\t\t\tvar positionX = cell.x[j] + offsetX;\n\n\t\t\t\t// Work out the vertical positions in a vertical layout\n\t\t\t\t// in the edge buffer channels above and below this rank\n\t\t\t\tvar topChannelY = (this.rankTopY[currentRank] + this.rankBottomY[currentRank + 1]) / 2.0;\n\t\t\t\tvar bottomChannelY = (this.rankTopY[currentRank - 1] + this.rankBottomY[currentRank]) / 2.0;\n\n\t\t\t\tif (reversed)\n\t\t\t\t{\n\t\t\t\t\tvar tmp = topChannelY;\n\t\t\t\t\ttopChannelY = bottomChannelY;\n\t\t\t\t\tbottomChannelY = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(positionX, topChannelY));\n\t\t\t\t\tnewPoints.push(new mxPoint(positionX, bottomChannelY));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(topChannelY, positionX));\n\t\t\t\t\tnewPoints.push(new mxPoint(bottomChannelY, positionX));\n\t\t\t\t}\n\n\t\t\t\tthis.limitX = Math.max(this.limitX, positionX);\n\t\t\t\tcurrentRank += loopDelta;\n\t\t\t}\n\n\t\t\t// Second jetty of edge\n\t\t\tif (jettys != null)\n\t\t\t{\n\t\t\t\tvar arrayOffset = reversed ? 2 : 0;\n\t\t\t\tvar rankY = reversed ?\n\t\t\t\t\t\t(layoutReversed ? this.rankTopY[maxRank] : this.rankBottomY[maxRank]) :\n\t\t\t\t\t\t\t(layoutReversed ? this.rankBottomY[minRank] : this.rankTopY[minRank]);\n\t\t\t\tvar jetty = jettys[parallelEdgeCount * 4 + 3 - arrayOffset];\n\t\t\t\t\n\t\t\t\tif (reversed != layoutReversed)\n\t\t\t\t{\n\t\t\t\t\tjetty = -jetty;\n\t\t\t\t}\n\t\t\t\tvar y = rankY - jetty;\n\t\t\t\tvar x = jettys[parallelEdgeCount * 4 + 2 - arrayOffset];\n\t\t\t\t\n\t\t\t\tvar modelTarget = graph.model.getTerminal(realEdge, false);\n\t\t\t\tvar realTarget = this.layout.getVisibleTerminal(realEdge, false);\n\n\t\t\t\tif (this.layout.isPort(modelTarget) && graph.model.getParent(modelTarget) == realTarget)\n\t\t\t\t{\n\t\t\t\t\tvar state = graph.view.getState(modelTarget);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tx = state.x;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tx = realTarget.geometry.x + cell.target.width * modelTarget.geometry.x;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(x, y - jetty));\n\t\t\t\t\t}\n\n\t\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(y - jetty, x));\n\t\t\t\t\t}\n\n\t\t\t\t\tnewPoints.push(new mxPoint(y, x));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cell.isReversed)\n\t\t\t{\n\t\t\t\tthis.processReversedEdge(cell, realEdge);\n\t\t\t}\n\n\t\t\tthis.layout.setEdgePoints(realEdge, newPoints);\n\n\t\t\t// Increase offset so next edge is drawn next to\n\t\t\t// this one\n\t\t\tif (offsetX == 0.0)\n\t\t\t{\n\t\t\t\toffsetX = this.parallelEdgeSpacing;\n\t\t\t}\n\t\t\telse if (offsetX > 0)\n\t\t\t{\n\t\t\t\toffsetX = -offsetX;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\toffsetX = -offsetX + this.parallelEdgeSpacing;\n\t\t\t}\n\t\t\t\n\t\t\tparallelEdgeCount++;\n\t\t}\n\n\t\tcell.temp[0] = 101207;\n\t}\n};\n\n\n/**\n * Function: setVertexLocation\n * \n * Fixes the position of the specified vertex.\n * \n * Parameters:\n * \n * cell - the vertex to position\n */\nmxCoordinateAssignment.prototype.setVertexLocation = function(cell)\n{\n\tvar realCell = cell.cell;\n\tvar positionX = cell.x[0] - cell.width / 2;\n\tvar positionY = cell.y[0] - cell.height / 2;\n\n\tthis.rankTopY[cell.minRank] = Math.min(this.rankTopY[cell.minRank], positionY);\n\tthis.rankBottomY[cell.minRank] = Math.max(this.rankBottomY[cell.minRank],\n\t\t\tpositionY + cell.height);\n\n\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t{\n\t\tthis.layout.setVertexLocation(realCell, positionX, positionY);\n\t}\n\telse\n\t{\n\t\tthis.layout.setVertexLocation(realCell, positionY, positionX);\n\t}\n\n\tthis.limitX = Math.max(this.limitX, positionX + cell.width);\n};\n\n/**\n * Function: processReversedEdge\n * \n * Hook to add additional processing\n * \n * Parameters:\n * \n * edge - the hierarchical model edge\n * realEdge - the real edge in the graph\n */\nmxCoordinateAssignment.prototype.processReversedEdge = function(graph, model)\n{\n\t// hook for subclassers\n};\n\n__mxOutput.mxCoordinateAssignment = typeof mxCoordinateAssignment !== 'undefined' ? mxCoordinateAssignment : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneOrdering\n * \n * An implementation of the first stage of the Sugiyama layout. Straightforward\n * longest path calculation of layer assignment\n * \n * Constructor: mxSwimlaneOrdering\n *\n * Creates a cycle remover for the given internal model.\n */\nfunction mxSwimlaneOrdering(layout)\n{\n\tthis.layout = layout;\n};\n\n/**\n * Extends mxHierarchicalLayoutStage.\n */\nmxSwimlaneOrdering.prototype = new mxHierarchicalLayoutStage();\nmxSwimlaneOrdering.prototype.constructor = mxSwimlaneOrdering;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxSwimlaneOrdering.prototype.layout = null;\n\n/**\n * Function: execute\n * \n * Takes the graph detail and configuration information within the facade\n * and creates the resulting laid out graph within that facade for further\n * use.\n */\nmxSwimlaneOrdering.prototype.execute = function(parent)\n{\n\tvar model = this.layout.getModel();\n\tvar seenNodes = new Object();\n\tvar unseenNodes = mxUtils.clone(model.vertexMapper, null, true);\n\t\n\t// Perform a dfs through the internal model. If a cycle is found,\n\t// reverse it.\n\tvar rootsArray = null;\n\t\n\tif (model.roots != null)\n\t{\n\t\tvar modelRoots = model.roots;\n\t\trootsArray = [];\n\t\t\n\t\tfor (var i = 0; i < modelRoots.length; i++)\n\t\t{\n\t\t\trootsArray[i] = model.vertexMapper.get(modelRoots[i]);\n\t\t}\n\t}\n\n\tmodel.visit(function(parent, node, connectingEdge, layer, seen)\n\t{\n\t\t// Check if the cell is in it's own ancestor list, if so\n\t\t// invert the connecting edge and reverse the target/source\n\t\t// relationship to that edge in the parent and the cell\n\t\t// Ancestor hashes only line up within a swimlane\n\t\tvar isAncestor = parent != null && parent.swimlaneIndex == node.swimlaneIndex && node.isAncestor(parent);\n\n\t\t// If the source->target swimlane indices go from higher to\n\t\t// lower, the edge is reverse\n\t\tvar reversedOverSwimlane = parent != null && connectingEdge != null &&\n\t\t\t\t\t\tparent.swimlaneIndex < node.swimlaneIndex && connectingEdge.source == node;\n\n\t\tif (isAncestor)\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsSource);\n\t\t\tnode.connectsAsSource.push(connectingEdge);\n\t\t\tparent.connectsAsTarget.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsTarget);\n\t\t}\n\t\telse if (reversedOverSwimlane)\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsTarget);\n\t\t\tnode.connectsAsTarget.push(connectingEdge);\n\t\t\tparent.connectsAsSource.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsSource);\n\t\t}\n\t\t\n\t\tvar cellId = mxCellPath.create(node.cell);\n\t\tseenNodes[cellId] = node;\n\t\tdelete unseenNodes[cellId];\n\t}, rootsArray, true, null);\n};\n\n__mxOutput.mxSwimlaneOrdering = typeof mxSwimlaneOrdering !== 'undefined' ? mxSwimlaneOrdering : undefined;\n\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxHierarchicalLayout\n * \n * A hierarchical layout algorithm.\n * \n * Constructor: mxHierarchicalLayout\n *\n * Constructs a new hierarchical layout algorithm.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * orientation - Optional constant that defines the orientation of this\n * layout.\n * deterministic - Optional boolean that specifies if this layout should be\n * deterministic. Default is true.\n */\nfunction mxHierarchicalLayout(graph, orientation, deterministic)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.orientation = (orientation != null) ? orientation : mxConstants.DIRECTION_NORTH;\n\tthis.deterministic = (deterministic != null) ? deterministic : true;\n};\n\nvar mxHierarchicalEdgeStyle =\n{\n\tORTHOGONAL: 1,\n\tPOLYLINE: 2,\n\tSTRAIGHT: 3,\n\tCURVE: 4\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxHierarchicalLayout.prototype = new mxGraphLayout();\nmxHierarchicalLayout.prototype.constructor = mxHierarchicalLayout;\n\n/**\n * Variable: roots\n * \n * Holds the array of <mxCell> that this layout contains.\n */\nmxHierarchicalLayout.prototype.roots = null;\n\n/**\n * Variable: resizeParent\n * \n * Specifies if the parent should be resized after the layout so that it\n * contains all the child cells. Default is false. See also <parentBorder>.\n */\nmxHierarchicalLayout.prototype.resizeParent = false;\n\n/**\n * Variable: maintainParentLocation\n * \n * Specifies if the parent location should be maintained, so that the\n * top, left corner stays the same before and after execution of\n * the layout. Default is false for backwards compatibility.\n */\nmxHierarchicalLayout.prototype.maintainParentLocation = false;\n\n/**\n * Variable: moveParent\n * \n * Specifies if the parent should be moved if <resizeParent> is enabled.\n * Default is false.\n */\nmxHierarchicalLayout.prototype.moveParent = false;\n\n/**\n * Variable: parentBorder\n * \n * The border to be added around the children if the parent is to be\n * resized using <resizeParent>. Default is 0.\n */\nmxHierarchicalLayout.prototype.parentBorder = 0;\n\n/**\n * Variable: intraCellSpacing\n * \n * The spacing buffer added between cells on the same layer. Default is 30.\n */\nmxHierarchicalLayout.prototype.intraCellSpacing = 30;\n\n/**\n * Variable: interRankCellSpacing\n * \n * The spacing buffer added between cell on adjacent layers. Default is 100.\n */\nmxHierarchicalLayout.prototype.interRankCellSpacing = 100;\n\n/**\n * Variable: interHierarchySpacing\n * \n * The spacing buffer between unconnected hierarchies. Default is 60.\n */\nmxHierarchicalLayout.prototype.interHierarchySpacing = 60;\n\n/**\n * Variable: parallelEdgeSpacing\n * \n * The distance between each parallel edge on each ranks for long edges.\n * Default is 10.\n */\nmxHierarchicalLayout.prototype.parallelEdgeSpacing = 10;\n\n/**\n * Variable: orientation\n * \n * The position of the root node(s) relative to the laid out graph in.\n * Default is <mxConstants.DIRECTION_NORTH>.\n */\nmxHierarchicalLayout.prototype.orientation = mxConstants.DIRECTION_NORTH;\n\n/**\n * Variable: fineTuning\n * \n * Whether or not to perform local optimisations and iterate multiple times\n * through the algorithm. Default is true.\n */\nmxHierarchicalLayout.prototype.fineTuning = true;\n\n/**\n * \n * Variable: tightenToSource\n * \n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells. Default is true.\n */\nmxHierarchicalLayout.prototype.tightenToSource = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxHierarchicalLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Variable: traverseAncestors\n * \n * Whether or not to drill into child cells and layout in reverse\n * group order. This also cause the layout to navigate edges whose \n * terminal vertices have different parents but are in the same \n * ancestry chain. Default is true.\n */\nmxHierarchicalLayout.prototype.traverseAncestors = true;\n\n/**\n * Variable: model\n * \n * The internal <mxGraphHierarchyModel> formed of the layout.\n */\nmxHierarchicalLayout.prototype.model = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgesCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgeSourceTermCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgesTargetTermCache = null;\n\n/**\n * Variable: edgeStyle\n * \n * The style to apply between cell layers to edge segments.\n * Default is <mxHierarchicalEdgeStyle.POLYLINE>.\n */\nmxHierarchicalLayout.prototype.edgeStyle = mxHierarchicalEdgeStyle.POLYLINE;\n\n/**\n * Function: getModel\n * \n * Returns the internal <mxGraphHierarchyModel> for this layout algorithm.\n */\nmxHierarchicalLayout.prototype.getModel = function()\n{\n\treturn this.model;\n};\n\n/**\n * Function: execute\n * \n * Executes the layout for the children of the specified parent.\n * \n * Parameters:\n * \n * parent - Parent <mxCell> that contains the children to be laid out.\n * roots - Optional starting roots of the layout.\n */\nmxHierarchicalLayout.prototype.execute = function(parent, roots)\n{\n\tthis.parent = parent;\n\tvar model = this.graph.model;\n\tthis.edgesCache = new mxDictionary();\n\tthis.edgeSourceTermCache = new mxDictionary();\n\tthis.edgesTargetTermCache = new mxDictionary();\n\n\tif (roots != null && !(roots instanceof Array))\n\t{\n\t\troots = [roots];\n\t}\n\t\n\t// If the roots are set and the parent is set, only\n\t// use the roots that are some dependent of the that\n\t// parent.\n\t// If just the root are set, use them as-is\n\t// If just the parent is set use it's immediate\n\t// children as the initial set\n\n\tif (roots == null && parent == null)\n\t{\n\t\t// TODO indicate the problem\n\t\treturn;\n\t}\n\t\n\t//  Maintaining parent location\n\tthis.parentX = null;\n\tthis.parentY = null;\n\t\n\tif (parent != this.root && model.isVertex(parent) != null && this.maintainParentLocation)\n\t{\n\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tthis.parentX = geo.x;\n\t\t\tthis.parentY = geo.y;\n\t\t}\n\t}\n\t\n\tif (roots != null)\n\t{\n\t\tvar rootsCopy = [];\n\n\t\tfor (var i = 0; i < roots.length; i++)\n\t\t{\n\t\t\tvar ancestor = parent != null ? model.isAncestor(parent, roots[i]) : true;\n\t\t\t\n\t\t\tif (ancestor && model.isVertex(roots[i]))\n\t\t\t{\n\t\t\t\trootsCopy.push(roots[i]);\n\t\t\t}\n\t\t}\n\n\t\tthis.roots = rootsCopy;\n\t}\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tthis.run(parent);\n\t\t\n\t\tif (this.resizeParent && !this.graph.isCellCollapsed(parent))\n\t\t{\n\t\t\tthis.graph.updateGroupBounds([parent], this.parentBorder, this.moveParent);\n\t\t}\n\t\t\n\t\t// Maintaining parent location\n\t\tif (this.parentX != null && this.parentY != null)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.x = this.parentX;\n\t\t\t\tgeo.y = this.parentY;\n\t\t\t\tmodel.setGeometry(parent, geo);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: findRoots\n * \n * Returns all visible children in the given parent which do not have\n * incoming edges. If the result is empty then the children with the\n * maximum difference between incoming and outgoing edges are returned.\n * This takes into account edges that are being promoted to the given\n * root due to invisible children or collapsed cells.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be checked.\n * vertices - array of vertices to limit search to\n */\nmxHierarchicalLayout.prototype.findRoots = function(parent, vertices)\n{\n\tvar roots = [];\n\t\n\tif (parent != null && vertices != null)\n\t{\n\t\tvar model = this.graph.model;\n\t\tvar best = null;\n\t\tvar maxDiff = -100000;\n\t\t\n\t\tfor (var i in vertices)\n\t\t{\n\t\t\tvar cell = vertices[i];\n\n\t\t\tif (model.isVertex(cell) && this.graph.isCellVisible(cell))\n\t\t\t{\n\t\t\t\tvar conns = this.getEdges(cell);\n\t\t\t\tvar fanOut = 0;\n\t\t\t\tvar fanIn = 0;\n\n\t\t\t\tfor (var k = 0; k < conns.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar src = this.getVisibleTerminal(conns[k], true);\n\n\t\t\t\t\tif (src == cell)\n\t\t\t\t\t{\n\t\t\t\t\t\tfanOut++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfanIn++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (fanIn == 0 && fanOut > 0)\n\t\t\t\t{\n\t\t\t\t\troots.push(cell);\n\t\t\t\t}\n\n\t\t\t\tvar diff = fanOut - fanIn;\n\n\t\t\t\tif (diff > maxDiff)\n\t\t\t\t{\n\t\t\t\t\tmaxDiff = diff;\n\t\t\t\t\tbest = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (roots.length == 0 && best != null)\n\t\t{\n\t\t\troots.push(best);\n\t\t}\n\t}\n\t\n\treturn roots;\n};\n\n/**\n * Function: getEdges\n * \n * Returns the connected edges for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n */\nmxHierarchicalLayout.prototype.getEdges = function(cell)\n{\n\tvar cachedEdges = this.edgesCache.get(cell);\n\t\n\tif (cachedEdges != null)\n\t{\n\t\treturn cachedEdges;\n\t}\n\n\tvar model = this.graph.model;\n\tvar edges = [];\n\tvar isCollapsed = this.graph.isCellCollapsed(cell);\n\tvar childCount = model.getChildCount(cell);\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(cell, i);\n\n\t\tif (this.isPort(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t\telse if (isCollapsed || !this.graph.isCellVisible(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t}\n\n\tedges = edges.concat(model.getEdges(cell, true, true));\n\tvar result = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar source = this.getVisibleTerminal(edges[i], true);\n\t\tvar target = this.getVisibleTerminal(edges[i], false);\n\t\t\n\t\tif ((source == target) ||\n\t\t\t\t((source != target) &&\n\t\t\t\t\t\t((target == cell && (this.parent == null || this.isAncestor(this.parent, source, this.traverseAncestors))) ||\n\t\t\t\t\t\t \t(source == cell && (this.parent == null || this.isAncestor(this.parent, target, this.traverseAncestors))))))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\tthis.edgesCache.put(cell, result);\n\n\treturn result;\n};\n\n/**\n * Function: getVisibleTerminal\n * \n * Helper function to return visible terminal for edge allowing for ports\n * \n * Parameters:\n * \n * edge - <mxCell> whose edges should be returned.\n * source - Boolean that specifies whether the source or target terminal is to be returned\n */\nmxHierarchicalLayout.prototype.getVisibleTerminal = function(edge, source)\n{\n\tvar terminalCache = this.edgesTargetTermCache;\n\t\n\tif (source)\n\t{\n\t\tterminalCache = this.edgeSourceTermCache;\n\t}\n\n\tvar term = terminalCache.get(edge);\n\n\tif (term != null)\n\t{\n\t\treturn term;\n\t}\n\n\tvar state = this.graph.view.getState(edge);\n\t\n\tvar terminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t\n\tif (terminal == null)\n\t{\n\t\tterminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t}\n\n\tif (terminal != null)\n\t{\n\t\tif (this.isPort(terminal))\n\t\t{\n\t\t\tterminal = this.graph.model.getParent(terminal);\n\t\t}\n\t\t\n\t\tterminalCache.put(edge, terminal);\n\t}\n\n\treturn terminal;\n};\n\n/**\n * Function: run\n * \n * The API method used to exercise the layout upon the graph description\n * and produce a separate description of the vertex position and edge\n * routing changes made. It runs each stage of the layout that has been\n * created.\n */\nmxHierarchicalLayout.prototype.run = function(parent)\n{\n\t// Separate out unconnected hierarchies\n\tvar hierarchyVertices = [];\n\tvar allVertexSet = [];\n\n\tif (this.roots == null && parent != null)\n\t{\n\t\tvar filledVertexSet = Object();\n\t\tthis.filterDescendants(parent, filledVertexSet);\n\n\t\tthis.roots = [];\n\t\tvar filledVertexSetEmpty = true;\n\n\t\t// Poor man's isSetEmpty\n\t\tfor (var key in filledVertexSet)\n\t\t{\n\t\t\tif (filledVertexSet[key] != null)\n\t\t\t{\n\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\twhile (!filledVertexSetEmpty)\n\t\t{\n\t\t\tvar candidateRoots = this.findRoots(parent, filledVertexSet);\n\t\t\t\n\t\t\t// If the candidate root is an unconnected group cell, remove it from\n\t\t\t// the layout. We may need a custom set that holds such groups and forces\n\t\t\t// them to be processed for resizing and/or moving.\n\t\t\t\n\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tvar vertexSet = Object();\n\t\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\t\tthis.traverse(candidateRoots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\t\thierarchyVertices, filledVertexSet);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tthis.roots.push(candidateRoots[i]);\n\t\t\t}\n\t\t\t\n\t\t\tfilledVertexSetEmpty = true;\n\t\t\t\n\t\t\t// Poor man's isSetEmpty\n\t\t\tfor (var key in filledVertexSet)\n\t\t\t{\n\t\t\t\tif (filledVertexSet[key] != null)\n\t\t\t\t{\n\t\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Find vertex set as directed traversal from roots\n\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar vertexSet = Object();\n\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\tthis.traverse(this.roots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\thierarchyVertices, null);\n\t\t}\n\t}\n\n\t// Iterate through the result removing parents who have children in this layout\n\t\n\t// Perform a layout for each seperate hierarchy\n\t// Track initial coordinate x-positioning\n\tvar initialX = 0;\n\n\tfor (var i = 0; i < hierarchyVertices.length; i++)\n\t{\n\t\tvar vertexSet = hierarchyVertices[i];\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var key in vertexSet)\n\t\t{\n\t\t\ttmp.push(vertexSet[key]);\n\t\t}\n\t\t\n\t\tthis.model = new mxGraphHierarchyModel(this, tmp, this.roots,\n\t\t\tparent, this.tightenToSource);\n\n\t\tthis.cycleStage(parent);\n\t\tthis.layeringStage();\n\t\t\n\t\tthis.crossingStage(parent);\n\t\tinitialX = this.placementStage(initialX, parent);\n\t}\n};\n\n/**\n * Function: filterDescendants\n * \n * Creates an array of descendant cells\n */\nmxHierarchicalLayout.prototype.filterDescendants = function(cell, result)\n{\n\tvar model = this.graph.model;\n\n\tif (model.isVertex(cell) && cell != this.parent && this.graph.isCellVisible(cell))\n\t{\n\t\tresult[mxObjectIdentity.get(cell)] = cell;\n\t}\n\n\tif (this.traverseAncestors || cell == this.parent\n\t\t\t&& this.graph.isCellVisible(cell))\n\t{\n\t\tvar childCount = model.getChildCount(cell);\n\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(cell, i);\n\t\t\t\n\t\t\t// Ignore ports in the layout vertex list, they are dealt with\n\t\t\t// in the traversal mechanisms\n\t\t\tif (!this.isPort(child))\n\t\t\t{\n\t\t\t\tthis.filterDescendants(child, result);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isPort\n * \n * Returns true if the given cell is a \"port\", that is, when connecting to\n * it, its parent is the connecting vertex in terms of graph traversal\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n */\nmxHierarchicalLayout.prototype.isPort = function(cell)\n{\n\tif (cell != null && cell.geometry != null)\n\t{\n\t\treturn cell.geometry.relative;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns the edges between the given source and target. This takes into\n * account collapsed and invisible cells and ports.\n * \n * Parameters:\n * \n * source -\n * target -\n * directed -\n */\nmxHierarchicalLayout.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\tvar edges = this.getEdges(source);\n\tvar result = [];\n\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar src = this.getVisibleTerminal(edges[i], true);\n\t\tvar trg = this.getVisibleTerminal(edges[i], false);\n\n\t\tif ((src == source && trg == target) || (!directed && src == target && trg == source))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * allVertices - Array of cell paths for the visited cells.\n */\nmxHierarchicalLayout.prototype.traverse = function(vertex, directed, edge, allVertices, currentComp,\n\t\t\t\t\t\t\t\t\t\t\thierarchyVertices, filledVertexSet)\n{\n\tif (vertex != null && allVertices != null)\n\t{\n\t\t// Has this vertex been seen before in any traversal\n\t\t// And if the filled vertex set is populated, only \n\t\t// process vertices in that it contains\n\t\tvar vertexID = mxObjectIdentity.get(vertex);\n\t\t\n\t\tif ((allVertices[vertexID] == null)\n\t\t\t\t&& (filledVertexSet == null ? true : filledVertexSet[vertexID] != null))\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\tcurrentComp[vertexID] = vertex;\n\t\t\t}\n\t\t\tif (allVertices[vertexID] == null)\n\t\t\t{\n\t\t\t\tallVertices[vertexID] = vertex;\n\t\t\t}\n\n\t\t\tif (filledVertexSet !== null)\n\t\t\t{\n\t\t\t\tdelete filledVertexSet[vertexID];\n\t\t\t}\n\n\t\t\tvar edges = this.getEdges(vertex);\n\t\t\tvar edgeIsSource = [];\n\n\t\t\tfor (var i = 0; i < edges.length; i++)\n\t\t\t{\n\t\t\t\tedgeIsSource[i] = (this.getVisibleTerminal(edges[i], true) == vertex);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < edges.length; i++)\n\t\t\t{\n\t\t\t\tif (!directed || edgeIsSource[i])\n\t\t\t\t{\n\t\t\t\t\tvar next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n\t\t\t\t\t\n\t\t\t\t\t// Check whether there are more edges incoming from the target vertex than outgoing\n\t\t\t\t\t// The hierarchical model treats bi-directional parallel edges as being sourced\n\t\t\t\t\t// from the more \"sourced\" terminal. If the directions are equal in number, the direction\n\t\t\t\t\t// is that of the natural direction from the roots of the layout.\n\t\t\t\t\t// The checks below are slightly more verbose than need be for performance reasons\n\t\t\t\t\tvar netCount = 1;\n\n\t\t\t\t\tfor (var j = 0; j < edges.length; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (j == i)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar isSource2 = edgeIsSource[j];\n\t\t\t\t\t\t\tvar otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (otherTerm == next)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (isSource2)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tnetCount++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tnetCount--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (netCount >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrentComp = this.traverse(next, directed, edges[i], allVertices,\n\t\t\t\t\t\t\tcurrentComp, hierarchyVertices,\n\t\t\t\t\t\t\tfilledVertexSet);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\t// We've seen this vertex before, but not in the current component\n\t\t\t\t// This component and the one it's in need to be merged\n\n\t\t\t\tfor (var i = 0; i < hierarchyVertices.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar comp = hierarchyVertices[i];\n\n\t\t\t\t\tif (comp[vertexID] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var key in comp)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrentComp[key] = comp[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Remove the current component from the hierarchy set\n\t\t\t\t\t\thierarchyVertices.splice(i, 1);\n\t\t\t\t\t\treturn currentComp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn currentComp;\n};\n\n/**\n * Function: cycleStage\n * \n * Executes the cycle stage using mxMinimumCycleRemover.\n */\nmxHierarchicalLayout.prototype.cycleStage = function(parent)\n{\n\tvar cycleStage = new mxMinimumCycleRemover(this);\n\tcycleStage.execute(parent);\n};\n\n/**\n * Function: layeringStage\n * \n * Implements first stage of a Sugiyama layout.\n */\nmxHierarchicalLayout.prototype.layeringStage = function()\n{\n\tthis.model.initialRank();\n\tthis.model.fixRanks();\n};\n\n/**\n * Function: crossingStage\n * \n * Executes the crossing stage using mxMedianHybridCrossingReduction.\n */\nmxHierarchicalLayout.prototype.crossingStage = function(parent)\n{\n\tvar crossingStage = new mxMedianHybridCrossingReduction(this);\n\tcrossingStage.execute(parent);\n};\n\n/**\n * Function: placementStage\n * \n * Executes the placement stage using mxCoordinateAssignment.\n */\nmxHierarchicalLayout.prototype.placementStage = function(initialX, parent)\n{\n\tvar placementStage = new mxCoordinateAssignment(this, this.intraCellSpacing,\n\t\t\tthis.interRankCellSpacing, this.orientation, initialX,\n\t\t\tthis.parallelEdgeSpacing);\n\tplacementStage.fineTuning = this.fineTuning;\n\tplacementStage.execute(parent);\n\t\n\treturn placementStage.limitX + this.interHierarchySpacing;\n};\n\n__mxOutput.mxHierarchicalLayout = typeof mxHierarchicalLayout !== 'undefined' ? mxHierarchicalLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneLayout\n * \n * A hierarchical layout algorithm.\n * \n * Constructor: mxSwimlaneLayout\n *\n * Constructs a new hierarchical layout algorithm.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * orientation - Optional constant that defines the orientation of this\n * layout.\n * deterministic - Optional boolean that specifies if this layout should be\n * deterministic. Default is true.\n */\nfunction mxSwimlaneLayout(graph, orientation, deterministic)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.orientation = (orientation != null) ? orientation : mxConstants.DIRECTION_NORTH;\n\tthis.deterministic = (deterministic != null) ? deterministic : true;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxSwimlaneLayout.prototype = new mxGraphLayout();\nmxSwimlaneLayout.prototype.constructor = mxSwimlaneLayout;\n\n/**\n * Variable: roots\n * \n * Holds the array of <mxCell> that this layout contains.\n */\nmxSwimlaneLayout.prototype.roots = null;\n\n/**\n * Variable: swimlanes\n * \n * Holds the array of <mxCell> of the ordered swimlanes to lay out\n */\nmxSwimlaneLayout.prototype.swimlanes = null;\n\n/**\n * Variable: dummyVertexWidth\n * \n * The cell width of any dummy vertices inserted\n */\nmxSwimlaneLayout.prototype.dummyVertexWidth = 50;\n\n/**\n * Variable: resizeParent\n * \n * Specifies if the parent should be resized after the layout so that it\n * contains all the child cells. Default is false. See also <parentBorder>.\n */\nmxSwimlaneLayout.prototype.resizeParent = false;\n\n/**\n * Variable: maintainParentLocation\n * \n * Specifies if the parent location should be maintained, so that the\n * top, left corner stays the same before and after execution of\n * the layout. Default is false for backwards compatibility.\n */\nmxSwimlaneLayout.prototype.maintainParentLocation = false;\n\n/**\n * Variable: moveParent\n * \n * Specifies if the parent should be moved if <resizeParent> is enabled.\n * Default is false.\n */\nmxSwimlaneLayout.prototype.moveParent = false;\n\n/**\n * Variable: parentBorder\n * \n * The border to be added around the children if the parent is to be\n * resized using <resizeParent>. Default is 30.\n */\nmxSwimlaneLayout.prototype.parentBorder = 30;\n\n/**\n * Variable: intraCellSpacing\n * \n * The spacing buffer added between cells on the same layer. Default is 30.\n */\nmxSwimlaneLayout.prototype.intraCellSpacing = 30;\n\n/**\n * Variable: interRankCellSpacing\n * \n * The spacing buffer added between cell on adjacent layers. Default is 100.\n */\nmxSwimlaneLayout.prototype.interRankCellSpacing = 100;\n\n/**\n * Variable: interHierarchySpacing\n * \n * The spacing buffer between unconnected hierarchies. Default is 60.\n */\nmxSwimlaneLayout.prototype.interHierarchySpacing = 60;\n\n/**\n * Variable: parallelEdgeSpacing\n * \n * The distance between each parallel edge on each ranks for long edges.\n * Default is 10.\n */\nmxSwimlaneLayout.prototype.parallelEdgeSpacing = 10;\n\n/**\n * Variable: orientation\n * \n * The position of the root node(s) relative to the laid out graph in.\n * Default is <mxConstants.DIRECTION_NORTH>.\n */\nmxSwimlaneLayout.prototype.orientation = mxConstants.DIRECTION_NORTH;\n\n/**\n * Variable: fineTuning\n * \n * Whether or not to perform local optimisations and iterate multiple times\n * through the algorithm. Default is true.\n */\nmxSwimlaneLayout.prototype.fineTuning = true;\n\n/**\n * Variable: tightenToSource\n * \n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells. Default is true.\n */\nmxSwimlaneLayout.prototype.tightenToSource = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxSwimlaneLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Variable: traverseAncestors\n * \n * Whether or not to drill into child cells and layout in reverse\n * group order. This also cause the layout to navigate edges whose \n * terminal vertices have different parents but are in the same\n * ancestry chain. Default is true.\n */\nmxSwimlaneLayout.prototype.traverseAncestors = true;\n\n/**\n * Variable: model\n * \n * The internal <mxSwimlaneModel> formed of the layout.\n */\nmxSwimlaneLayout.prototype.model = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxSwimlaneLayout.prototype.edgesCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgeSourceTermCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgesTargetTermCache = null;\n\n/**\n * Variable: edgeStyle\n * \n * The style to apply between cell layers to edge segments.\n * Default is <mxHierarchicalEdgeStyle.POLYLINE>.\n */\nmxHierarchicalLayout.prototype.edgeStyle = mxHierarchicalEdgeStyle.POLYLINE;\n\n/**\n * Function: getModel\n * \n * Returns the internal <mxSwimlaneModel> for this layout algorithm.\n */\nmxSwimlaneLayout.prototype.getModel = function()\n{\n\treturn this.model;\n};\n\n/**\n * Function: execute\n * \n * Executes the layout for the children of the specified parent.\n * \n * Parameters:\n * \n * parent - Parent <mxCell> that contains the children to be laid out.\n * swimlanes - Ordered array of swimlanes to be laid out\n */\nmxSwimlaneLayout.prototype.execute = function(parent, swimlanes)\n{\n\tthis.parent = parent;\n\tvar model = this.graph.model;\n\tthis.edgesCache = new mxDictionary();\n\tthis.edgeSourceTermCache = new mxDictionary();\n\tthis.edgesTargetTermCache = new mxDictionary();\n\n\t// If the roots are set and the parent is set, only\n\t// use the roots that are some dependent of the that\n\t// parent.\n\t// If just the root are set, use them as-is\n\t// If just the parent is set use it's immediate\n\t// children as the initial set\n\n\tif (swimlanes == null || swimlanes.length < 1)\n\t{\n\t\t// TODO indicate the problem\n\t\treturn;\n\t}\n\n\tif (parent == null)\n\t{\n\t\tparent = model.getParent(swimlanes[0]);\n\t}\n\n\t//  Maintaining parent location\n\tthis.parentX = null;\n\tthis.parentY = null;\n\t\n\tif (parent != this.root && model.isVertex(parent) != null && this.maintainParentLocation)\n\t{\n\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tthis.parentX = geo.x;\n\t\t\tthis.parentY = geo.y;\n\t\t}\n\t}\n\n\tthis.swimlanes = swimlanes;\n\tvar dummyVertices = [];\n\t// Check the swimlanes all have vertices\n\t// in them\n\tfor (var i = 0; i < swimlanes.length; i++)\n\t{\n\t\tvar children = this.graph.getChildCells(swimlanes[i]);\n\t\t\n\t\tif (children == null || children.length == 0)\n\t\t{\n\t\t\tvar vertex = this.graph.insertVertex(swimlanes[i], null, null, 0, 0, this.dummyVertexWidth, 0);\n\t\t\tdummyVertices.push(vertex);\n\t\t}\n\t}\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tthis.run(parent);\n\t\t\n\t\tif (this.resizeParent && !this.graph.isCellCollapsed(parent))\n\t\t{\n\t\t\tthis.graph.updateGroupBounds([parent], this.parentBorder, this.moveParent);\n\t\t}\n\t\t\n\t\t// Maintaining parent location\n\t\tif (this.parentX != null && this.parentY != null)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.x = this.parentX;\n\t\t\t\tgeo.y = this.parentY;\n\t\t\t\tmodel.setGeometry(parent, geo);\n\t\t\t}\n\t\t}\n\n\t\tthis.graph.removeCells(dummyVertices);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: updateGroupBounds\n * \n * Updates the bounds of the given array of groups so that it includes\n * all child vertices.\n * \n */\nmxSwimlaneLayout.prototype.updateGroupBounds = function()\n{\n\t// Get all vertices and edge in the layout\n\tvar cells = [];\n\tvar model = this.model;\n\t\n\tfor (var key in model.edgeMapper)\n\t{\n\t\tvar edge = model.edgeMapper[key];\n\t\t\n\t\tfor (var i = 0; i < edge.edges.length; i++)\n\t\t{\n\t\t\tcells.push(edge.edges[i]);\n\t\t}\n\t}\n\t\n\tvar layoutBounds = this.graph.getBoundingBoxFromGeometry(cells, true);\n\tvar childBounds = [];\n\n\tfor (var i = 0; i < this.swimlanes.length; i++)\n\t{\n\t\tvar lane = this.swimlanes[i];\n\t\tvar geo = this.graph.getCellGeometry(lane);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tvar children = this.graph.getChildCells(lane);\n\t\t\t\n\t\t\tvar size = (this.graph.isSwimlane(lane)) ?\n\t\t\t\t\tthis.graph.getStartSize(lane) : new mxRectangle();\n\n\t\t\tvar bounds = this.graph.getBoundingBoxFromGeometry(children);\n\t\t\tchildBounds[i] = bounds;\n\t\t\tvar childrenY = bounds.y + geo.y - size.height - this.parentBorder;\n\t\t\tvar maxChildrenY = bounds.y + geo.y + bounds.height;\n\n\t\t\tif (layoutBounds == null)\n\t\t\t{\n\t\t\t\tlayoutBounds = new mxRectangle(0, childrenY, 0, maxChildrenY - childrenY);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlayoutBounds.y = Math.min(layoutBounds.y, childrenY);\n\t\t\t\tvar maxY = Math.max(layoutBounds.y + layoutBounds.height, maxChildrenY);\n\t\t\t\tlayoutBounds.height = maxY - layoutBounds.y;\n\t\t\t}\n\t\t}\n\t}\n\n\t\n\tfor (var i = 0; i < this.swimlanes.length; i++)\n\t{\n\t\tvar lane = this.swimlanes[i];\n\t\tvar geo = this.graph.getCellGeometry(lane);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tvar children = this.graph.getChildCells(lane);\n\t\t\t\n\t\t\tvar size = (this.graph.isSwimlane(lane)) ?\n\t\t\t\t\tthis.graph.getStartSize(lane) : new mxRectangle();\n\n\t\t\tvar newGeo = geo.clone();\n\t\t\t\n\t\t\tvar leftGroupBorder = (i == 0) ? this.parentBorder : this.interRankCellSpacing/2;\n\t\t\tvar w = size.width + leftGroupBorder;\n\t\t\tvar x = childBounds[i].x - w;\n\t\t\tvar y = layoutBounds.y - this.parentBorder;\n\n\t\t\tnewGeo.x += x;\n\t\t\tnewGeo.y = y;\n\t\t\t\n\t\t\tnewGeo.width = childBounds[i].width + w + this.interRankCellSpacing/2;\n\t\t\tnewGeo.height = layoutBounds.height + size.height + 2 * this.parentBorder;\n\t\t\t\n\t\t\tthis.graph.model.setGeometry(lane, newGeo);\n\t\t\tthis.graph.moveCells(children, -x, geo.y - y);\n\t\t}\n\t}\n};\n\n/**\n * Function: findRoots\n * \n * Returns all visible children in the given parent which do not have\n * incoming edges. If the result is empty then the children with the\n * maximum difference between incoming and outgoing edges are returned.\n * This takes into account edges that are being promoted to the given\n * root due to invisible children or collapsed cells.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be checked.\n * vertices - array of vertices to limit search to\n */\nmxSwimlaneLayout.prototype.findRoots = function(parent, vertices)\n{\n\tvar roots = [];\n\t\n\tif (parent != null && vertices != null)\n\t{\n\t\tvar model = this.graph.model;\n\t\tvar best = null;\n\t\tvar maxDiff = -100000;\n\t\t\n\t\tfor (var i in vertices)\n\t\t{\n\t\t\tvar cell = vertices[i];\n\n\t\t\tif (cell != null && model.isVertex(cell) && this.graph.isCellVisible(cell) && model.isAncestor(parent, cell))\n\t\t\t{\n\t\t\t\tvar conns = this.getEdges(cell);\n\t\t\t\tvar fanOut = 0;\n\t\t\t\tvar fanIn = 0;\n\n\t\t\t\tfor (var k = 0; k < conns.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar src = this.getVisibleTerminal(conns[k], true);\n\n\t\t\t\t\tif (src == cell)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Only count connection within this swimlane\n\t\t\t\t\t\tvar other = this.getVisibleTerminal(conns[k], false);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (model.isAncestor(parent, other))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfanOut++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (model.isAncestor(parent, src))\n\t\t\t\t\t{\n\t\t\t\t\t\tfanIn++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (fanIn == 0 && fanOut > 0)\n\t\t\t\t{\n\t\t\t\t\troots.push(cell);\n\t\t\t\t}\n\n\t\t\t\tvar diff = fanOut - fanIn;\n\n\t\t\t\tif (diff > maxDiff)\n\t\t\t\t{\n\t\t\t\t\tmaxDiff = diff;\n\t\t\t\t\tbest = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (roots.length == 0 && best != null)\n\t\t{\n\t\t\troots.push(best);\n\t\t}\n\t}\n\t\n\treturn roots;\n};\n\n/**\n * Function: getEdges\n * \n * Returns the connected edges for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n */\nmxSwimlaneLayout.prototype.getEdges = function(cell)\n{\n\tvar cachedEdges = this.edgesCache.get(cell);\n\t\n\tif (cachedEdges != null)\n\t{\n\t\treturn cachedEdges;\n\t}\n\n\tvar model = this.graph.model;\n\tvar edges = [];\n\tvar isCollapsed = this.graph.isCellCollapsed(cell);\n\tvar childCount = model.getChildCount(cell);\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(cell, i);\n\n\t\tif (this.isPort(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t\telse if (isCollapsed || !this.graph.isCellVisible(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t}\n\n\tedges = edges.concat(model.getEdges(cell, true, true));\n\tvar result = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar source = this.getVisibleTerminal(edges[i], true);\n\t\tvar target = this.getVisibleTerminal(edges[i], false);\n\t\t\n\t\tif ((source == target) || ((source != target) && ((target == cell && (this.parent == null || this.graph.isValidAncestor(source, this.parent, this.traverseAncestors))) ||\n\t\t\t(source == cell && (this.parent == null ||\n\t\t\t\t\tthis.graph.isValidAncestor(target, this.parent, this.traverseAncestors))))))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\tthis.edgesCache.put(cell, result);\n\n\treturn result;\n};\n\n/**\n * Function: getVisibleTerminal\n * \n * Helper function to return visible terminal for edge allowing for ports\n * \n * Parameters:\n * \n * edge - <mxCell> whose edges should be returned.\n * source - Boolean that specifies whether the source or target terminal is to be returned\n */\nmxSwimlaneLayout.prototype.getVisibleTerminal = function(edge, source)\n{\n\tvar terminalCache = this.edgesTargetTermCache;\n\t\n\tif (source)\n\t{\n\t\tterminalCache = this.edgeSourceTermCache;\n\t}\n\n\tvar term = terminalCache.get(edge);\n\n\tif (term != null)\n\t{\n\t\treturn term;\n\t}\n\n\tvar state = this.graph.view.getState(edge);\n\t\n\tvar terminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t\n\tif (terminal == null)\n\t{\n\t\tterminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t}\n\n\tif (terminal != null)\n\t{\n\t\tif (this.isPort(terminal))\n\t\t{\n\t\t\tterminal = this.graph.model.getParent(terminal);\n\t\t}\n\t\t\n\t\tterminalCache.put(edge, terminal);\n\t}\n\n\treturn terminal;\n};\n\n/**\n * Function: run\n * \n * The API method used to exercise the layout upon the graph description\n * and produce a separate description of the vertex position and edge\n * routing changes made. It runs each stage of the layout that has been\n * created.\n */\nmxSwimlaneLayout.prototype.run = function(parent)\n{\n\t// Separate out unconnected hierarchies\n\tvar hierarchyVertices = [];\n\tvar allVertexSet = Object();\n\n\tif (this.swimlanes != null && this.swimlanes.length > 0 && parent != null)\n\t{\n\t\tvar filledVertexSet = Object();\n\t\t\n\t\tfor (var i = 0; i < this.swimlanes.length; i++)\n\t\t{\n\t\t\tthis.filterDescendants(this.swimlanes[i], filledVertexSet);\n\t\t}\n\n\t\tthis.roots = [];\n\t\tvar filledVertexSetEmpty = true;\n\n\t\t// Poor man's isSetEmpty\n\t\tfor (var key in filledVertexSet)\n\t\t{\n\t\t\tif (filledVertexSet[key] != null)\n\t\t\t{\n\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Only test for candidates in each swimlane in order\n\t\tvar laneCounter = 0;\n\n\t\twhile (!filledVertexSetEmpty && laneCounter < this.swimlanes.length)\n\t\t{\n\t\t\tvar candidateRoots = this.findRoots(this.swimlanes[laneCounter], filledVertexSet);\n\t\t\t\n\t\t\tif (candidateRoots.length == 0)\n\t\t\t{\n\t\t\t\tlaneCounter++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\t// If the candidate root is an unconnected group cell, remove it from\n\t\t\t// the layout. We may need a custom set that holds such groups and forces\n\t\t\t// them to be processed for resizing and/or moving.\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tvar vertexSet = Object();\n\t\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\t\tthis.traverse(candidateRoots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\t\thierarchyVertices, filledVertexSet, laneCounter);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tthis.roots.push(candidateRoots[i]);\n\t\t\t}\n\t\t\t\n\t\t\tfilledVertexSetEmpty = true;\n\t\t\t\n\t\t\t// Poor man's isSetEmpty\n\t\t\tfor (var key in filledVertexSet)\n\t\t\t{\n\t\t\t\tif (filledVertexSet[key] != null)\n\t\t\t\t{\n\t\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Find vertex set as directed traversal from roots\n\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar vertexSet = Object();\n\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\tthis.traverse(this.roots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\thierarchyVertices, null);\n\t\t}\n\t}\n\n\tvar tmp = [];\n\t\n\tfor (var key in allVertexSet)\n\t{\n\t\ttmp.push(allVertexSet[key]);\n\t}\n\t\n\tthis.model = new mxSwimlaneModel(this, tmp, this.roots,\n\t\tparent, this.tightenToSource);\n\n\tthis.cycleStage(parent);\n\tthis.layeringStage();\n\t\n\tthis.crossingStage(parent);\n\tthis.placementStage(0, parent);\n};\n\n/**\n * Function: filterDescendants\n * \n * Creates an array of descendant cells\n */\nmxSwimlaneLayout.prototype.filterDescendants = function(cell, result)\n{\n\tvar model = this.graph.model;\n\n\tif (model.isVertex(cell) && cell != this.parent && model.getParent(cell) != this.parent && this.graph.isCellVisible(cell))\n\t{\n\t\tresult[mxObjectIdentity.get(cell)] = cell;\n\t}\n\n\tif (this.traverseAncestors || cell == this.parent\n\t\t\t&& this.graph.isCellVisible(cell))\n\t{\n\t\tvar childCount = model.getChildCount(cell);\n\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(cell, i);\n\t\t\t\n\t\t\t// Ignore ports in the layout vertex list, they are dealt with\n\t\t\t// in the traversal mechanisms\n\t\t\tif (!this.isPort(child))\n\t\t\t{\n\t\t\t\tthis.filterDescendants(child, result);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isPort\n * \n * Returns true if the given cell is a \"port\", that is, when connecting to\n * it, its parent is the connecting vertex in terms of graph traversal\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n */\nmxSwimlaneLayout.prototype.isPort = function(cell)\n{\n\tif (cell.geometry.relative)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns the edges between the given source and target. This takes into\n * account collapsed and invisible cells and ports.\n * \n * Parameters:\n * \n * source -\n * target -\n * directed -\n */\nmxSwimlaneLayout.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\tvar edges = this.getEdges(source);\n\tvar result = [];\n\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar src = this.getVisibleTerminal(edges[i], true);\n\t\tvar trg = this.getVisibleTerminal(edges[i], false);\n\n\t\tif ((src == source && trg == target) || (!directed && src == target && trg == source))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * allVertices - Array of cell paths for the visited cells.\n * swimlaneIndex - the laid out order index of the swimlane vertex is contained in\n */\nmxSwimlaneLayout.prototype.traverse = function(vertex, directed, edge, allVertices, currentComp,\n\t\t\t\t\t\t\t\t\t\t\thierarchyVertices, filledVertexSet, swimlaneIndex)\n{\n\tif (vertex != null && allVertices != null)\n\t{\n\t\t// Has this vertex been seen before in any traversal\n\t\t// And if the filled vertex set is populated, only \n\t\t// process vertices in that it contains\n\t\tvar vertexID = mxObjectIdentity.get(vertex);\n\t\t\n\t\tif ((allVertices[vertexID] == null)\n\t\t\t\t&& (filledVertexSet == null ? true : filledVertexSet[vertexID] != null))\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\tcurrentComp[vertexID] = vertex;\n\t\t\t}\n\t\t\tif (allVertices[vertexID] == null)\n\t\t\t{\n\t\t\t\tallVertices[vertexID] = vertex;\n\t\t\t}\n\n\t\t\tif (filledVertexSet !== null)\n\t\t\t{\n\t\t\t\tdelete filledVertexSet[vertexID];\n\t\t\t}\n\n\t\t\tvar edges = this.getEdges(vertex);\n\t\t\tvar model = this.graph.model;\n\n\t\t\tfor (var i = 0; i < edges.length; i++)\n\t\t\t{\n\t\t\t\tvar otherVertex = this.getVisibleTerminal(edges[i], true);\n\t\t\t\tvar isSource = otherVertex == vertex;\n\t\t\t\t\n\t\t\t\tif (isSource)\n\t\t\t\t{\n\t\t\t\t\totherVertex = this.getVisibleTerminal(edges[i], false);\n\t\t\t\t}\n\n\t\t\t\tvar otherIndex = 0;\n\t\t\t\t// Get the swimlane index of the other terminal\n\t\t\t\tfor (otherIndex = 0; otherIndex < this.swimlanes.length; otherIndex++)\n\t\t\t\t{\n\t\t\t\t\tif (model.isAncestor(this.swimlanes[otherIndex], otherVertex))\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (otherIndex >= this.swimlanes.length)\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Traverse if the other vertex is within the same swimlane as\n\t\t\t\t// as the current vertex, or if the swimlane index of the other\n\t\t\t\t// vertex is greater than that of this vertex\n\t\t\t\tif ((otherIndex > swimlaneIndex) ||\n\t\t\t\t\t\t((!directed || isSource) && otherIndex == swimlaneIndex))\n\t\t\t\t{\n\t\t\t\t\tcurrentComp = this.traverse(otherVertex, directed, edges[i], allVertices,\n\t\t\t\t\t\t\tcurrentComp, hierarchyVertices,\n\t\t\t\t\t\t\tfilledVertexSet, otherIndex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\t// We've seen this vertex before, but not in the current component\n\t\t\t\t// This component and the one it's in need to be merged\n\t\t\t\tfor (var i = 0; i < hierarchyVertices.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar comp = hierarchyVertices[i];\n\n\t\t\t\t\tif (comp[vertexID] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var key in comp)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrentComp[key] = comp[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Remove the current component from the hierarchy set\n\t\t\t\t\t\thierarchyVertices.splice(i, 1);\n\t\t\t\t\t\treturn currentComp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn currentComp;\n};\n\n/**\n * Function: cycleStage\n * \n * Executes the cycle stage using mxMinimumCycleRemover.\n */\nmxSwimlaneLayout.prototype.cycleStage = function(parent)\n{\n\tvar cycleStage = new mxSwimlaneOrdering(this);\n\tcycleStage.execute(parent);\n};\n\n/**\n * Function: layeringStage\n * \n * Implements first stage of a Sugiyama layout.\n */\nmxSwimlaneLayout.prototype.layeringStage = function()\n{\n\tthis.model.initialRank();\n\tthis.model.fixRanks();\n};\n\n/**\n * Function: crossingStage\n * \n * Executes the crossing stage using mxMedianHybridCrossingReduction.\n */\nmxSwimlaneLayout.prototype.crossingStage = function(parent)\n{\n\tvar crossingStage = new mxMedianHybridCrossingReduction(this);\n\tcrossingStage.execute(parent);\n};\n\n/**\n * Function: placementStage\n * \n * Executes the placement stage using mxCoordinateAssignment.\n */\nmxSwimlaneLayout.prototype.placementStage = function(initialX, parent)\n{\n\tvar placementStage = new mxCoordinateAssignment(this, this.intraCellSpacing,\n\t\t\tthis.interRankCellSpacing, this.orientation, initialX,\n\t\t\tthis.parallelEdgeSpacing);\n\tplacementStage.fineTuning = this.fineTuning;\n\tplacementStage.execute(parent);\n\t\n\treturn placementStage.limitX + this.interHierarchySpacing;\n};\n\n__mxOutput.mxSwimlaneLayout = typeof mxSwimlaneLayout !== 'undefined' ? mxSwimlaneLayout : undefined;\n\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxGraphModel\n * \n * Extends <mxEventSource> to implement a graph model. The graph model acts as\n * a wrapper around the cells which are in charge of storing the actual graph\n * datastructure. The model acts as a transactional wrapper with event\n * notification for all changes, whereas the cells contain the atomic\n * operations for updating the actual datastructure.\n * \n * Layers:\n * \n * The cell hierarchy in the model must have a top-level root cell which\n * contains the layers (typically one default layer), which in turn contain the\n * top-level cells of the layers. This means each cell is contained in a layer.\n * If no layers are required, then all new cells should be added to the default\n * layer.\n * \n * Layers are useful for hiding and showing groups of cells, or for placing\n * groups of cells on top of other cells in the display. To identify a layer,\n * the <isLayer> function is used. It returns true if the parent of the given\n * cell is the root of the model.\n * \n * Events:\n * \n * See events section for more details. There is a new set of events for\n * tracking transactional changes as they happen. The events are called\n * startEdit for the initial beginUpdate, executed for each executed change\n * and endEdit for the terminal endUpdate. The executed event contains a\n * property called change which represents the change after execution.\n * \n * Encoding the model:\n * \n * To encode a graph model, use the following code:\n * \n * (code)\n * var enc = new mxCodec();\n * var node = enc.encode(graph.getModel());\n * (end)\n * \n * This will create an XML node that contains all the model information.\n * \n * Encoding and decoding changes:\n * \n * For the encoding of changes, a graph model listener is required that encodes\n * each change from the given array of changes.\n * \n * (code)\n * model.addListener(mxEvent.CHANGE, function(sender, evt)\n * {\n *   var changes = evt.getProperty('edit').changes;\n *   var nodes = [];\n *   var codec = new mxCodec();\n * \n *   for (var i = 0; i < changes.length; i++)\n *   {\n *     nodes.push(codec.encode(changes[i]));\n *   }\n *   // do something with the nodes\n * });\n * (end)\n * \n * For the decoding and execution of changes, the codec needs a lookup function\n * that allows it to resolve cell IDs as follows:\n * \n * (code)\n * var codec = new mxCodec();\n * codec.lookup = function(id)\n * {\n *   return model.getCell(id);\n * }\n * (end)\n * \n * For each encoded change (represented by a node), the following code can be\n * used to carry out the decoding and create a change object.\n * \n * (code)\n * var changes = [];\n * var change = codec.decode(node);\n * change.model = model;\n * change.execute();\n * changes.push(change);\n * (end)\n * \n * The changes can then be dispatched using the model as follows.\n * \n * (code)\n * var edit = new mxUndoableEdit(model, false);\n * edit.changes = changes;\n * \n * edit.notify = function()\n * {\n *   edit.source.fireEvent(new mxEventObject(mxEvent.CHANGE,\n *   \t'edit', edit, 'changes', edit.changes));\n *   edit.source.fireEvent(new mxEventObject(mxEvent.NOTIFY,\n *   \t'edit', edit, 'changes', edit.changes));\n * }\n * \n * model.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n * model.fireEvent(new mxEventObject(mxEvent.CHANGE,\n * \t\t'edit', edit, 'changes', changes));\n * (end)\n *\n * Event: mxEvent.CHANGE\n *\n * Fires when an undoable edit is dispatched. The <code>edit</code> property\n * contains the <mxUndoableEdit>. The <code>changes</code> property contains\n * the array of atomic changes inside the undoable edit. The changes property\n * is <strong>deprecated</strong>, please use edit.changes instead.\n *\n * Example:\n * \n * For finding newly inserted cells, the following code can be used:\n * \n * (code)\n * graph.model.addListener(mxEvent.CHANGE, function(sender, evt)\n * {\n *   var changes = evt.getProperty('edit').changes;\n * \n *   for (var i = 0; i < changes.length; i++)\n *   {\n *     var change = changes[i];\n *     \n *     if (change instanceof mxChildChange &&\n *       change.change.previous == null)\n *     {\n *       graph.startEditingAtCell(change.child);\n *       break;\n *     }\n *   }\n * });\n * (end)\n * \n * \n * Event: mxEvent.NOTIFY\n *\n * Same as <mxEvent.CHANGE>, this event can be used for classes that need to\n * implement a sync mechanism between this model and, say, a remote model. In\n * such a setup, only local changes should trigger a notify event and all\n * changes should trigger a change event.\n * \n * Event: mxEvent.EXECUTE\n * \n * Fires between begin- and endUpdate and after an atomic change was executed\n * in the model. The <code>change</code> property contains the atomic change\n * that was executed.\n * \n * Event: mxEvent.EXECUTED\n * \n * Fires between START_EDIT and END_EDIT after an atomic change was executed.\n * The <code>change</code> property contains the change that was executed.\n *\n * Event: mxEvent.BEGIN_UPDATE\n *\n * Fires after the <updateLevel> was incremented in <beginUpdate>. This event\n * contains no properties.\n * \n * Event: mxEvent.START_EDIT\n *\n * Fires after the <updateLevel> was changed from 0 to 1. This event\n * contains no properties.\n * \n * Event: mxEvent.END_UPDATE\n * \n * Fires after the <updateLevel> was decreased in <endUpdate> but before any\n * notification or change dispatching. The <code>edit</code> property contains\n * the <currentEdit>.\n * \n * Event: mxEvent.END_EDIT\n *\n * Fires after the <updateLevel> was changed from 1 to 0. This event\n * contains no properties.\n * \n * Event: mxEvent.BEFORE_UNDO\n * \n * Fires before the change is dispatched after the update level has reached 0\n * in <endUpdate>. The <code>edit</code> property contains the <curreneEdit>.\n * \n * Event: mxEvent.UNDO\n * \n * Fires after the change was dispatched in <endUpdate>. The <code>edit</code>\n * property contains the <currentEdit>.\n * \n * Constructor: mxGraphModel\n * \n * Constructs a new graph model. If no root is specified then a new root\n * <mxCell> with a default layer is created.\n * \n * Parameters:\n * \n * root - <mxCell> that represents the root cell.\n */\nfunction mxGraphModel(root)\n{\n\tthis.currentEdit = this.createUndoableEdit();\n\t\n\tif (root != null)\n\t{\n\t\tthis.setRoot(root);\n\t}\n\telse\n\t{\n\t\tthis.clear();\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxGraphModel.prototype = new mxEventSource();\nmxGraphModel.prototype.constructor = mxGraphModel;\n\n/**\n * Variable: root\n * \n * Holds the root cell, which in turn contains the cells that represent the\n * layers of the diagram as child cells. That is, the actual elements of the\n * diagram are supposed to live in the third generation of cells and below.\n */\nmxGraphModel.prototype.root = null;\n\n/**\n * Variable: cells\n * \n * Maps from Ids to cells.\n */\nmxGraphModel.prototype.cells = null;\n\n/**\n * Variable: maintainEdgeParent\n * \n * Specifies if edges should automatically be moved into the nearest common\n * ancestor of their terminals. Default is true.\n */\nmxGraphModel.prototype.maintainEdgeParent = true;\n\n/**\n * Variable: ignoreRelativeEdgeParent\n * \n * Specifies if relative edge parents should be ignored for finding the nearest\n * common ancestors of an edge's terminals. Default is true.\n */\nmxGraphModel.prototype.ignoreRelativeEdgeParent = true;\n\n/**\n * Variable: createIds\n * \n * Specifies if the model should automatically create Ids for new cells.\n * Default is true.\n */\nmxGraphModel.prototype.createIds = true;\n\n/**\n * Variable: prefix\n * \n * Defines the prefix of new Ids. Default is an empty string.\n */\nmxGraphModel.prototype.prefix = '';\n\n/**\n * Variable: postfix\n * \n * Defines the postfix of new Ids. Default is an empty string.\n */\nmxGraphModel.prototype.postfix = '';\n\n/**\n * Variable: nextId\n * \n * Specifies the next Id to be created. Initial value is 0.\n */\nmxGraphModel.prototype.nextId = 0;\n\n/**\n * Variable: currentEdit\n * \n * Holds the changes for the current transaction. If the transaction is\n * closed then a new object is created for this variable using\n * <createUndoableEdit>.\n */\nmxGraphModel.prototype.currentEdit = null;\n\n/**\n * Variable: updateLevel\n * \n * Counter for the depth of nested transactions. Each call to <beginUpdate>\n * will increment this number and each call to <endUpdate> will decrement\n * it. When the counter reaches 0, the transaction is closed and the\n * respective events are fired. Initial value is 0.\n */\nmxGraphModel.prototype.updateLevel = 0;\n\n/**\n * Variable: endingUpdate\n * \n * True if the program flow is currently inside endUpdate.\n */\nmxGraphModel.prototype.endingUpdate = false;\n\n/**\n * Function: clear\n *\n * Sets a new root using <createRoot>.\n */\nmxGraphModel.prototype.clear = function()\n{\n\tthis.setRoot(this.createRoot());\n};\n\n/**\n * Function: isCreateIds\n *\n * Returns <createIds>.\n */\nmxGraphModel.prototype.isCreateIds = function()\n{\n\treturn this.createIds;\n};\n\n/**\n * Function: setCreateIds\n *\n * Sets <createIds>.\n */\nmxGraphModel.prototype.setCreateIds = function(value)\n{\n\tthis.createIds = value;\n};\n\n/**\n * Function: createRoot\n *\n * Creates a new root cell with a default layer (child 0).\n */\nmxGraphModel.prototype.createRoot = function()\n{\n\tvar cell = new mxCell();\n\tcell.insert(new mxCell());\n\t\n\treturn cell;\n};\n\n/**\n * Function: getCell\n *\n * Returns the <mxCell> for the specified Id or null if no cell can be\n * found for the given Id.\n *\n * Parameters:\n * \n * id - A string representing the Id of the cell.\n */\nmxGraphModel.prototype.getCell = function(id)\n{\n\treturn (this.cells != null) ? this.cells[id] : null;\n};\n\n/**\n * Function: filterCells\n * \n * Returns the cells from the given array where the given filter function\n * returns true.\n */\nmxGraphModel.prototype.filterCells = function(cells, filter)\n{\n\tvar result = null;\n\t\n\tif (cells != null)\n\t{\n\t\tresult = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (filter(cells[i]))\n\t\t\t{\n\t\t\t\tresult.push(cells[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getDescendants\n * \n * Returns all descendants of the given cell and the cell itself in an array.\n * \n * Parameters:\n * \n * parent - <mxCell> whose descendants should be returned.\n */\nmxGraphModel.prototype.getDescendants = function(parent)\n{\n\treturn this.filterDescendants(null, parent);\n};\n\n/**\n * Function: filterDescendants\n * \n * Visits all cells recursively and applies the specified filter function\n * to each cell. If the function returns true then the cell is added\n * to the resulting array. The parent and result paramters are optional.\n * If parent is not specified then the recursion starts at <root>.\n * \n * Example:\n * The following example extracts all vertices from a given model:\n * (code)\n * var filter = function(cell)\n * {\n * \treturn model.isVertex(cell);\n * }\n * var vertices = model.filterDescendants(filter);\n * (end)\n * \n * Parameters:\n * \n * filter - JavaScript function that takes an <mxCell> as an argument\n * and returns a boolean.\n * parent - Optional <mxCell> that is used as the root of the recursion.\n */\nmxGraphModel.prototype.filterDescendants = function(filter, parent)\n{\n\t// Creates a new array for storing the result\n\tvar result = [];\n\n\t// Recursion starts at the root of the model\n\tparent = parent || this.getRoot();\n\t\n\t// Checks if the filter returns true for the cell\n\t// and adds it to the result array\n\tif (filter == null || filter(parent))\n\t{\n\t\tresult.push(parent);\n\t}\n\t\n\t// Visits the children of the cell\n\tvar childCount = this.getChildCount(parent);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.getChildAt(parent, i);\n\t\tresult = result.concat(this.filterDescendants(filter, child));\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getRoot\n * \n * Returns the root of the model or the topmost parent of the given cell.\n *\n * Parameters:\n * \n * cell - Optional <mxCell> that specifies the child.\n */\nmxGraphModel.prototype.getRoot = function(cell)\n{\n\tvar root = cell || this.root;\n\t\n\tif (cell != null)\n\t{\n\t\twhile (cell != null)\n\t\t{\n\t\t\troot = cell;\n\t\t\tcell = this.getParent(cell);\n\t\t}\n\t}\n\t\n\treturn root;\n};\n\n/**\n * Function: setRoot\n * \n * Sets the <root> of the model using <mxRootChange> and adds the change to\n * the current transaction. This resets all datastructures in the model and\n * is the preferred way of clearing an existing model. Returns the new\n * root.\n * \n * Example:\n * \n * (code)\n * var root = new mxCell();\n * root.insert(new mxCell());\n * model.setRoot(root);\n * (end)\n *\n * Parameters:\n * \n * root - <mxCell> that specifies the new root.\n */\nmxGraphModel.prototype.setRoot = function(root)\n{\n\tthis.execute(new mxRootChange(this, root));\n\t\n\treturn root;\n};\n\n/**\n * Function: rootChanged\n * \n * Inner callback to change the root of the model and update the internal\n * datastructures, such as <cells> and <nextId>. Returns the previous root.\n *\n * Parameters:\n * \n * root - <mxCell> that specifies the new root.\n */\nmxGraphModel.prototype.rootChanged = function(root)\n{\n\tvar oldRoot = this.root;\n\tthis.root = root;\n\t\n\t// Resets counters and datastructures\n\tthis.nextId = 0;\n\tthis.cells = null;\n\tthis.cellAdded(root);\n\t\n\treturn oldRoot;\n};\n\n/**\n * Function: isRoot\n * \n * Returns true if the given cell is the root of the model and a non-null\n * value.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible root.\n */\nmxGraphModel.prototype.isRoot = function(cell)\n{\n\treturn cell != null && this.root == cell;\n};\n\n/**\n * Function: isLayer\n * \n * Returns true if <isRoot> returns true for the parent of the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible layer.\n */\nmxGraphModel.prototype.isLayer = function(cell)\n{\n\treturn this.isRoot(this.getParent(cell));\n};\n\n/**\n * Function: isAncestor\n * \n * Returns true if the given parent is an ancestor of the given child. Note \n * returns true if child == parent.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent.\n * child - <mxCell> that specifies the child.\n */\nmxGraphModel.prototype.isAncestor = function(parent, child)\n{\n\twhile (child != null && child != parent)\n\t{\n\t\tchild = this.getParent(child);\n\t}\n\t\n\treturn child == parent;\n};\n\n/**\n * Function: contains\n * \n * Returns true if the model contains the given <mxCell>.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell.\n */\nmxGraphModel.prototype.contains = function(cell)\n{\n\treturn this.isAncestor(this.root, cell);\n};\n\n/**\n * Function: getParent\n * \n * Returns the parent of the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> whose parent should be returned.\n */\nmxGraphModel.prototype.getParent = function(cell)\n{\n\treturn (cell != null) ? cell.getParent() : null;\n};\n\n/**\n * Function: add\n * \n * Adds the specified child to the parent at the given index using\n * <mxChildChange> and adds the change to the current transaction. If no\n * index is specified then the child is appended to the parent's array of\n * children. Returns the inserted child.\n * \n * Parameters:\n * \n * parent - <mxCell> that specifies the parent to contain the child.\n * child - <mxCell> that specifies the child to be inserted.\n * index - Optional integer that specifies the index of the child.\n */\nmxGraphModel.prototype.add = function(parent, child, index)\n{\n\tif (child != parent && parent != null && child != null)\n\t{\t\n\t\t// Appends the child if no index was specified\n\t\tif (index == null)\n\t\t{\n\t\t\tindex = this.getChildCount(parent);\n\t\t}\n\t\t\n\t\tvar parentChanged = parent != this.getParent(child);\n\t\tthis.execute(new mxChildChange(this, parent, child, index));\n\n\t\t// Maintains the edges parents by moving the edges\n\t\t// into the nearest common ancestor of its terminals\n\t\tif (this.maintainEdgeParent && parentChanged)\n\t\t{\n\t\t\tthis.updateEdgeParents(child);\n\t\t}\n\t}\n\t\n\treturn child;\n};\n\n/**\n * Function: cellAdded\n * \n * Inner callback to update <cells> when a cell has been added. This\n * implementation resolves collisions by creating new Ids. To change the\n * ID of a cell after it was inserted into the model, use the following\n * code:\n * \n * (code\n * delete model.cells[cell.getId()];\n * cell.setId(newId);\n * model.cells[cell.getId()] = cell;\n * (end)\n *\n * If the change of the ID should be part of the command history, then the\n * cell should be removed from the model and a clone with the new ID should\n * be reinserted into the model instead.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell that has been added.\n */\nmxGraphModel.prototype.cellAdded = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\t// Creates an Id for the cell if not Id exists\n\t\tif (cell.getId() == null && this.createIds)\n\t\t{\n\t\t\tcell.setId(this.createId(cell));\n\t\t}\n\t\t\n\t\tif (cell.getId() != null)\n\t\t{\n\t\t\tvar collision = this.getCell(cell.getId());\n\t\t\t\n\t\t\tif (collision != cell)\n\t\t\t{\t\n\t\t\t\t// Creates new Id for the cell\n\t\t\t\t// as long as there is a collision\n\t\t\t\twhile (collision != null)\n\t\t\t\t{\n\t\t\t\t\tcell.setId(this.createId(cell));\n\t\t\t\t\tcollision = this.getCell(cell.getId());\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Lazily creates the cells dictionary\n\t\t\t\tif (this.cells == null)\n\t\t\t\t{\n\t\t\t\t\tthis.cells = new Object();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.cells[cell.getId()] = cell;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Makes sure IDs of deleted cells are not reused\n\t\tif (mxUtils.isNumeric(cell.getId()))\n\t\t{\n\t\t\tthis.nextId = Math.max(this.nextId, cell.getId());\n\t\t}\n\t\t\n\t\t// Recursively processes child cells\n\t\tvar childCount = this.getChildCount(cell);\n\t\t\n\t\tfor (var i=0; i<childCount; i++)\n\t\t{\n\t\t\tthis.cellAdded(this.getChildAt(cell, i));\n\t\t}\n\t}\n};\n\n/**\n * Function: createId\n * \n * Hook method to create an Id for the specified cell. This implementation\n * concatenates <prefix>, id and <postfix> to create the Id and increments\n * <nextId>. The cell is ignored by this implementation, but can be used in\n * overridden methods to prefix the Ids with eg. the cell type.\n *\n * Parameters:\n *\n * cell - <mxCell> to create the Id for.\n */\nmxGraphModel.prototype.createId = function(cell)\n{\n\tvar id = this.nextId;\n\tthis.nextId++;\n\t\n\treturn this.prefix + id + this.postfix;\n};\n\n/**\n * Function: updateEdgeParents\n * \n * Updates the parent for all edges that are connected to cell or one of\n * its descendants using <updateEdgeParent>.\n */\nmxGraphModel.prototype.updateEdgeParents = function(cell, root)\n{\n\t// Gets the topmost node of the hierarchy\n\troot = root || this.getRoot(cell);\n\t\n\t// Updates edges on children first\n\tvar childCount = this.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.getChildAt(cell, i);\n\t\tthis.updateEdgeParents(child, root);\n\t}\n\t\n\t// Updates the parents of all connected edges\n\tvar edgeCount = this.getEdgeCount(cell);\n\tvar edges = [];\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tedges.push(this.getEdgeAt(cell, i));\n\t}\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar edge = edges[i];\n\t\t\n\t\t// Updates edge parent if edge and child have\n\t\t// a common root node (does not need to be the\n\t\t// model root node)\n\t\tif (this.isAncestor(root, edge))\n\t\t{\n\t\t\tthis.updateEdgeParent(edge, root);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateEdgeParent\n *\n * Inner callback to update the parent of the specified <mxCell> to the\n * nearest-common-ancestor of its two terminals.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * root - <mxCell> that represents the current root of the model.\n */\nmxGraphModel.prototype.updateEdgeParent = function(edge, root)\n{\n\tvar source = this.getTerminal(edge, true);\n\tvar target = this.getTerminal(edge, false);\n\tvar cell = null;\n\t\n\t// Uses the first non-relative descendants of the source terminal\n\twhile (source != null && !this.isEdge(source) &&\n\t\tsource.geometry != null && source.geometry.relative)\n\t{\n\t\tsource = this.getParent(source);\n\t}\n\t\n\t// Uses the first non-relative descendants of the target terminal\n\twhile (target != null && this.ignoreRelativeEdgeParent &&\n\t\t!this.isEdge(target) && target.geometry != null && \n\t\ttarget.geometry.relative)\n\t{\n\t\ttarget = this.getParent(target);\n\t}\n\t\n\tif (this.isAncestor(root, source) && this.isAncestor(root, target))\n\t{\n\t\tif (source == target)\n\t\t{\n\t\t\tcell = this.getParent(source);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcell = this.getNearestCommonAncestor(source, target);\n\t\t}\n\n\t\tif (cell != null && (this.getParent(cell) != this.root ||\n\t\t\tthis.isAncestor(cell, edge)) && this.getParent(edge) != cell)\n\t\t{\n\t\t\tvar geo = this.getGeometry(edge);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar origin1 = this.getOrigin(this.getParent(edge));\n\t\t\t\tvar origin2 = this.getOrigin(cell);\n\t\t\t\t\n\t\t\t\tvar dx = origin2.x - origin1.x;\n\t\t\t\tvar dy = origin2.y - origin1.y;\n\t\t\t\t\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.translate(-dx, -dy);\n\t\t\t\tthis.setGeometry(edge, geo);\n\t\t\t}\n\n\t\t\tthis.add(cell, edge, this.getChildCount(cell));\n\t\t}\n\t}\n};\n\n/**\n * Function: getOrigin\n * \n * Returns the absolute, accumulated origin for the children inside the\n * given parent as an <mxPoint>.\n */\nmxGraphModel.prototype.getOrigin = function(cell)\n{\n\tvar result = null;\n\t\n\tif (cell != null)\n\t{\n\t\tresult = this.getOrigin(this.getParent(cell));\n\t\t\n\t\tif (!this.isEdge(cell))\n\t\t{\n\t\t\tvar geo = this.getGeometry(cell);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tresult.x += geo.x;\n\t\t\t\tresult.y += geo.y;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tresult = new mxPoint();\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getNearestCommonAncestor\n * \n * Returns the nearest common ancestor for the specified cells.\n *\n * Parameters:\n * \n * cell1 - <mxCell> that specifies the first cell in the tree.\n * cell2 - <mxCell> that specifies the second cell in the tree.\n */\nmxGraphModel.prototype.getNearestCommonAncestor = function(cell1, cell2)\n{\n\tif (cell1 != null && cell2 != null)\n\t{\t\t\n\t\t// Creates the cell path for the second cell\n\t\tvar path = mxCellPath.create(cell2);\n\n\t\tif (path != null && path.length > 0)\n\t\t{\n\t\t\t// Bubbles through the ancestors of the first\n\t\t\t// cell to find the nearest common ancestor.\n\t\t\tvar cell = cell1;\n\t\t\tvar current = mxCellPath.create(cell);\n\t\t\t\n\t\t\t// Inverts arguments\n\t\t\tif (path.length < current.length)\n\t\t\t{\n\t\t\t\tcell = cell2;\n\t\t\t\tvar tmp = current;\n\t\t\t\tcurrent = path;\n\t\t\t\tpath = tmp;\n\t\t\t}\n\t\t\t\n\t\t\twhile (cell != null)\n\t\t\t{\n\t\t\t\tvar parent = this.getParent(cell);\n\t\t\t\t\n\t\t\t\t// Checks if the cell path is equal to the beginning of the given cell path\n\t\t\t\tif (path.indexOf(current + mxCellPath.PATH_SEPARATOR) == 0 && parent != null)\n\t\t\t\t{\n\t\t\t\t\treturn cell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrent = mxCellPath.getParentPath(current);\n\t\t\t\tcell = parent;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: remove\n * \n * Removes the specified cell from the model using <mxChildChange> and adds\n * the change to the current transaction. This operation will remove the\n * cell and all of its children from the model. Returns the removed cell.\n *\n * Parameters:\n * \n * cell - <mxCell> that should be removed.\n */\nmxGraphModel.prototype.remove = function(cell)\n{\n\tif (cell == this.root)\n\t{\n\t\tthis.setRoot(null);\n\t}\n\telse if (this.getParent(cell) != null)\n\t{\n\t\tthis.execute(new mxChildChange(this, null, cell));\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: cellRemoved\n * \n * Inner callback to update <cells> when a cell has been removed.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell that has been removed.\n */\nmxGraphModel.prototype.cellRemoved = function(cell)\n{\n\tif (cell != null && this.cells != null)\n\t{\n\t\t// Recursively processes child cells\n\t\tvar childCount = this.getChildCount(cell);\n\t\t\n\t\tfor (var i = childCount - 1; i >= 0; i--)\n\t\t{\n\t\t\tthis.cellRemoved(this.getChildAt(cell, i));\n\t\t}\n\t\t\n\t\t// Removes the dictionary entry for the cell\n\t\tif (this.cells != null && cell.getId() != null)\n\t\t{\n\t\t\tdelete this.cells[cell.getId()];\n\t\t}\n\t}\n};\n\n/**\n * Function: parentForCellChanged\n * \n * Inner callback to update the parent of a cell using <mxCell.insert>\n * on the parent and return the previous parent.\n *\n * Parameters:\n * \n * cell - <mxCell> to update the parent for.\n * parent - <mxCell> that specifies the new parent of the cell.\n * index - Optional integer that defines the index of the child\n * in the parent's child array.\n */\nmxGraphModel.prototype.parentForCellChanged = function(cell, parent, index)\n{\n\tvar previous = this.getParent(cell);\n\t\n\tif (parent != null)\n\t{\n\t\tif (parent != previous || previous.getIndex(cell) != index)\n\t\t{\n\t\t\tparent.insert(cell, index);\n\t\t}\n\t}\n\telse if (previous != null)\n\t{\n\t\tvar oldIndex = previous.getIndex(cell);\n\t\tprevious.remove(oldIndex);\n\t}\n\t\n\t// Adds or removes the cell from the model\n\tvar par = this.contains(parent);\n\tvar pre = this.contains(previous);\n\t\n\tif (par && !pre)\n\t{\n\t\tthis.cellAdded(cell);\n\t}\n\telse if (pre && !par)\n\t{\n\t\tthis.cellRemoved(cell);\n\t}\n\t\n\treturn previous;\n};\n\n/**\n * Function: getChildCount\n *\n * Returns the number of children in the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> whose number of children should be returned.\n */\nmxGraphModel.prototype.getChildCount = function(cell)\n{\n\treturn (cell != null) ? cell.getChildCount() : 0;\n};\n\n/**\n * Function: getChildAt\n *\n * Returns the child of the given <mxCell> at the given index.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the parent.\n * index - Integer that specifies the index of the child to be returned.\n */\nmxGraphModel.prototype.getChildAt = function(cell, index)\n{\n\treturn (cell != null) ? cell.getChildAt(index) : null;\n};\n\n/**\n * Function: getChildren\n * \n * Returns all children of the given <mxCell> as an array of <mxCells>. The\n * return value should be only be read.\n *\n * Parameters:\n * \n * cell - <mxCell> the represents the parent.\n */\nmxGraphModel.prototype.getChildren = function(cell)\n{\n\treturn (cell != null) ? cell.children : null;\n};\n\t\n/**\n * Function: getChildVertices\n * \n * Returns the child vertices of the given parent.\n *\n * Parameters:\n * \n * cell - <mxCell> whose child vertices should be returned.\n */\nmxGraphModel.prototype.getChildVertices = function(parent)\n{\n\treturn this.getChildCells(parent, true, false);\n};\n\t\t\n/**\n * Function: getChildEdges\n * \n * Returns the child edges of the given parent.\n *\n * Parameters:\n * \n * cell - <mxCell> whose child edges should be returned.\n */\nmxGraphModel.prototype.getChildEdges = function(parent)\n{\n\treturn this.getChildCells(parent, false, true);\n};\n\n/**\n * Function: getChildCells\n * \n * Returns the children of the given cell that are vertices and/or edges\n * depending on the arguments.\n *\n * Parameters:\n * \n * cell - <mxCell> the represents the parent.\n * vertices - Boolean indicating if child vertices should be returned.\n * Default is false.\n * edges - Boolean indicating if child edges should be returned.\n * Default is false.\n */\nmxGraphModel.prototype.getChildCells = function(parent, vertices, edges)\n{\n\tvertices = (vertices != null) ? vertices : false;\n\tedges = (edges != null) ? edges : false;\n\t\n\tvar childCount = this.getChildCount(parent);\n\tvar result = [];\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.getChildAt(parent, i);\n\n\t\tif ((!edges && !vertices) || (edges && this.isEdge(child)) ||\n\t\t\t(vertices && this.isVertex(child)))\n\t\t{\n\t\t\tresult.push(child);\n\t\t}\n\t}\n\n\treturn result;\n};\n\t\t\n/**\n * Function: getTerminal\n * \n * Returns the source or target <mxCell> of the given edge depending on the\n * value of the boolean parameter.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * isSource - Boolean indicating which end of the edge should be returned.\n */\nmxGraphModel.prototype.getTerminal = function(edge, isSource)\n{\n\treturn (edge != null) ? edge.getTerminal(isSource) : null;\n};\n\n/**\n * Function: setTerminal\n * \n * Sets the source or target terminal of the given <mxCell> using\n * <mxTerminalChange> and adds the change to the current transaction.\n * This implementation updates the parent of the edge using <updateEdgeParent>\n * if required.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * terminal - <mxCell> that specifies the new terminal.\n * isSource - Boolean indicating if the terminal is the new source or\n * target terminal of the edge.\n */\nmxGraphModel.prototype.setTerminal = function(edge, terminal, isSource)\n{\n\tvar terminalChanged = terminal != this.getTerminal(edge, isSource);\n\tthis.execute(new mxTerminalChange(this, edge, terminal, isSource));\n\t\n\tif (this.maintainEdgeParent && terminalChanged)\n\t{\n\t\tthis.updateEdgeParent(edge, this.getRoot());\n\t}\n\t\n\treturn terminal;\n};\n\t\n/**\n * Function: setTerminals\n * \n * Sets the source and target <mxCell> of the given <mxCell> in a single\n * transaction using <setTerminal> for each end of the edge.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * source - <mxCell> that specifies the new source terminal.\n * target - <mxCell> that specifies the new target terminal.\n */\nmxGraphModel.prototype.setTerminals = function(edge, source, target)\n{\n\tthis.beginUpdate();\n\ttry\n\t{\n\t\tthis.setTerminal(edge, source, true);\n\t\tthis.setTerminal(edge, target, false);\n\t}\n\tfinally\n\t{\n\t\tthis.endUpdate();\n\t}\n};\n\n/**\n * Function: terminalForCellChanged\n * \n * Inner helper function to update the terminal of the edge using\n * <mxCell.insertEdge> and return the previous terminal.\n * \n * Parameters:\n * \n * edge - <mxCell> that specifies the edge to be updated.\n * terminal - <mxCell> that specifies the new terminal.\n * isSource - Boolean indicating if the terminal is the new source or\n * target terminal of the edge.\n */\nmxGraphModel.prototype.terminalForCellChanged = function(edge, terminal, isSource)\n{\n\tvar previous = this.getTerminal(edge, isSource);\n\t\n\tif (terminal != null)\n\t{\n\t\tterminal.insertEdge(edge, isSource);\n\t}\n\telse if (previous != null)\n\t{\n\t\tprevious.removeEdge(edge, isSource);\n\t}\n\t\n\treturn previous;\n};\n\n/**\n * Function: getEdgeCount\n * \n * Returns the number of distinct edges connected to the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the vertex.\n */\nmxGraphModel.prototype.getEdgeCount = function(cell)\n{\n\treturn (cell != null) ? cell.getEdgeCount() : 0;\n};\n\n/**\n * Function: getEdgeAt\n * \n * Returns the edge of cell at the given index.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the vertex.\n * index - Integer that specifies the index of the edge\n * to return.\n */\nmxGraphModel.prototype.getEdgeAt = function(cell, index)\n{\n\treturn (cell != null) ? cell.getEdgeAt(index) : null;\n};\n\t\n/**\n * Function: getDirectedEdgeCount\n * \n * Returns the number of incoming or outgoing edges, ignoring the given\n * edge.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edge count should be returned.\n * outgoing - Boolean that specifies if the number of outgoing or\n * incoming edges should be returned.\n * ignoredEdge - <mxCell> that represents an edge to be ignored.\n */\nmxGraphModel.prototype.getDirectedEdgeCount = function(cell, outgoing, ignoredEdge)\n{\n\tvar count = 0;\n\tvar edgeCount = this.getEdgeCount(cell);\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar edge = this.getEdgeAt(cell, i);\n\n\t\tif (edge != ignoredEdge && this.getTerminal(edge, outgoing) == cell)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\n\treturn count;\n};\n\n/**\n * Function: getConnections\n * \n * Returns all edges of the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n * \n */\nmxGraphModel.prototype.getConnections = function(cell)\n{\n\treturn this.getEdges(cell, true, true, false);\n};\n\n/**\n * Function: getIncomingEdges\n * \n * Returns the incoming edges of the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose incoming edges should be returned.\n * \n */\nmxGraphModel.prototype.getIncomingEdges = function(cell)\n{\n\treturn this.getEdges(cell, true, false, false);\n};\n\n/**\n * Function: getOutgoingEdges\n * \n * Returns the outgoing edges of the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose outgoing edges should be returned.\n * \n */\nmxGraphModel.prototype.getOutgoingEdges = function(cell)\n{\n\treturn this.getEdges(cell, false, true, false);\n};\n\n/**\n * Function: getEdges\n * \n * Returns all distinct edges connected to this cell as a new array of\n * <mxCells>. If at least one of incoming or outgoing is true, then loops\n * are ignored, otherwise if both are false, then all edges connected to\n * the given cell are returned including loops.\n * \n * Parameters:\n * \n * cell - <mxCell> that specifies the cell.\n * incoming - Optional boolean that specifies if incoming edges should be\n * returned. Default is true.\n * outgoing - Optional boolean that specifies if outgoing edges should be\n * returned. Default is true.\n * includeLoops - Optional boolean that specifies if loops should be returned.\n * Default is true. \n */\nmxGraphModel.prototype.getEdges = function(cell, incoming, outgoing, includeLoops)\n{\n\tincoming = (incoming != null) ? incoming : true;\n\toutgoing = (outgoing != null) ? outgoing : true;\n\tincludeLoops = (includeLoops != null) ? includeLoops : true;\n\t\n\tvar edgeCount = this.getEdgeCount(cell);\n\tvar result = [];\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar edge = this.getEdgeAt(cell, i);\n\t\tvar source = this.getTerminal(edge, true);\n\t\tvar target = this.getTerminal(edge, false);\n\n\t\tif ((includeLoops && source == target) || ((source != target) && ((incoming && target == cell) ||\n\t\t\t(outgoing && source == cell))))\n\t\t{\n\t\t\tresult.push(edge);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns all edges between the given source and target pair. If directed\n * is true, then only edges from the source to the target are returned,\n * otherwise, all edges between the two cells are returned.\n * \n * Parameters:\n * \n * source - <mxCell> that defines the source terminal of the edge to be\n * returned.\n * target - <mxCell> that defines the target terminal of the edge to be\n * returned.\n * directed - Optional boolean that specifies if the direction of the\n * edge should be taken into account. Default is false.\n */\nmxGraphModel.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\t\n\tvar tmp1 = this.getEdgeCount(source);\n\tvar tmp2 = this.getEdgeCount(target);\n\t\n\t// Assumes the source has less connected edges\n\tvar terminal = source;\n\tvar edgeCount = tmp1;\n\t\n\t// Uses the smaller array of connected edges\n\t// for searching the edge\n\tif (tmp2 < tmp1)\n\t{\n\t\tedgeCount = tmp2;\n\t\tterminal = target;\n\t}\n\t\n\tvar result = [];\n\t\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar edge = this.getEdgeAt(terminal, i);\n\t\tvar src = this.getTerminal(edge, true);\n\t\tvar trg = this.getTerminal(edge, false);\n\t\tvar directedMatch = (src == source) && (trg == target);\n\t\tvar oppositeMatch = (trg == source) && (src == target);\n\n\t\tif (directedMatch || (!directed && oppositeMatch))\n\t\t{\n\t\t\tresult.push(edge);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getOpposites\n * \n * Returns all opposite vertices wrt terminal for the given edges, only\n * returning sources and/or targets as specified. The result is returned\n * as an array of <mxCells>.\n * \n * Parameters:\n * \n * edges - Array of <mxCells> that contain the edges to be examined.\n * terminal - <mxCell> that specifies the known end of the edges.\n * sources - Boolean that specifies if source terminals should be contained\n * in the result. Default is true.\n * targets - Boolean that specifies if target terminals should be contained\n * in the result. Default is true.\n */\nmxGraphModel.prototype.getOpposites = function(edges, terminal, sources, targets)\n{\n\tsources = (sources != null) ? sources : true;\n\ttargets = (targets != null) ? targets : true;\n\t\n\tvar terminals = [];\n\t\n\tif (edges != null)\n\t{\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tvar source = this.getTerminal(edges[i], true);\n\t\t\tvar target = this.getTerminal(edges[i], false);\n\t\t\t\n\t\t\t// Checks if the terminal is the source of\n\t\t\t// the edge and if the target should be\n\t\t\t// stored in the result\n\t\t\tif (source == terminal && target != null && target != terminal && targets)\n\t\t\t{\n\t\t\t\tterminals.push(target);\n\t\t\t}\n\t\t\t\n\t\t\t// Checks if the terminal is the taget of\n\t\t\t// the edge and if the source should be\n\t\t\t// stored in the result\n\t\t\telse if (target == terminal && source != null && source != terminal && sources)\n\t\t\t{\n\t\t\t\tterminals.push(source);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn terminals;\n};\n\n/**\n * Function: getTopmostCells\n * \n * Returns the topmost cells of the hierarchy in an array that contains no\n * descendants for each <mxCell> that it contains. Duplicates should be\n * removed in the cells array to improve performance.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose topmost ancestors should be returned.\n */\nmxGraphModel.prototype.getTopmostCells = function(cells)\n{\n\tvar dict = new mxDictionary();\n\tvar tmp = [];\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tdict.put(cells[i], true);\n\t}\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tvar cell = cells[i];\n\t\tvar topmost = true;\n\t\tvar parent = this.getParent(cell);\n\t\t\n\t\twhile (parent != null)\n\t\t{\n\t\t\tif (dict.get(parent))\n\t\t\t{\n\t\t\t\ttopmost = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tparent = this.getParent(parent);\n\t\t}\n\t\t\n\t\tif (topmost)\n\t\t{\n\t\t\ttmp.push(cell);\n\t\t}\n\t}\n\t\n\treturn tmp;\n};\n\n/**\n * Function: isVertex\n * \n * Returns true if the given cell is a vertex.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible vertex.\n */\nmxGraphModel.prototype.isVertex = function(cell)\n{\n\treturn (cell != null) ? cell.isVertex() : false;\n};\n\n/**\n * Function: isEdge\n * \n * Returns true if the given cell is an edge.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible edge.\n */\nmxGraphModel.prototype.isEdge = function(cell)\n{\n\treturn (cell != null) ? cell.isEdge() : false;\n};\n\n/**\n * Function: isConnectable\n * \n * Returns true if the given <mxCell> is connectable. If <edgesConnectable>\n * is false, then this function returns false for all edges else it returns\n * the return value of <mxCell.isConnectable>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose connectable state should be returned.\n */\nmxGraphModel.prototype.isConnectable = function(cell)\n{\n\treturn (cell != null) ? cell.isConnectable() : false;\n};\n\n/**\n * Function: getValue\n * \n * Returns the user object of the given <mxCell> using <mxCell.getValue>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose user object should be returned.\n */\nmxGraphModel.prototype.getValue = function(cell)\n{\n\treturn (cell != null) ? cell.getValue() : null;\n};\n\n/**\n * Function: setValue\n * \n * Sets the user object of then given <mxCell> using <mxValueChange>\n * and adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose user object should be changed.\n * value - Object that defines the new user object.\n */\nmxGraphModel.prototype.setValue = function(cell, value)\n{\n\tthis.execute(new mxValueChange(this, cell, value));\n\t\n\treturn value;\n};\n\n/**\n * Function: valueForCellChanged\n * \n * Inner callback to update the user object of the given <mxCell>\n * using <mxCell.valueChanged> and return the previous value,\n * that is, the return value of <mxCell.valueChanged>.\n * \n * To change a specific attribute in an XML node, the following code can be\n * used.\n * \n * (code)\n * graph.getModel().valueForCellChanged = function(cell, value)\n * {\n *   var previous = cell.value.getAttribute('label');\n *   cell.value.setAttribute('label', value);\n *   \n *   return previous;\n * };\n * (end) \n */\nmxGraphModel.prototype.valueForCellChanged = function(cell, value)\n{\n\treturn cell.valueChanged(value);\n};\n\n/**\n * Function: getGeometry\n * \n * Returns the <mxGeometry> of the given <mxCell>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose geometry should be returned.\n */\nmxGraphModel.prototype.getGeometry = function(cell)\n{\n\treturn (cell != null) ? cell.getGeometry() : null;\n};\n\n/**\n * Function: setGeometry\n * \n * Sets the <mxGeometry> of the given <mxCell>. The actual update\n * of the cell is carried out in <geometryForCellChanged>. The\n * <mxGeometryChange> action is used to encapsulate the change.\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry should be changed.\n * geometry - <mxGeometry> that defines the new geometry.\n */\nmxGraphModel.prototype.setGeometry = function(cell, geometry)\n{\n\tif (geometry != this.getGeometry(cell))\n\t{\n\t\tthis.execute(new mxGeometryChange(this, cell, geometry));\n\t}\n\t\n\treturn geometry;\n};\n\n/**\n * Function: geometryForCellChanged\n * \n * Inner callback to update the <mxGeometry> of the given <mxCell> using\n * <mxCell.setGeometry> and return the previous <mxGeometry>.\n */\nmxGraphModel.prototype.geometryForCellChanged = function(cell, geometry)\n{\n\tvar previous = this.getGeometry(cell);\n\tcell.setGeometry(geometry);\n\t\n\treturn previous;\n};\n\n/**\n * Function: getStyle\n * \n * Returns the style of the given <mxCell>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose style should be returned.\n */\nmxGraphModel.prototype.getStyle = function(cell)\n{\n\treturn (cell != null) ? cell.getStyle() : null;\n};\n\n/**\n * Function: setStyle\n * \n * Sets the style of the given <mxCell> using <mxStyleChange> and\n * adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose style should be changed.\n * style - String of the form [stylename;|key=value;] to specify\n * the new cell style.\n */\nmxGraphModel.prototype.setStyle = function(cell, style)\n{\n\tif (style != this.getStyle(cell))\n\t{\n\t\tthis.execute(new mxStyleChange(this, cell, style));\n\t}\n\t\n\treturn style;\n};\n\n/**\n * Function: styleForCellChanged\n * \n * Inner callback to update the style of the given <mxCell>\n * using <mxCell.setStyle> and return the previous style.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell to be updated.\n * style - String of the form [stylename;|key=value;] to specify\n * the new cell style.\n */\nmxGraphModel.prototype.styleForCellChanged = function(cell, style)\n{\n\tvar previous = this.getStyle(cell);\n\tcell.setStyle(style);\n\t\n\treturn previous;\n};\n\n/**\n * Function: isCollapsed\n * \n * Returns true if the given <mxCell> is collapsed.\n *\n * Parameters:\n * \n * cell - <mxCell> whose collapsed state should be returned.\n */\nmxGraphModel.prototype.isCollapsed = function(cell)\n{\n\treturn (cell != null) ? cell.isCollapsed() : false;\n};\n\n/**\n * Function: setCollapsed\n * \n * Sets the collapsed state of the given <mxCell> using <mxCollapseChange>\n * and adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose collapsed state should be changed.\n * collapsed - Boolean that specifies the new collpased state.\n */\nmxGraphModel.prototype.setCollapsed = function(cell, collapsed)\n{\n\tif (collapsed != this.isCollapsed(cell))\n\t{\n\t\tthis.execute(new mxCollapseChange(this, cell, collapsed));\n\t}\n\t\n\treturn collapsed;\n};\n\t\n/**\n * Function: collapsedStateForCellChanged\n *\n * Inner callback to update the collapsed state of the\n * given <mxCell> using <mxCell.setCollapsed> and return\n * the previous collapsed state.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell to be updated.\n * collapsed - Boolean that specifies the new collpased state.\n */\nmxGraphModel.prototype.collapsedStateForCellChanged = function(cell, collapsed)\n{\n\tvar previous = this.isCollapsed(cell);\n\tcell.setCollapsed(collapsed);\n\t\n\treturn previous;\n};\n\n/**\n * Function: isVisible\n * \n * Returns true if the given <mxCell> is visible.\n * \n * Parameters:\n * \n * cell - <mxCell> whose visible state should be returned.\n */\nmxGraphModel.prototype.isVisible = function(cell)\n{\n\treturn (cell != null) ? cell.isVisible() : false;\n};\n\n/**\n * Function: setVisible\n * \n * Sets the visible state of the given <mxCell> using <mxVisibleChange> and\n * adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose visible state should be changed.\n * visible - Boolean that specifies the new visible state.\n */\nmxGraphModel.prototype.setVisible = function(cell, visible)\n{\n\tif (visible != this.isVisible(cell))\n\t{\n\t\tthis.execute(new mxVisibleChange(this, cell, visible));\n\t}\n\t\n\treturn visible;\n};\n\t\n/**\n * Function: visibleStateForCellChanged\n *\n * Inner callback to update the visible state of the\n * given <mxCell> using <mxCell.setCollapsed> and return\n * the previous visible state.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell to be updated.\n * visible - Boolean that specifies the new visible state.\n */\nmxGraphModel.prototype.visibleStateForCellChanged = function(cell, visible)\n{\n\tvar previous = this.isVisible(cell);\n\tcell.setVisible(visible);\n\t\n\treturn previous;\n};\n\n/**\n * Function: execute\n * \n * Executes the given edit and fires events if required. The edit object\n * requires an execute function which is invoked. The edit is added to the\n * <currentEdit> between <beginUpdate> and <endUpdate> calls, so that\n * events will be fired if this execute is an individual transaction, that\n * is, if no previous <beginUpdate> calls have been made without calling\n * <endUpdate>. This implementation fires an <execute> event before\n * executing the given change.\n * \n * Parameters:\n * \n * change - Object that described the change.\n */\nmxGraphModel.prototype.execute = function(change)\n{\n\tchange.execute();\n\tthis.beginUpdate();\n\tthis.currentEdit.add(change);\n\tthis.fireEvent(new mxEventObject(mxEvent.EXECUTE, 'change', change));\n\t// New global executed event\n\tthis.fireEvent(new mxEventObject(mxEvent.EXECUTED, 'change', change));\n\tthis.endUpdate();\n};\n\n/**\n * Function: beginUpdate\n * \n * Increments the <updateLevel> by one. The event notification\n * is queued until <updateLevel> reaches 0 by use of\n * <endUpdate>.\n *\n * All changes on <mxGraphModel> are transactional,\n * that is, they are executed in a single undoable change\n * on the model (without transaction isolation).\n * Therefore, if you want to combine any\n * number of changes into a single undoable change,\n * you should group any two or more API calls that\n * modify the graph model between <beginUpdate>\n * and <endUpdate> calls as shown here:\n * \n * (code)\n * var model = graph.getModel();\n * var parent = graph.getDefaultParent();\n * var index = model.getChildCount(parent);\n * model.beginUpdate();\n * try\n * {\n *   model.add(parent, v1, index);\n *   model.add(parent, v2, index+1);\n * }\n * finally\n * {\n *   model.endUpdate();\n * }\n * (end)\n * \n * Of course there is a shortcut for appending a\n * sequence of cells into the default parent:\n * \n * (code)\n * graph.addCells([v1, v2]).\n * (end)\n */\nmxGraphModel.prototype.beginUpdate = function()\n{\n\tthis.updateLevel++;\n\tthis.fireEvent(new mxEventObject(mxEvent.BEGIN_UPDATE));\n\t\n\tif (this.updateLevel == 1)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.START_EDIT));\n\t}\n};\n\n/**\n * Function: endUpdate\n * \n * Decrements the <updateLevel> by one and fires an <undo>\n * event if the <updateLevel> reaches 0. This function\n * indirectly fires a <change> event by invoking the notify\n * function on the <currentEdit> und then creates a new\n * <currentEdit> using <createUndoableEdit>.\n *\n * The <undo> event is fired only once per edit, whereas\n * the <change> event is fired whenever the notify\n * function is invoked, that is, on undo and redo of\n * the edit.\n */\nmxGraphModel.prototype.endUpdate = function()\n{\n\tthis.updateLevel--;\n\t\n\tif (this.updateLevel == 0)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.END_EDIT));\n\t}\n\t\n\tif (!this.endingUpdate)\n\t{\n\t\tthis.endingUpdate = this.updateLevel == 0;\n\t\tthis.fireEvent(new mxEventObject(mxEvent.END_UPDATE, 'edit', this.currentEdit));\n\n\t\ttry\n\t\t{\t\t\n\t\t\tif (this.endingUpdate && !this.currentEdit.isEmpty())\n\t\t\t{\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.BEFORE_UNDO, 'edit', this.currentEdit));\n\t\t\t\tvar tmp = this.currentEdit;\n\t\t\t\tthis.currentEdit = this.createUndoableEdit();\n\t\t\t\ttmp.notify();\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', tmp));\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.endingUpdate = false;\n\t\t}\n\t}\n};\n\n/**\n * Function: createUndoableEdit\n * \n * Creates a new <mxUndoableEdit> that implements the\n * notify function to fire a <change> and <notify> event\n * through the <mxUndoableEdit>'s source.\n * \n * Parameters:\n * \n * significant - Optional boolean that specifies if the edit to be created is\n * significant. Default is true.\n */\nmxGraphModel.prototype.createUndoableEdit = function(significant)\n{\n\tvar edit = new mxUndoableEdit(this, (significant != null) ? significant : true);\n\t\n\tedit.notify = function()\n\t{\n\t\t// LATER: Remove changes property (deprecated)\n\t\tedit.source.fireEvent(new mxEventObject(mxEvent.CHANGE,\n\t\t\t'edit', edit, 'changes', edit.changes));\n\t\tedit.source.fireEvent(new mxEventObject(mxEvent.NOTIFY,\n\t\t\t'edit', edit, 'changes', edit.changes));\n\t};\n\t\n\treturn edit;\n};\n\n/**\n * Function: mergeChildren\n * \n * Merges the children of the given cell into the given target cell inside\n * this model. All cells are cloned unless there is a corresponding cell in\n * the model with the same id, in which case the source cell is ignored and\n * all edges are connected to the corresponding cell in this model. Edges\n * are considered to have no identity and are always cloned unless the\n * cloneAllEdges flag is set to false, in which case edges with the same\n * id in the target model are reconnected to reflect the terminals of the\n * source edges.\n */\nmxGraphModel.prototype.mergeChildren = function(from, to, cloneAllEdges)\n{\n\tcloneAllEdges = (cloneAllEdges != null) ? cloneAllEdges : true;\n\t\n\tthis.beginUpdate();\n\ttry\n\t{\n\t\tvar mapping = new Object();\n\t\tthis.mergeChildrenImpl(from, to, cloneAllEdges, mapping);\n\t\t\n\t\t// Post-processes all edges in the mapping and\n\t\t// reconnects the terminals to the corresponding\n\t\t// cells in the target model\n\t\tfor (var key in mapping)\n\t\t{\n\t\t\tvar cell = mapping[key];\n\t\t\tvar terminal = this.getTerminal(cell, true);\n\n\t\t\tif (terminal != null)\n\t\t\t{\n\t\t\t\tterminal = mapping[mxCellPath.create(terminal)];\n\t\t\t\tthis.setTerminal(cell, terminal, true);\n\t\t\t}\n\t\t\t\n\t\t\tterminal = this.getTerminal(cell, false);\n\t\t\t\n\t\t\tif (terminal != null)\n\t\t\t{\n\t\t\t\tterminal = mapping[mxCellPath.create(terminal)];\n\t\t\t\tthis.setTerminal(cell, terminal, false);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.endUpdate();\n\t}\n};\n\n/**\n * Function: mergeChildren\n * \n * Clones the children of the source cell into the given target cell in\n * this model and adds an entry to the mapping that maps from the source\n * cell to the target cell with the same id or the clone of the source cell\n * that was inserted into this model.\n */\nmxGraphModel.prototype.mergeChildrenImpl = function(from, to, cloneAllEdges, mapping)\n{\n\tthis.beginUpdate();\n\ttry\n\t{\n\t\tvar childCount = from.getChildCount();\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar cell = from.getChildAt(i);\n\t\t\t\n\t\t\tif (typeof(cell.getId) == 'function')\n\t\t\t{\n\t\t\t\tvar id = cell.getId();\n\t\t\t\tvar target = (id != null && (!this.isEdge(cell) || !cloneAllEdges)) ?\n\t\t\t\t\t\tthis.getCell(id) : null;\n\t\t\t\t\n\t\t\t\t// Clones and adds the child if no cell exists for the id\n\t\t\t\tif (target == null)\n\t\t\t\t{\n\t\t\t\t\tvar clone = cell.clone();\n\t\t\t\t\tclone.setId(id);\n\t\t\t\t\t\n\t\t\t\t\t// Sets the terminals from the original cell to the clone\n\t\t\t\t\t// because the lookup uses strings not cells in JS\n\t\t\t\t\tclone.setTerminal(cell.getTerminal(true), true);\n\t\t\t\t\tclone.setTerminal(cell.getTerminal(false), false);\n\t\t\t\t\t\n\t\t\t\t\t// Do *NOT* use model.add as this will move the edge away\n\t\t\t\t\t// from the parent in updateEdgeParent if maintainEdgeParent\n\t\t\t\t\t// is enabled in the target model\n\t\t\t\t\ttarget = to.insert(clone);\n\t\t\t\t\tthis.cellAdded(target);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Stores the mapping for later reconnecting edges\n\t\t\t\tmapping[mxCellPath.create(cell)] = target;\n\t\t\t\t\n\t\t\t\t// Recurses\n\t\t\t\tthis.mergeChildrenImpl(cell, target, cloneAllEdges, mapping);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.endUpdate();\n\t}\n};\n\n/**\n * Function: getParents\n * \n * Returns an array that represents the set (no duplicates) of all parents\n * for the given array of cells.\n * \n * Parameters:\n * \n * cells - Array of cells whose parents should be returned.\n */\nmxGraphModel.prototype.getParents = function(cells)\n{\n\tvar parents = [];\n\t\n\tif (cells != null)\n\t{\n\t\tvar dict = new mxDictionary();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar parent = this.getParent(cells[i]);\n\t\t\t\n\t\t\tif (parent != null && !dict.get(parent))\n\t\t\t{\n\t\t\t\tdict.put(parent, true);\n\t\t\t\tparents.push(parent);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn parents;\n};\n\n//\n// Cell Cloning\n//\n\n/**\n * Function: cloneCell\n * \n * Returns a deep clone of the given <mxCell> (including\n * the children) which is created using <cloneCells>.\n *\n * Parameters:\n * \n * cell - <mxCell> to be cloned.\n * includeChildren - Optional boolean indicating if the cells should be cloned\n * with all descendants. Default is true.\n */\nmxGraphModel.prototype.cloneCell = function(cell, includeChildren)\n{\n\tif (cell != null)\n\t{\n\t\treturn this.cloneCells([cell], includeChildren)[0];\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: cloneCells\n * \n * Returns an array of clones for the given array of <mxCells>.\n * Depending on the value of includeChildren, a deep clone is created for\n * each cell. Connections are restored based if the corresponding\n * cell is contained in the passed in array.\n *\n * Parameters:\n * \n * cells - Array of <mxCell> to be cloned.\n * includeChildren - Optional boolean indicating if the cells should be cloned\n * with all descendants. Default is true.\n * mapping - Optional mapping for existing clones.\n */\nmxGraphModel.prototype.cloneCells = function(cells, includeChildren, mapping)\n{\n\tincludeChildren = (includeChildren != null) ? includeChildren : true;\n\tmapping = (mapping != null) ? mapping : new Object();\n\tvar clones = [];\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tif (cells[i] != null)\n\t\t{\n\t\t\tclones.push(this.cloneCellImpl(cells[i], mapping, includeChildren));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tclones.push(null);\n\t\t}\n\t}\n\t\n\tfor (var i = 0; i < clones.length; i++)\n\t{\n\t\tif (clones[i] != null)\n\t\t{\n\t\t\tthis.restoreClone(clones[i], cells[i], mapping);\n\t\t}\n\t}\n\t\n\treturn clones;\n};\n\t\t\t\n/**\n * Function: cloneCellImpl\n * \n * Inner helper method for cloning cells recursively.\n */\nmxGraphModel.prototype.cloneCellImpl = function(cell, mapping, includeChildren)\n{\n\tvar ident = mxObjectIdentity.get(cell);\n\tvar clone = mapping[ident];\n\t\n\tif (clone == null)\n\t{\n\t\tclone = this.cellCloned(cell);\n\t\tmapping[ident] = clone;\n\n\t\tif (includeChildren)\n\t\t{\n\t\t\tvar childCount = this.getChildCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar cloneChild = this.cloneCellImpl(\n\t\t\t\t\tthis.getChildAt(cell, i), mapping, true);\n\t\t\t\tclone.insert(cloneChild);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn clone;\n};\n\n/**\n * Function: cellCloned\n * \n * Hook for cloning the cell. This returns cell.clone() or\n * any possible exceptions.\n */\nmxGraphModel.prototype.cellCloned = function(cell)\n{\n\treturn cell.clone();\n};\n\n/**\n * Function: restoreClone\n * \n * Inner helper method for restoring the connections in\n * a network of cloned cells.\n */\nmxGraphModel.prototype.restoreClone = function(clone, cell, mapping)\n{\n\tvar source = this.getTerminal(cell, true);\n\t\n\tif (source != null)\n\t{\n\t\tvar tmp = mapping[mxObjectIdentity.get(source)];\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\ttmp.insertEdge(clone, true);\n\t\t}\n\t}\n\t\n\tvar target = this.getTerminal(cell, false);\n\t\n\tif (target != null)\n\t{\n\t\tvar tmp = mapping[mxObjectIdentity.get(target)];\n\t\t\n\t\tif (tmp != null)\n\t\t{\t\n\t\t\ttmp.insertEdge(clone, false);\n\t\t}\n\t}\n\t\n\tvar childCount = this.getChildCount(clone);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.restoreClone(this.getChildAt(clone, i),\n\t\t\tthis.getChildAt(cell, i), mapping);\n\t}\n};\n\n//\n// Atomic changes\n//\n\n/**\n * Class: mxRootChange\n * \n * Action to change the root in a model.\n *\n * Constructor: mxRootChange\n * \n * Constructs a change of the root in the\n * specified model.\n */\nfunction mxRootChange(model, root)\n{\n\tthis.model = model;\n\tthis.root = root;\n\tthis.previous = root;\n};\n\n/**\n * Function: execute\n * \n * Carries out a change of the root using\n * <mxGraphModel.rootChanged>.\n */\nmxRootChange.prototype.execute = function()\n{\n\tthis.root = this.previous;\n\tthis.previous = this.model.rootChanged(this.previous);\n};\n\n/**\n * Class: mxChildChange\n * \n * Action to add or remove a child in a model.\n *\n * Constructor: mxChildChange\n * \n * Constructs a change of a child in the\n * specified model.\n */\nfunction mxChildChange(model, parent, child, index)\n{\n\tthis.model = model;\n\tthis.parent = parent;\n\tthis.previous = parent;\n\tthis.child = child;\n\tthis.index = index;\n\tthis.previousIndex = index;\n};\n\n/**\n * Function: execute\n * \n * Changes the parent of <child> using\n * <mxGraphModel.parentForCellChanged> and\n * removes or restores the cell's\n * connections.\n */\nmxChildChange.prototype.execute = function()\n{\n\tif (this.child != null)\n\t{\n\t\tvar tmp = this.model.getParent(this.child);\n\t\tvar tmp2 = (tmp != null) ? tmp.getIndex(this.child) : 0;\n\t\t\n\t\tif (this.previous == null)\n\t\t{\n\t\t\tthis.connect(this.child, false);\n\t\t}\n\t\t\n\t\ttmp = this.model.parentForCellChanged(\n\t\t\tthis.child, this.previous, this.previousIndex);\n\t\t\t\n\t\tif (this.previous != null)\n\t\t{\n\t\t\tthis.connect(this.child, true);\n\t\t}\n\t\t\n\t\tthis.parent = this.previous;\n\t\tthis.previous = tmp;\n\t\tthis.index = this.previousIndex;\n\t\tthis.previousIndex = tmp2;\n\t}\n};\n\n/**\n * Function: disconnect\n * \n * Disconnects the given cell recursively from its\n * terminals and stores the previous terminal in the\n * cell's terminals.\n */\nmxChildChange.prototype.connect = function(cell, isConnect)\n{\n\tisConnect = (isConnect != null) ? isConnect : true;\n\t\n\tvar source = cell.getTerminal(true);\n\tvar target = cell.getTerminal(false);\n\t\n\tif (source != null)\n\t{\n\t\tif (isConnect)\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, source, true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, null, true);\n\t\t}\n\t}\n\t\n\tif (target != null)\n\t{\n\t\tif (isConnect)\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, target, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, null, false);\n\t\t}\n\t}\n\t\n\tcell.setTerminal(source, true);\n\tcell.setTerminal(target, false);\n\t\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i=0; i<childCount; i++)\n\t{\n\t\tthis.connect(this.model.getChildAt(cell, i), isConnect);\n\t}\n};\n\n/**\n * Class: mxTerminalChange\n * \n * Action to change a terminal in a model.\n *\n * Constructor: mxTerminalChange\n * \n * Constructs a change of a terminal in the \n * specified model.\n */\nfunction mxTerminalChange(model, cell, terminal, source)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.terminal = terminal;\n\tthis.previous = terminal;\n\tthis.source = source;\n};\n\n/**\n * Function: execute\n * \n * Changes the terminal of <cell> to <previous> using\n * <mxGraphModel.terminalForCellChanged>.\n */\nmxTerminalChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.terminal = this.previous;\n\t\tthis.previous = this.model.terminalForCellChanged(\n\t\t\tthis.cell, this.previous, this.source);\n\t}\n};\n\n/**\n * Class: mxValueChange\n * \n * Action to change a user object in a model.\n *\n * Constructor: mxValueChange\n * \n * Constructs a change of a user object in the \n * specified model.\n */\nfunction mxValueChange(model, cell, value)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.value = value;\n\tthis.previous = value;\n};\n\n/**\n * Function: execute\n * \n * Changes the value of <cell> to <previous> using\n * <mxGraphModel.valueForCellChanged>.\n */\nmxValueChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.value = this.previous;\n\t\tthis.previous = this.model.valueForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxStyleChange\n * \n * Action to change a cell's style in a model.\n *\n * Constructor: mxStyleChange\n * \n * Constructs a change of a style in the\n * specified model.\n */\nfunction mxStyleChange(model, cell, style)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.style = style;\n\tthis.previous = style;\n};\n\n/**\n * Function: execute\n * \n * Changes the style of <cell> to <previous> using\n * <mxGraphModel.styleForCellChanged>.\n */\nmxStyleChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.style = this.previous;\n\t\tthis.previous = this.model.styleForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxGeometryChange\n * \n * Action to change a cell's geometry in a model.\n *\n * Constructor: mxGeometryChange\n * \n * Constructs a change of a geometry in the\n * specified model.\n */\nfunction mxGeometryChange(model, cell, geometry)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.geometry = geometry;\n\tthis.previous = geometry;\n};\n\n/**\n * Function: execute\n * \n * Changes the geometry of <cell> ro <previous> using\n * <mxGraphModel.geometryForCellChanged>.\n */\nmxGeometryChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.geometry = this.previous;\n\t\tthis.previous = this.model.geometryForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxCollapseChange\n * \n * Action to change a cell's collapsed state in a model.\n *\n * Constructor: mxCollapseChange\n * \n * Constructs a change of a collapsed state in the\n * specified model.\n */\nfunction mxCollapseChange(model, cell, collapsed)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.collapsed = collapsed;\n\tthis.previous = collapsed;\n};\n\n/**\n * Function: execute\n * \n * Changes the collapsed state of <cell> to <previous> using\n * <mxGraphModel.collapsedStateForCellChanged>.\n */\nmxCollapseChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.collapsed = this.previous;\n\t\tthis.previous = this.model.collapsedStateForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxVisibleChange\n * \n * Action to change a cell's visible state in a model.\n *\n * Constructor: mxVisibleChange\n * \n * Constructs a change of a visible state in the\n * specified model.\n */\nfunction mxVisibleChange(model, cell, visible)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.visible = visible;\n\tthis.previous = visible;\n};\n\n/**\n * Function: execute\n * \n * Changes the visible state of <cell> to <previous> using\n * <mxGraphModel.visibleStateForCellChanged>.\n */\nmxVisibleChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.visible = this.previous;\n\t\tthis.previous = this.model.visibleStateForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxCellAttributeChange\n * \n * Action to change the attribute of a cell's user object.\n * There is no method on the graph model that uses this\n * action. To use the action, you can use the code shown\n * in the example below.\n * \n * Example:\n * \n * To change the attributeName in the cell's user object\n * to attributeValue, use the following code:\n * \n * (code)\n * model.beginUpdate();\n * try\n * {\n *   var edit = new mxCellAttributeChange(\n *     cell, attributeName, attributeValue);\n *   model.execute(edit);\n * }\n * finally\n * {\n *   model.endUpdate();\n * } \n * (end)\n *\n * Constructor: mxCellAttributeChange\n * \n * Constructs a change of a attribute of the DOM node\n * stored as the value of the given <mxCell>.\n */\nfunction mxCellAttributeChange(cell, attribute, value)\n{\n\tthis.cell = cell;\n\tthis.attribute = attribute;\n\tthis.value = value;\n\tthis.previous = value;\n};\n\n/**\n * Function: execute\n * \n * Changes the attribute of the cell's user object by\n * using <mxCell.setAttribute>.\n */\nmxCellAttributeChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tvar tmp = this.cell.getAttribute(this.attribute);\n\t\t\n\t\tif (this.previous == null)\n\t\t{\n\t\t\tthis.cell.value.removeAttribute(this.attribute);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.cell.setAttribute(this.attribute, this.previous);\n\t\t}\n\t\t\n\t\tthis.previous = tmp;\n\t}\n};\n\n__mxOutput.mxGraphModel = typeof mxGraphModel !== 'undefined' ? mxGraphModel : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCell\n *\n * Cells are the elements of the graph model. They represent the state\n * of the groups, vertices and edges in a graph.\n * \n * Custom attributes:\n * \n * For custom attributes we recommend using an XML node as the value of a cell.\n * The following code can be used to create a cell with an XML node as the\n * value:\n * \n * (code)\n * var doc = mxUtils.createXmlDocument();\n * var node = doc.createElement('MyNode')\n * node.setAttribute('label', 'MyLabel');\n * node.setAttribute('attribute1', 'value1');\n * graph.insertVertex(graph.getDefaultParent(), null, node, 40, 40, 80, 30);\n * (end)\n * \n * For the label to work, <mxGraph.convertValueToString> and\n * <mxGraph.cellLabelChanged> should be overridden as follows:\n * \n * (code)\n * graph.convertValueToString = function(cell)\n * {\n *   if (mxUtils.isNode(cell.value))\n *   {\n *     return cell.getAttribute('label', '')\n *   }\n * };\n * \n * var cellLabelChanged = graph.cellLabelChanged;\n * graph.cellLabelChanged = function(cell, newValue, autoSize)\n * {\n *   if (mxUtils.isNode(cell.value))\n *   {\n *     // Clones the value for correct undo/redo\n *     var elt = cell.value.cloneNode(true);\n *     elt.setAttribute('label', newValue);\n *     newValue = elt;\n *   }\n *   \n *   cellLabelChanged.apply(this, arguments);\n * };\n * (end)\n * \n * Callback: onInit\n *\n * Called from within the constructor.\n * \n * Constructor: mxCell\n *\n * Constructs a new cell to be used in a graph model.\n * This method invokes <onInit> upon completion.\n * \n * Parameters:\n * \n * value - Optional object that represents the cell value.\n * geometry - Optional <mxGeometry> that specifies the geometry.\n * style - Optional formatted string that defines the style.\n */\nfunction mxCell(value, geometry, style)\n{\n\tthis.value = value;\n\tthis.setGeometry(geometry);\n\tthis.setStyle(style);\n\t\n\tif (this.onInit != null)\n\t{\n\t\tthis.onInit();\n\t}\n};\n\n/**\n * Variable: id\n *\n * Holds the Id. Default is null.\n */\nmxCell.prototype.id = null;\n\n/**\n * Variable: value\n *\n * Holds the user object. Default is null.\n */\nmxCell.prototype.value = null;\n\n/**\n * Variable: geometry\n *\n * Holds the <mxGeometry>. Default is null.\n */\nmxCell.prototype.geometry = null;\n\n/**\n * Variable: style\n *\n * Holds the style as a string of the form [(stylename|key=value);]. Default is\n * null.\n */\nmxCell.prototype.style = null;\n\n/**\n * Variable: vertex\n *\n * Specifies whether the cell is a vertex. Default is false.\n */\nmxCell.prototype.vertex = false;\n\n/**\n * Variable: edge\n *\n * Specifies whether the cell is an edge. Default is false.\n */\nmxCell.prototype.edge = false;\n\n/**\n * Variable: connectable\n *\n * Specifies whether the cell is connectable. Default is true.\n */\nmxCell.prototype.connectable = true;\n\n/**\n * Variable: visible\n *\n * Specifies whether the cell is visible. Default is true.\n */\nmxCell.prototype.visible = true;\n\n/**\n * Variable: collapsed\n *\n * Specifies whether the cell is collapsed. Default is false.\n */\nmxCell.prototype.collapsed = false;\n\n/**\n * Variable: parent\n *\n * Reference to the parent cell.\n */\nmxCell.prototype.parent = null;\n\n/**\n * Variable: source\n *\n * Reference to the source terminal.\n */\nmxCell.prototype.source = null;\n\n/**\n * Variable: target\n *\n * Reference to the target terminal.\n */\nmxCell.prototype.target = null;\n\n/**\n * Variable: children\n *\n * Holds the child cells.\n */\nmxCell.prototype.children = null;\n\n/**\n * Variable: edges\n *\n * Holds the edges.\n */\nmxCell.prototype.edges = null;\n\n/**\n * Variable: mxTransient\n *\n * List of members that should not be cloned inside <clone>. This field is\n * passed to <mxUtils.clone> and is not made persistent in <mxCellCodec>.\n * This is not a convention for all classes, it is only used in this class\n * to mark transient fields since transient modifiers are not supported by\n * the language.\n */\nmxCell.prototype.mxTransient = ['id', 'value', 'parent', 'source',\n                                'target', 'children', 'edges'];\n\n/**\n * Function: getId\n *\n * Returns the Id of the cell as a string.\n */\nmxCell.prototype.getId = function()\n{\n\treturn this.id;\n};\n\t\t\n/**\n * Function: setId\n *\n * Sets the Id of the cell to the given string.\n */\nmxCell.prototype.setId = function(id)\n{\n\tthis.id = id;\n};\n\n/**\n * Function: getValue\n *\n * Returns the user object of the cell. The user\n * object is stored in <value>.\n */\nmxCell.prototype.getValue = function()\n{\n\treturn this.value;\n};\n\t\t\n/**\n * Function: setValue\n *\n * Sets the user object of the cell. The user object\n * is stored in <value>.\n */\nmxCell.prototype.setValue = function(value)\n{\n\tthis.value = value;\n};\n\n/**\n * Function: valueChanged\n *\n * Changes the user object after an in-place edit\n * and returns the previous value. This implementation\n * replaces the user object with the given value and\n * returns the old user object.\n */\nmxCell.prototype.valueChanged = function(newValue)\n{\n\tvar previous = this.getValue();\n\tthis.setValue(newValue);\n\t\n\treturn previous;\n};\n\n/**\n * Function: getGeometry\n *\n * Returns the <mxGeometry> that describes the <geometry>.\n */\nmxCell.prototype.getGeometry = function()\n{\n\treturn this.geometry;\n};\n\n/**\n * Function: setGeometry\n *\n * Sets the <mxGeometry> to be used as the <geometry>.\n */\nmxCell.prototype.setGeometry = function(geometry)\n{\n\tthis.geometry = geometry;\n};\n\n/**\n * Function: getStyle\n *\n * Returns a string that describes the <style>.\n */\nmxCell.prototype.getStyle = function()\n{\n\treturn this.style;\n};\n\n/**\n * Function: setStyle\n *\n * Sets the string to be used as the <style>.\n */\nmxCell.prototype.setStyle = function(style)\n{\n\tthis.style = style;\n};\n\n/**\n * Function: isVertex\n *\n * Returns true if the cell is a vertex.\n */\nmxCell.prototype.isVertex = function()\n{\n\treturn this.vertex != 0;\n};\n\n/**\n * Function: setVertex\n *\n * Specifies if the cell is a vertex. This should only be assigned at\n * construction of the cell and not be changed during its lifecycle.\n * \n * Parameters:\n * \n * vertex - Boolean that specifies if the cell is a vertex.\n */\nmxCell.prototype.setVertex = function(vertex)\n{\n\tthis.vertex = vertex;\n};\n\n/**\n * Function: isEdge\n *\n * Returns true if the cell is an edge.\n */\nmxCell.prototype.isEdge = function()\n{\n\treturn this.edge != 0;\n};\n\t\n/**\n * Function: setEdge\n * \n * Specifies if the cell is an edge. This should only be assigned at\n * construction of the cell and not be changed during its lifecycle.\n * \n * Parameters:\n * \n * edge - Boolean that specifies if the cell is an edge.\n */\nmxCell.prototype.setEdge = function(edge)\n{\n\tthis.edge = edge;\n};\n\n/**\n * Function: isConnectable\n *\n * Returns true if the cell is connectable.\n */\nmxCell.prototype.isConnectable = function()\n{\n\treturn this.connectable != 0;\n};\n\n/**\n * Function: setConnectable\n *\n * Sets the connectable state.\n * \n * Parameters:\n * \n * connectable - Boolean that specifies the new connectable state.\n */\nmxCell.prototype.setConnectable = function(connectable)\n{\n\tthis.connectable = connectable;\n};\n\n/**\n * Function: isVisible\n *\n * Returns true if the cell is visibile.\n */\nmxCell.prototype.isVisible = function()\n{\n\treturn this.visible != 0;\n};\n\n/**\n * Function: setVisible\n *\n * Specifies if the cell is visible.\n * \n * Parameters:\n * \n * visible - Boolean that specifies the new visible state.\n */\nmxCell.prototype.setVisible = function(visible)\n{\n\tthis.visible = visible;\n};\n\n/**\n * Function: isCollapsed\n *\n * Returns true if the cell is collapsed.\n */\nmxCell.prototype.isCollapsed = function()\n{\n\treturn this.collapsed != 0;\n};\n\n/**\n * Function: setCollapsed\n *\n * Sets the collapsed state.\n * \n * Parameters:\n * \n * collapsed - Boolean that specifies the new collapsed state.\n */\nmxCell.prototype.setCollapsed = function(collapsed)\n{\n\tthis.collapsed = collapsed;\n};\n\n/**\n * Function: getParent\n *\n * Returns the cell's parent.\n */\nmxCell.prototype.getParent = function()\n{\n\treturn this.parent;\n};\n\n/**\n * Function: setParent\n *\n * Sets the parent cell.\n * \n * Parameters:\n * \n * parent - <mxCell> that represents the new parent.\n */\nmxCell.prototype.setParent = function(parent)\n{\n\tthis.parent = parent;\n};\n\n/**\n * Function: getTerminal\n *\n * Returns the source or target terminal.\n * \n * Parameters:\n * \n * source - Boolean that specifies if the source terminal should be\n * returned.\n */\nmxCell.prototype.getTerminal = function(source)\n{\n\treturn (source) ? this.source : this.target;\n};\n\n/**\n * Function: setTerminal\n *\n * Sets the source or target terminal and returns the new terminal.\n * \n * Parameters:\n * \n * terminal - <mxCell> that represents the new source or target terminal.\n * isSource - Boolean that specifies if the source or target terminal\n * should be set.\n */\nmxCell.prototype.setTerminal = function(terminal, isSource)\n{\n\tif (isSource)\n\t{\n\t\tthis.source = terminal;\n\t}\n\telse\n\t{\n\t\tthis.target = terminal;\n\t}\n\t\n\treturn terminal;\n};\n\n/**\n * Function: getChildCount\n *\n * Returns the number of child cells.\n */\nmxCell.prototype.getChildCount = function()\n{\n\treturn (this.children == null) ? 0 : this.children.length;\n};\n\n/**\n * Function: getIndex\n *\n * Returns the index of the specified child in the child array.\n * \n * Parameters:\n * \n * child - Child whose index should be returned.\n */\nmxCell.prototype.getIndex = function(child)\n{\n\treturn mxUtils.indexOf(this.children, child);\n};\n\n/**\n * Function: getChildAt\n *\n * Returns the child at the specified index.\n * \n * Parameters:\n * \n * index - Integer that specifies the child to be returned.\n */\nmxCell.prototype.getChildAt = function(index)\n{\n\treturn (this.children == null) ? null : this.children[index];\n};\n\n/**\n * Function: insert\n *\n * Inserts the specified child into the child array at the specified index\n * and updates the parent reference of the child. If not childIndex is\n * specified then the child is appended to the child array. Returns the\n * inserted child.\n * \n * Parameters:\n * \n * child - <mxCell> to be inserted or appended to the child array.\n * index - Optional integer that specifies the index at which the child\n * should be inserted into the child array.\n */\nmxCell.prototype.insert = function(child, index)\n{\n\tif (child != null)\n\t{\n\t\tif (index == null)\n\t\t{\n\t\t\tindex = this.getChildCount();\n\t\t\t\n\t\t\tif (child.getParent() == this)\n\t\t\t{\n\t\t\t\tindex--;\n\t\t\t}\n\t\t}\n\n\t\tchild.removeFromParent();\n\t\tchild.setParent(this);\n\t\t\n\t\tif (this.children == null)\n\t\t{\n\t\t\tthis.children = [];\n\t\t\tthis.children.push(child);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.children.splice(index, 0, child);\n\t\t}\n\t}\n\t\n\treturn child;\n};\n\n/**\n * Function: remove\n *\n * Removes the child at the specified index from the child array and\n * returns the child that was removed. Will remove the parent reference of\n * the child.\n * \n * Parameters:\n * \n * index - Integer that specifies the index of the child to be\n * removed.\n */\nmxCell.prototype.remove = function(index)\n{\n\tvar child = null;\n\t\n\tif (this.children != null && index >= 0)\n\t{\n\t\tchild = this.getChildAt(index);\n\t\t\n\t\tif (child != null)\n\t\t{\n\t\t\tthis.children.splice(index, 1);\n\t\t\tchild.setParent(null);\n\t\t}\n\t}\n\t\n\treturn child;\n};\n\n/**\n * Function: removeFromParent\n *\n * Removes the cell from its parent.\n */\nmxCell.prototype.removeFromParent = function()\n{\n\tif (this.parent != null)\n\t{\n\t\tvar index = this.parent.getIndex(this);\n\t\tthis.parent.remove(index);\n\t}\n};\n\n/**\n * Function: getEdgeCount\n *\n * Returns the number of edges in the edge array.\n */\nmxCell.prototype.getEdgeCount = function()\n{\n\treturn (this.edges == null) ? 0 : this.edges.length;\n};\n\n/**\n * Function: getEdgeIndex\n *\n * Returns the index of the specified edge in <edges>.\n * \n * Parameters:\n * \n * edge - <mxCell> whose index in <edges> should be returned.\n */\nmxCell.prototype.getEdgeIndex = function(edge)\n{\n\treturn mxUtils.indexOf(this.edges, edge);\n};\n\n/**\n * Function: getEdgeAt\n *\n * Returns the edge at the specified index in <edges>.\n * \n * Parameters:\n * \n * index - Integer that specifies the index of the edge to be returned.\n */\nmxCell.prototype.getEdgeAt = function(index)\n{\n\treturn (this.edges == null) ? null : this.edges[index];\n};\n\n/**\n * Function: insertEdge\n *\n * Inserts the specified edge into the edge array and returns the edge.\n * Will update the respective terminal reference of the edge.\n * \n * Parameters:\n * \n * edge - <mxCell> to be inserted into the edge array.\n * isOutgoing - Boolean that specifies if the edge is outgoing.\n */\nmxCell.prototype.insertEdge = function(edge, isOutgoing)\n{\n\tif (edge != null)\n\t{\n\t\tedge.removeFromTerminal(isOutgoing);\n\t\tedge.setTerminal(this, isOutgoing);\n\t\t\n\t\tif (this.edges == null ||\n\t\t\tedge.getTerminal(!isOutgoing) != this ||\n\t\t\tmxUtils.indexOf(this.edges, edge) < 0)\n\t\t{\n\t\t\tif (this.edges == null)\n\t\t\t{\n\t\t\t\tthis.edges = [];\n\t\t\t}\n\t\t\t\n\t\t\tthis.edges.push(edge);\n\t\t}\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: removeEdge\n *\n * Removes the specified edge from the edge array and returns the edge.\n * Will remove the respective terminal reference from the edge.\n * \n * Parameters:\n * \n * edge - <mxCell> to be removed from the edge array.\n * isOutgoing - Boolean that specifies if the edge is outgoing.\n */\nmxCell.prototype.removeEdge = function(edge, isOutgoing)\n{\n\tif (edge != null)\n\t{\n\t\tif (edge.getTerminal(!isOutgoing) != this &&\n\t\t\tthis.edges != null)\n\t\t{\n\t\t\tvar index = this.getEdgeIndex(edge);\n\t\t\t\n\t\t\tif (index >= 0)\n\t\t\t{\n\t\t\t\tthis.edges.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\tedge.setTerminal(null, isOutgoing);\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: removeFromTerminal\n *\n * Removes the edge from its source or target terminal.\n * \n * Parameters:\n * \n * isSource - Boolean that specifies if the edge should be removed from its\n * source or target terminal.\n */\nmxCell.prototype.removeFromTerminal = function(isSource)\n{\n\tvar terminal = this.getTerminal(isSource);\n\t\n\tif (terminal != null)\n\t{\n\t\tterminal.removeEdge(this, isSource);\n\t}\n};\n\n/**\n * Function: hasAttribute\n * \n * Returns true if the user object is an XML node that contains the given\n * attribute.\n * \n * Parameters:\n * \n * name - Name of the attribute.\n */\nmxCell.prototype.hasAttribute = function(name)\n{\n\tvar userObject = this.getValue();\n\t\n\treturn (userObject != null &&\n\t\tuserObject.nodeType == mxConstants.NODETYPE_ELEMENT && userObject.hasAttribute) ?\n\t\tuserObject.hasAttribute(name) : userObject.getAttribute(name) != null;\n};\n\n/**\n * Function: getAttribute\n *\n * Returns the specified attribute from the user object if it is an XML\n * node.\n * \n * Parameters:\n * \n * name - Name of the attribute whose value should be returned.\n * defaultValue - Optional default value to use if the attribute has no\n * value.\n */\nmxCell.prototype.getAttribute = function(name, defaultValue)\n{\n\tvar userObject = this.getValue();\n\t\n\tvar val = (userObject != null &&\n\t\tuserObject.nodeType == mxConstants.NODETYPE_ELEMENT) ?\n\t\tuserObject.getAttribute(name) : null;\n\t\t\n\treturn (val != null) ? val : defaultValue;\n};\n\n/**\n * Function: setAttribute\n *\n * Sets the specified attribute on the user object if it is an XML node.\n * \n * Parameters:\n * \n * name - Name of the attribute whose value should be set.\n * value - New value of the attribute.\n */\nmxCell.prototype.setAttribute = function(name, value)\n{\n\tvar userObject = this.getValue();\n\t\n\tif (userObject != null &&\n\t\tuserObject.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\tuserObject.setAttribute(name, value);\n\t}\n};\n\n/**\n * Function: clone\n *\n * Returns a clone of the cell. Uses <cloneValue> to clone\n * the user object. All fields in <mxTransient> are ignored\n * during the cloning.\n */\nmxCell.prototype.clone = function()\n{\n\tvar clone = mxUtils.clone(this, this.mxTransient);\n\tclone.setValue(this.cloneValue());\n\t\n\treturn clone;\n};\n\n/**\n * Function: cloneValue\n *\n * Returns a clone of the cell's user object.\n */\nmxCell.prototype.cloneValue = function()\n{\n\tvar value = this.getValue();\n\t\n\tif (value != null)\n\t{\n\t\tif (typeof(value.clone) == 'function')\n\t\t{\n\t\t\tvalue = value.clone();\n\t\t}\n\t\telse if (!isNaN(value.nodeType))\n\t\t{\n\t\t\tvalue = value.cloneNode(true);\n\t\t}\n\t}\n\t\n\treturn value;\n};\n\n__mxOutput.mxCell = typeof mxCell !== 'undefined' ? mxCell : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGeometry\n * \n * Extends <mxRectangle> to represent the geometry of a cell.\n * \n * For vertices, the geometry consists of the x- and y-location, and the width\n * and height. For edges, the geometry consists of the optional terminal- and\n * control points. The terminal points are only required if an edge is\n * unconnected, and are stored in the <sourcePoint> and <targetPoint>\n * variables, respectively.\n * \n * Example:\n * \n * If an edge is unconnected, that is, it has no source or target terminal,\n * then a geometry with terminal points for a new edge can be defined as\n * follows.\n * \n * (code)\n * geometry.setTerminalPoint(new mxPoint(x1, y1), true);\n * geometry.points = [new mxPoint(x2, y2)];\n * geometry.setTerminalPoint(new mxPoint(x3, y3), false);\n * (end)\n * \n * Control points are used regardless of the connected state of an edge and may\n * be ignored or interpreted differently depending on the edge's <mxEdgeStyle>.\n * \n * To disable automatic reset of control points after a cell has been moved or\n * resized, the the <mxGraph.resizeEdgesOnMove> and\n * <mxGraph.resetEdgesOnResize> may be used.\n *\n * Edge Labels:\n * \n * Using the x- and y-coordinates of a cell's geometry, it is possible to\n * position the label on edges on a specific location on the actual edge shape\n * as it appears on the screen. The x-coordinate of an edge's geometry is used\n * to describe the distance from the center of the edge from -1 to 1 with 0\n * being the center of the edge and the default value. The y-coordinate of an\n * edge's geometry is used to describe the absolute, orthogonal distance in\n * pixels from that point. In addition, the <mxGeometry.offset> is used as an\n * absolute offset vector from the resulting point.\n * \n * This coordinate system is applied if <relative> is true, otherwise the\n * offset defines the absolute vector from the edge's center point to the\n * label and the values for <x> and <y> are ignored.\n * \n * The width and height parameter for edge geometries can be used to set the\n * label width and height (eg. for word wrapping).\n * \n * Ports:\n * \n * The term \"port\" refers to a relatively positioned, connectable child cell,\n * which is used to specify the connection between the parent and another cell\n * in the graph. Ports are typically modeled as vertices with relative\n * geometries.\n * \n * Offsets:\n * \n * The <offset> field is interpreted in 3 different ways, depending on the cell\n * and the geometry. For edges, the offset defines the absolute offset for the\n * edge label. For relative geometries, the offset defines the absolute offset\n * for the origin (top, left corner) of the vertex, otherwise the offset\n * defines the absolute offset for the label inside the vertex or group.\n * \n * Constructor: mxGeometry\n *\n * Constructs a new object to describe the size and location of a vertex or\n * the control points of an edge.\n */\nfunction mxGeometry(x, y, width, height)\n{\n\tmxRectangle.call(this, x, y, width, height);\n};\n\n/**\n * Extends mxRectangle.\n */\nmxGeometry.prototype = new mxRectangle();\nmxGeometry.prototype.constructor = mxGeometry;\n\n/**\n * Variable: TRANSLATE_CONTROL_POINTS\n * \n * Global switch to translate the points in translate. Default is true.\n */\nmxGeometry.prototype.TRANSLATE_CONTROL_POINTS = true;\n\n/**\n * Variable: alternateBounds\n *\n * Stores alternate values for x, y, width and height in a rectangle. See\n * <swap> to exchange the values. Default is null.\n */\nmxGeometry.prototype.alternateBounds = null;\n\n/**\n * Variable: sourcePoint\n *\n * Defines the source <mxPoint> of the edge. This is used if the\n * corresponding edge does not have a source vertex. Otherwise it is\n * ignored. Default is  null.\n */\nmxGeometry.prototype.sourcePoint = null;\n\n/**\n * Variable: targetPoint\n *\n * Defines the target <mxPoint> of the edge. This is used if the\n * corresponding edge does not have a target vertex. Otherwise it is\n * ignored. Default is null.\n */\nmxGeometry.prototype.targetPoint = null;\n\n/**\n * Variable: points\n *\n * Array of <mxPoints> which specifies the control points along the edge.\n * These points are the intermediate points on the edge, for the endpoints\n * use <targetPoint> and <sourcePoint> or set the terminals of the edge to\n * a non-null value. Default is null.\n */\nmxGeometry.prototype.points = null;\n\n/**\n * Variable: offset\n *\n * For edges, this holds the offset (in pixels) from the position defined\n * by <x> and <y> on the edge. For relative geometries (for vertices), this\n * defines the absolute offset from the point defined by the relative\n * coordinates. For absolute geometries (for vertices), this defines the\n * offset for the label. Default is null.\n */\nmxGeometry.prototype.offset = null;\n\n/**\n * Variable: relative\n *\n * Specifies if the coordinates in the geometry are to be interpreted as\n * relative coordinates. For edges, this is used to define the location of\n * the edge label relative to the edge as rendered on the display. For\n * vertices, this specifies the relative location inside the bounds of the\n * parent cell.\n * \n * If this is false, then the coordinates are relative to the origin of the\n * parent cell or, for edges, the edge label position is relative to the\n * center of the edge as rendered on screen.\n * \n * Default is false.\n */\nmxGeometry.prototype.relative = false;\n\n/**\n * Function: swap\n * \n * Swaps the x, y, width and height with the values stored in\n * <alternateBounds> and puts the previous values into <alternateBounds> as\n * a rectangle. This operation is carried-out in-place, that is, using the\n * existing geometry instance. If this operation is called during a graph\n * model transactional change, then the geometry should be cloned before\n * calling this method and setting the geometry of the cell using\n * <mxGraphModel.setGeometry>.\n */\nmxGeometry.prototype.swap = function()\n{\n\tif (this.alternateBounds != null)\n\t{\n\t\tvar old = new mxRectangle(\n\t\t\tthis.x, this.y, this.width, this.height);\n\n\t\tthis.x = this.alternateBounds.x;\n\t\tthis.y = this.alternateBounds.y;\n\t\tthis.width = this.alternateBounds.width;\n\t\tthis.height = this.alternateBounds.height;\n\n\t\tthis.alternateBounds = old;\n\t}\n};\n\n/**\n * Function: getTerminalPoint\n * \n * Returns the <mxPoint> representing the source or target point of this\n * edge. This is only used if the edge has no source or target vertex.\n * \n * Parameters:\n * \n * isSource - Boolean that specifies if the source or target point\n * should be returned.\n */\nmxGeometry.prototype.getTerminalPoint = function(isSource)\n{\n\treturn (isSource) ? this.sourcePoint : this.targetPoint;\n};\n\n/**\n * Function: setTerminalPoint\n * \n * Sets the <sourcePoint> or <targetPoint> to the given <mxPoint> and\n * returns the new point.\n * \n * Parameters:\n * \n * point - Point to be used as the new source or target point.\n * isSource - Boolean that specifies if the source or target point\n * should be set.\n */\nmxGeometry.prototype.setTerminalPoint = function(point, isSource)\n{\n\tif (isSource)\n\t{\n\t\tthis.sourcePoint = point;\n\t}\n\telse\n\t{\n\t\tthis.targetPoint = point;\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: rotate\n * \n * Rotates the geometry by the given angle around the given center. That is,\n * <x> and <y> of the geometry, the <sourcePoint>, <targetPoint> and all\n * <points> are translated by the given amount. <x> and <y> are only\n * translated if <relative> is false.\n * \n * Parameters:\n * \n * angle - Number that specifies the rotation angle in degrees.\n * cx - <mxPoint> that specifies the center of the rotation.\n */\nmxGeometry.prototype.rotate = function(angle, cx)\n{\n\tvar rad = mxUtils.toRadians(angle);\n\tvar cos = Math.cos(rad);\n\tvar sin = Math.sin(rad);\n\t\n\t// Rotates the geometry\n\tif (!this.relative)\n\t{\n\t\tvar ct = new mxPoint(this.getCenterX(), this.getCenterY());\n\t\tvar pt = mxUtils.getRotatedPoint(ct, cos, sin, cx);\n\t\t\n\t\tthis.x = Math.round(pt.x - this.width / 2);\n\t\tthis.y = Math.round(pt.y - this.height / 2);\n\t}\n\n\t// Rotates the source point\n\tif (this.sourcePoint != null)\n\t{\n\t\tvar pt = mxUtils.getRotatedPoint(this.sourcePoint, cos, sin, cx);\n\t\tthis.sourcePoint.x = Math.round(pt.x);\n\t\tthis.sourcePoint.y = Math.round(pt.y);\n\t}\n\t\n\t// Translates the target point\n\tif (this.targetPoint != null)\n\t{\n\t\tvar pt = mxUtils.getRotatedPoint(this.targetPoint, cos, sin, cx);\n\t\tthis.targetPoint.x = Math.round(pt.x);\n\t\tthis.targetPoint.y = Math.round(pt.y);\t\n\t}\n\t\n\t// Translate the control points\n\tif (this.points != null)\n\t{\n\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t{\n\t\t\tif (this.points[i] != null)\n\t\t\t{\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(this.points[i], cos, sin, cx);\n\t\t\t\tthis.points[i].x = Math.round(pt.x);\n\t\t\t\tthis.points[i].y = Math.round(pt.y);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: translate\n * \n * Translates the geometry by the specified amount. That is, <x> and <y> of the\n * geometry, the <sourcePoint>, <targetPoint> and all <points> are translated\n * by the given amount. <x> and <y> are only translated if <relative> is false.\n * If <TRANSLATE_CONTROL_POINTS> is false, then <points> are not modified by\n * this function.\n * \n * Parameters:\n * \n * dx - Number that specifies the x-coordinate of the translation.\n * dy - Number that specifies the y-coordinate of the translation.\n */\nmxGeometry.prototype.translate = function(dx, dy)\n{\n\tdx = parseFloat(dx);\n\tdy = parseFloat(dy);\n\t\n\t// Translates the geometry\n\tif (!this.relative)\n\t{\n\t\tthis.x = parseFloat(this.x) + dx;\n\t\tthis.y = parseFloat(this.y) + dy;\n\t}\n\n\t// Translates the source point\n\tif (this.sourcePoint != null)\n\t{\n\t\tthis.sourcePoint.x = parseFloat(this.sourcePoint.x) + dx;\n\t\tthis.sourcePoint.y = parseFloat(this.sourcePoint.y) + dy;\n\t}\n\t\n\t// Translates the target point\n\tif (this.targetPoint != null)\n\t{\n\t\tthis.targetPoint.x = parseFloat(this.targetPoint.x) + dx;\n\t\tthis.targetPoint.y = parseFloat(this.targetPoint.y) + dy;\t\t\n\t}\n\n\t// Translate the control points\n\tif (this.TRANSLATE_CONTROL_POINTS && this.points != null)\n\t{\n\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t{\n\t\t\tif (this.points[i] != null)\n\t\t\t{\n\t\t\t\tthis.points[i].x = parseFloat(this.points[i].x) + dx;\n\t\t\t\tthis.points[i].y = parseFloat(this.points[i].y) + dy;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: scale\n * \n * Scales the geometry by the given amount. That is, <x> and <y> of the\n * geometry, the <sourcePoint>, <targetPoint> and all <points> are scaled\n * by the given amount. <x>, <y>, <width> and <height> are only scaled if\n * <relative> is false. If <fixedAspect> is true, then the smaller value\n * is used to scale the width and the height.\n * \n * Parameters:\n * \n * sx - Number that specifies the horizontal scale factor.\n * sy - Number that specifies the vertical scale factor.\n * fixedAspect - Optional boolean to keep the aspect ratio fixed.\n */\nmxGeometry.prototype.scale = function(sx, sy, fixedAspect)\n{\n\tsx = parseFloat(sx);\n\tsy = parseFloat(sy);\n\n\t// Translates the source point\n\tif (this.sourcePoint != null)\n\t{\n\t\tthis.sourcePoint.x = parseFloat(this.sourcePoint.x) * sx;\n\t\tthis.sourcePoint.y = parseFloat(this.sourcePoint.y) * sy;\n\t}\n\t\n\t// Translates the target point\n\tif (this.targetPoint != null)\n\t{\n\t\tthis.targetPoint.x = parseFloat(this.targetPoint.x) * sx;\n\t\tthis.targetPoint.y = parseFloat(this.targetPoint.y) * sy;\t\t\n\t}\n\n\t// Translate the control points\n\tif (this.points != null)\n\t{\n\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t{\n\t\t\tif (this.points[i] != null)\n\t\t\t{\n\t\t\t\tthis.points[i].x = parseFloat(this.points[i].x) * sx;\n\t\t\t\tthis.points[i].y = parseFloat(this.points[i].y) * sy;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Translates the geometry\n\tif (!this.relative)\n\t{\n\t\tthis.x = parseFloat(this.x) * sx;\n\t\tthis.y = parseFloat(this.y) * sy;\n\n\t\tif (fixedAspect)\n\t\t{\n\t\t\tsy = sx = Math.min(sx, sy);\n\t\t}\n\t\t\n\t\tthis.width = parseFloat(this.width) * sx;\n\t\tthis.height = parseFloat(this.height) * sy;\n\t}\n};\n\n/**\n * Function: equals\n * \n * Returns true if the given object equals this geometry.\n */\nmxGeometry.prototype.equals = function(obj)\n{\n\treturn mxRectangle.prototype.equals.apply(this, arguments) &&\n\t\tthis.relative == obj.relative &&\n\t\t((this.sourcePoint == null && obj.sourcePoint == null) || (this.sourcePoint != null && this.sourcePoint.equals(obj.sourcePoint))) &&\n\t\t((this.targetPoint == null && obj.targetPoint == null) || (this.targetPoint != null && this.targetPoint.equals(obj.targetPoint))) &&\n\t\t((this.points == null && obj.points == null) || (this.points != null && mxUtils.equalPoints(this.points, obj.points))) &&\n\t\t((this.alternateBounds == null && obj.alternateBounds == null) || (this.alternateBounds != null && this.alternateBounds.equals(obj.alternateBounds))) &&\n\t\t((this.offset == null && obj.offset == null) || (this.offset != null && this.offset.equals(obj.offset)));\n};\n\n__mxOutput.mxGeometry = typeof mxGeometry !== 'undefined' ? mxGeometry : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxCellPath =\n{\n\n\t/**\n\t * Class: mxCellPath\n\t * \n\t * Implements a mechanism for temporary cell Ids.\n\t * \n\t * Variable: PATH_SEPARATOR\n\t * \n\t * Defines the separator between the path components. Default is \".\".\n\t */\n\tPATH_SEPARATOR: '.',\n\t\n\t/**\n\t * Function: create\n\t * \n\t * Creates the cell path for the given cell. The cell path is a\n\t * concatenation of the indices of all ancestors on the (finite) path to\n\t * the root, eg. \"0.0.0.1\".\n\t * \n\t * Parameters:\n\t * \n\t * cell - Cell whose path should be returned.\n\t */\n\tcreate: function(cell)\n\t{\n\t\tvar result = '';\n\t\t\n\t\tif (cell != null)\n\t\t{\n\t\t\tvar parent = cell.getParent();\n\t\t\t\n\t\t\twhile (parent != null)\n\t\t\t{\n\t\t\t\tvar index = parent.getIndex(cell);\n\t\t\t\tresult = index + mxCellPath.PATH_SEPARATOR + result;\n\t\t\t\t\n\t\t\t\tcell = parent;\n\t\t\t\tparent = cell.getParent();\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes trailing separator\n\t\tvar n = result.length;\n\t\t\n\t\tif (n > 1)\n\t\t{\n\t\t\tresult = result.substring(0, n - 1);\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: getParentPath\n\t * \n\t * Returns the path for the parent of the cell represented by the given\n\t * path. Returns null if the given path has no parent.\n\t * \n\t * Parameters:\n\t * \n\t * path - Path whose parent path should be returned.\n\t */\n\tgetParentPath: function(path)\n\t{\n\t\tif (path != null)\n\t\t{\n\t\t\tvar index = path.lastIndexOf(mxCellPath.PATH_SEPARATOR);\n\n\t\t\tif (index >= 0)\n\t\t\t{\n\t\t\t\treturn path.substring(0, index);\n\t\t\t}\n\t\t\telse if (path.length > 0)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Function: resolve\n\t * \n\t * Returns the cell for the specified cell path using the given root as the\n\t * root of the path.\n\t * \n\t * Parameters:\n\t * \n\t * root - Root cell of the path to be resolved.\n\t * path - String that defines the path.\n\t */\n\tresolve: function(root, path)\n\t{\n\t\tvar parent = root;\n\t\t\n\t\tif (path != null)\n\t\t{\n\t\t\tvar tokens = path.split(mxCellPath.PATH_SEPARATOR);\n\t\t\t\n\t\t\tfor (var i=0; i<tokens.length; i++)\n\t\t\t{\n\t\t\t\tparent = parent.getChildAt(parseInt(tokens[i]));\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn parent;\n\t},\n\t\n\t/**\n\t * Function: compare\n\t * \n\t * Compares the given cell paths and returns -1 if p1 is smaller, 0 if\n\t * p1 is equal and 1 if p1 is greater than p2.\n\t */\n\tcompare: function(p1, p2)\n\t{\n\t\tvar min = Math.min(p1.length, p2.length);\n\t\tvar comp = 0;\n\t\t\n\t\tfor (var i = 0; i < min; i++)\n\t\t{\n\t\t\tif (p1[i] != p2[i])\n\t\t\t{\n\t\t\t\tif (p1[i].length == 0 ||\n\t\t\t\t\tp2[i].length == 0)\n\t\t\t\t{\n\t\t\t\t\tcomp = (p1[i] == p2[i]) ? 0 : ((p1[i] > p2[i]) ? 1 : -1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar t1 = parseInt(p1[i]);\n\t\t\t\t\tvar t2 = parseInt(p2[i]);\n\t\t\t\t\t\n\t\t\t\t\tcomp = (t1 == t2) ? 0 : ((t1 > t2) ? 1 : -1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Compares path length if both paths are equal to this point\n\t\tif (comp == 0)\n\t\t{\n\t\t\tvar t1 = p1.length;\n\t\t\tvar t2 = p2.length;\n\t\t\t\n\t\t\tif (t1 != t2)\n\t\t\t{\n\t\t\t\tcomp = (t1 > t2) ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn comp;\n\t}\n\n};\n\n__mxOutput.mxCellPath = typeof mxCellPath !== 'undefined' ? mxCellPath : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxPerimeter =\n{\n\t/**\n\t * Class: mxPerimeter\n\t * \n\t * Provides various perimeter functions to be used in a style\n\t * as the value of <mxConstants.STYLE_PERIMETER>. Perimeters for\n\t * rectangle, circle, rhombus and triangle are available.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * <add as=\"perimeter\">mxPerimeter.RectanglePerimeter</add>\n\t * (end)\n\t * \n\t * Or programmatically:\n\t * \n\t * (code)\n\t * style[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\n\t * (end)\n\t * \n\t * When adding new perimeter functions, it is recommended to use the \n\t * mxPerimeter-namespace as follows:\n\t * \n\t * (code)\n\t * mxPerimeter.CustomPerimeter = function (bounds, vertex, next, orthogonal)\n\t * {\n\t *   var x = 0; // Calculate x-coordinate\n\t *   var y = 0; // Calculate y-coordainte\n\t *   \n\t *   return new mxPoint(x, y);\n\t * }\n\t * (end)\n\t * \n\t * The new perimeter should then be registered in the <mxStyleRegistry> as follows:\n\t * (code)\n\t * mxStyleRegistry.putValue('customPerimeter', mxPerimeter.CustomPerimeter);\n\t * (end)\n\t * \n\t * The custom perimeter above can now be used in a specific vertex as follows:\n\t * \n\t * (code)\n\t * model.setStyle(vertex, 'perimeter=customPerimeter');\n\t * (end)\n\t * \n\t * Note that the key of the <mxStyleRegistry> entry for the function should\n\t * be used in string values, unless <mxGraphView.allowEval> is true, in\n\t * which case you can also use mxPerimeter.CustomPerimeter for the value in\n\t * the cell style above.\n\t * \n\t * Or it can be used for all vertices in the graph as follows:\n\t * \n\t * (code)\n\t * var style = graph.getStylesheet().getDefaultVertexStyle();\n\t * style[mxConstants.STYLE_PERIMETER] = mxPerimeter.CustomPerimeter;\n\t * (end)\n\t * \n\t * Note that the object can be used directly when programmatically setting\n\t * the value, but the key in the <mxStyleRegistry> should be used when\n\t * setting the value via a key, value pair in a cell style.\n\t * \n\t * The parameters are explained in <RectanglePerimeter>.\n\t * \n\t * Function: RectanglePerimeter\n\t * \n\t * Describes a rectangular perimeter for the given bounds.\n\t *\n\t * Parameters:\n\t * \n\t * bounds - <mxRectangle> that represents the absolute bounds of the\n\t * vertex.\n\t * vertex - <mxCellState> that represents the vertex.\n\t * next - <mxPoint> that represents the nearest neighbour point on the\n\t * given edge.\n\t * orthogonal - Boolean that specifies if the orthogonal projection onto\n\t * the perimeter should be returned. If this is false then the intersection\n\t * of the perimeter and the line between the next and the center point is\n\t * returned.\n\t */\n\tRectanglePerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar cx = bounds.getCenterX();\n\t\tvar cy = bounds.getCenterY();\n\t\tvar dx = next.x - cx;\n\t\tvar dy = next.y - cy;\n\t\tvar alpha = Math.atan2(dy, dx);\n\t\tvar p = new mxPoint(0, 0);\n\t\tvar pi = Math.PI;\n\t\tvar pi2 = Math.PI/2;\n\t\tvar beta = pi2 - alpha;\n\t\tvar t = Math.atan2(bounds.height, bounds.width);\n\t\t\n\t\tif (alpha < -pi + t || alpha > pi - t)\n\t\t{\n\t\t\t// Left edge\n\t\t\tp.x = bounds.x;\n\t\t\tp.y = cy - bounds.width * Math.tan(alpha) / 2;\n\t\t}\n\t\telse if (alpha < -t)\n\t\t{\n\t\t\t// Top Edge\n\t\t\tp.y = bounds.y;\n\t\t\tp.x = cx - bounds.height * Math.tan(beta) / 2;\n\t\t}\n\t\telse if (alpha < t)\n\t\t{\n\t\t\t// Right Edge\n\t\t\tp.x = bounds.x + bounds.width;\n\t\t\tp.y = cy + bounds.width * Math.tan(alpha) / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Bottom Edge\n\t\t\tp.y = bounds.y + bounds.height;\n\t\t\tp.x = cx + bounds.height * Math.tan(beta) / 2;\n\t\t}\n\t\t\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (next.x >= bounds.x &&\n\t\t\t\tnext.x <= bounds.x + bounds.width)\n\t\t\t{\n\t\t\t\tp.x = next.x;\n\t\t\t}\n\t\t\telse if (next.y >= bounds.y &&\n\t\t\t\t\t   next.y <= bounds.y + bounds.height)\n\t\t\t{\n\t\t\t\tp.y = next.y;\n\t\t\t}\n\t\t\tif (next.x < bounds.x)\n\t\t\t{\n\t\t\t\tp.x = bounds.x;\n\t\t\t}\n\t\t\telse if (next.x > bounds.x + bounds.width)\n\t\t\t{\n\t\t\t\tp.x = bounds.x + bounds.width;\n\t\t\t}\n\t\t\tif (next.y < bounds.y)\n\t\t\t{\n\t\t\t\tp.y = bounds.y;\n\t\t\t}\n\t\t\telse if (next.y > bounds.y + bounds.height)\n\t\t\t{\n\t\t\t\tp.y = bounds.y + bounds.height;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn p;\n\t},\n\n\t/**\n\t * Function: EllipsePerimeter\n\t * \n\t * Describes an elliptic perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tEllipsePerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar a = bounds.width / 2;\n\t\tvar b = bounds.height / 2;\n\t\tvar cx = x + a;\n\t\tvar cy = y + b;\n\t\tvar px = next.x;\n\t\tvar py = next.y;\n\t\t\n\t\t// Calculates straight line equation through\n\t\t// point and ellipse center y = d * x + h\n\t\tvar dx = parseInt(px - cx);\n\t\tvar dy = parseInt(py - cy);\n\t\t\n\t\tif (dx == 0 && dy != 0)\n\t\t{\n\t\t\treturn new mxPoint(cx, cy + b * dy / Math.abs(dy));\n\t\t}\n\t\telse if (dx == 0 && dy == 0)\n\t\t{\n\t\t\treturn new mxPoint(px, py);\n\t\t}\n\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (py >= y && py <= y + bounds.height)\n\t\t\t{\n\t\t\t\tvar ty = py - cy;\n\t\t\t\tvar tx = Math.sqrt(a*a*(1-(ty*ty)/(b*b))) || 0;\n\t\t\t\t\n\t\t\t\tif (px <= x)\n\t\t\t\t{\n\t\t\t\t\ttx = -tx;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn new mxPoint(cx+tx, py);\n\t\t\t}\n\t\t\t\n\t\t\tif (px >= x && px <= x + bounds.width)\n\t\t\t{\n\t\t\t\tvar tx = px - cx;\n\t\t\t\tvar ty = Math.sqrt(b*b*(1-(tx*tx)/(a*a))) || 0;\n\t\t\t\t\n\t\t\t\tif (py <= y)\n\t\t\t\t{\n\t\t\t\t\tty = -ty;\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn new mxPoint(px, cy+ty);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Calculates intersection\n\t\tvar d = dy / dx;\n\t\tvar h = cy - d * cx;\n\t\tvar e = a * a * d * d + b * b;\n\t\tvar f = -2 * cx * e;\n\t\tvar g = a * a * d * d * cx * cx +\n\t\t\t\tb * b * cx * cx -\n\t\t\t\ta * a * b * b;\n\t\tvar det = Math.sqrt(f * f - 4 * e * g);\n\t\t\n\t\t// Two solutions (perimeter points)\n\t\tvar xout1 = (-f + det) / (2 * e);\n\t\tvar xout2 = (-f - det) / (2 * e);\n\t\tvar yout1 = d * xout1 + h;\n\t\tvar yout2 = d * xout2 + h;\n\t\tvar dist1 = Math.sqrt(Math.pow((xout1 - px), 2)\n\t\t\t\t\t+ Math.pow((yout1 - py), 2));\n\t\tvar dist2 = Math.sqrt(Math.pow((xout2 - px), 2)\n\t\t\t\t\t+ Math.pow((yout2 - py), 2));\n\t\t\t\t\t\n\t\t// Correct solution\n\t\tvar xout = 0;\n\t\tvar yout = 0;\n\t\t\n\t\tif (dist1 < dist2)\n\t\t{\n\t\t\txout = xout1;\n\t\t\tyout = yout1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\txout = xout2;\n\t\t\tyout = yout2;\n\t\t}\n\t\t\n\t\treturn new mxPoint(xout, yout);\n\t},\n\n\t/**\n\t * Function: RhombusPerimeter\n\t * \n\t * Describes a rhombus (aka diamond) perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tRhombusPerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar w = bounds.width;\n\t\tvar h = bounds.height;\n\t\t\n\t\tvar cx = x + w / 2;\n\t\tvar cy = y + h / 2;\n\n\t\tvar px = next.x;\n\t\tvar py = next.y;\n\n\t\t// Special case for intersecting the diamond's corners\n\t\tif (cx == px)\n\t\t{\n\t\t\tif (cy > py)\n\t\t\t{\n\t\t\t\treturn new mxPoint(cx, y); // top\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn new mxPoint(cx, y + h); // bottom\n\t\t\t}\n\t\t}\n\t\telse if (cy == py)\n\t\t{\n\t\t\tif (cx > px)\n\t\t\t{\n\t\t\t\treturn new mxPoint(x, cy); // left\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn new mxPoint(x + w, cy); // right\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar tx = cx;\n\t\tvar ty = cy;\n\t\t\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (px >= x && px <= x + w)\n\t\t\t{\n\t\t\t\ttx = px;\n\t\t\t}\n\t\t\telse if (py >= y && py <= y + h)\n\t\t\t{\n\t\t\t\tty = py;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// In which quadrant will the intersection be?\n\t\t// set the slope and offset of the border line accordingly\n\t\tif (px < cx)\n\t\t{\n\t\t\tif (py < cy)\n\t\t\t{\n\t\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y, x, cy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y + h, x, cy);\n\t\t\t}\n\t\t}\n\t\telse if (py < cy)\n\t\t{\n\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y, x + w, cy);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y + h, x + w, cy);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: TrianglePerimeter\n\t * \n\t * Describes a triangle perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tTrianglePerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar direction = (vertex != null) ?\n\t\t\tvertex.style[mxConstants.STYLE_DIRECTION] : null;\n\t\tvar vertical = direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tdirection == mxConstants.DIRECTION_SOUTH;\n\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar w = bounds.width;\n\t\tvar h = bounds.height;\n\t\t\n\t\tvar cx = x + w / 2;\n\t\tvar cy = y + h / 2;\n\t\t\n\t\tvar start = new mxPoint(x, y);\n\t\tvar corner = new mxPoint(x + w, cy);\n\t\tvar end = new mxPoint(x, y + h);\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tstart = end;\n\t\t\tcorner = new mxPoint(cx, y);\n\t\t\tend = new mxPoint(x + w, y + h);\n\t\t}\n\t\telse if (direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tcorner = new mxPoint(cx, y + h);\n\t\t\tend = new mxPoint(x + w, y);\n\t\t}\n\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tstart = new mxPoint(x + w, y);\n\t\t\tcorner = new mxPoint(x, cy);\n\t\t\tend = new mxPoint(x + w, y + h);\n\t\t}\n\n\t\tvar dx = next.x - cx;\n\t\tvar dy = next.y - cy;\n\n\t\tvar alpha = (vertical) ? Math.atan2(dx, dy) : Math.atan2(dy, dx);\n\t\tvar t = (vertical) ? Math.atan2(w, h) : Math.atan2(h, w);\n\t\t\n\t\tvar base = false;\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tdirection == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tbase = alpha > -t && alpha < t;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbase = alpha < -Math.PI + t || alpha > Math.PI - t;\t\n\t\t}\n\n\t\tvar result = null;\t\t\t\n\n\t\tif (base)\n\t\t{\n\t\t\tif (orthogonal && ((vertical && next.x >= start.x && next.x <= end.x) ||\n\t\t\t\t(!vertical && next.y >= start.y && next.y <= end.y)))\n\t\t\t{\n\t\t\t\tif (vertical)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(next.x, start.y);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(start.x, next.y);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x + w / 2 + h * Math.tan(alpha) / 2,\n\t\t\t\t\t\ty + h);\n\t\t\t\t}\n\t\t\t\telse if (direction == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x + w / 2 - h * Math.tan(alpha) / 2,\n\t\t\t\t\t\ty);\n\t\t\t\t}\n\t\t\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x + w, y + h / 2 +\n\t\t\t\t\t\tw * Math.tan(alpha) / 2);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x, y + h / 2 -\n\t\t\t\t\t\tw * Math.tan(alpha) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (orthogonal)\n\t\t\t{\n\t\t\t\tvar pt = new mxPoint(cx, cy);\n\t\t\n\t\t\t\tif (next.y >= y && next.y <= y + h)\n\t\t\t\t{\n\t\t\t\t\tpt.x = (vertical) ? cx : (\n\t\t\t\t\t\t(direction == mxConstants.DIRECTION_WEST) ?\n\t\t\t\t\t\t\tx + w : x);\n\t\t\t\t\tpt.y = next.y;\n\t\t\t\t}\n\t\t\t\telse if (next.x >= x && next.x <= x + w)\n\t\t\t\t{\n\t\t\t\t\tpt.x = next.x;\n\t\t\t\t\tpt.y = (!vertical) ? cy : (\n\t\t\t\t\t\t(direction == mxConstants.DIRECTION_NORTH) ?\n\t\t\t\t\t\t\ty + h : y);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Compute angle\n\t\t\t\tdx = next.x - pt.x;\n\t\t\t\tdy = next.y - pt.y;\n\t\t\t\t\n\t\t\t\tcx = pt.x;\n\t\t\t\tcy = pt.y;\n\t\t\t}\n\n\t\t\tif ((vertical && next.x <= x + w / 2) ||\n\t\t\t\t(!vertical && next.y <= y + h / 2))\n\t\t\t{\n\t\t\t\tresult = mxUtils.intersection(next.x, next.y, cx, cy,\n\t\t\t\t\tstart.x, start.y, corner.x, corner.y);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = mxUtils.intersection(next.x, next.y, cx, cy,\n\t\t\t\t\tcorner.x, corner.y, end.x, end.y);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (result == null)\n\t\t{\n\t\t\tresult = new mxPoint(cx, cy);\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: HexagonPerimeter\n\t * \n\t * Describes a hexagon perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tHexagonPerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar w = bounds.width;\n\t\tvar h = bounds.height;\n\n\t\tvar cx = bounds.getCenterX();\n\t\tvar cy = bounds.getCenterY();\n\t\tvar px = next.x;\n\t\tvar py = next.y;\n\t\tvar dx = px - cx;\n\t\tvar dy = py - cy;\n\t\tvar alpha = -Math.atan2(dy, dx);\n\t\tvar pi = Math.PI;\n\t\tvar pi2 = Math.PI / 2;\n\n\t\tvar result = new mxPoint(cx, cy);\n\n\t\tvar direction = (vertex != null) ? mxUtils.getValue(\n\t\t\t\tvertex.style, mxConstants.STYLE_DIRECTION,\n\t\t\t\tmxConstants.DIRECTION_EAST) : mxConstants.DIRECTION_EAST;\n\t\tvar vertical = direction == mxConstants.DIRECTION_NORTH\n\t\t\t\t|| direction == mxConstants.DIRECTION_SOUTH;\n\t\tvar a = new mxPoint();\n\t\tvar b = new mxPoint();\n\n\t\t//Only consider corrects quadrants for the orthogonal case.\n\t\tif ((px < x) && (py < y) || (px < x) && (py > y + h)\n\t\t\t\t|| (px > x + w) && (py < y) || (px > x + w) && (py > y + h))\n\t\t{\n\t\t\torthogonal = false;\n\t\t}\n\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (vertical)\n\t\t\t{\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (px == cx)\n\t\t\t\t{\n\t\t\t\t\tif (py <= y)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(cx, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py >= y + h)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(cx, y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px < x)\n\t\t\t\t{\n\t\t\t\t\tif (py == y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py == y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px > x + w)\n\t\t\t\t{\n\t\t\t\t\tif (py == y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py == y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px == x)\n\t\t\t\t{\n\t\t\t\t\tif (py < cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px == x + w)\n\t\t\t\t{\n\t\t\t\t\tif (py < cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (py == y)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(cx, y);\n\t\t\t\t}\n\t\t\t\telse if (py == y + h)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(cx, y + h);\n\t\t\t\t}\n\n\t\t\t\tif (px < cx)\n\t\t\t\t{\n\t\t\t\t\tif ((py > y + h / 4) && (py < y + 3 * h / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\t\tb = new mxPoint(x, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py < y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + w, y - Math.floor(0.25 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + w, y + Math.floor(1.25 * h));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px > cx)\n\t\t\t\t{\n\t\t\t\t\tif ((py > y + h / 4) && (py < y + 3 * h / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + w, y);\n\t\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py < y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y - Math.floor(0.25 * h));\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x, y + Math.floor(1.25 * h));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (py == cy)\n\t\t\t\t{\n\t\t\t\t\tif (px <= x)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + h / 2);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px >= x + w)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + h / 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py < y)\n\t\t\t\t{\n\t\t\t\t\tif (px == x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px == x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py > y + h)\n\t\t\t\t{\n\t\t\t\t\tif (px == x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px == x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py == y)\n\t\t\t\t{\n\t\t\t\t\tif (px < cx)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px > cx)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py == y + h)\n\t\t\t\t{\n\t\t\t\t\tif (px < cx)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (px == x)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, cy);\n\t\t\t\t}\n\t\t\t\telse if (px == x + w)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, cy);\n\t\t\t\t}\n\n\t\t\t\tif (py < cy)\n\t\t\t\t{\n\t\t\t\t\tif ((px > x + w / 4) && (px < x + 3 * w / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\t\tb = new mxPoint(x + w, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px < x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y + h);\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (px > x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py > cy)\n\t\t\t\t{\n\t\t\t\t\tif ((px > x + w / 4) && (px < x + 3 * w / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y + h);\n\t\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px < x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y);\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (px > x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar tx = cx;\n\t\t\tvar ty = cy;\n\n\t\t\tif (px >= x && px <= x + w)\n\t\t\t{\n\t\t\t\ttx = px;\n\t\t\t\t\n\t\t\t\tif (py < cy)\n\t\t\t\t{\n\t\t\t\t\tty = y + h;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tty = y;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (py >= y && py <= y + h)\n\t\t\t{\n\t\t\t\tty = py;\n\t\t\t\t\n\t\t\t\tif (px < cx)\n\t\t\t\t{\n\t\t\t\t\ttx = x + w;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttx = x;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult = mxUtils.intersection(tx, ty, next.x, next.y, a.x, a.y, b.x, b.y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (vertical)\n\t\t\t{\n\t\t\t\tvar beta = Math.atan2(h / 4, w / 2);\n\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (alpha == beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, y + Math.floor(0.25 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == pi2)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.5 * w), y);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (pi - beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, y + Math.floor(0.25 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == -beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, y + Math.floor(0.75 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == (-pi2))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.5 * w), y + h);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (-pi + beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, y + Math.floor(0.75 * h));\n\t\t\t\t}\n\n\t\t\t\tif ((alpha < beta) && (alpha > -beta))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + w, y);\n\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha > beta) && (alpha < pi2))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y - Math.floor(0.25 * h));\n\t\t\t\t\tb = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if ((alpha > pi2) && (alpha < (pi - beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x + w, y - Math.floor(0.25 * h));\n\t\t\t\t}\n\t\t\t\telse if (((alpha > (pi - beta)) && (alpha <= pi))\n\t\t\t\t\t\t|| ((alpha < (-pi + beta)) && (alpha >= -pi)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\tb = new mxPoint(x, y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha < -beta) && (alpha > -pi2))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x, y + Math.floor(1.25 * h));\n\t\t\t\t}\n\t\t\t\telse if ((alpha < -pi2) && (alpha > (-pi + beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x + w, y + Math.floor(1.25 * h));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar beta = Math.atan2(h / 2, w / 4);\n\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (alpha == beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.75 * w), y);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (pi - beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.25 * w), y);\n\t\t\t\t}\n\t\t\t\telse if ((alpha == pi) || (alpha == -pi))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, y + Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == 0)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, y + Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == -beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.75 * w), y + h);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (-pi + beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.25 * w), y + h);\n\t\t\t\t}\n\n\t\t\t\tif ((alpha > 0) && (alpha < beta))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha > beta) && (alpha < (pi - beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\tb = new mxPoint(x + w, y);\n\t\t\t\t}\n\t\t\t\telse if ((alpha > (pi - beta)) && (alpha < pi))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y + h);\n\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if ((alpha < 0) && (alpha > -beta))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y);\n\t\t\t\t}\n\t\t\t\telse if ((alpha < -beta) && (alpha > (-pi + beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y + h);\n\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha < (-pi + beta)) && (alpha > -pi))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y);\n\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult = mxUtils.intersection(cx, cy, next.x, next.y, a.x, a.y, b.x, b.y);\n\t\t}\n\t\t\n\t\tif (result == null)\n\t\t{\n\t\t\treturn new mxPoint(cx, cy);\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n};\n\n__mxOutput.mxPerimeter = typeof mxPerimeter !== 'undefined' ? mxPerimeter : undefined;\n\n/**\n * Copyright (c) 2006-2019, JGraph Ltd\n * Copyright (c) 2006-2017, draw.io AG\n */\n/**\n * Class: mxPrintPreview\n * \n * Implements printing of a diagram across multiple pages. The following opens\n * a print preview for an existing graph:\n * \n * (code)\n * var preview = new mxPrintPreview(graph);\n * preview.open();\n * (end)\n * \n * Use <mxUtils.getScaleForPageCount> as follows in order to print the graph\n * across a given number of pages:\n * \n * (code)\n * var pageCount = mxUtils.prompt('Enter page count', '1');\n * \n * if (pageCount != null)\n * {\n *   var scale = mxUtils.getScaleForPageCount(pageCount, graph);\n *   var preview = new mxPrintPreview(graph, scale);\n *   preview.open();\n * }\n * (end)\n * \n * Additional pages:\n * \n * To add additional pages before and after the output, <getCoverPages> and\n * <getAppendices> can be used, respectively.\n * \n * (code)\n * var preview = new mxPrintPreview(graph, 1);\n * \n * preview.getCoverPages = function(w, h)\n * {\n *   return [this.renderPage(w, h, 0, 0, mxUtils.bind(this, function(div)\n *   {\n *     div.innerHTML = '<div style=\"position:relative;margin:4px;\">Cover Page</p>'\n *   }))];\n * };\n * \n * preview.getAppendices = function(w, h)\n * {\n *   return [this.renderPage(w, h, 0, 0, mxUtils.bind(this, function(div)\n *   {\n *     div.innerHTML = '<div style=\"position:relative;margin:4px;\">Appendix</p>'\n *   }))];\n * };\n * \n * preview.open();\n * (end)\n * \n * CSS:\n * \n * The CSS from the original page is not carried over to the print preview.\n * To add CSS to the page, use the css argument in the <open> function or\n * override <writeHead> to add the respective link tags as follows:\n * \n * (code)\n * var writeHead = preview.writeHead;\n * preview.writeHead = function(doc, css)\n * {\n *   writeHead.apply(this, arguments);\n *   doc.writeln('<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">');\n * };\n * (end)\n * \n * Padding:\n * \n * To add a padding to the page in the preview (but not the print output), use\n * the following code:\n * \n * (code)\n * preview.writeHead = function(doc)\n * {\n *   writeHead.apply(this, arguments);\n *   \n *   doc.writeln('<style type=\"text/css\">');\n *   doc.writeln('@media screen {');\n *   doc.writeln('  body > div { padding-top:30px;padding-left:40px;box-sizing:content-box; }');\n *   doc.writeln('}');\n *   doc.writeln('</style>');\n * };\n * (end)\n * \n * Headers:\n * \n * Apart from setting the title argument in the mxPrintPreview constructor you\n * can override <renderPage> as follows to add a header to any page:\n * \n * (code)\n * var oldRenderPage = mxPrintPreview.prototype.renderPage;\n * mxPrintPreview.prototype.renderPage = function(w, h, x, y, content, pageNumber)\n * {\n *   var div = oldRenderPage.apply(this, arguments);\n *   \n *   var header = document.createElement('div');\n *   header.style.position = 'absolute';\n *   header.style.top = '0px';\n *   header.style.width = '100%';\n *   header.style.textAlign = 'right';\n *   mxUtils.write(header, 'Your header here');\n *   div.firstChild.appendChild(header);\n *   \n *   return div;\n * };\n * (end)\n * \n * The pageNumber argument contains the number of the current page, starting at\n * 1. To display a header on the first page only, check pageNumber and add a\n * vertical offset in the constructor call for the height of the header.\n * \n * Page Format:\n * \n * For landscape printing, use <mxConstants.PAGE_FORMAT_A4_LANDSCAPE> as\n * the pageFormat in <mxUtils.getScaleForPageCount> and <mxPrintPreview>.\n * Keep in mind that one can not set the defaults for the print dialog\n * of the operating system from JavaScript so the user must manually choose\n * a page format that matches this setting.\n * \n * You can try passing the following CSS directive to <open> to set the\n * page format in the print dialog to landscape. However, this CSS\n * directive seems to be ignored in most major browsers, including IE.\n * \n * (code)\n * @page {\n *   size: landscape;\n * }\n * (end)\n * \n * Note that the print preview behaves differently in IE when used from the\n * filesystem or via HTTP so printing should always be tested via HTTP.\n * \n * If you are using a DOCTYPE in the source page you can override <getDoctype>\n * and provide the same DOCTYPE for the print preview if required. Here is\n * an example for IE8 standards mode.\n * \n * (code)\n * var preview = new mxPrintPreview(graph);\n * preview.getDoctype = function()\n * {\n *   return '<!--[if IE]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=5,IE=8\" ><![endif]-->';\n * };\n * preview.open();\n * (end)\n * \n * Constructor: mxPrintPreview\n *\n * Constructs a new print preview for the given parameters.\n * \n * Parameters:\n * \n * graph - <mxGraph> to be previewed.\n * scale - Optional scale of the output. Default is 1 / <mxGraph.pageScale>.\n * pageFormat - <mxRectangle> that specifies the page format (in pixels).\n * border - Border in pixels along each side of every page. Note that the\n * actual print function in the browser will add another border for\n * printing.\n * This should match the page format of the printer. Default uses the\n * <mxGraph.pageFormat> of the given graph.\n * x0 - Optional left offset of the output. Default is 0.\n * y0 - Optional top offset of the output. Default is 0.\n * borderColor - Optional color of the page border. Default is no border.\n * Note that a border is sometimes useful to highlight the printed page\n * border in the print preview of the browser.\n * title - Optional string that is used for the window title. Default\n * is 'Printer-friendly version'.\n * pageSelector - Optional boolean that specifies if the page selector\n * should appear in the window with the print preview. Default is true.\n */\nfunction mxPrintPreview(graph, scale, pageFormat, border, x0, y0, borderColor, title, pageSelector)\n{\n\tthis.graph = graph;\n\tthis.scale = (scale != null) ? scale : 1 / graph.pageScale;\n\tthis.border = (border != null) ? border : 0;\n\tthis.pageFormat = mxRectangle.fromRectangle((pageFormat != null) ? pageFormat : graph.pageFormat);\n\tthis.title = (title != null) ? title : 'Printer-friendly version';\n\tthis.x0 = (x0 != null) ? x0 : 0;\n\tthis.y0 = (y0 != null) ? y0 : 0;\n\tthis.borderColor = borderColor;\n\tthis.pageSelector = (pageSelector != null) ? pageSelector : true;\n};\n\n/**\n * Variable: graph\n * \n * Reference to the <mxGraph> that should be previewed.\n */\nmxPrintPreview.prototype.graph = null;\n\n/**\n * Variable: pageFormat\n *\n * Holds the <mxRectangle> that defines the page format.\n */\nmxPrintPreview.prototype.pageFormat = null;\n\n/**\n * Variable: scale\n * \n * Holds the scale of the print preview.\n */\nmxPrintPreview.prototype.scale = null;\n\n/**\n * Variable: border\n * \n * The border inset around each side of every page in the preview. This is set\n * to 0 if autoOrigin is false.\n */\nmxPrintPreview.prototype.border = 0;\n\n/**\n * Variable: marginTop\n * \n * The margin at the top of the page (number). Default is 0.\n */\nmxPrintPreview.prototype.marginTop = 0;\n\n/**\n * Variable: marginBottom\n * \n * The margin at the bottom of the page (number). Default is 0.\n */\nmxPrintPreview.prototype.marginBottom = 0;\n\n/**\n * Variable: x0\n * \n * Holds the horizontal offset of the output.\n */\nmxPrintPreview.prototype.x0 = 0;\n\n/**\n * Variable: y0\n *\n * Holds the vertical offset of the output.\n */\nmxPrintPreview.prototype.y0 = 0;\n\n/**\n * Variable: autoOrigin\n * \n * Specifies if the origin should be automatically computed based on the top,\n * left corner of the actual diagram contents. The required offset will be added\n * to <x0> and <y0> in <open>. Default is true.\n */\nmxPrintPreview.prototype.autoOrigin = true;\n\n/**\n * Variable: printOverlays\n * \n * Specifies if overlays should be printed. Default is false.\n */\nmxPrintPreview.prototype.printOverlays = false;\n\n/**\n * Variable: printControls\n * \n * Specifies if controls (such as folding icons) should be printed. Default is\n * false.\n */\nmxPrintPreview.prototype.printControls = false;\n\n/**\n * Variable: printBackgroundImage\n * \n * Specifies if the background image should be printed. Default is false.\n */\nmxPrintPreview.prototype.printBackgroundImage = false;\n\n/**\n * Variable: backgroundColor\n * \n * Holds the color value for the page background color. Default is #ffffff.\n */\nmxPrintPreview.prototype.backgroundColor = '#ffffff';\n\n/**\n * Variable: borderColor\n * \n * Holds the color value for the page border.\n */\nmxPrintPreview.prototype.borderColor = null;\n\n/**\n * Variable: title\n * \n * Holds the title of the preview window.\n */\nmxPrintPreview.prototype.title = null;\n\n/**\n * Variable: pageSelector\n * \n * Boolean that specifies if the page selector should be\n * displayed. Default is true.\n */\nmxPrintPreview.prototype.pageSelector = null;\n\n/**\n * Variable: wnd\n * \n * Reference to the preview window.\n */\nmxPrintPreview.prototype.wnd = null;\n\n/**\n * Variable: targetWindow\n * \n * Assign any window here to redirect the rendering in <open>.\n */\nmxPrintPreview.prototype.targetWindow = null;\n\n/**\n * Variable: pageCount\n * \n * Holds the actual number of pages in the preview.\n */\nmxPrintPreview.prototype.pageCount = 0;\n\n/**\n * Variable: clipping\n * \n * Specifies is clipping should be used to avoid creating too many cell states\n * in large diagrams. The bounding box of the cells in the original diagram is\n * used if this is enabled. Default is true.\n */\nmxPrintPreview.prototype.clipping = true;\n\n/**\n * Function: getWindow\n * \n * Returns <wnd>.\n */\nmxPrintPreview.prototype.getWindow = function()\n{\n\treturn this.wnd;\n};\n\n/**\n * Function: getDocType\n * \n * Returns the string that should go before the HTML tag in the print preview\n * page. This implementation returns an X-UA meta tag for IE5 in quirks mode,\n * IE8 in IE8 standards mode and edge in IE9 standards mode.\n */\nmxPrintPreview.prototype.getDoctype = function()\n{\n\tvar dt = '';\n\t\n\tif (document.documentMode == 5)\n\t{\n\t\tdt = '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=5\">';\n\t}\n\telse if (document.documentMode == 8)\n\t{\n\t\tdt = '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=8\">';\n\t}\n\telse if (document.documentMode > 8)\n\t{\n\t\t// Comment needed to make standards doctype apply in IE\n\t\tdt = '<!--[if IE]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><![endif]-->';\n\t}\n\t\n\treturn dt;\n};\n\n/**\n * Function: appendGraph\n * \n * Adds the given graph to the existing print preview.\n * \n * Parameters:\n * \n * css - Optional CSS string to be used in the head section.\n * targetWindow - Optional window that should be used for rendering. If\n * this is specified then no HEAD tag, CSS and BODY tag will be written.\n */\nmxPrintPreview.prototype.appendGraph = function(graph, scale, x0, y0, forcePageBreaks, keepOpen)\n{\n\tthis.graph = graph;\n\tthis.scale = (scale != null) ? scale : 1 / graph.pageScale;\n\tthis.x0 = x0;\n\tthis.y0 = y0;\n\tthis.open(null, null, forcePageBreaks, keepOpen);\n};\n\n/**\n * Function: open\n * \n * Shows the print preview window. The window is created here if it does\n * not exist.\n * \n * Parameters:\n * \n * css - Optional CSS string to be used in the head section.\n * targetWindow - Optional window that should be used for rendering. If\n * this is specified then no HEAD tag, CSS and BODY tag will be written.\n */\nmxPrintPreview.prototype.open = function(css, targetWindow, forcePageBreaks, keepOpen)\n{\n\t// Closing the window while the page is being rendered may cause an\n\t// exception in IE. This and any other exceptions are simply ignored.\n\tvar previousInitializeOverlay = this.graph.cellRenderer.initializeOverlay;\n\tvar div = null;\n\t\n\ttry\n\t{\n\t\t// Temporarily overrides the method to redirect rendering of overlays\n\t\t// to the draw pane so that they are visible in the printout\n\t\tif (this.printOverlays)\n\t\t{\n\t\t\tthis.graph.cellRenderer.initializeOverlay = function(state, overlay)\n\t\t\t{\n\t\t\t\toverlay.init(state.view.getDrawPane());\n\t\t\t};\n\t\t}\n\t\t\n\t\tif (this.printControls)\n\t\t{\n\t\t\tthis.graph.cellRenderer.initControl = function(state, control, handleEvents, clickHandler)\n\t\t\t{\n\t\t\t\tcontrol.dialect = state.view.graph.dialect;\n\t\t\t\tcontrol.init(state.view.getDrawPane());\n\t\t\t};\n\t\t}\n\t\t\n\t\tthis.wnd = (targetWindow != null) ? targetWindow : this.wnd;\n\t\tvar isNewWindow = false;\n\t\t\n\t\tif (this.wnd == null)\n\t\t{\n\t\t\tisNewWindow = true;\n\t\t\tthis.wnd = window.open();\n\t\t}\n\t\t\n\t\tvar doc = this.wnd.document;\n\t\t\n\t\tif (isNewWindow)\n\t\t{\n\t\t\tvar dt = this.getDoctype();\n\t\t\t\n\t\t\tif (dt != null && dt.length > 0)\n\t\t\t{\n\t\t\t\tdoc.writeln(dt);\n\t\t\t}\n\t\t\t\n\t\t\tif (mxClient.IS_VML)\n\t\t\t{\n\t\t\t\tdoc.writeln('<html xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:o=\"urn:schemas-microsoft-com:office:office\">');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (document.compatMode === 'CSS1Compat')\n\t\t\t\t{\n\t\t\t\t\tdoc.writeln('<!DOCTYPE html>');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdoc.writeln('<html>');\n\t\t\t}\n\t\t\t\n\t\t\tdoc.writeln('<head>');\n\t\t\tthis.writeHead(doc, css);\n\t\t\tdoc.writeln('</head>');\n\t\t\tdoc.writeln('<body class=\"mxPage\">');\n\t\t}\n\n\t\t// Computes the horizontal and vertical page count\n\t\tvar bounds = this.graph.getGraphBounds().clone();\n\t\tvar currentScale = this.graph.getView().getScale();\n\t\tvar sc = currentScale / this.scale;\n\t\tvar tr = this.graph.getView().getTranslate();\n\t\t\n\t\t// Uses the absolute origin with no offset for all printing\n\t\tif (!this.autoOrigin)\n\t\t{\n\t\t\tthis.x0 -= tr.x * this.scale;\n\t\t\tthis.y0 -= tr.y * this.scale;\n\t\t\tbounds.width += bounds.x;\n\t\t\tbounds.height += bounds.y;\n\t\t\tbounds.x = 0;\n\t\t\tbounds.y = 0;\n\t\t\tthis.border = 0;\n\t\t}\n\t\t\n\t\t// Store the available page area\n\t\tvar availableWidth = this.pageFormat.width - (this.border * 2);\n\t\tvar availableHeight = this.pageFormat.height - (this.border * 2);\n\t\n\t\t// Adds margins to page format\n\t\tthis.pageFormat.height += this.marginTop + this.marginBottom;\n\n\t\t// Compute the unscaled, untranslated bounds to find\n\t\t// the number of vertical and horizontal pages\n\t\tbounds.width /= sc;\n\t\tbounds.height /= sc;\n\n\t\tvar hpages = Math.max(1, Math.ceil((bounds.width + this.x0) / availableWidth));\n\t\tvar vpages = Math.max(1, Math.ceil((bounds.height + this.y0) / availableHeight));\n\t\tthis.pageCount = hpages * vpages;\n\t\t\n\t\tvar writePageSelector = mxUtils.bind(this, function()\n\t\t{\n\t\t\tif (this.pageSelector && (vpages > 1 || hpages > 1))\n\t\t\t{\n\t\t\t\tvar table = this.createPageSelector(vpages, hpages);\n\t\t\t\tdoc.body.appendChild(table);\n\t\t\t\t\n\t\t\t\t// Implements position: fixed in IE quirks mode\n\t\t\t\tif (mxClient.IS_IE && doc.documentMode == null || doc.documentMode == 5 || doc.documentMode == 8 || doc.documentMode == 7)\n\t\t\t\t{\n\t\t\t\t\ttable.style.position = 'absolute';\n\t\t\t\t\t\n\t\t\t\t\tvar update = function()\n\t\t\t\t\t{\n\t\t\t\t\t\ttable.style.top = ((doc.body.scrollTop || doc.documentElement.scrollTop) + 10) + 'px';\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tmxEvent.addListener(this.wnd, 'scroll', function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tupdate();\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tmxEvent.addListener(this.wnd, 'resize', function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tupdate();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\tvar addPage = mxUtils.bind(this, function(div, addBreak)\n\t\t{\n\t\t\t// Border of the DIV (aka page) inside the document\n\t\t\tif (this.borderColor != null)\n\t\t\t{\n\t\t\t\tdiv.style.borderColor = this.borderColor;\n\t\t\t\tdiv.style.borderStyle = 'solid';\n\t\t\t\tdiv.style.borderWidth = '1px';\n\t\t\t}\n\t\t\t\n\t\t\t// Needs to be assigned directly because IE doesn't support\n\t\t\t// child selectors, eg. body > div { background: white; }\n\t\t\tdiv.style.background = this.backgroundColor;\n\t\t\t\n\t\t\tif (forcePageBreaks || addBreak)\n\t\t\t{\n\t\t\t\tdiv.style.pageBreakAfter = 'always';\n\t\t\t}\n\n\t\t\t// NOTE: We are dealing with cross-window DOM here, which\n\t\t\t// is a problem in IE, so we copy the HTML markup instead.\n\t\t\t// The underlying problem is that the graph display markup\n\t\t\t// creation (in mxShape, mxGraphView) is hardwired to using\n\t\t\t// document.createElement and hence we must use this document\n\t\t\t// to create the complete page and then copy it over to the\n\t\t\t// new window.document. This can be fixed later by using the\n\t\t\t// ownerDocument of the container in mxShape and mxGraphView.\n\t\t\tif (isNewWindow && (mxClient.IS_IE || document.documentMode >= 11 || mxClient.IS_EDGE))\n\t\t\t{\n\t\t\t\t// For some obscure reason, removing the DIV from the\n\t\t\t\t// parent before fetching its outerHTML has missing\n\t\t\t\t// fillcolor properties and fill children, so the div\n\t\t\t\t// must be removed afterwards to keep the fillcolors.\n\t\t\t\tdoc.writeln(div.outerHTML);\n\t\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t}\n\t\t\telse if (mxClient.IS_IE || document.documentMode >= 11 || mxClient.IS_EDGE)\n\t\t\t{\n\t\t\t\tvar clone = doc.createElement('div');\n\t\t\t\tclone.innerHTML = div.outerHTML;\n\t\t\t\tclone = clone.getElementsByTagName('div')[0];\n\t\t\t\tdoc.body.appendChild(clone);\n\t\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t}\n\n\t\t\tif (forcePageBreaks || addBreak)\n\t\t\t{\n\t\t\t\tthis.addPageBreak(doc);\n\t\t\t}\n\t\t});\n\t\t\n\t\tvar cov = this.getCoverPages(this.pageFormat.width, this.pageFormat.height);\n\t\t\n\t\tif (cov != null)\n\t\t{\n\t\t\tfor (var i = 0; i < cov.length; i++)\n\t\t\t{\n\t\t\t\taddPage(cov[i], true);\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar apx = this.getAppendices(this.pageFormat.width, this.pageFormat.height);\n\t\t\n\t\t// Appends each page to the page output for printing, making\n\t\t// sure there will be a page break after each page (ie. div)\n\t\tfor (var i = 0; i < vpages; i++)\n\t\t{\n\t\t\tvar dy = i * availableHeight / this.scale - this.y0 / this.scale +\n\t\t\t\t\t(bounds.y - tr.y * currentScale) / currentScale;\n\t\t\t\n\t\t\tfor (var j = 0; j < hpages; j++)\n\t\t\t{\n\t\t\t\tif (this.wnd == null)\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar dx = j * availableWidth / this.scale - this.x0 / this.scale +\n\t\t\t\t\t\t(bounds.x - tr.x * currentScale) / currentScale;\n\t\t\t\tvar pageNum = i * hpages + j + 1;\n\t\t\t\tvar clip = new mxRectangle(dx, dy, availableWidth, availableHeight);\n\t\t\t\tdiv = this.renderPage(this.pageFormat.width, this.pageFormat.height, 0, 0, mxUtils.bind(this, function(div)\n\t\t\t\t{\n\t\t\t\t\tthis.addGraphFragment(-dx, -dy, this.scale, pageNum, div, clip);\n\t\t\t\t\t\n\t\t\t\t\tif (this.printBackgroundImage)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.insertBackgroundImage(div, -dx, -dy);\n\t\t\t\t\t}\n\t\t\t\t}), pageNum);\n\n\t\t\t\t// Gives the page a unique ID for later accessing the page\n\t\t\t\tdiv.setAttribute('id', 'mxPage-'+pageNum);\n\n\t\t\t\taddPage(div, apx != null || i < vpages - 1 || j < hpages - 1);\n\t\t\t}\n\t\t}\n\n\t\tif (apx != null)\n\t\t{\n\t\t\tfor (var i = 0; i < apx.length; i++)\n\t\t\t{\n\t\t\t\taddPage(apx[i], i < apx.length - 1);\n\t\t\t}\n\t\t}\n\n\t\tif (isNewWindow && !keepOpen)\n\t\t{\n\t\t\tthis.closeDocument();\n\t\t\twritePageSelector();\n\t\t}\n\t\t\n\t\tthis.wnd.focus();\n\t}\n\tcatch (e)\n\t{\n\t\t// Removes the DIV from the document in case of an error\n\t\tif (div != null && div.parentNode != null)\n\t\t{\n\t\t\tdiv.parentNode.removeChild(div);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.graph.cellRenderer.initializeOverlay = previousInitializeOverlay;\n\t}\n\n\treturn this.wnd;\n};\n\n/**\n * Function: addPageBreak\n * \n * Adds a page break to the given document.\n */\nmxPrintPreview.prototype.addPageBreak = function(doc)\n{\n\tvar hr = doc.createElement('hr');\n\thr.className = 'mxPageBreak';\n\tdoc.body.appendChild(hr);\n};\n\n/**\n * Function: closeDocument\n * \n * Writes the closing tags for body and page after calling <writePostfix>.\n */\nmxPrintPreview.prototype.closeDocument = function()\n{\n\ttry\n\t{\n\t\tif (this.wnd != null && this.wnd.document != null)\n\t\t{\n\t\t\tvar doc = this.wnd.document;\n\t\t\t\n\t\t\tthis.writePostfix(doc);\n\t\t\tdoc.writeln('</body>');\n\t\t\tdoc.writeln('</html>');\n\t\t\tdoc.close();\n\t\t\t\n\t\t\t// Removes all event handlers in the print output\n\t\t\tmxEvent.release(doc.body);\n\t\t}\n\t}\n\tcatch (e)\n\t{\n\t\t// ignore any errors resulting from wnd no longer being available\n\t}\n};\n\n/**\n * Function: writeHead\n * \n * Writes the HEAD section into the given document, without the opening\n * and closing HEAD tags.\n */\nmxPrintPreview.prototype.writeHead = function(doc, css)\n{\n\tif (this.title != null)\n\t{\n\t\tdoc.writeln('<title>' + this.title + '</title>');\n\t}\n\t\n\t// Adds required namespaces\n\tif (mxClient.IS_VML)\n\t{\n\t\tdoc.writeln('<style type=\"text/css\">v\\\\:*{behavior:url(#default#VML)}o\\\\:*{behavior:url(#default#VML)}</style>');\n\t}\n\n\t// Adds all required stylesheets\n\tmxClient.link('stylesheet', mxClient.basePath + '/css/common.css', doc);\n\n\t// Removes horizontal rules and page selector from print output\n\tdoc.writeln('<style type=\"text/css\">');\n\tdoc.writeln('@media print {');\n\tdoc.writeln('  * { -webkit-print-color-adjust: exact; }');\n\tdoc.writeln('  table.mxPageSelector { display: none; }');\n\tdoc.writeln('  hr.mxPageBreak { display: none; }');\n\tdoc.writeln('}');\n\tdoc.writeln('@media screen {');\n\t\n\t// NOTE: position: fixed is not supported in IE, so the page selector\n\t// position (absolute) needs to be updated in IE (see below)\n\tdoc.writeln('  table.mxPageSelector { position: fixed; right: 10px; top: 10px;' +\n\t\t\t'font-family: Arial; font-size:10pt; border: solid 1px darkgray;' +\n\t\t\t'background: white; border-collapse:collapse; }');\n\tdoc.writeln('  table.mxPageSelector td { border: solid 1px gray; padding:4px; }');\n\tdoc.writeln('  body.mxPage { background: gray; }');\n\tdoc.writeln('}');\n\t\n\tif (css != null)\n\t{\n\t\tdoc.writeln(css);\n\t}\n\t\n\tdoc.writeln('</style>');\n};\n\n/**\n * Function: writePostfix\n * \n * Called before closing the body of the page. This implementation is empty.\n */\nmxPrintPreview.prototype.writePostfix = function(doc)\n{\n\t// empty\n};\n\n/**\n * Function: createPageSelector\n * \n * Creates the page selector table.\n */\nmxPrintPreview.prototype.createPageSelector = function(vpages, hpages)\n{\n\tvar doc = this.wnd.document;\n\tvar table = doc.createElement('table');\n\ttable.className = 'mxPageSelector';\n\ttable.setAttribute('border', '0');\n\n\tvar tbody = doc.createElement('tbody');\n\t\n\tfor (var i = 0; i < vpages; i++)\n\t{\n\t\tvar row = doc.createElement('tr');\n\t\t\n\t\tfor (var j = 0; j < hpages; j++)\n\t\t{\n\t\t\tvar pageNum = i * hpages + j + 1;\n\t\t\tvar cell = doc.createElement('td');\n\t\t\tvar a = doc.createElement('a');\n\t\t\ta.setAttribute('href', '#mxPage-' + pageNum);\n\n\t\t\t// Workaround for FF where the anchor is appended to the URL of the original document\n\t\t\tif (mxClient.IS_NS && !mxClient.IS_SF && !mxClient.IS_GC)\n\t\t\t{\n\t\t\t\tvar js = 'var page = document.getElementById(\\'mxPage-' + pageNum + '\\');page.scrollIntoView(true);event.preventDefault();';\n\t\t\t\ta.setAttribute('onclick', js);\n\t\t\t}\n\t\t\t\n\t\t\tmxUtils.write(a, pageNum, doc);\n\t\t\tcell.appendChild(a);\n\t\t\trow.appendChild(cell);\n\t\t}\n\t\t\n\t\ttbody.appendChild(row);\n\t}\n\t\n\ttable.appendChild(tbody);\n\t\n\treturn table;\n};\n\n/**\n * Function: renderPage\n * \n * Creates a DIV that prints a single page of the given\n * graph using the given scale and returns the DIV that\n * represents the page.\n * \n * Parameters:\n * \n * w - Width of the page in pixels.\n * h - Height of the page in pixels.\n * dx - Optional horizontal page offset in pixels (used internally).\n * dy - Optional vertical page offset in pixels (used internally).\n * content - Callback that adds the HTML content to the inner div of a page.\n * Takes the inner div as the argument.\n * pageNumber - Integer representing the page number.\n */\nmxPrintPreview.prototype.renderPage = function(w, h, dx, dy, content, pageNumber)\n{\n\tvar doc = this.wnd.document;\n\tvar div = document.createElement('div');\n\tvar arg = null;\n\n\ttry\n\t{\n\t\t// Workaround for ignored clipping in IE 9 standards\n\t\t// when printing with page breaks and HTML labels.\n\t\tif (dx != 0 || dy != 0)\n\t\t{\n\t\t\tdiv.style.position = 'relative';\n\t\t\tdiv.style.width = w + 'px';\n\t\t\tdiv.style.height = h + 'px';\n\t\t\tdiv.style.pageBreakInside = 'avoid';\n\t\t\t\n\t\t\tvar innerDiv = document.createElement('div');\n\t\t\tinnerDiv.style.position = 'relative';\n\t\t\tinnerDiv.style.top = this.border + 'px';\n\t\t\tinnerDiv.style.left = this.border + 'px';\n\t\t\tinnerDiv.style.width = (w - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.height = (h - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.overflow = 'hidden';\n\t\t\t\n\t\t\tvar viewport = document.createElement('div');\n\t\t\tviewport.style.position = 'relative';\n\t\t\tviewport.style.marginLeft = dx + 'px';\n\t\t\tviewport.style.marginTop = dy + 'px';\n\n\t\t\t// FIXME: IE8 standards output problems\n\t\t\tif (doc.documentMode == 8)\n\t\t\t{\n\t\t\t\tinnerDiv.style.position = 'absolute';\n\t\t\t\tviewport.style.position = 'absolute';\n\t\t\t}\n\t\t\n\t\t\tif (doc.documentMode == 10)\n\t\t\t{\n\t\t\t\tviewport.style.width = '100%';\n\t\t\t\tviewport.style.height = '100%';\n\t\t\t}\n\t\t\t\n\t\t\tinnerDiv.appendChild(viewport);\n\t\t\tdiv.appendChild(innerDiv);\n\t\t\tdocument.body.appendChild(div);\n\t\t\targ = viewport;\n\t\t}\n\t\t// FIXME: IE10/11 too many pages\n\t\telse\n\t\t{\n\t\t\tdiv.style.width = w + 'px';\n\t\t\tdiv.style.height = h + 'px';\n\t\t\tdiv.style.overflow = 'hidden';\n\t\t\tdiv.style.pageBreakInside = 'avoid';\n\t\t\t\n\t\t\t// IE8 uses above branch currently\n\t\t\tif (doc.documentMode == 8)\n\t\t\t{\n\t\t\t\tdiv.style.position = 'relative';\n\t\t\t}\n\t\t\t\n\t\t\tvar innerDiv = document.createElement('div');\n\t\t\tinnerDiv.style.width = (w - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.height = (h - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.overflow = 'hidden';\n\n\t\t\tif (mxClient.IS_IE && (doc.documentMode == null || doc.documentMode == 5 ||\n\t\t\t\tdoc.documentMode == 8 || doc.documentMode == 7))\n\t\t\t{\n\t\t\t\tinnerDiv.style.marginTop = this.border + 'px';\n\t\t\t\tinnerDiv.style.marginLeft = this.border + 'px';\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinnerDiv.style.top = this.border + 'px';\n\t\t\t\tinnerDiv.style.left = this.border + 'px';\n\t\t\t}\n\t\n\t\t\tif (this.graph.dialect == mxConstants.DIALECT_VML)\n\t\t\t{\n\t\t\t\tinnerDiv.style.position = 'absolute';\n\t\t\t}\n\n\t\t\tdiv.appendChild(innerDiv);\n\t\t\tdocument.body.appendChild(div);\n\t\t\targ = innerDiv;\n\t\t}\n\t}\n\tcatch (e)\n\t{\n\t\tdiv.parentNode.removeChild(div);\n\t\tdiv = null;\n\t\t\n\t\tthrow e;\n\t}\n\n\tcontent(arg);\n\t \n\treturn div;\n};\n\n/**\n * Function: getRoot\n * \n * Returns the root cell for painting the graph.\n */\nmxPrintPreview.prototype.getRoot = function()\n{\n\tvar root = this.graph.view.currentRoot;\n\t\n\tif (root == null)\n\t{\n\t\troot = this.graph.getModel().getRoot();\n\t}\n\t\n\treturn root;\n};\n\n/**\n * Function: useCssTransforms\n * \n * Returns true if CSS transforms should be used for scaling content.\n * This returns true if foreignObject is supported and we're not in Safari\n * as it has clipping bugs for transformed CSS content with foreignObjects.\n */\nmxPrintPreview.prototype.useCssTransforms = function()\n{\n\treturn !mxClient.NO_FO && !mxClient.IS_SF;\n};\n\n/**\n * Function: addGraphFragment\n * \n * Adds a graph fragment to the given div.\n * \n * Parameters:\n * \n * dx - Horizontal translation for the diagram.\n * dy - Vertical translation for the diagram.\n * scale - Scale for the diagram.\n * pageNumber - Number of the page to be rendered.\n * div - Div that contains the output.\n * clip - Contains the clipping rectangle as an <mxRectangle>.\n */\nmxPrintPreview.prototype.addGraphFragment = function(dx, dy, scale, pageNumber, div, clip)\n{\n\tvar view = this.graph.getView();\n\tvar previousContainer = this.graph.container;\n\tthis.graph.container = div;\n\t\n\tvar canvas = view.getCanvas();\n\tvar backgroundPane = view.getBackgroundPane();\n\tvar drawPane = view.getDrawPane();\n\tvar overlayPane = view.getOverlayPane();\n\tvar realScale = scale;\n\n\tif (this.graph.dialect == mxConstants.DIALECT_SVG)\n\t{\n\t\tview.createSvg();\n\t\t\n\t\t// Uses CSS transform for scaling\n\t\tif (this.useCssTransforms())\n\t\t{\n\t\t\tvar g = view.getDrawPane().parentNode;\n\t\t\tvar prev = g.getAttribute('transform');\n\t\t\tg.setAttribute('transformOrigin', '0 0');\n\t\t\tg.setAttribute('transform', 'scale(' + scale + ',' + scale + ')' +\n\t\t\t\t'translate(' + dx + ',' + dy + ')');\n\t\t\t\n\t\t\tscale = 1;\n\t\t\tdx = 0;\n\t\t\tdy = 0;\n\t\t}\n\t}\n\telse if (this.graph.dialect == mxConstants.DIALECT_VML)\n\t{\n\t\tview.createVml();\n\t}\n\telse\n\t{\n\t\tview.createHtml();\n\t}\n\t\n\t// Disables events on the view\n\tvar eventsEnabled = view.isEventsEnabled();\n\tview.setEventsEnabled(false);\n\t\n\t// Disables the graph to avoid cursors\n\tvar graphEnabled = this.graph.isEnabled();\n\tthis.graph.setEnabled(false);\n\n\t// Resets the translation\n\tvar translate = view.getTranslate();\n\tview.translate = new mxPoint(dx, dy);\n\t\n\t// Redraws only states that intersect the clip\n\tvar redraw = this.graph.cellRenderer.redraw;\n\tvar states = view.states;\n\tvar s = view.scale;\n\n\t// Gets the transformed clip for intersection check below\n\tif (this.clipping)\n\t{\n\t\tvar tempClip = new mxRectangle((clip.x + translate.x) * s, (clip.y + translate.y) * s,\n\t\t\t\tclip.width * s / realScale, clip.height * s / realScale);\n\n\t\t// Checks clipping rectangle for speedup\n\t\t// Must create terminal states for edge clipping even if terminal outside of clip\n\t\tthis.graph.cellRenderer.redraw = function(state, force, rendering)\n\t\t{\n\t\t\tif (state != null)\n\t\t\t{\n\t\t\t\t// Gets original state from graph to find bounding box\n\t\t\t\tvar orig = states.get(state.cell);\n\t\t\t\t\n\t\t\t\tif (orig != null)\n\t\t\t\t{\n\t\t\t\t\tvar bbox = view.getBoundingBox(orig, false);\n\t\t\t\t\t\n\t\t\t\t\t// Stops rendering if outside clip for speedup but ignores\n\t\t\t\t\t// edge labels where width and height is set to 0\n\t\t\t\t\tif (bbox != null && bbox.width > 0 && bbox.height > 0 &&\n\t\t\t\t\t\t!mxUtils.intersects(tempClip, bbox))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tredraw.apply(this, arguments);\n\t\t};\n\t}\n\t\n\tvar temp = null;\n\t\n\ttry\n\t{\n\t\t// Creates the temporary cell states in the view and\n\t\t// draws them onto the temporary DOM nodes in the view\n\t\tvar cells = [this.getRoot()];\n\t\ttemp = new mxTemporaryCellStates(view, scale, cells, null, mxUtils.bind(this, function(state)\n\t\t{\n\t\t\treturn this.getLinkForCellState(state);\n\t\t}));\n\t}\n\tfinally\n\t{\n\t\t// Removes overlay pane with selection handles\n\t\t// controls and icons from the print output\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tview.overlayPane.innerHTML = '';\n\t\t\tview.canvas.style.overflow = 'hidden';\n\t\t\tview.canvas.style.position = 'relative';\n\t\t\tview.canvas.style.top = this.marginTop + 'px';\n\t\t\tview.canvas.style.width = clip.width + 'px';\n\t\t\tview.canvas.style.height = clip.height + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Removes everything but the SVG node\n\t\t\tvar tmp = div.firstChild;\n\n\t\t\twhile (tmp != null)\n\t\t\t{\n\t\t\t\tvar next = tmp.nextSibling;\n\t\t\t\tvar name = tmp.nodeName.toLowerCase();\n\n\t\t\t\t// Note: Width and height are required in FF 11\n\t\t\t\tif (name == 'svg')\n\t\t\t\t{\n\t\t\t\t\ttmp.style.overflow = 'hidden';\n\t\t\t\t\ttmp.style.position = 'relative';\n\t\t\t\t\ttmp.style.top = this.marginTop + 'px';\n\t\t\t\t\ttmp.setAttribute('width', clip.width);\n\t\t\t\t\ttmp.setAttribute('height', clip.height);\n\t\t\t\t\ttmp.style.width = '';\n\t\t\t\t\ttmp.style.height = '';\n\t\t\t\t}\n\t\t\t\t// Tries to fetch all text labels and only text labels\n\t\t\t\telse if (tmp.style.cursor != 'default' && name != 'div')\n\t\t\t\t{\n\t\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttmp = next;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Puts background image behind SVG output\n\t\tif (this.printBackgroundImage)\n\t\t{\n\t\t\tvar svgs = div.getElementsByTagName('svg');\n\t\t\t\n\t\t\tif (svgs.length > 0)\n\t\t\t{\n\t\t\t\tsvgs[0].style.position = 'absolute';\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Completely removes the overlay pane to remove more handles\n\t\tview.overlayPane.parentNode.removeChild(view.overlayPane);\n\n\t\t// Restores the state of the view\n\t\tthis.graph.setEnabled(graphEnabled);\n\t\tthis.graph.container = previousContainer;\n\t\tthis.graph.cellRenderer.redraw = redraw;\n\t\tview.canvas = canvas;\n\t\tview.backgroundPane = backgroundPane;\n\t\tview.drawPane = drawPane;\n\t\tview.overlayPane = overlayPane;\n\t\tview.translate = translate;\n\t\ttemp.destroy();\n\t\tview.setEventsEnabled(eventsEnabled);\n\t}\n};\n\n/**\n * Function: getLinkForCellState\n * \n * Returns the link for the given cell state. This returns null.\n */\nmxPrintPreview.prototype.getLinkForCellState = function(state)\n{\n\treturn this.graph.getLinkForCell(state.cell);\n};\n\n/**\n * Function: insertBackgroundImage\n * \n * Inserts the background image into the given div.\n */\nmxPrintPreview.prototype.insertBackgroundImage = function(div, dx, dy)\n{\n\tvar bg = this.graph.backgroundImage;\n\t\n\tif (bg != null)\n\t{\n\t\tvar img = document.createElement('img');\n\t\timg.style.position = 'absolute';\n\t\timg.style.marginLeft = Math.round(dx * this.scale) + 'px';\n\t\timg.style.marginTop = Math.round(dy * this.scale) + 'px';\n\t\timg.setAttribute('width', Math.round(this.scale * bg.width));\n\t\timg.setAttribute('height', Math.round(this.scale * bg.height));\n\t\timg.src = bg.src;\n\t\t\n\t\tdiv.insertBefore(img, div.firstChild);\n\t}\n};\n\n/**\n * Function: getCoverPages\n * \n * Returns the pages to be added before the print output. This returns null.\n */\nmxPrintPreview.prototype.getCoverPages = function()\n{\n\treturn null;\n};\n\n/**\n * Function: getAppendices\n * \n * Returns the pages to be added after the print output. This returns null.\n */\nmxPrintPreview.prototype.getAppendices = function()\n{\n\treturn null;\n};\n\n/**\n * Function: print\n * \n * Opens the print preview and shows the print dialog.\n * \n * Parameters:\n * \n * css - Optional CSS string to be used in the head section.\n */\nmxPrintPreview.prototype.print = function(css)\n{\n\tvar wnd = this.open(css);\n\t\n\tif (wnd != null)\n\t{\n\t\twnd.print();\n\t}\n};\n\n/**\n * Function: close\n * \n * Closes the print preview window.\n */\nmxPrintPreview.prototype.close = function()\n{\n\tif (this.wnd != null)\n\t{\n\t\tthis.wnd.close();\n\t\tthis.wnd = null;\n\t}\n};\n\n__mxOutput.mxPrintPreview = typeof mxPrintPreview !== 'undefined' ? mxPrintPreview : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStylesheet\n *\n * Defines the appearance of the cells in a graph. See <putCellStyle> for an\n * example of creating a new cell style. It is recommended to use objects, not\n * arrays for holding cell styles. Existing styles can be cloned using\n * <mxUtils.clone> and turned into a string for debugging using\n * <mxUtils.toString>.\n *\n * Default Styles:\n *\n * The stylesheet contains two built-in styles, which are used if no style is\n * defined for a cell:\n *\n *   defaultVertex - Default style for vertices\n *   defaultEdge - Default style for edges\n *\n * Example:\n *\n * (code)\n * var vertexStyle = stylesheet.getDefaultVertexStyle();\n * vertexStyle[mxConstants.STYLE_ROUNDED] = true;\n * var edgeStyle = stylesheet.getDefaultEdgeStyle();\n * edgeStyle[mxConstants.STYLE_EDGE] = mxEdgeStyle.EntityRelation;\n * (end)\n *\n * Modifies the built-in default styles.\n *\n * To avoid the default style for a cell, add a leading semicolon\n * to the style definition, eg.\n *\n * (code)\n * ;shadow=1\n * (end)\n *\n * Removing keys:\n *\n * For removing a key in a cell style of the form [stylename;|key=value;] the\n * special value none can be used, eg. highlight;fillColor=none\n *\n * See also the helper methods in mxUtils to modify strings of this format,\n * namely <mxUtils.setStyle>, <mxUtils.indexOfStylename>,\n * <mxUtils.addStylename>, <mxUtils.removeStylename>,\n * <mxUtils.removeAllStylenames> and <mxUtils.setStyleFlag>.\n *\n * Constructor: mxStylesheet\n *\n * Constructs a new stylesheet and assigns default styles.\n */\nfunction mxStylesheet()\n{\n\tthis.styles = new Object();\n\n\tthis.putDefaultVertexStyle(this.createDefaultVertexStyle());\n\tthis.putDefaultEdgeStyle(this.createDefaultEdgeStyle());\n};\n\n/**\n * Function: styles\n *\n * Maps from names to cell styles. Each cell style is a map of key,\n * value pairs.\n */\nmxStylesheet.prototype.styles;\n\n/**\n * Function: createDefaultVertexStyle\n *\n * Creates and returns the default vertex style.\n */\nmxStylesheet.prototype.createDefaultVertexStyle = function()\n{\n\tvar style = new Object();\n\n\tstyle[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_RECTANGLE;\n\tstyle[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\n\tstyle[mxConstants.STYLE_VERTICAL_ALIGN] = mxConstants.ALIGN_MIDDLE;\n\tstyle[mxConstants.STYLE_ALIGN] = mxConstants.ALIGN_CENTER;\n\tstyle[mxConstants.STYLE_FILLCOLOR] = '#C3D9FF';\n\tstyle[mxConstants.STYLE_STROKECOLOR] = '#6482B9';\n\tstyle[mxConstants.STYLE_FONTCOLOR] = '#774400';\n\n\treturn style;\n};\n\n/**\n * Function: createDefaultEdgeStyle\n *\n * Creates and returns the default edge style.\n */\nmxStylesheet.prototype.createDefaultEdgeStyle = function()\n{\n\tvar style = new Object();\n\n\tstyle[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_CONNECTOR;\n\tstyle[mxConstants.STYLE_ENDARROW] = mxConstants.ARROW_CLASSIC;\n\tstyle[mxConstants.STYLE_VERTICAL_ALIGN] = mxConstants.ALIGN_MIDDLE;\n\tstyle[mxConstants.STYLE_ALIGN] = mxConstants.ALIGN_CENTER;\n\tstyle[mxConstants.STYLE_STROKECOLOR] = '#6482B9';\n\tstyle[mxConstants.STYLE_FONTCOLOR] = '#446299';\n\n\treturn style;\n};\n\n/**\n * Function: putDefaultVertexStyle\n *\n * Sets the default style for vertices using defaultVertex as the\n * stylename.\n *\n * Parameters:\n * style - Key, value pairs that define the style.\n */\nmxStylesheet.prototype.putDefaultVertexStyle = function(style)\n{\n\tthis.putCellStyle('defaultVertex', style);\n};\n\n/**\n * Function: putDefaultEdgeStyle\n *\n * Sets the default style for edges using defaultEdge as the stylename.\n */\nmxStylesheet.prototype.putDefaultEdgeStyle = function(style)\n{\n\tthis.putCellStyle('defaultEdge', style);\n};\n\n/**\n * Function: getDefaultVertexStyle\n *\n * Returns the default style for vertices.\n */\nmxStylesheet.prototype.getDefaultVertexStyle = function()\n{\n\treturn this.styles['defaultVertex'];\n};\n\n/**\n * Function: getDefaultEdgeStyle\n *\n * Sets the default style for edges.\n */\nmxStylesheet.prototype.getDefaultEdgeStyle = function()\n{\n\treturn this.styles['defaultEdge'];\n};\n\n/**\n * Function: putCellStyle\n *\n * Stores the given map of key, value pairs under the given name in\n * <styles>.\n *\n * Example:\n *\n * The following example adds a new style called 'rounded' into an\n * existing stylesheet:\n *\n * (code)\n * var style = new Object();\n * style[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_RECTANGLE;\n * style[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\n * style[mxConstants.STYLE_ROUNDED] = true;\n * graph.getStylesheet().putCellStyle('rounded', style);\n * (end)\n *\n * In the above example, the new style is an object. The possible keys of\n * the object are all the constants in <mxConstants> that start with STYLE\n * and the values are either JavaScript objects, such as\n * <mxPerimeter.RightAngleRectanglePerimeter> (which is in fact a function)\n * or expressions, such as true. Note that not all keys will be\n * interpreted by all shapes (eg. the line shape ignores the fill color).\n * The final call to this method associates the style with a name in the\n * stylesheet. The style is used in a cell with the following code:\n *\n * (code)\n * model.setStyle(cell, 'rounded');\n * (end)\n *\n * Parameters:\n *\n * name - Name for the style to be stored.\n * style - Key, value pairs that define the style.\n */\nmxStylesheet.prototype.putCellStyle = function(name, style)\n{\n\tthis.styles[name] = style;\n};\n\n/**\n * Function: getCellStyle\n *\n * Returns the cell style for the specified stylename or the given\n * defaultStyle if no style can be found for the given stylename.\n *\n * Parameters:\n *\n * name - String of the form [(stylename|key=value);] that represents the\n * style.\n * defaultStyle - Default style to be returned if no style can be found.\n */\nmxStylesheet.prototype.getCellStyle = function(name, defaultStyle)\n{\n\tvar style = defaultStyle;\n\n\tif (name != null && name.length > 0)\n\t{\n\t\tvar pairs = name.split(';');\n\n\t\tif (style != null &&\n\t\t\tname.charAt(0) != ';')\n\t\t{\n\t\t\tstyle = mxUtils.clone(style);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle = new Object();\n\t\t}\n\n\t\t// Parses each key, value pair into the existing style\n\t \tfor (var i = 0; i < pairs.length; i++)\n\t \t{\n\t \t\tvar tmp = pairs[i];\n\t \t\tvar pos = tmp.indexOf('=');\n\n\t \t\tif (pos >= 0)\n\t \t\t{\n\t\t \t\tvar key = tmp.substring(0, pos);\n\t\t \t\tvar value = tmp.substring(pos + 1);\n\n\t\t \t\tif (value == mxConstants.NONE)\n\t\t \t\t{\n\t\t \t\t\tdelete style[key];\n\t\t \t\t}\n\t\t \t\telse if (mxUtils.isNumeric(value))\n\t\t \t\t{\n\t\t \t\t\tstyle[key] = parseFloat(value);\n\t\t \t\t}\n\t\t \t\telse\n\t\t \t\t{\n\t\t\t \t\tstyle[key] = value;\n\t\t \t\t}\n\t\t\t}\n\t \t\telse\n\t \t\t{\n\t \t\t\t// Merges the entries from a named style\n\t\t\t\tvar tmpStyle = this.styles[tmp];\n\n\t\t\t\tif (tmpStyle != null)\n\t\t\t\t{\n\t\t\t\t\tfor (var key in tmpStyle)\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle[key] = tmpStyle[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t \t\t}\n\t\t}\n\t}\n\n\treturn style;\n};\n\n__mxOutput.mxStylesheet = typeof mxStylesheet !== 'undefined' ? mxStylesheet : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellState\n * \n * Represents the current state of a cell in a given <mxGraphView>.\n * \n * For edges, the edge label position is stored in <absoluteOffset>.\n * \n * The size for oversize labels can be retrieved using the boundingBox property\n * of the <text> field as shown below.\n * \n * (code)\n * var bbox = (state.text != null) ? state.text.boundingBox : null;\n * (end)\n * \n * Constructor: mxCellState\n * \n * Constructs a new object that represents the current state of the given\n * cell in the specified view.\n * \n * Parameters:\n * \n * view - <mxGraphView> that contains the state.\n * cell - <mxCell> that this state represents.\n * style - Array of key, value pairs that constitute the style.\n */\nfunction mxCellState(view, cell, style)\n{\n\tthis.view = view;\n\tthis.cell = cell;\n\tthis.style = (style != null) ? style : {};\n\t\n\tthis.origin = new mxPoint();\n\tthis.absoluteOffset = new mxPoint();\n};\n\n/**\n * Extends mxRectangle.\n */\nmxCellState.prototype = new mxRectangle();\nmxCellState.prototype.constructor = mxCellState;\n\n/**\n * Variable: view\n * \n * Reference to the enclosing <mxGraphView>.\n */\nmxCellState.prototype.view = null;\n\n/**\n * Variable: cell\n *\n * Reference to the <mxCell> that is represented by this state.\n */\nmxCellState.prototype.cell = null;\n\n/**\n * Variable: style\n * \n * Contains an array of key, value pairs that represent the style of the\n * cell.\n */\nmxCellState.prototype.style = null;\n\n/**\n * Variable: invalidStyle\n * \n * Specifies if the style is invalid. Default is false.\n */\nmxCellState.prototype.invalidStyle = false;\n\n/**\n * Variable: invalid\n * \n * Specifies if the state is invalid. Default is true.\n */\nmxCellState.prototype.invalid = true;\n\n/**\n * Variable: origin\n *\n * <mxPoint> that holds the origin for all child cells. Default is a new\n * empty <mxPoint>.\n */\nmxCellState.prototype.origin = null;\n\n/**\n * Variable: absolutePoints\n * \n * Holds an array of <mxPoints> that represent the absolute points of an\n * edge.\n */\nmxCellState.prototype.absolutePoints = null;\n\n/**\n * Variable: absoluteOffset\n *\n * <mxPoint> that holds the absolute offset. For edges, this is the\n * absolute coordinates of the label position. For vertices, this is the\n * offset of the label relative to the top, left corner of the vertex. \n */\nmxCellState.prototype.absoluteOffset = null;\n\n/**\n * Variable: visibleSourceState\n * \n * Caches the visible source terminal state.\n */\nmxCellState.prototype.visibleSourceState = null;\n\n/**\n * Variable: visibleTargetState\n * \n * Caches the visible target terminal state.\n */\nmxCellState.prototype.visibleTargetState = null;\n\n/**\n * Variable: terminalDistance\n * \n * Caches the distance between the end points for an edge.\n */\nmxCellState.prototype.terminalDistance = 0;\n\n/**\n * Variable: length\n *\n * Caches the length of an edge.\n */\nmxCellState.prototype.length = 0;\n\n/**\n * Variable: segments\n * \n * Array of numbers that represent the cached length of each segment of the\n * edge.\n */\nmxCellState.prototype.segments = null;\n\n/**\n * Variable: shape\n * \n * Holds the <mxShape> that represents the cell graphically.\n */\nmxCellState.prototype.shape = null;\n\n/**\n * Variable: text\n * \n * Holds the <mxText> that represents the label of the cell. Thi smay be\n * null if the cell has no label.\n */\nmxCellState.prototype.text = null;\n\n/**\n * Variable: unscaledWidth\n * \n * Holds the unscaled width of the state.\n */\nmxCellState.prototype.unscaledWidth = null;\n\n/**\n * Variable: unscaledHeight\n * \n * Holds the unscaled height of the state.\n */\nmxCellState.prototype.unscaledHeight = null;\n\n/**\n * Function: getPerimeterBounds\n * \n * Returns the <mxRectangle> that should be used as the perimeter of the\n * cell.\n * \n * Parameters:\n * \n * border - Optional border to be added around the perimeter bounds.\n * bounds - Optional <mxRectangle> to be used as the initial bounds.\n */\nmxCellState.prototype.getPerimeterBounds = function(border, bounds)\n{\n\tborder = border || 0;\n\tbounds = (bounds != null) ? bounds : new mxRectangle(this.x, this.y, this.width, this.height);\n\t\n\tif (this.shape != null && this.shape.stencil != null && this.shape.stencil.aspect == 'fixed')\n\t{\n\t\tvar aspect = this.shape.stencil.computeAspect(this.style, bounds.x, bounds.y, bounds.width, bounds.height);\n\t\t\n\t\tbounds.x = aspect.x;\n\t\tbounds.y = aspect.y;\n\t\tbounds.width = this.shape.stencil.w0 * aspect.width;\n\t\tbounds.height = this.shape.stencil.h0 * aspect.height;\n\t}\n\t\n\tif (border != 0)\n\t{\n\t\tbounds.grow(border);\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: setAbsoluteTerminalPoint\n * \n * Sets the first or last point in <absolutePoints> depending on isSource.\n * \n * Parameters:\n * \n * point - <mxPoint> that represents the terminal point.\n * isSource - Boolean that specifies if the first or last point should\n * be assigned.\n */\nmxCellState.prototype.setAbsoluteTerminalPoint = function(point, isSource)\n{\n\tif (isSource)\n\t{\n\t\tif (this.absolutePoints == null)\n\t\t{\n\t\t\tthis.absolutePoints = [];\n\t\t}\n\t\t\n\t\tif (this.absolutePoints.length == 0)\n\t\t{\n\t\t\tthis.absolutePoints.push(point);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.absolutePoints[0] = point;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (this.absolutePoints == null)\n\t\t{\n\t\t\tthis.absolutePoints = [];\n\t\t\tthis.absolutePoints.push(null);\n\t\t\tthis.absolutePoints.push(point);\n\t\t}\n\t\telse if (this.absolutePoints.length == 1)\n\t\t{\n\t\t\tthis.absolutePoints.push(point);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.absolutePoints[this.absolutePoints.length - 1] = point;\n\t\t}\n\t}\n};\n\n/**\n * Function: setCursor\n * \n * Sets the given cursor on the shape and text shape.\n */\nmxCellState.prototype.setCursor = function(cursor)\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.setCursor(cursor);\n\t}\n\t\n\tif (this.text != null)\n\t{\n\t\tthis.text.setCursor(cursor);\n\t}\n};\n\n/**\n * Function: getVisibleTerminal\n * \n * Returns the visible source or target terminal cell.\n * \n * Parameters:\n * \n * source - Boolean that specifies if the source or target cell should be\n * returned.\n */\nmxCellState.prototype.getVisibleTerminal = function(source)\n{\n\tvar tmp = this.getVisibleTerminalState(source);\n\t\n\treturn (tmp != null) ? tmp.cell : null;\n};\n\n/**\n * Function: getVisibleTerminalState\n * \n * Returns the visible source or target terminal state.\n * \n * Parameters:\n * \n * source - Boolean that specifies if the source or target state should be\n * returned.\n */\nmxCellState.prototype.getVisibleTerminalState = function(source)\n{\n\treturn (source) ? this.visibleSourceState : this.visibleTargetState;\n};\n\n/**\n * Function: setVisibleTerminalState\n * \n * Sets the visible source or target terminal state.\n * \n * Parameters:\n * \n * terminalState - <mxCellState> that represents the terminal.\n * source - Boolean that specifies if the source or target state should be set.\n */\nmxCellState.prototype.setVisibleTerminalState = function(terminalState, source)\n{\n\tif (source)\n\t{\n\t\tthis.visibleSourceState = terminalState;\n\t}\n\telse\n\t{\n\t\tthis.visibleTargetState = terminalState;\n\t}\n};\n\n/**\n * Function: getCellBounds\n * \n * Returns the unscaled, untranslated bounds.\n */\nmxCellState.prototype.getCellBounds = function()\n{\n\treturn this.cellBounds;\n};\n\n/**\n * Function: getPaintBounds\n * \n * Returns the unscaled, untranslated paint bounds. This is the same as\n * <getCellBounds> but with a 90 degree rotation if the shape's\n * isPaintBoundsInverted returns true.\n */\nmxCellState.prototype.getPaintBounds = function()\n{\n\treturn this.paintBounds;\n};\n\n/**\n * Function: updateCachedBounds\n * \n * Updates the cellBounds and paintBounds.\n */\nmxCellState.prototype.updateCachedBounds = function()\n{\n\tvar tr = this.view.translate;\n\tvar s = this.view.scale;\n\tthis.cellBounds = new mxRectangle(this.x / s - tr.x, this.y / s - tr.y, this.width / s, this.height / s);\n\tthis.paintBounds = mxRectangle.fromRectangle(this.cellBounds);\n\t\n\tif (this.shape != null && this.shape.isPaintBoundsInverted())\n\t{\n\t\tthis.paintBounds.rotate90();\n\t}\n};\n\n/**\n * Destructor: setState\n * \n * Copies all fields from the given state to this state.\n */\nmxCellState.prototype.setState = function(state)\n{\n\tthis.view = state.view;\n\tthis.cell = state.cell;\n\tthis.style = state.style;\n\tthis.absolutePoints = state.absolutePoints;\n\tthis.origin = state.origin;\n\tthis.absoluteOffset = state.absoluteOffset;\n\tthis.boundingBox = state.boundingBox;\n\tthis.terminalDistance = state.terminalDistance;\n\tthis.segments = state.segments;\n\tthis.length = state.length;\n\tthis.x = state.x;\n\tthis.y = state.y;\n\tthis.width = state.width;\n\tthis.height = state.height;\n\tthis.unscaledWidth = state.unscaledWidth;\n\tthis.unscaledHeight = state.unscaledHeight;\n};\n\n/**\n * Function: clone\n *\n * Returns a clone of this <mxPoint>.\n */\nmxCellState.prototype.clone = function()\n{\n \tvar clone = new mxCellState(this.view, this.cell, this.style);\n\n\t// Clones the absolute points\n\tif (this.absolutePoints != null)\n\t{\n\t\tclone.absolutePoints = [];\n\t\t\n\t\tfor (var i = 0; i < this.absolutePoints.length; i++)\n\t\t{\n\t\t\tclone.absolutePoints[i] = this.absolutePoints[i].clone();\n\t\t}\n\t}\n\n\tif (this.origin != null)\n\t{\n\t\tclone.origin = this.origin.clone();\n\t}\n\n\tif (this.absoluteOffset != null)\n\t{\n\t\tclone.absoluteOffset = this.absoluteOffset.clone();\n\t}\n\n\tif (this.boundingBox != null)\n\t{\n\t\tclone.boundingBox = this.boundingBox.clone();\n\t}\n\n\tclone.terminalDistance = this.terminalDistance;\n\tclone.segments = this.segments;\n\tclone.length = this.length;\n\tclone.x = this.x;\n\tclone.y = this.y;\n\tclone.width = this.width;\n\tclone.height = this.height;\n\tclone.unscaledWidth = this.unscaledWidth;\n\tclone.unscaledHeight = this.unscaledHeight;\n\t\n\treturn clone;\n};\n\n/**\n * Destructor: destroy\n * \n * Destroys the state and all associated resources.\n */\nmxCellState.prototype.destroy = function()\n{\n\tthis.view.graph.cellRenderer.destroy(this);\n};\n\n__mxOutput.mxCellState = typeof mxCellState !== 'undefined' ? mxCellState : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphSelectionModel\n *\n * Implements the selection model for a graph. Here is a listener that handles\n * all removed selection cells.\n * \n * (code)\n * graph.getSelectionModel().addListener(mxEvent.CHANGE, function(sender, evt)\n * {\n *   var cells = evt.getProperty('added');\n *   \n *   for (var i = 0; i < cells.length; i++)\n *   {\n *     // Handle cells[i]...\n *   }\n * });\n * (end)\n * \n * Event: mxEvent.UNDO\n * \n * Fires after the selection was changed in <changeSelection>. The\n * <code>edit</code> property contains the <mxUndoableEdit> which contains the\n * <mxSelectionChange>.\n * \n * Event: mxEvent.CHANGE\n * \n * Fires after the selection changes by executing an <mxSelectionChange>. The\n * <code>added</code> and <code>removed</code> properties contain arrays of\n * cells that have been added to or removed from the selection, respectively.\n * The names are inverted due to historic reasons. This cannot be changed.\n * \n * Constructor: mxGraphSelectionModel\n *\n * Constructs a new graph selection model for the given <mxGraph>.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxGraphSelectionModel(graph)\n{\n\tthis.graph = graph;\n\tthis.cells = [];\n};\n\n/**\n * Extends mxEventSource.\n */\nmxGraphSelectionModel.prototype = new mxEventSource();\nmxGraphSelectionModel.prototype.constructor = mxGraphSelectionModel;\n\n/**\n * Variable: doneResource\n * \n * Specifies the resource key for the status message after a long operation.\n * If the resource for this key does not exist then the value is used as\n * the status message. Default is 'done'.\n */\nmxGraphSelectionModel.prototype.doneResource = (mxClient.language != 'none') ? 'done' : '';\n\n/**\n * Variable: updatingSelectionResource\n *\n * Specifies the resource key for the status message while the selection is\n * being updated. If the resource for this key does not exist then the\n * value is used as the status message. Default is 'updatingSelection'.\n */\nmxGraphSelectionModel.prototype.updatingSelectionResource = (mxClient.language != 'none') ? 'updatingSelection' : '';\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxGraphSelectionModel.prototype.graph = null;\n\n/**\n * Variable: singleSelection\n *\n * Specifies if only one selected item at a time is allowed.\n * Default is false.\n */\nmxGraphSelectionModel.prototype.singleSelection = false;\n\n/**\n * Function: isSingleSelection\n *\n * Returns <singleSelection> as a boolean.\n */\nmxGraphSelectionModel.prototype.isSingleSelection = function()\n{\n\treturn this.singleSelection;\n};\n\n/**\n * Function: setSingleSelection\n *\n * Sets the <singleSelection> flag.\n * \n * Parameters:\n * \n * singleSelection - Boolean that specifies the new value for\n * <singleSelection>.\n */\nmxGraphSelectionModel.prototype.setSingleSelection = function(singleSelection)\n{\n\tthis.singleSelection = singleSelection;\n};\n\n/**\n * Function: isSelected\n *\n * Returns true if the given <mxCell> is selected.\n */\nmxGraphSelectionModel.prototype.isSelected = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\treturn mxUtils.indexOf(this.cells, cell) >= 0;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: isEmpty\n *\n * Returns true if no cells are currently selected.\n */\nmxGraphSelectionModel.prototype.isEmpty = function()\n{\n\treturn this.cells.length == 0;\n};\n\n/**\n * Function: clear\n *\n * Clears the selection and fires a <change> event if the selection was not\n * empty.\n */\nmxGraphSelectionModel.prototype.clear = function()\n{\n\tthis.changeSelection(null, this.cells);\n};\n\n/**\n * Function: setCell\n *\n * Selects the specified <mxCell> using <setCells>.\n * \n * Parameters:\n * \n * cell - <mxCell> to be selected.\n */\nmxGraphSelectionModel.prototype.setCell = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tthis.setCells([cell]);\n\t}\n};\n\n/**\n * Function: setCells\n *\n * Selects the given array of <mxCells> and fires a <change> event.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be selected.\n */\nmxGraphSelectionModel.prototype.setCells = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tif (this.singleSelection)\n\t\t{\n\t\t\tcells = [this.getFirstSelectableCell(cells)];\n\t\t}\n\t\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.graph.isCellSelectable(cells[i]))\n\t\t\t{\n\t\t\t\ttmp.push(cells[i]);\n\t\t\t}\t\n\t\t}\n\n\t\tthis.changeSelection(tmp, this.cells);\n\t}\n};\n\n/**\n * Function: getFirstSelectableCell\n *\n * Returns the first selectable cell in the given array of cells.\n */\nmxGraphSelectionModel.prototype.getFirstSelectableCell = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.graph.isCellSelectable(cells[i]))\n\t\t\t{\n\t\t\t\treturn cells[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: addCell\n * \n * Adds the given <mxCell> to the selection and fires a <select> event.\n * \n * Parameters:\n * \n * cell - <mxCell> to add to the selection.\n */\nmxGraphSelectionModel.prototype.addCell = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tthis.addCells([cell]);\n\t}\n};\n\n/**\n * Function: addCells\n * \n * Adds the given array of <mxCells> to the selection and fires a <select>\n * event.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to add to the selection.\n */\nmxGraphSelectionModel.prototype.addCells = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar remove = null;\n\t\t\n\t\tif (this.singleSelection)\n\t\t{\n\t\t\tremove = this.cells;\n\t\t\tcells = [this.getFirstSelectableCell(cells)];\n\t\t}\n\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (!this.isSelected(cells[i]) &&\n\t\t\t\tthis.graph.isCellSelectable(cells[i]))\n\t\t\t{\n\t\t\t\ttmp.push(cells[i]);\n\t\t\t}\t\n\t\t}\n\n\t\tthis.changeSelection(tmp, remove);\n\t}\n};\n\n/**\n * Function: removeCell\n *\n * Removes the specified <mxCell> from the selection and fires a <select>\n * event for the remaining cells.\n * \n * Parameters:\n * \n * cell - <mxCell> to remove from the selection.\n */\nmxGraphSelectionModel.prototype.removeCell = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tthis.removeCells([cell]);\n\t}\n};\n\n/**\n * Function: removeCells\n */\nmxGraphSelectionModel.prototype.removeCells = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.isSelected(cells[i]))\n\t\t\t{\n\t\t\t\ttmp.push(cells[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.changeSelection(null, tmp);\t\n\t}\n};\n\n/**\n * Function: changeSelection\n *\n * Adds/removes the specified arrays of <mxCell> to/from the selection.\n * \n * Parameters:\n * \n * added - Array of <mxCell> to add to the selection.\n * remove - Array of <mxCell> to remove from the selection.\n */\nmxGraphSelectionModel.prototype.changeSelection = function(added, removed)\n{\n\tif ((added != null &&\n\t\tadded.length > 0 &&\n\t\tadded[0] != null) ||\n\t\t(removed != null &&\n\t\tremoved.length > 0 &&\n\t\tremoved[0] != null))\n\t{\n\t\tvar change = new mxSelectionChange(this, added, removed);\n\t\tchange.execute();\n\t\tvar edit = new mxUndoableEdit(this, false);\n\t\tedit.add(change);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n\t}\n};\n\n/**\n * Function: cellAdded\n *\n * Inner callback to add the specified <mxCell> to the selection. No event\n * is fired in this implementation.\n * \n * Paramters:\n * \n * cell - <mxCell> to add to the selection.\n */\nmxGraphSelectionModel.prototype.cellAdded = function(cell)\n{\n\tif (cell != null &&\n\t\t!this.isSelected(cell))\n\t{\n\t\tthis.cells.push(cell);\n\t}\n};\n\n/**\n * Function: cellRemoved\n *\n * Inner callback to remove the specified <mxCell> from the selection. No\n * event is fired in this implementation.\n * \n * Parameters:\n * \n * cell - <mxCell> to remove from the selection.\n */\nmxGraphSelectionModel.prototype.cellRemoved = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tvar index = mxUtils.indexOf(this.cells, cell);\n\t\t\n\t\tif (index >= 0)\n\t\t{\n\t\t\tthis.cells.splice(index, 1);\n\t\t}\n\t}\n};\n\n/**\n * Class: mxSelectionChange\n *\n * Action to change the current root in a view.\n *\n * Constructor: mxCurrentRootChange\n *\n * Constructs a change of the current root in the given view.\n */\nfunction mxSelectionChange(selectionModel, added, removed)\n{\n\tthis.selectionModel = selectionModel;\n\tthis.added = (added != null) ? added.slice() : null;\n\tthis.removed = (removed != null) ? removed.slice() : null;\n};\n\n/**\n * Function: execute\n *\n * Changes the current root of the view.\n */\nmxSelectionChange.prototype.execute = function()\n{\n\tvar t0 = mxLog.enter('mxSelectionChange.execute');\n\twindow.status = mxResources.get(\n\t\tthis.selectionModel.updatingSelectionResource) ||\n\t\tthis.selectionModel.updatingSelectionResource;\n\n\tif (this.removed != null)\n\t{\n\t\tfor (var i = 0; i < this.removed.length; i++)\n\t\t{\n\t\t\tthis.selectionModel.cellRemoved(this.removed[i]);\n\t\t}\n\t}\n\n\tif (this.added != null)\n\t{\n\t\tfor (var i = 0; i < this.added.length; i++)\n\t\t{\n\t\t\tthis.selectionModel.cellAdded(this.added[i]);\n\t\t}\n\t}\n\t\n\tvar tmp = this.added;\n\tthis.added = this.removed;\n\tthis.removed = tmp;\n\n\twindow.status = mxResources.get(this.selectionModel.doneResource) ||\n\t\tthis.selectionModel.doneResource;\n\tmxLog.leave('mxSelectionChange.execute', t0);\n\t\n\tthis.selectionModel.fireEvent(new mxEventObject(mxEvent.CHANGE,\n\t\t\t'added', this.added, 'removed', this.removed));\n};\n\n__mxOutput.mxGraphSelectionModel = typeof mxGraphSelectionModel !== 'undefined' ? mxGraphSelectionModel : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellEditor\n *\n * In-place editor for the graph. To control this editor, use\n * <mxGraph.invokesStopCellEditing>, <mxGraph.enterStopsCellEditing> and\n * <mxGraph.escapeEnabled>. If <mxGraph.enterStopsCellEditing> is true then\n * ctrl-enter or shift-enter can be used to create a linefeed. The F2 and\n * escape keys can always be used to stop editing.\n * \n * To customize the location of the textbox in the graph, override\n * <getEditorBounds> as follows:\n * \n * (code)\n * graph.cellEditor.getEditorBounds = function(state)\n * {\n *   var result = mxCellEditor.prototype.getEditorBounds.apply(this, arguments);\n *   \n *   if (this.graph.getModel().isEdge(state.cell))\n *   {\n *     result.x = state.getCenterX() - result.width / 2;\n *     result.y = state.getCenterY() - result.height / 2;\n *   }\n *   \n *   return result;\n * };\n * (end)\n * \n * Note that this hook is only called if <autoSize> is false. If <autoSize> is true,\n * then <mxShape.getLabelBounds> is used to compute the current bounds of the textbox.\n * \n * The textarea uses the mxCellEditor CSS class. You can modify this class in\n * your custom CSS. Note: You should modify the CSS after loading the client\n * in the page.\n *\n * Example:\n * \n * To only allow numeric input in the in-place editor, use the following code.\n *\n * (code)\n * var text = graph.cellEditor.textarea;\n * \n * mxEvent.addListener(text, 'keydown', function (evt)\n * {\n *   if (!(evt.keyCode >= 48 && evt.keyCode <= 57) &&\n *       !(evt.keyCode >= 96 && evt.keyCode <= 105))\n *   {\n *     mxEvent.consume(evt);\n *   }\n * }); \n * (end)\n * \n * Placeholder:\n * \n * To implement a placeholder for cells without a label, use the\n * <emptyLabelText> variable.\n * \n * Resize in Chrome:\n * \n * Resize of the textarea is disabled by default. If you want to enable\n * this feature extend <init> and set this.textarea.style.resize = ''.\n * \n * To start editing on a key press event, the container of the graph\n * should have focus or a focusable parent should be used to add the\n * key press handler as follows.\n * \n * (code)\n * mxEvent.addListener(graph.container, 'keypress', mxUtils.bind(this, function(evt)\n * {\n *   if (!graph.isEditing() && !graph.isSelectionEmpty() && evt.which !== 0 &&\n *       !mxEvent.isAltDown(evt) && !mxEvent.isControlDown(evt) && !mxEvent.isMetaDown(evt))\n *   {\n *     graph.startEditing();\n *     \n *     if (mxClient.IS_FF)\n *     {\n *       graph.cellEditor.textarea.value = String.fromCharCode(evt.which);\n *     }\n *   }\n * }));\n * (end)\n * \n * To allow focus for a DIV, and hence to receive key press events, some browsers\n * require it to have a valid tabindex attribute. In this case the following\n * code may be used to keep the container focused.\n * \n * (code)\n * var graphFireMouseEvent = graph.fireMouseEvent;\n * graph.fireMouseEvent = function(evtName, me, sender)\n * {\n *   if (evtName == mxEvent.MOUSE_DOWN)\n *   {\n *     this.container.focus();\n *   }\n *   \n *   graphFireMouseEvent.apply(this, arguments);\n * };\n * (end)\n *\n * Constructor: mxCellEditor\n *\n * Constructs a new in-place editor for the specified graph.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxCellEditor(graph)\n{\n\tthis.graph = graph;\n\t\n\t// Stops editing after zoom changes\n\tthis.zoomHandler = mxUtils.bind(this, function()\n\t{\n\t\tif (this.graph.isEditing())\n\t\t{\n\t\t\tthis.resize();\n\t\t}\n\t});\n\t\n\tthis.graph.view.addListener(mxEvent.SCALE, this.zoomHandler);\n\tthis.graph.view.addListener(mxEvent.SCALE_AND_TRANSLATE, this.zoomHandler);\n\t\n\t// Adds handling of deleted cells while editing\n\tthis.changeHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tif (this.editingCell != null && this.graph.getView().getState(this.editingCell) == null)\n\t\t{\n\t\t\tthis.stopEditing(true);\n\t\t}\n\t});\n\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.changeHandler);\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellEditor.prototype.graph = null;\n\n/**\n * Variable: textarea\n *\n * Holds the DIV that is used for text editing. Note that this may be null before the first\n * edit. Instantiated in <init>.\n */\nmxCellEditor.prototype.textarea = null;\n\n/**\n * Variable: editingCell\n * \n * Reference to the <mxCell> that is currently being edited.\n */\nmxCellEditor.prototype.editingCell = null;\n\n/**\n * Variable: trigger\n * \n * Reference to the event that was used to start editing.\n */\nmxCellEditor.prototype.trigger = null;\n\n/**\n * Variable: modified\n * \n * Specifies if the label has been modified.\n */\nmxCellEditor.prototype.modified = false;\n\n/**\n * Variable: autoSize\n * \n * Specifies if the textarea should be resized while the text is being edited.\n * Default is true.\n */\nmxCellEditor.prototype.autoSize = true;\n\n/**\n * Variable: selectText\n * \n * Specifies if the text should be selected when editing starts. Default is\n * true.\n */\nmxCellEditor.prototype.selectText = true;\n\n/**\n * Variable: emptyLabelText\n * \n * Text to be displayed for empty labels. Default is '' or '<br>' in Firefox as\n * a workaround for the missing cursor bug for empty content editable. This can\n * be set to eg. \"[Type Here]\" to easier visualize editing of empty labels. The\n * value is only displayed before the first keystroke and is never used as the\n * actual editing value.\n */\nmxCellEditor.prototype.emptyLabelText = (mxClient.IS_FF) ? '<br>' : '';\n\n/**\n * Variable: escapeCancelsEditing\n * \n * If true, pressing the escape key will stop editing and not accept the new\n * value. Change this to false to accept the new value on escape, and cancel\n * editing on Shift+Escape instead. Default is true.\n */\nmxCellEditor.prototype.escapeCancelsEditing = true;\n\n/**\n * Variable: textNode\n * \n * Reference to the label DOM node that has been hidden.\n */\nmxCellEditor.prototype.textNode = '';\n\n/**\n * Variable: zIndex\n * \n * Specifies the zIndex for the textarea. Default is 5.\n */\nmxCellEditor.prototype.zIndex = 5;\n\n/**\n * Variable: minResize\n * \n * Defines the minimum width and height to be used in <resize>. Default is 0x20px.\n */\nmxCellEditor.prototype.minResize = new mxRectangle(0, 20);\n\n/**\n * Variable: wordWrapPadding\n * \n * Correction factor for word wrapping width. Default is 2 in quirks, 0 in IE\n * 11 and 1 in all other browsers and modes.\n */\nmxCellEditor.prototype.wordWrapPadding = (mxClient.IS_QUIRKS) ? 2 : (!mxClient.IS_IE11) ? 1 : 0;\n\n/**\n * Variable: blurEnabled\n *\n * If <focusLost> should be called if <textarea> loses the focus. Default is false.\n */\nmxCellEditor.prototype.blurEnabled = false;\n\n/**\n * Variable: initialValue\n * \n * Holds the initial editing value to check if the current value was modified.\n */\nmxCellEditor.prototype.initialValue = null;\n\n/**\n * Variable: align\n * \n * Holds the current temporary horizontal alignment for the cell style. If this\n * is modified then the current text alignment is changed and the cell style is\n * updated when the value is applied.\n */\nmxCellEditor.prototype.align = null;\n\n/**\n * Function: init\n *\n * Creates the <textarea> and installs the event listeners. The key handler\n * updates the <modified> state.\n */\nmxCellEditor.prototype.init = function ()\n{\n\tthis.textarea = document.createElement('div');\n\tthis.textarea.className = 'mxCellEditor mxPlainTextEditor';\n\tthis.textarea.contentEditable = true;\n\t\n\t// Workaround for selection outside of DIV if height is 0\n\tif (mxClient.IS_GC)\n\t{\n\t\tthis.textarea.style.minHeight = '1em';\n\t}\n\n\tthis.textarea.style.position = ((this.isLegacyEditor())) ? 'absolute' : 'relative';\n\tthis.installListeners(this.textarea);\n};\n\n/**\n * Function: applyValue\n * \n * Called in <stopEditing> if cancel is false to invoke <mxGraph.labelChanged>.\n */\nmxCellEditor.prototype.applyValue = function(state, value)\n{\n\tthis.graph.labelChanged(state.cell, value, this.trigger);\n};\n\n/**\n * Function: setAlign\n * \n * Sets the temporary horizontal alignment for the current editing session.\n */\nmxCellEditor.prototype.setAlign = function (align)\n{\n\tif (this.textarea != null)\n\t{\n\t\tthis.textarea.style.textAlign = align;\n\t}\n\t\n\tthis.align = align;\n\tthis.resize();\n};\n\n/**\n * Function: getInitialValue\n * \n * Gets the initial editing value for the given cell.\n */\nmxCellEditor.prototype.getInitialValue = function(state, trigger)\n{\n\tvar result = mxUtils.htmlEntities(this.graph.getEditingValue(state.cell, trigger), false);\n\t\n    // Workaround for trailing line breaks being ignored in the editor\n\tif (!mxClient.IS_QUIRKS && document.documentMode != 8 && document.documentMode != 9 &&\n\t\tdocument.documentMode != 10)\n\t{\n\t\tresult = mxUtils.replaceTrailingNewlines(result, '<div><br></div>');\n\t}\n    \n    return result.replace(/\\n/g, '<br>');\n};\n\n/**\n * Function: getCurrentValue\n * \n * Returns the current editing value.\n */\nmxCellEditor.prototype.getCurrentValue = function(state)\n{\n\treturn mxUtils.extractTextWithWhitespace(this.textarea.childNodes);\n};\n\n/**\n * Function: isCancelEditingKeyEvent\n * \n * Returns true if <escapeCancelsEditing> is true and shift, control and meta\n * are not pressed.\n */\nmxCellEditor.prototype.isCancelEditingKeyEvent = function(evt)\n{\n\treturn this.escapeCancelsEditing || mxEvent.isShiftDown(evt) || mxEvent.isControlDown(evt) || mxEvent.isMetaDown(evt);\n};\n\n/**\n * Function: installListeners\n * \n * Installs listeners for focus, change and standard key event handling.\n */\nmxCellEditor.prototype.installListeners = function(elt)\n{\n\t// Applies value if text is dragged\n\t// LATER: Gesture mouse events ignored for starting move\n\tmxEvent.addListener(elt, 'dragstart', mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.graph.stopEditing(false);\n\t\tmxEvent.consume(evt);\n\t}));\n\n\t// Applies value if focus is lost\n\tmxEvent.addListener(elt, 'blur', mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.blurEnabled)\n\t\t{\n\t\t\tthis.focusLost(evt);\n\t\t}\n\t}));\n\n\t// Updates modified state and handles placeholder text\n\tmxEvent.addListener(elt, 'keydown', mxUtils.bind(this, function(evt)\n\t{\n\t\tif (!mxEvent.isConsumed(evt))\n\t\t{\n\t\t\tif (this.isStopEditingEvent(evt))\n\t\t\t{\n\t\t\t\tthis.graph.stopEditing(false);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}\n\t\t\telse if (evt.keyCode == 27 /* Escape */)\n\t\t\t{\n\t\t\t\tthis.graph.stopEditing(this.isCancelEditingKeyEvent(evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}\n\t\t}\n\t}));\n\n\t// Keypress only fires if printable key was pressed and handles removing the empty placeholder\n\tvar keypressHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.editingCell != null)\n\t\t{\n\t\t\t// Clears the initial empty label on the first keystroke\n\t\t\t// and workaround for FF which fires keypress for delete and backspace\n\t\t\tif (this.clearOnChange && elt.innerHTML == this.getEmptyLabelText() &&\n\t\t\t\t(!mxClient.IS_FF || (evt.keyCode != 8 /* Backspace */ && evt.keyCode != 46 /* Delete */)))\n\t\t\t{\n\t\t\t\tthis.clearOnChange = false;\n\t\t\t\telt.innerHTML = '';\n\t\t\t}\n\t\t}\n\t});\n\n\tmxEvent.addListener(elt, 'keypress', keypressHandler);\n\tmxEvent.addListener(elt, 'paste', keypressHandler);\n\t\n\t// Handler for updating the empty label text value after a change\n\tvar keyupHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.editingCell != null)\n\t\t{\n\t\t\t// Uses an optional text value for sempty labels which is cleared\n\t\t\t// when the first keystroke appears. This makes it easier to see\n\t\t\t// that a label is being edited even if the label is empty.\n\t\t\t// In Safari and FF, an empty text is represented by <BR> which isn't enough to force a valid size\n\t\t\tif (this.textarea.innerHTML.length == 0 || this.textarea.innerHTML == '<br>')\n\t\t\t{\n\t\t\t\tthis.textarea.innerHTML = this.getEmptyLabelText();\n\t\t\t\tthis.clearOnChange = this.textarea.innerHTML.length > 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.clearOnChange = false;\n\t\t\t}\n\t\t}\n\t});\n\n\tmxEvent.addListener(elt, (!mxClient.IS_IE11 && !mxClient.IS_IE) ? 'input' : 'keyup', keyupHandler);\n\tmxEvent.addListener(elt, 'cut', keyupHandler);\n\tmxEvent.addListener(elt, 'paste', keyupHandler);\n\n\t// Adds automatic resizing of the textbox while typing using input, keyup and/or DOM change events\n\tvar evtName = (!mxClient.IS_IE11 && !mxClient.IS_IE) ? 'input' : 'keydown';\n\t\n\tvar resizeHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.editingCell != null && this.autoSize && !mxEvent.isConsumed(evt))\n\t\t{\n\t\t\t// Asynchronous is needed for keydown and shows better results for input events overall\n\t\t\t// (ie non-blocking and cases where the offsetWidth/-Height was wrong at this time)\n\t\t\tif (this.resizeThread != null)\n\t\t\t{\n\t\t\t\twindow.clearTimeout(this.resizeThread);\n\t\t\t}\n\t\t\t\n\t\t\tthis.resizeThread = window.setTimeout(mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.resizeThread = null;\n\t\t\t\tthis.resize();\n\t\t\t}), 0);\n\t\t}\n\t});\n\t\n\tmxEvent.addListener(elt, evtName, resizeHandler);\n\tmxEvent.addListener(window, 'resize', resizeHandler);\n\n\tif (document.documentMode >= 9)\n\t{\n\t\tmxEvent.addListener(elt, 'DOMNodeRemoved', resizeHandler);\n\t\tmxEvent.addListener(elt, 'DOMNodeInserted', resizeHandler);\n\t}\n\telse\n\t{\n\t\tmxEvent.addListener(elt, 'cut', resizeHandler);\n\t\tmxEvent.addListener(elt, 'paste', resizeHandler);\n\t}\n};\n\n/**\n * Function: isStopEditingEvent\n * \n * Returns true if the given keydown event should stop cell editing. This\n * returns true if F2 is pressed of if <mxGraph.enterStopsCellEditing> is true\n * and enter is pressed without control or shift.\n */\nmxCellEditor.prototype.isStopEditingEvent = function(evt)\n{\n\treturn evt.keyCode == 113 /* F2 */ || (this.graph.isEnterStopsCellEditing() &&\n\t\tevt.keyCode == 13 /* Enter */ && !mxEvent.isControlDown(evt) &&\n\t\t!mxEvent.isShiftDown(evt));\n};\n\n/**\n * Function: isEventSource\n * \n * Returns true if this editor is the source for the given native event.\n */\nmxCellEditor.prototype.isEventSource = function(evt)\n{\n\treturn mxEvent.getSource(evt) == this.textarea;\n};\n\n/**\n * Function: resize\n * \n * Returns <modified>.\n */\nmxCellEditor.prototype.resize = function()\n{\n\tvar state = this.graph.getView().getState(this.editingCell);\n\t\n\tif (state == null)\n\t{\n\t\tthis.stopEditing(true);\n\t}\n\telse if (this.textarea != null)\n\t{\n\t\tvar isEdge = this.graph.getModel().isEdge(state.cell);\n \t\tvar scale = this.graph.getView().scale;\n \t\tvar m = null;\n\t\t\n\t\tif (!this.autoSize || (state.style[mxConstants.STYLE_OVERFLOW] == 'fill'))\n\t\t{\n\t\t\t// Specifies the bounds of the editor box\n\t\t\tthis.bounds = this.getEditorBounds(state);\n\t\t\tthis.textarea.style.width = Math.round(this.bounds.width / scale) + 'px';\n\t\t\tthis.textarea.style.height = Math.round(this.bounds.height / scale) + 'px';\n\t\t\t\n\t\t\t// FIXME: Offset when scaled\n\t\t\tif (document.documentMode == 8 || mxClient.IS_QUIRKS)\n\t\t\t{\n\t\t\t\tthis.textarea.style.left = Math.round(this.bounds.x) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.round(this.bounds.y) + 'px';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.round(this.bounds.x + 1)) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.round(this.bounds.y + 1)) + 'px';\n\t\t\t}\n\t\t\t\n\t\t\t// Installs native word wrapping and avoids word wrap for empty label placeholder\n\t\t\tif (this.graph.isWrapping(state.cell) && (this.bounds.width >= 2 || this.bounds.height >= 2) &&\n\t\t\t\tthis.textarea.innerHTML != this.getEmptyLabelText())\n\t\t\t{\n\t\t\t\tthis.textarea.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tthis.textarea.style.whiteSpace = 'normal';\n\t\t\t\t\n\t\t\t\tif (state.style[mxConstants.STYLE_OVERFLOW] != 'fill')\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.width = Math.round(this.bounds.width / scale) + this.wordWrapPadding + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.textarea.style.whiteSpace = 'nowrap';\n\t\t\t\t\n\t\t\t\tif (state.style[mxConstants.STYLE_OVERFLOW] != 'fill')\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.width = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t \t{\n\t \t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\tm = (state.text != null && this.align == null) ? state.text.margin : null;\n\t\t\t\n\t\t\tif (m == null)\n\t\t\t{\n\t\t\t\tm = mxUtils.getAlignmentAsPoint(this.align || mxUtils.getValue(state.style, mxConstants.STYLE_ALIGN, mxConstants.ALIGN_CENTER),\n\t\t\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_ALIGN, mxConstants.ALIGN_MIDDLE));\n\t\t\t}\n\t\t\t\n\t \t\tif (isEdge)\n\t\t\t{\n\t\t\t\tthis.bounds = new mxRectangle(state.absoluteOffset.x, state.absoluteOffset.y, 0, 0);\n\t\t\t\t\n\t\t\t\tif (lw != null)\n\t\t\t \t{\n\t\t\t\t\tvar tmp = (parseFloat(lw) + 2) * scale;\n\t\t\t\t\tthis.bounds.width = tmp;\n\t\t\t\t\tthis.bounds.x += m.x * tmp;\n\t\t\t \t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar bds = mxRectangle.fromRectangle(state);\n\t\t\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\t\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\n\t\t\t\tbds = (state.shape != null && hpos == mxConstants.ALIGN_CENTER && vpos == mxConstants.ALIGN_MIDDLE) ? state.shape.getLabelBounds(bds) : bds;\n\t\t\t \t\n\t\t\t \tif (lw != null)\n\t\t\t \t{\n\t\t\t \t\tbds.width = parseFloat(lw) * scale;\n\t\t\t \t}\n\t\t\t \t\n\t\t\t \tif (!state.view.graph.cellRenderer.legacySpacing || state.style[mxConstants.STYLE_OVERFLOW] != 'width')\n\t\t\t \t{\n\t\t\t\t\tvar spacing = parseInt(state.style[mxConstants.STYLE_SPACING] || 2) * scale;\n\t\t\t\t\tvar spacingTop = (parseInt(state.style[mxConstants.STYLE_SPACING_TOP] || 0) + mxText.prototype.baseSpacingTop) * scale + spacing;\n\t\t\t\t\tvar spacingRight = (parseInt(state.style[mxConstants.STYLE_SPACING_RIGHT] || 0) + mxText.prototype.baseSpacingRight) * scale + spacing;\n\t\t\t\t\tvar spacingBottom = (parseInt(state.style[mxConstants.STYLE_SPACING_BOTTOM] || 0) + mxText.prototype.baseSpacingBottom) * scale + spacing;\n\t\t\t\t\tvar spacingLeft = (parseInt(state.style[mxConstants.STYLE_SPACING_LEFT] || 0) + mxText.prototype.baseSpacingLeft) * scale + spacing;\n\t\t\t\t\t\n\t\t\t\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\t\t\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\n\t\t\t\t\tbds = new mxRectangle(bds.x + spacingLeft, bds.y + spacingTop,\n\t\t\t\t\t\tbds.width - ((hpos == mxConstants.ALIGN_CENTER && lw == null) ? (spacingLeft + spacingRight) : 0),\n\t\t\t\t\t\tbds.height - ((vpos == mxConstants.ALIGN_MIDDLE) ? (spacingTop + spacingBottom) : 0));\n\t\t\t \t}\n\n\t\t\t\tthis.bounds = new mxRectangle(bds.x + state.absoluteOffset.x, bds.y + state.absoluteOffset.y, bds.width, bds.height);\n\t\t\t}\n\n\t\t\t// Needed for word wrap inside text blocks with oversize lines to match the final result where\n\t \t\t// the width of the longest line is used as the reference for text alignment in the cell\n\t \t\t// TODO: Fix word wrapping preview for edge labels in helloworld.html\n\t\t\tif (this.graph.isWrapping(state.cell) && (this.bounds.width >= 2 || this.bounds.height >= 2) &&\n\t\t\t\tthis.textarea.innerHTML != this.getEmptyLabelText())\n\t\t\t{\n\t\t\t\tthis.textarea.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tthis.textarea.style.whiteSpace = 'normal';\n\t\t\t\t\n\t\t \t\t// Forces automatic reflow if text is removed from an oversize label and normal word wrap\n\t\t\t\tvar tmp = Math.round(this.bounds.width / ((document.documentMode == 8) ? scale : scale)) + this.wordWrapPadding;\n\n\t\t\t\tif (this.textarea.style.position != 'relative')\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.width = tmp + 'px';\n\t\t\t\t\t\n\t\t\t\t\tif (this.textarea.scrollWidth > tmp)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.textarea.style.width = this.textarea.scrollWidth + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.maxWidth = tmp + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// KNOWN: Trailing cursor in IE9 quirks mode is not visible\n\t\t\t\tthis.textarea.style.whiteSpace = 'nowrap';\n\t\t\t\tthis.textarea.style.width = '';\n\t\t\t}\n\t\t\t\n\t\t\t// LATER: Keep in visible area, add fine tuning for pixel precision\n\t\t\t// Workaround for wrong measuring in IE8 standards\n\t\t\tif (document.documentMode == 8)\n\t\t\t{\n\t\t\t\tthis.textarea.style.zoom = '1';\n\t\t\t\tthis.textarea.style.height = 'auto';\n\t\t\t}\n\t\t\t\n\t\t\tvar ow = this.textarea.scrollWidth;\n\t\t\tvar oh = this.textarea.scrollHeight;\n\t\t\t\n\t\t\t// TODO: Update CSS width and height if smaller than minResize or remove minResize\n\t\t\t//if (this.minResize != null)\n\t\t\t//{\n\t\t\t//\tow = Math.max(ow, this.minResize.width);\n\t\t\t//\toh = Math.max(oh, this.minResize.height);\n\t\t\t//}\n\t\t\t\n\t\t\t// LATER: Keep in visible area, add fine tuning for pixel precision\n\t\t\tif (document.documentMode == 8)\n\t\t\t{\n\t\t\t\t// LATER: Scaled wrapping and position is wrong in IE8\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.ceil((this.bounds.x - m.x * (this.bounds.width - (ow + 1) * scale) + ow * (scale - 1) * 0 + (m.x + 0.5) * 2) / scale)) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.ceil((this.bounds.y - m.y * (this.bounds.height - (oh + 0.5) * scale) + oh * (scale - 1) * 0 + Math.abs(m.y + 0.5) * 1) / scale)) + 'px';\n\t\t\t\t// Workaround for wrong event handling width and height\n\t\t\t\tthis.textarea.style.width = Math.round(ow * scale) + 'px';\n\t\t\t\tthis.textarea.style.height = Math.round(oh * scale) + 'px';\n\t\t\t}\n\t\t\telse if (mxClient.IS_QUIRKS)\n\t\t\t{\t\t\t\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.ceil(this.bounds.x - m.x * (this.bounds.width - (ow + 1) * scale) + ow * (scale - 1) * 0 + (m.x + 0.5) * 2)) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.ceil(this.bounds.y - m.y * (this.bounds.height - (oh + 0.5) * scale) + oh * (scale - 1) * 0 + Math.abs(m.y + 0.5) * 1)) + 'px';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.round(this.bounds.x - m.x * (this.bounds.width - 2)) + 1) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.round(this.bounds.y - m.y * (this.bounds.height - 4) + ((m.y == -1) ? 3 : 0)) + 1) + 'px';\n\t\t\t}\n\t \t}\n\n\t\tif (mxClient.IS_VML)\n\t\t{\n\t\t\tthis.textarea.style.zoom = scale;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.setPrefixedStyle(this.textarea.style, 'transformOrigin', '0px 0px');\n\t\t\tmxUtils.setPrefixedStyle(this.textarea.style, 'transform',\n\t\t\t\t'scale(' + scale + ',' + scale + ')' + ((m == null) ? '' :\n\t\t\t\t' translate(' + (m.x * 100) + '%,' + (m.y * 100) + '%)'));\n\t\t}\n\t}\n};\n\n/**\n * Function: focusLost\n *\n * Called if the textarea has lost focus.\n */\nmxCellEditor.prototype.focusLost = function()\n{\n\tthis.stopEditing(!this.graph.isInvokesStopCellEditing());\n};\n\n/**\n * Function: getBackgroundColor\n * \n * Returns the background color for the in-place editor. This implementation\n * always returns null.\n */\nmxCellEditor.prototype.getBackgroundColor = function(state)\n{\n\treturn null;\n};\n\n/**\n * Function: isLegacyEditor\n * \n * Returns true if max-width is not supported or if the SVG root element in\n * in the graph does not have CSS position absolute. In these cases the text\n * editor must use CSS position absolute to avoid an offset but it will have\n * a less accurate line wrapping width during the text editing preview. This\n * implementation returns true for IE8- and quirks mode or if the CSS position\n * of the SVG element is not absolute.\n */\nmxCellEditor.prototype.isLegacyEditor = function()\n{\n\tif (mxClient.IS_VML)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\tvar absoluteRoot = false;\n\t\t\n\t\tif (mxClient.IS_SVG)\n\t\t{\n\t\t\tvar root = this.graph.view.getDrawPane().ownerSVGElement;\n\t\t\t\n\t\t\tif (root != null)\n\t\t\t{\n\t\t\t\tvar css = mxUtils.getCurrentStyle(root);\n\t\t\t\t\n\t\t\t\tif (css != null)\n\t\t\t\t{\t\t\t\t\n\t\t\t\t\tabsoluteRoot = css.position == 'absolute';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn !absoluteRoot;\n\t}\n};\n\n/**\n * Function: startEditing\n *\n * Starts the editor for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> to start editing.\n * trigger - Optional mouse event that triggered the editor.\n */\nmxCellEditor.prototype.startEditing = function(cell, trigger)\n{\n\tthis.stopEditing(true);\n\tthis.align = null;\n\t\n\t// Creates new textarea instance\n\tif (this.textarea == null)\n\t{\n\t\tthis.init();\n\t}\n\t\n\tif (this.graph.tooltipHandler != null)\n\t{\n\t\tthis.graph.tooltipHandler.hideTooltip();\n\t}\n\t\n\tvar state = this.graph.getView().getState(cell);\n\t\n\tif (state != null)\n\t{\n\t\t// Configures the style of the in-place editor\n\t\tvar scale = this.graph.getView().scale;\n\t\tvar size = mxUtils.getValue(state.style, mxConstants.STYLE_FONTSIZE, mxConstants.DEFAULT_FONTSIZE);\n\t\tvar family = mxUtils.getValue(state.style, mxConstants.STYLE_FONTFAMILY, mxConstants.DEFAULT_FONTFAMILY);\n\t\tvar color = mxUtils.getValue(state.style, mxConstants.STYLE_FONTCOLOR, 'black');\n\t\tvar align = mxUtils.getValue(state.style, mxConstants.STYLE_ALIGN, mxConstants.ALIGN_LEFT);\n\t\tvar bold = (mxUtils.getValue(state.style, mxConstants.STYLE_FONTSTYLE, 0) &\n\t\t\t\tmxConstants.FONT_BOLD) == mxConstants.FONT_BOLD;\n\t\tvar italic = (mxUtils.getValue(state.style, mxConstants.STYLE_FONTSTYLE, 0) &\n\t\t\t\tmxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC;\n\t\tvar txtDecor = [];\n\t\t\n\t\tif ((mxUtils.getValue(state.style, mxConstants.STYLE_FONTSTYLE, 0) &\n\t\t\t\tmxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t\t{\n\t\t\ttxtDecor.push('underline');\n\t\t}\n\t\t\n\t\tif ((mxUtils.getValue(state.style, mxConstants.STYLE_FONTSTYLE, 0) &\n\t\t\t\tmxConstants.FONT_STRIKETHROUGH) == mxConstants.FONT_STRIKETHROUGH)\n\t\t{\n\t\t\ttxtDecor.push('line-through');\n\t\t}\n\t\t\n\t\tthis.textarea.style.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? Math.round(size * mxConstants.LINE_HEIGHT) + 'px' : mxConstants.LINE_HEIGHT;\n\t\tthis.textarea.style.backgroundColor = this.getBackgroundColor(state);\n\t\tthis.textarea.style.textDecoration = txtDecor.join(' ');\n\t\tthis.textarea.style.fontWeight = (bold) ? 'bold' : 'normal';\n\t\tthis.textarea.style.fontStyle = (italic) ? 'italic' : '';\n\t\tthis.textarea.style.fontSize = Math.round(size) + 'px';\n\t\tthis.textarea.style.zIndex = this.zIndex;\n\t\tthis.textarea.style.fontFamily = family;\n\t\tthis.textarea.style.textAlign = align;\n\t\tthis.textarea.style.outline = 'none';\n\t\tthis.textarea.style.color = color;\n\t\t\n\t\tvar dir = this.textDirection = mxUtils.getValue(state.style, mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION);\n\t\t\n\t\tif (dir == mxConstants.TEXT_DIRECTION_AUTO)\n\t\t{\n\t\t\tif (state != null && state.text != null && state.text.dialect != mxConstants.DIALECT_STRICTHTML &&\n\t\t\t\t!mxUtils.isNode(state.text.value))\n\t\t\t{\n\t\t\t\tdir = state.text.getAutoDirection();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (dir == mxConstants.TEXT_DIRECTION_LTR || dir == mxConstants.TEXT_DIRECTION_RTL)\n\t\t{\n\t\t\tthis.textarea.setAttribute('dir', dir);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.textarea.removeAttribute('dir');\n\t\t}\n\n\t\t// Sets the initial editing value\n\t\tthis.textarea.innerHTML = this.getInitialValue(state, trigger) || '';\n\t\tthis.initialValue = this.textarea.innerHTML;\n\n\t\t// Uses an optional text value for empty labels which is cleared\n\t\t// when the first keystroke appears. This makes it easier to see\n\t\t// that a label is being edited even if the label is empty.\n\t\tif (this.textarea.innerHTML.length == 0 || this.textarea.innerHTML == '<br>')\n\t\t{\n\t\t\tthis.textarea.innerHTML = this.getEmptyLabelText();\n\t\t\tthis.clearOnChange = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.clearOnChange = this.textarea.innerHTML == this.getEmptyLabelText();\n\t\t}\n\n\t\tthis.graph.container.appendChild(this.textarea);\n\t\t\n\t\t// Update this after firing all potential events that could update the cleanOnChange flag\n\t\tthis.editingCell = cell;\n\t\tthis.trigger = trigger;\n\t\tthis.textNode = null;\n\n\t\tif (state.text != null && this.isHideLabel(state))\n\t\t{\n\t\t\tthis.textNode = state.text.node;\n\t\t\tthis.textNode.style.visibility = 'hidden';\n\t\t}\n\n\t\t// Workaround for initial offsetHeight not ready for heading in markup\n\t\tif (this.autoSize && (this.graph.model.isEdge(state.cell) || state.style[mxConstants.STYLE_OVERFLOW] != 'fill'))\n\t\t{\n\t\t\twindow.setTimeout(mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.resize();\n\t\t\t}), 0);\n\t\t}\n\t\t\n\t\tthis.resize();\n\t\t\n\t\t// Workaround for NS_ERROR_FAILURE in FF\n\t\ttry\n\t\t{\n\t\t\t// Prefers blinking cursor over no selected text if empty\n\t\t\tthis.textarea.focus();\n\t\t\t\n\t\t\tif (this.isSelectText() && this.textarea.innerHTML.length > 0 &&\n\t\t\t\t(this.textarea.innerHTML != this.getEmptyLabelText() || !this.clearOnChange))\n\t\t\t{\n\t\t\t\tdocument.execCommand('selectAll', false, null);\n\t\t\t}\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\t// ignore\n\t\t}\n\t}\n};\n\n/**\n * Function: isSelectText\n * \n * Returns <selectText>.\n */\nmxCellEditor.prototype.isSelectText = function()\n{\n\treturn this.selectText;\n};\n\n/**\n * Function: clearSelection\n * \n * Clears the selection.\n */\nmxCellEditor.prototype.clearSelection = function()\n{\n\tvar selection = null;\n\t\n\tif (window.getSelection)\n\t{\n\t\tselection = window.getSelection();\n\t}\n\telse if (document.selection)\n\t{\n\t\tselection = document.selection;\n\t}\n\t\n\tif (selection != null)\n\t{\n\t\tif (selection.empty)\n\t\t{\n\t\t\tselection.empty();\n\t\t}\n\t\telse if (selection.removeAllRanges)\n\t\t{\n\t\t\tselection.removeAllRanges();\n\t\t}\n\t}\n};\n\n/**\n * Function: stopEditing\n *\n * Stops the editor and applies the value if cancel is false.\n */\nmxCellEditor.prototype.stopEditing = function(cancel)\n{\n\tcancel = cancel || false;\n\t\n\tif (this.editingCell != null)\n\t{\n\t\tif (this.textNode != null)\n\t\t{\n\t\t\tthis.textNode.style.visibility = 'visible';\n\t\t\tthis.textNode = null;\n\t\t}\n\n\t\tvar state = (!cancel) ? this.graph.view.getState(this.editingCell) : null;\n\n\t\tvar initial = this.initialValue;\n\t\tthis.initialValue = null;\n\t\tthis.editingCell = null;\n\t\tthis.trigger = null;\n\t\tthis.bounds = null;\n\t\tthis.textarea.blur();\n\t\tthis.clearSelection();\n\t\t\n\t\tif (this.textarea.parentNode != null)\n\t\t{\n\t\t\tthis.textarea.parentNode.removeChild(this.textarea);\n\t\t}\n\t\t\n\t\tif (this.clearOnChange && this.textarea.innerHTML == this.getEmptyLabelText())\n\t\t{\n\t\t\tthis.textarea.innerHTML = '';\n\t\t\tthis.clearOnChange = false;\n\t\t}\n\n\t\tif (state != null && (this.textarea.innerHTML != initial || this.align != null))\n\t\t{\n\t\t\tthis.prepareTextarea();\n\t\t\tvar value = this.getCurrentValue(state);\n\t\t\t\n\t\t\tthis.graph.getModel().beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (value != null)\n\t\t\t\t{\n\t\t\t\t\tthis.applyValue(state, value);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.align != null)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.setCellStyles(mxConstants.STYLE_ALIGN, this.align, [state.cell]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tthis.graph.getModel().endUpdate();\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Forces new instance on next edit for undo history reset\n\t\tmxEvent.release(this.textarea);\n\t\tthis.textarea = null;\n\t\tthis.align = null;\n\t}\n};\n\n/**\n * Function: prepareTextarea\n * \n * Prepares the textarea for getting its value in <stopEditing>.\n * This implementation removes the extra trailing linefeed in Firefox.\n */\nmxCellEditor.prototype.prepareTextarea = function()\n{\n\tif (this.textarea.lastChild != null &&\n\t\tthis.textarea.lastChild.nodeName == 'BR')\n\t{\n\t\tthis.textarea.removeChild(this.textarea.lastChild);\n\t}\n};\n\n/**\n * Function: isHideLabel\n * \n * Returns true if the label should be hidden while the cell is being\n * edited.\n */\nmxCellEditor.prototype.isHideLabel = function(state)\n{\n\treturn true;\n};\n\n/**\n * Function: getMinimumSize\n * \n * Returns the minimum width and height for editing the given state.\n */\nmxCellEditor.prototype.getMinimumSize = function(state)\n{\n\tvar scale = this.graph.getView().scale;\n\t\n\treturn new mxRectangle(0, 0, (state.text == null) ? 30 : state.text.size * scale + 20,\n\t\t\t(this.textarea.style.textAlign == 'left') ? 120 : 40);\n};\n\n/**\n * Function: getEditorBounds\n * \n * Returns the <mxRectangle> that defines the bounds of the editor.\n */\nmxCellEditor.prototype.getEditorBounds = function(state)\n{\n\tvar isEdge = this.graph.getModel().isEdge(state.cell);\n\tvar scale = this.graph.getView().scale;\n\tvar minSize = this.getMinimumSize(state);\n\tvar minWidth = minSize.width;\n \tvar minHeight = minSize.height;\n \tvar result = null;\n \t\n \tif (!isEdge && state.view.graph.cellRenderer.legacySpacing && state.style[mxConstants.STYLE_OVERFLOW] == 'fill')\n \t{\n \t\tresult = state.shape.getLabelBounds(mxRectangle.fromRectangle(state));\n \t}\n \telse\n \t{\n\t\tvar spacing = parseInt(state.style[mxConstants.STYLE_SPACING] || 0) * scale;\n\t\tvar spacingTop = (parseInt(state.style[mxConstants.STYLE_SPACING_TOP] || 0) + mxText.prototype.baseSpacingTop) * scale + spacing;\n\t\tvar spacingRight = (parseInt(state.style[mxConstants.STYLE_SPACING_RIGHT] || 0) + mxText.prototype.baseSpacingRight) * scale + spacing;\n\t\tvar spacingBottom = (parseInt(state.style[mxConstants.STYLE_SPACING_BOTTOM] || 0) + mxText.prototype.baseSpacingBottom) * scale + spacing;\n\t\tvar spacingLeft = (parseInt(state.style[mxConstants.STYLE_SPACING_LEFT] || 0) + mxText.prototype.baseSpacingLeft) * scale + spacing;\n\t\n\t \tresult = new mxRectangle(state.x, state.y,\n\t \t\t Math.max(minWidth, state.width - spacingLeft - spacingRight),\n\t \t\t Math.max(minHeight, state.height - spacingTop - spacingBottom));\n\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\t\n\t\tresult = (state.shape != null && hpos == mxConstants.ALIGN_CENTER && vpos == mxConstants.ALIGN_MIDDLE) ? state.shape.getLabelBounds(result) : result;\n\t\n\t\tif (isEdge)\n\t\t{\n\t\t\tresult.x = state.absoluteOffset.x;\n\t\t\tresult.y = state.absoluteOffset.y;\n\t\n\t\t\tif (state.text != null && state.text.boundingBox != null)\n\t\t\t{\n\t\t\t\t// Workaround for label containing just spaces in which case\n\t\t\t\t// the bounding box location contains negative numbers \n\t\t\t\tif (state.text.boundingBox.x > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.x = state.text.boundingBox.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (state.text.boundingBox.y > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.y = state.text.boundingBox.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tresult.x = Math.min(result.x, state.text.boundingBox.x);\n\t\t\tresult.y = Math.min(result.y, state.text.boundingBox.y);\n\t\t}\n\t\n\t\tresult.x += spacingLeft;\n\t\tresult.y += spacingTop;\n\t\n\t\tif (state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tif (!isEdge)\n\t\t\t{\n\t\t\t\tresult.width = Math.max(result.width, state.text.boundingBox.width);\n\t\t\t\tresult.height = Math.max(result.height, state.text.boundingBox.height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.width = Math.max(minWidth, state.text.boundingBox.width);\n\t\t\t\tresult.height = Math.max(minHeight, state.text.boundingBox.height);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Applies the horizontal and vertical label positions\n\t\tif (this.graph.getModel().isVertex(state.cell))\n\t\t{\n\t\t\tvar horizontal = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\n\t\t\tif (horizontal == mxConstants.ALIGN_LEFT)\n\t\t\t{\n\t\t\t\tresult.x -= state.width;\n\t\t\t}\n\t\t\telse if (horizontal == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tresult.x += state.width;\n\t\t\t}\n\t\n\t\t\tvar vertical = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\n\t\t\tif (vertical == mxConstants.ALIGN_TOP)\n\t\t\t{\n\t\t\t\tresult.y -= state.height;\n\t\t\t}\n\t\t\telse if (vertical == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\tresult.y += state.height;\n\t\t\t}\n\t\t}\n \t}\n \t\n \treturn new mxRectangle(Math.round(result.x), Math.round(result.y), Math.round(result.width), Math.round(result.height));\n};\n\n/**\n * Function: getEmptyLabelText\n *\n * Returns the initial label value to be used of the label of the given\n * cell is empty. This label is displayed and cleared on the first keystroke.\n * This implementation returns <emptyLabelText>.\n * \n * Parameters:\n * \n * cell - <mxCell> for which a text for an empty editing box should be\n * returned.\n */\nmxCellEditor.prototype.getEmptyLabelText = function (cell)\n{\n\treturn this.emptyLabelText;\n};\n\n/**\n * Function: getEditingCell\n *\n * Returns the cell that is currently being edited or null if no cell is\n * being edited.\n */\nmxCellEditor.prototype.getEditingCell = function ()\n{\n\treturn this.editingCell;\n};\n\n/**\n * Function: destroy\n *\n * Destroys the editor and removes all associated resources.\n */\nmxCellEditor.prototype.destroy = function ()\n{\n\tif (this.textarea != null)\n\t{\n\t\tmxEvent.release(this.textarea);\n\t\t\n\t\tif (this.textarea.parentNode != null)\n\t\t{\n\t\t\tthis.textarea.parentNode.removeChild(this.textarea);\n\t\t}\n\t\t\n\t\tthis.textarea = null;\n\n\t}\n\t\t\t\n\tif (this.changeHandler != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.changeHandler);\n\t\tthis.changeHandler = null;\n\t}\n\n\tif (this.zoomHandler)\n\t{\n\t\tthis.graph.view.removeListener(this.zoomHandler);\n\t\tthis.zoomHandler = null;\n\t}\n};\n\n__mxOutput.mxCellEditor = typeof mxCellEditor !== 'undefined' ? mxCellEditor : undefined;\n\n/**\n * Copyright (c) 2006-2017, JGraph Ltd\n * Copyright (c) 2006-2017, Gaudenz Alder\n */\n/**\n * Class: mxCellRenderer\n * \n * Renders cells into a document object model. The <defaultShapes> is a global\n * map of shapename, constructor pairs that is used in all instances. You can\n * get a list of all available shape names using the following code.\n * \n * In general the cell renderer is in charge of creating, redrawing and\n * destroying the shape and label associated with a cell state, as well as\n * some other graphical objects, namely controls and overlays. The shape\n * hieararchy in the display (ie. the hierarchy in which the DOM nodes\n * appear in the document) does not reflect the cell hierarchy. The shapes\n * are a (flat) sequence of shapes and labels inside the draw pane of the\n * graph view, with some exceptions, namely the HTML labels being placed\n * directly inside the graph container for certain browsers.\n * \n * (code)\n * mxLog.show();\n * for (var i in mxCellRenderer.defaultShapes)\n * {\n *   mxLog.debug(i);\n * }\n * (end)\n *\n * Constructor: mxCellRenderer\n * \n * Constructs a new cell renderer with the following built-in shapes:\n * arrow, rectangle, ellipse, rhombus, image, line, label, cylinder,\n * swimlane, connector, actor and cloud.\n */\nfunction mxCellRenderer() { };\n\n/**\n * Variable: defaultShapes\n * \n * Static array that contains the globally registered shapes which are\n * known to all instances of this class. For adding new shapes you should\n * use the static <mxCellRenderer.registerShape> function.\n */\nmxCellRenderer.defaultShapes = new Object();\n\n/**\n * Variable: defaultEdgeShape\n * \n * Defines the default shape for edges. Default is <mxConnector>.\n */\nmxCellRenderer.prototype.defaultEdgeShape = mxConnector;\n\n/**\n * Variable: defaultVertexShape\n * \n * Defines the default shape for vertices. Default is <mxRectangleShape>.\n */\nmxCellRenderer.prototype.defaultVertexShape = mxRectangleShape;\n\n/**\n * Variable: defaultTextShape\n * \n * Defines the default shape for labels. Default is <mxText>.\n */\nmxCellRenderer.prototype.defaultTextShape = mxText;\n\n/**\n * Variable: legacyControlPosition\n * \n * Specifies if the folding icon should ignore the horizontal\n * orientation of a swimlane. Default is true.\n */\nmxCellRenderer.prototype.legacyControlPosition = true;\n\n/**\n * Variable: legacySpacing\n * \n * Specifies if spacing and label position should be ignored if overflow is\n * fill or width. Default is true for backwards compatiblity.\n */\nmxCellRenderer.prototype.legacySpacing = true;\n\n/**\n * Variable: antiAlias\n * \n * Anti-aliasing option for new shapes. Default is true.\n */\nmxCellRenderer.prototype.antiAlias = true;\n\n/**\n * Variable: minSvgStrokeWidth\n * \n * Minimum stroke width for SVG output.\n */\nmxCellRenderer.prototype.minSvgStrokeWidth = 1;\n\n/**\n * Variable: forceControlClickHandler\n * \n * Specifies if the enabled state of the graph should be ignored in the control\n * click handler (to allow folding in disabled graphs). Default is false.\n */\nmxCellRenderer.prototype.forceControlClickHandler = false;\n\n/**\n * Function: registerShape\n * \n * Registers the given constructor under the specified key in this instance\n * of the renderer.\n * \n * Example:\n * \n * (code)\n * mxCellRenderer.registerShape(mxConstants.SHAPE_RECTANGLE, mxRectangleShape);\n * (end)\n * \n * Parameters:\n * \n * key - String representing the shape name.\n * shape - Constructor of the <mxShape> subclass.\n */\nmxCellRenderer.registerShape = function(key, shape)\n{\n\tmxCellRenderer.defaultShapes[key] = shape;\n};\n\n// Adds default shapes into the default shapes array\nmxCellRenderer.registerShape(mxConstants.SHAPE_RECTANGLE, mxRectangleShape);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ELLIPSE, mxEllipse);\nmxCellRenderer.registerShape(mxConstants.SHAPE_RHOMBUS, mxRhombus);\nmxCellRenderer.registerShape(mxConstants.SHAPE_CYLINDER, mxCylinder);\nmxCellRenderer.registerShape(mxConstants.SHAPE_CONNECTOR, mxConnector);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ACTOR, mxActor);\nmxCellRenderer.registerShape(mxConstants.SHAPE_TRIANGLE, mxTriangle);\nmxCellRenderer.registerShape(mxConstants.SHAPE_HEXAGON, mxHexagon);\nmxCellRenderer.registerShape(mxConstants.SHAPE_CLOUD, mxCloud);\nmxCellRenderer.registerShape(mxConstants.SHAPE_LINE, mxLine);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ARROW, mxArrow);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ARROW_CONNECTOR, mxArrowConnector);\nmxCellRenderer.registerShape(mxConstants.SHAPE_DOUBLE_ELLIPSE, mxDoubleEllipse);\nmxCellRenderer.registerShape(mxConstants.SHAPE_SWIMLANE, mxSwimlane);\nmxCellRenderer.registerShape(mxConstants.SHAPE_IMAGE, mxImageShape);\nmxCellRenderer.registerShape(mxConstants.SHAPE_LABEL, mxLabel);\n\n/**\n * Function: initializeShape\n * \n * Initializes the shape in the given state by calling its init method with\n * the correct container after configuring it using <configureShape>.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shape should be initialized.\n */\nmxCellRenderer.prototype.initializeShape = function(state)\n{\n\tstate.shape.dialect = state.view.graph.dialect;\n\tthis.configureShape(state);\n\tstate.shape.init(state.view.getDrawPane());\n};\n\n/**\n * Function: createShape\n * \n * Creates and returns the shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shape should be created.\n */\nmxCellRenderer.prototype.createShape = function(state)\n{\n\tvar shape = null;\n\t\n\tif (state.style != null)\n\t{\n\t\t// Checks if there is a stencil for the name and creates\n\t\t// a shape instance for the stencil if one exists\n\t\tvar stencil = mxStencilRegistry.getStencil(state.style[mxConstants.STYLE_SHAPE]);\n\t\t\n\t\tif (stencil != null)\n\t\t{\n\t\t\tshape = new mxShape(stencil);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar ctor = this.getShapeConstructor(state);\n\t\t\tshape = new ctor();\n\t\t}\n\t}\n\t\n\treturn shape;\n};\n\n/**\n * Function: createIndicatorShape\n * \n * Creates the indicator shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the indicator shape should be created.\n */\nmxCellRenderer.prototype.createIndicatorShape = function(state)\n{\n\tstate.shape.indicatorShape = this.getShape(state.view.graph.getIndicatorShape(state));\n};\n\n/**\n * Function: getShape\n * \n * Returns the shape for the given name from <defaultShapes>.\n */\nmxCellRenderer.prototype.getShape = function(name)\n{\n\treturn (name != null) ? mxCellRenderer.defaultShapes[name] : null;\n};\n\n/**\n * Function: getShapeConstructor\n * \n * Returns the constructor to be used for creating the shape.\n */\nmxCellRenderer.prototype.getShapeConstructor = function(state)\n{\n\tvar ctor = this.getShape(state.style[mxConstants.STYLE_SHAPE]);\n\t\n\tif (ctor == null)\n\t{\n\t\tctor = (state.view.graph.getModel().isEdge(state.cell)) ?\n\t\t\tthis.defaultEdgeShape : this.defaultVertexShape;\n\t}\n\t\n\treturn ctor;\n};\n\n/**\n * Function: configureShape\n * \n * Configures the shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shape should be configured.\n */\nmxCellRenderer.prototype.configureShape = function(state)\n{\n\tstate.shape.apply(state);\n\tstate.shape.image = state.view.graph.getImage(state);\n\tstate.shape.indicatorColor = state.view.graph.getIndicatorColor(state);\n\tstate.shape.indicatorStrokeColor = state.style[mxConstants.STYLE_INDICATOR_STROKECOLOR];\n\tstate.shape.indicatorGradientColor = state.view.graph.getIndicatorGradientColor(state);\n\tstate.shape.indicatorDirection = state.style[mxConstants.STYLE_INDICATOR_DIRECTION];\n\tstate.shape.indicatorImage = state.view.graph.getIndicatorImage(state);\n\n\tthis.postConfigureShape(state);\n};\n\n/**\n * Function: postConfigureShape\n * \n * Replaces any reserved words used for attributes, eg. inherit,\n * indicated or swimlane for colors in the shape for the given state.\n * This implementation resolves these keywords on the fill, stroke\n * and gradient color keys.\n */\nmxCellRenderer.prototype.postConfigureShape = function(state)\n{\n\tif (state.shape != null)\n\t{\n\t\tthis.resolveColor(state, 'indicatorGradientColor', mxConstants.STYLE_GRADIENTCOLOR);\n\t\tthis.resolveColor(state, 'indicatorColor', mxConstants.STYLE_FILLCOLOR);\n\t\tthis.resolveColor(state, 'gradient', mxConstants.STYLE_GRADIENTCOLOR);\n\t\tthis.resolveColor(state, 'stroke', mxConstants.STYLE_STROKECOLOR);\n\t\tthis.resolveColor(state, 'fill', mxConstants.STYLE_FILLCOLOR);\n\t}\n};\n\n/**\n * Function: checkPlaceholderStyles\n * \n * Checks if the style of the given <mxCellState> contains 'inherit',\n * 'indicated' or 'swimlane' for colors that support those keywords.\n */\nmxCellRenderer.prototype.checkPlaceholderStyles = function(state)\n{\n\t// LATER: Check if the color has actually changed\n\tif (state.style != null)\n\t{\n\t\tvar values = ['inherit', 'swimlane', 'indicated'];\n\t\tvar styles = [mxConstants.STYLE_FILLCOLOR, mxConstants.STYLE_STROKECOLOR,\n\t\t\tmxConstants.STYLE_GRADIENTCOLOR, mxConstants.STYLE_FONTCOLOR];\n\t\t\n\t\tfor (var i = 0; i < styles.length; i++)\n\t\t{\n\t\t\tif (mxUtils.indexOf(values, state.style[styles[i]]) >= 0)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: resolveColor\n * \n * Resolves special keywords 'inherit', 'indicated' and 'swimlane' and sets\n * the respective color on the shape.\n */\nmxCellRenderer.prototype.resolveColor = function(state, field, key)\n{\n\tvar shape = (key == mxConstants.STYLE_FONTCOLOR) ?\n\t\tstate.text : state.shape;\n\t\n\tif (shape != null)\n\t{\n\t\tvar graph = state.view.graph;\n\t\tvar value = shape[field];\n\t\tvar referenced = null;\n\t\t\n\t\tif (value == 'inherit')\n\t\t{\n\t\t\treferenced = graph.model.getParent(state.cell);\n\t\t}\n\t\telse if (value == 'swimlane')\n\t\t{\n\t\t\tshape[field] = (key == mxConstants.STYLE_STROKECOLOR ||\n\t\t\t\tkey == mxConstants.STYLE_FONTCOLOR) ?\n\t\t\t\t'#000000' : '#ffffff';\n\t\t\t\n\t\t\tif (graph.model.getTerminal(state.cell, false) != null)\n\t\t\t{\n\t\t\t\treferenced = graph.model.getTerminal(state.cell, false);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treferenced = state.cell;\n\t\t\t}\n\t\t\t\n\t\t\treferenced = graph.getSwimlane(referenced);\n\t\t\tkey = graph.swimlaneIndicatorColorAttribute;\n\t\t}\n\t\telse if (value == 'indicated' && state.shape != null)\n\t\t{\n\t\t\tshape[field] = state.shape.indicatorColor;\n\t\t}\n\t\telse if (key != mxConstants.STYLE_FILLCOLOR &&\n\t\t\tvalue == mxConstants.STYLE_FILLCOLOR &&\n\t\t\tstate.shape != null)\n\t\t{\n\t\t\tshape[field] = state.style[mxConstants.STYLE_FILLCOLOR];\n\t\t}\n\t\telse if (key != mxConstants.STYLE_STROKECOLOR &&\n\t\t\tvalue == mxConstants.STYLE_STROKECOLOR &&\n\t\t\tstate.shape != null)\n\t\t{\n\t\t\tshape[field] = state.style[mxConstants.STYLE_STROKECOLOR];\n\t\t}\n\t\n\t\tif (referenced != null)\n\t\t{\n\t\t\tvar rstate = graph.getView().getState(referenced);\n\t\t\tshape[field] = null;\n\t\t\t\n\t\t\tif (rstate != null)\n\t\t\t{\n\t\t\t\tvar rshape = (key == mxConstants.STYLE_FONTCOLOR) ? rstate.text : rstate.shape;\n\t\t\t\t\n\t\t\t\tif (rshape != null && field != 'indicatorColor')\n\t\t\t\t{\n\t\t\t\t\tshape[field] = rshape[field];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tshape[field] = rstate.style[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getLabelValue\n * \n * Returns the value to be used for the label.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the label should be created.\n */\nmxCellRenderer.prototype.getLabelValue = function(state)\n{\n\treturn state.view.graph.getLabel(state.cell);\n};\n\n/**\n * Function: createLabel\n * \n * Creates the label for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the label should be created.\n */\nmxCellRenderer.prototype.createLabel = function(state, value)\n{\n\tvar graph = state.view.graph;\n\tvar isEdge = graph.getModel().isEdge(state.cell);\n\t\n\tif (state.style[mxConstants.STYLE_FONTSIZE] > 0 || state.style[mxConstants.STYLE_FONTSIZE] == null)\n\t{\n\t\t// Avoids using DOM node for empty labels\n\t\tvar isForceHtml = (graph.isHtmlLabel(state.cell) || (value != null && mxUtils.isNode(value)));\n\n\t\tstate.text = new this.defaultTextShape(value, new mxRectangle(),\n\t\t\t\t(state.style[mxConstants.STYLE_ALIGN] || mxConstants.ALIGN_CENTER),\n\t\t\t\tgraph.getVerticalAlign(state),\n\t\t\t\tstate.style[mxConstants.STYLE_FONTCOLOR],\n\t\t\t\tstate.style[mxConstants.STYLE_FONTFAMILY],\n\t\t\t\tstate.style[mxConstants.STYLE_FONTSIZE],\n\t\t\t\tstate.style[mxConstants.STYLE_FONTSTYLE],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_TOP],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_RIGHT],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_BOTTOM],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_LEFT],\n\t\t\t\tstate.style[mxConstants.STYLE_HORIZONTAL],\n\t\t\t\tstate.style[mxConstants.STYLE_LABEL_BACKGROUNDCOLOR],\n\t\t\t\tstate.style[mxConstants.STYLE_LABEL_BORDERCOLOR],\n\t\t\t\tgraph.isWrapping(state.cell) && graph.isHtmlLabel(state.cell),\n\t\t\t\tgraph.isLabelClipped(state.cell),\n\t\t\t\tstate.style[mxConstants.STYLE_OVERFLOW],\n\t\t\t\tstate.style[mxConstants.STYLE_LABEL_PADDING],\n\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION));\n\t\tstate.text.opacity = mxUtils.getValue(state.style, mxConstants.STYLE_TEXT_OPACITY, 100);\n\t\tstate.text.dialect = (isForceHtml) ? mxConstants.DIALECT_STRICTHTML : state.view.graph.dialect;\n\t\tstate.text.style = state.style;\n\t\tstate.text.state = state;\n\t\tthis.initializeLabel(state, state.text);\n\t\t\n\t\t// Workaround for touch devices routing all events for a mouse gesture\n\t\t// (down, move, up) via the initial DOM node. IE additionally redirects\n\t\t// the event via the initial DOM node but the event source is the node\n\t\t// under the mouse, so we need to check if this is the case and force\n\t\t// getCellAt for the subsequent mouseMoves and the final mouseUp.\n\t\tvar forceGetCell = false;\n\t\t\n\t\tvar getState = function(evt)\n\t\t{\n\t\t\tvar result = state;\n\n\t\t\tif (mxClient.IS_TOUCH || forceGetCell)\n\t\t\t{\n\t\t\t\tvar x = mxEvent.getClientX(evt);\n\t\t\t\tvar y = mxEvent.getClientY(evt);\n\t\t\t\t\n\t\t\t\t// Dispatches the drop event to the graph which\n\t\t\t\t// consumes and executes the source function\n\t\t\t\tvar pt = mxUtils.convertPoint(graph.container, x, y);\n\t\t\t\tresult = graph.view.getState(graph.getCellAt(pt.x, pt.y));\n\t\t\t}\n\t\t\t\n\t\t\treturn result;\n\t\t};\n\t\t\n\t\t// TODO: Add handling for special touch device gestures\n\t\tmxEvent.addGestureListeners(state.text.node,\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, state));\n\t\t\t\t\tforceGetCell = graph.dialect != mxConstants.DIALECT_SVG &&\n\t\t\t\t\t\tmxEvent.getSource(evt).nodeName == 'IMG';\n\t\t\t\t}\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t\t}\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, getState(evt)));\n\t\t\t\t\tforceGetCell = false;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\t// Uses double click timeout in mxGraph for quirks mode\n\t\tif (graph.nativeDblClickEnabled)\n\t\t{\n\t\t\tmxEvent.addListener(state.text.node, 'dblclick',\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t\t{\n\t\t\t\t\t\tgraph.dblClick(evt, state.cell);\n\t\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n};\n\n/**\n * Function: initializeLabel\n * \n * Initiailzes the label with a suitable container.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be initialized.\n */\nmxCellRenderer.prototype.initializeLabel = function(state, shape)\n{\n\tif (mxClient.IS_SVG && mxClient.NO_FO && shape.dialect != mxConstants.DIALECT_SVG)\n\t{\n\t\tshape.init(state.view.graph.container);\n\t}\n\telse\n\t{\n\t\tshape.init(state.view.getDrawPane());\n\t}\n};\n\n/**\n * Function: createCellOverlays\n * \n * Creates the actual shape for showing the overlay for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the overlay should be created.\n */\nmxCellRenderer.prototype.createCellOverlays = function(state)\n{\n\tvar graph = state.view.graph;\n\tvar overlays = graph.getCellOverlays(state.cell);\n\tvar dict = null;\n\t\n\tif (overlays != null)\n\t{\n\t\tdict = new mxDictionary();\n\t\t\n\t\tfor (var i = 0; i < overlays.length; i++)\n\t\t{\n\t\t\tvar shape = (state.overlays != null) ? state.overlays.remove(overlays[i]) : null;\n\t\t\t\n\t\t\tif (shape == null)\n\t\t\t{\n\t\t\t\tvar tmp = new mxImageShape(new mxRectangle(), overlays[i].image.src);\n\t\t\t\ttmp.dialect = state.view.graph.dialect;\n\t\t\t\ttmp.preserveImageAspect = false;\n\t\t\t\ttmp.overlay = overlays[i];\n\t\t\t\tthis.initializeOverlay(state, tmp);\n\t\t\t\tthis.installCellOverlayListeners(state, overlays[i], tmp);\n\t\n\t\t\t\tif (overlays[i].cursor != null)\n\t\t\t\t{\n\t\t\t\t\ttmp.node.style.cursor = overlays[i].cursor;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdict.put(overlays[i], tmp);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdict.put(overlays[i], shape);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Removes unused\n\tif (state.overlays != null)\n\t{\n\t\tstate.overlays.visit(function(id, shape)\n\t\t{\n\t\t\tshape.destroy();\n\t\t});\n\t}\n\t\n\tstate.overlays = dict;\n};\n\n/**\n * Function: initializeOverlay\n * \n * Initializes the given overlay.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the overlay should be created.\n * overlay - <mxImageShape> that represents the overlay.\n */\nmxCellRenderer.prototype.initializeOverlay = function(state, overlay)\n{\n\toverlay.init(state.view.getOverlayPane());\n};\n\n/**\n * Function: installOverlayListeners\n * \n * Installs the listeners for the given <mxCellState>, <mxCellOverlay> and\n * <mxShape> that represents the overlay.\n */\nmxCellRenderer.prototype.installCellOverlayListeners = function(state, overlay, shape)\n{\n\tvar graph  = state.view.graph;\n\t\n\tmxEvent.addListener(shape.node, 'click', function (evt)\n\t{\n\t\tif (graph.isEditing())\n\t\t{\n\t\t\tgraph.stopEditing(!graph.isInvokesStopCellEditing());\n\t\t}\n\t\t\n\t\toverlay.fireEvent(new mxEventObject(mxEvent.CLICK,\n\t\t\t\t'event', evt, 'cell', state.cell));\n\t});\n\t\n\tmxEvent.addGestureListeners(shape.node,\n\t\tfunction (evt)\n\t\t{\n\t\t\tmxEvent.consume(evt);\n\t\t},\n\t\tfunction (evt)\n\t\t{\n\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE,\n\t\t\t\tnew mxMouseEvent(evt, state));\n\t\t});\n\t\n\tif (mxClient.IS_TOUCH)\n\t{\n\t\tmxEvent.addListener(shape.node, 'touchend', function (evt)\n\t\t{\n\t\t\toverlay.fireEvent(new mxEventObject(mxEvent.CLICK,\n\t\t\t\t\t'event', evt, 'cell', state.cell));\n\t\t});\n\t}\n};\n\n/**\n * Function: createControl\n * \n * Creates the control for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the control should be created.\n */\nmxCellRenderer.prototype.createControl = function(state)\n{\n\tvar graph = state.view.graph;\n\tvar image = graph.getFoldingImage(state);\n\t\n\tif (graph.foldingEnabled && image != null)\n\t{\n\t\tif (state.control == null)\n\t\t{\n\t\t\tvar b = new mxRectangle(0, 0, image.width, image.height);\n\t\t\tstate.control = new mxImageShape(b, image.src);\n\t\t\tstate.control.preserveImageAspect = false;\n\t\t\tstate.control.dialect = graph.dialect;\n\n\t\t\tthis.initControl(state, state.control, true, this.createControlClickHandler(state));\n\t\t}\n\t}\n\telse if (state.control != null)\n\t{\n\t\tstate.control.destroy();\n\t\tstate.control = null;\n\t}\n};\n\n/**\n * Function: createControlClickHandler\n * \n * Hook for creating the click handler for the folding icon.\n * \n * Parameters:\n * \n * state - <mxCellState> whose control click handler should be returned.\n */\nmxCellRenderer.prototype.createControlClickHandler = function(state)\n{\n\tvar graph = state.view.graph;\n\t\n\treturn mxUtils.bind(this, function (evt)\n\t{\n\t\tif (this.forceControlClickHandler || graph.isEnabled())\n\t\t{\n\t\t\tvar collapse = !graph.isCellCollapsed(state.cell);\n\t\t\tgraph.foldCells(collapse, false, [state.cell], null, evt);\n\t\t\tmxEvent.consume(evt);\n\t\t}\n\t});\n};\n\n/**\n * Function: initControl\n * \n * Initializes the given control and returns the corresponding DOM node.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the control should be initialized.\n * control - <mxShape> to be initialized.\n * handleEvents - Boolean indicating if mousedown and mousemove should fire events via the graph.\n * clickHandler - Optional function to implement clicks on the control.\n */\nmxCellRenderer.prototype.initControl = function(state, control, handleEvents, clickHandler)\n{\n\tvar graph = state.view.graph;\n\t\n\t// In the special case where the label is in HTML and the display is SVG the image\n\t// should go into the graph container directly in order to be clickable. Otherwise\n\t// it is obscured by the HTML label that overlaps the cell.\n\tvar isForceHtml = graph.isHtmlLabel(state.cell) && mxClient.NO_FO &&\n\t\tgraph.dialect == mxConstants.DIALECT_SVG;\n\n\tif (isForceHtml)\n\t{\n\t\tcontrol.dialect = mxConstants.DIALECT_PREFERHTML;\n\t\tcontrol.init(graph.container);\n\t\tcontrol.node.style.zIndex = 1;\n\t}\n\telse\n\t{\n\t\tcontrol.init(state.view.getOverlayPane());\n\t}\n\n\tvar node = control.innerNode || control.node;\n\t\n\t// Workaround for missing click event on iOS is to check tolerance below\n\tif (clickHandler != null && !mxClient.IS_IOS)\n\t{\n\t\tif (graph.isEnabled())\n\t\t{\n\t\t\tnode.style.cursor = 'pointer';\n\t\t}\n\t\t\n\t\tmxEvent.addListener(node, 'click', clickHandler);\n\t}\n\t\n\tif (handleEvents)\n\t{\n\t\tvar first = null;\n\n\t\tmxEvent.addGestureListeners(node,\n\t\t\tfunction (evt)\n\t\t\t{\n\t\t\t\tfirst = new mxPoint(mxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, state));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t},\n\t\t\tfunction (evt)\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, state));\n\t\t\t},\n\t\t\tfunction (evt)\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, state));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\t\t\n\t\t// Uses capture phase for event interception to stop bubble phase\n\t\tif (clickHandler != null && mxClient.IS_IOS)\n\t\t{\n\t\t\tnode.addEventListener('touchend', function(evt)\n\t\t\t{\n\t\t\t\tif (first != null)\n\t\t\t\t{\n\t\t\t\t\tvar tol = graph.tolerance;\n\t\t\t\t\t\n\t\t\t\t\tif (Math.abs(first.x - mxEvent.getClientX(evt)) < tol &&\n\t\t\t\t\t\tMath.abs(first.y - mxEvent.getClientY(evt)) < tol)\n\t\t\t\t\t{\n\t\t\t\t\t\tclickHandler.call(clickHandler, evt);\n\t\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, true);\n\t\t}\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: isShapeEvent\n * \n * Returns true if the event is for the shape of the given state. This\n * implementation always returns true.\n * \n * Parameters:\n * \n * state - <mxCellState> whose shape fired the event.\n * evt - Mouse event which was fired.\n */\nmxCellRenderer.prototype.isShapeEvent = function(state, evt)\n{\n\treturn true;\n};\n\n/**\n * Function: isLabelEvent\n * \n * Returns true if the event is for the label of the given state. This\n * implementation always returns true.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label fired the event.\n * evt - Mouse event which was fired.\n */\nmxCellRenderer.prototype.isLabelEvent = function(state, evt)\n{\n\treturn true;\n};\n\n/**\n * Function: installListeners\n * \n * Installs the event listeners for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the event listeners should be isntalled.\n */\nmxCellRenderer.prototype.installListeners = function(state)\n{\n\tvar graph = state.view.graph;\n\n\t// Workaround for touch devices routing all events for a mouse\n\t// gesture (down, move, up) via the initial DOM node. Same for\n\t// HTML images in all IE versions (VML images are working).\n\tvar getState = function(evt)\n\t{\n\t\tvar result = state;\n\t\t\n\t\tif ((graph.dialect != mxConstants.DIALECT_SVG && mxEvent.getSource(evt).nodeName == 'IMG') || mxClient.IS_TOUCH)\n\t\t{\n\t\t\tvar x = mxEvent.getClientX(evt);\n\t\t\tvar y = mxEvent.getClientY(evt);\n\t\t\t\n\t\t\t// Dispatches the drop event to the graph which\n\t\t\t// consumes and executes the source function\n\t\t\tvar pt = mxUtils.convertPoint(graph.container, x, y);\n\t\t\tresult = graph.view.getState(graph.getCellAt(pt.x, pt.y));\n\t\t}\n\t\t\n\t\treturn result;\n\t};\n\n\tmxEvent.addGestureListeners(state.shape.node,\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, state));\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t})\n\t);\n\t\n\t// Uses double click timeout in mxGraph for quirks mode\n\tif (graph.nativeDblClickEnabled)\n\t{\n\t\tmxEvent.addListener(state.shape.node, 'dblclick',\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.dblClick(evt, state.cell);\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n};\n\n/**\n * Function: redrawLabel\n * \n * Redraws the label for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be redrawn.\n */\nmxCellRenderer.prototype.redrawLabel = function(state, forced)\n{\n\tvar graph = state.view.graph;\n\tvar value = this.getLabelValue(state);\n\tvar wrapping = graph.isWrapping(state.cell);\n\tvar clipping = graph.isLabelClipped(state.cell);\n\tvar isForceHtml = (state.view.graph.isHtmlLabel(state.cell) || (value != null && mxUtils.isNode(value)));\n\tvar dialect = (isForceHtml) ? mxConstants.DIALECT_STRICTHTML : state.view.graph.dialect;\n\tvar overflow = state.style[mxConstants.STYLE_OVERFLOW] || 'visible';\n\n\tif (state.text != null && (state.text.wrap != wrapping || state.text.clipped != clipping ||\n\t\tstate.text.overflow != overflow || state.text.dialect != dialect))\n\t{\n\t\tstate.text.destroy();\n\t\tstate.text = null;\n\t}\n\t\n\tif (state.text == null && value != null && (mxUtils.isNode(value) || value.length > 0))\n\t{\n\t\tthis.createLabel(state, value);\n\t}\n\telse if (state.text != null && (value == null || value.length == 0))\n\t{\n\t\tstate.text.destroy();\n\t\tstate.text = null;\n\t}\n\n\tif (state.text != null)\n\t{\n\t\t// Forced is true if the style has changed, so to get the updated\n\t\t// result in getLabelBounds we apply the new style to the shape\n\t\tif (forced)\n\t\t{\n\t\t\t// Checks if a full repaint is needed\n\t\t\tif (state.text.lastValue != null && this.isTextShapeInvalid(state, state.text))\n\t\t\t{\n\t\t\t\t// Forces a full repaint\n\t\t\t\tstate.text.lastValue = null;\n\t\t\t}\n\t\t\t\n\t\t\tstate.text.resetStyles();\n\t\t\tstate.text.apply(state);\n\t\t\t\n\t\t\t// Special case where value is obtained via hook in graph\n\t\t\tstate.text.valign = graph.getVerticalAlign(state);\n\t\t}\n\t\t\n\t\tvar bounds = this.getLabelBounds(state);\n\t\tvar nextScale = this.getTextScale(state);\n\t\tthis.resolveColor(state, 'color', mxConstants.STYLE_FONTCOLOR);\n\t\t\n\t\tif (forced || state.text.value != value || state.text.isWrapping != wrapping ||\n\t\t\tstate.text.overflow != overflow || state.text.isClipping != clipping ||\n\t\t\tstate.text.scale != nextScale || state.text.dialect != dialect ||\n\t\t\tstate.text.bounds == null || !state.text.bounds.equals(bounds))\n\t\t{\n\t\t\tstate.text.dialect = dialect;\n\t\t\tstate.text.value = value;\n\t\t\tstate.text.bounds = bounds;\n\t\t\tstate.text.scale = nextScale;\n\t\t\tstate.text.wrap = wrapping;\n\t\t\tstate.text.clipped = clipping;\n\t\t\tstate.text.overflow = overflow;\n\t\t\t\n\t\t\t// Preserves visible state\n\t\t\tvar vis = state.text.node.style.visibility;\n\t\t\tthis.redrawLabelShape(state.text);\n\t\t\tstate.text.node.style.visibility = vis;\n\t\t}\n\t}\n};\n\n/**\n * Function: isTextShapeInvalid\n * \n * Returns true if the style for the text shape has changed.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be checked.\n * shape - <mxText> shape to be checked.\n */\nmxCellRenderer.prototype.isTextShapeInvalid = function(state, shape)\n{\n\tfunction check(property, stylename, defaultValue)\n\t{\n\t\tvar result = false;\n\t\t\n\t\t// Workaround for spacing added to directional spacing\n\t\tif (stylename == 'spacingTop' || stylename == 'spacingRight' ||\n\t\t\tstylename == 'spacingBottom' || stylename == 'spacingLeft')\n\t\t{\n\t\t\tresult = parseFloat(shape[property]) - parseFloat(shape.spacing) !=\n\t\t\t\t(state.style[stylename] || defaultValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = shape[property] != (state.style[stylename] || defaultValue);\n\t\t}\n\t\t\n\t\treturn result;\n\t};\n\n\treturn check('fontStyle', mxConstants.STYLE_FONTSTYLE, mxConstants.DEFAULT_FONTSTYLE) ||\n\t\tcheck('family', mxConstants.STYLE_FONTFAMILY, mxConstants.DEFAULT_FONTFAMILY) ||\n\t\tcheck('size', mxConstants.STYLE_FONTSIZE, mxConstants.DEFAULT_FONTSIZE) ||\n\t\tcheck('color', mxConstants.STYLE_FONTCOLOR, 'black') ||\n\t\tcheck('align', mxConstants.STYLE_ALIGN, '') ||\n\t\tcheck('valign', mxConstants.STYLE_VERTICAL_ALIGN, '') ||\n\t\tcheck('spacing', mxConstants.STYLE_SPACING, 2) ||\n\t\tcheck('spacingTop', mxConstants.STYLE_SPACING_TOP, 0) ||\n\t\tcheck('spacingRight', mxConstants.STYLE_SPACING_RIGHT, 0) ||\n\t\tcheck('spacingBottom', mxConstants.STYLE_SPACING_BOTTOM, 0) ||\n\t\tcheck('spacingLeft', mxConstants.STYLE_SPACING_LEFT, 0) ||\n\t\tcheck('horizontal', mxConstants.STYLE_HORIZONTAL, true) ||\n\t\tcheck('background', mxConstants.STYLE_LABEL_BACKGROUNDCOLOR) ||\n\t\tcheck('border', mxConstants.STYLE_LABEL_BORDERCOLOR) ||\n\t\tcheck('opacity', mxConstants.STYLE_TEXT_OPACITY, 100) ||\n\t\tcheck('textDirection', mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION);\n};\n\n/**\n * Function: redrawLabelShape\n * \n * Called to invoked redraw on the given text shape.\n * \n * Parameters:\n * \n * shape - <mxText> shape to be redrawn.\n */\nmxCellRenderer.prototype.redrawLabelShape = function(shape)\n{\n\tshape.redraw();\n};\n\n/**\n * Function: getTextScale\n * \n * Returns the scaling used for the label of the given state\n * \n * Parameters:\n * \n * state - <mxCellState> whose label scale should be returned.\n */\nmxCellRenderer.prototype.getTextScale = function(state)\n{\n\treturn state.view.scale;\n};\n\n/**\n * Function: getLabelBounds\n * \n * Returns the bounds to be used to draw the label of the given state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label bounds should be returned.\n */\nmxCellRenderer.prototype.getLabelBounds = function(state)\n{\n\tvar graph = state.view.graph;\n\tvar scale = state.view.scale;\n\tvar isEdge = graph.getModel().isEdge(state.cell);\n\tvar bounds = new mxRectangle(state.absoluteOffset.x, state.absoluteOffset.y);\n\n\tif (isEdge)\n\t{\n\t\tvar spacing = state.text.getSpacing();\n\t\tbounds.x += spacing.x * scale;\n\t\tbounds.y += spacing.y * scale;\n\t\t\n\t\tvar geo = graph.getCellGeometry(state.cell);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tbounds.width = Math.max(0, geo.width * scale);\n\t\t\tbounds.height = Math.max(0, geo.height * scale);\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Inverts label position\n\t\tif (state.text.isPaintBoundsInverted())\n\t\t{\n\t\t\tvar tmp = bounds.x;\n\t\t\tbounds.x = bounds.y;\n\t\t\tbounds.y = tmp;\n\t\t}\n\t\t\n\t\tbounds.x += state.x;\n\t\tbounds.y += state.y;\n\t\t\n\t\t// Minimum of 1 fixes alignment bug in HTML labels\n\t\tbounds.width = Math.max(1, state.width);\n\t\tbounds.height = Math.max(1, state.height);\n\t}\n\n\tif (state.text.isPaintBoundsInverted())\n\t{\n\t\t// Rotates around center of state\n\t\tvar t = (state.width - state.height) / 2;\n\t\tbounds.x += t;\n\t\tbounds.y -= t;\n\t\tvar tmp = bounds.width;\n\t\tbounds.width = bounds.height;\n\t\tbounds.height = tmp;\n\t}\n\t\n\t// Shape can modify its label bounds\n\tif (state.shape != null)\n\t{\n\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\t\n\t\tif (hpos == mxConstants.ALIGN_CENTER && vpos == mxConstants.ALIGN_MIDDLE)\n\t\t{\n\t\t\tbounds = state.shape.getLabelBounds(bounds);\n\t\t}\n\t}\n\t\n\t// Label width style overrides actual label width\n\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\n\tif (lw != null)\n\t{\n\t\tbounds.width = parseFloat(lw) * scale;\n\t}\n\t\n\tif (!isEdge)\n\t{\n\t\tthis.rotateLabelBounds(state, bounds);\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: rotateLabelBounds\n * \n * Adds the shape rotation to the given label bounds and\n * applies the alignment and offsets.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label bounds should be rotated.\n * bounds - <mxRectangle> the rectangle to be rotated.\n */\nmxCellRenderer.prototype.rotateLabelBounds = function(state, bounds)\n{\n\tbounds.y -= state.text.margin.y * bounds.height;\n\tbounds.x -= state.text.margin.x * bounds.width;\n\t\n\tif (!this.legacySpacing || (state.style[mxConstants.STYLE_OVERFLOW] != 'fill' && state.style[mxConstants.STYLE_OVERFLOW] != 'width'))\n\t{\n\t\tvar s = state.view.scale;\n\t\tvar spacing = state.text.getSpacing();\n\t\tbounds.x += spacing.x * s;\n\t\tbounds.y += spacing.y * s;\n\t\t\n\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\n\t\tbounds.width = Math.max(0, bounds.width - ((hpos == mxConstants.ALIGN_CENTER && lw == null) ? (state.text.spacingLeft * s + state.text.spacingRight * s) : 0));\n\t\tbounds.height = Math.max(0, bounds.height - ((vpos == mxConstants.ALIGN_MIDDLE) ? (state.text.spacingTop * s + state.text.spacingBottom * s) : 0));\n\t}\n\n\tvar theta = state.text.getTextRotation();\n\n\t// Only needed if rotated around another center\n\tif (theta != 0 && state != null && state.view.graph.model.isVertex(state.cell))\n\t{\n\t\tvar cx = state.getCenterX();\n\t\tvar cy = state.getCenterY();\n\t\t\n\t\tif (bounds.x != cx || bounds.y != cy)\n\t\t{\n\t\t\tvar rad = theta * (Math.PI / 180);\n\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(bounds.x, bounds.y),\n\t\t\t\t\tMath.cos(rad), Math.sin(rad), new mxPoint(cx, cy));\n\t\t\t\n\t\t\tbounds.x = pt.x;\n\t\t\tbounds.y = pt.y;\n\t\t}\n\t}\n};\n\n/**\n * Function: redrawCellOverlays\n * \n * Redraws the overlays for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose overlays should be redrawn.\n */\nmxCellRenderer.prototype.redrawCellOverlays = function(state, forced)\n{\n\tthis.createCellOverlays(state);\n\n\tif (state.overlays != null)\n\t{\n\t\tvar rot = mxUtils.mod(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0), 90);\n        var rad = mxUtils.toRadians(rot);\n        var cos = Math.cos(rad);\n        var sin = Math.sin(rad);\n\t\t\n\t\tstate.overlays.visit(function(id, shape)\n\t\t{\n\t\t\tvar bounds = shape.overlay.getBounds(state);\n\t\t\n\t\t\tif (!state.view.graph.getModel().isEdge(state.cell))\n\t\t\t{\n\t\t\t\tif (state.shape != null && rot != 0)\n\t\t\t\t{\n\t\t\t\t\tvar cx = bounds.getCenterX();\n\t\t\t\t\tvar cy = bounds.getCenterY();\n\n\t\t\t\t\tvar point = mxUtils.getRotatedPoint(new mxPoint(cx, cy), cos, sin,\n\t\t\t        \t\tnew mxPoint(state.getCenterX(), state.getCenterY()));\n\n\t\t\t        cx = point.x;\n\t\t\t        cy = point.y;\n\t\t\t        bounds.x = Math.round(cx - bounds.width / 2);\n\t\t\t        bounds.y = Math.round(cy - bounds.height / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (forced || shape.bounds == null || shape.scale != state.view.scale ||\n\t\t\t\t!shape.bounds.equals(bounds))\n\t\t\t{\n\t\t\t\tshape.bounds = bounds;\n\t\t\t\tshape.scale = state.view.scale;\n\t\t\t\tshape.redraw();\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n * Function: redrawControl\n * \n * Redraws the control for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose control should be redrawn.\n */\nmxCellRenderer.prototype.redrawControl = function(state, forced)\n{\n\tvar image = state.view.graph.getFoldingImage(state);\n\t\n\tif (state.control != null && image != null)\n\t{\n\t\tvar bounds = this.getControlBounds(state, image.width, image.height);\n\t\tvar r = (this.legacyControlPosition) ?\n\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0) :\n\t\t\t\tstate.shape.getTextRotation();\n\t\tvar s = state.view.scale;\n\t\t\n\t\tif (forced || state.control.scale != s || !state.control.bounds.equals(bounds) ||\n\t\t\tstate.control.rotation != r)\n\t\t{\n\t\t\tstate.control.rotation = r;\n\t\t\tstate.control.bounds = bounds;\n\t\t\tstate.control.scale = s;\n\t\t\t\n\t\t\tstate.control.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: getControlBounds\n * \n * Returns the bounds to be used to draw the control (folding icon) of the\n * given state.\n */\nmxCellRenderer.prototype.getControlBounds = function(state, w, h)\n{\n\tif (state.control != null)\n\t{\n\t\tvar s = state.view.scale;\n\t\tvar cx = state.getCenterX();\n\t\tvar cy = state.getCenterY();\n\t\n\t\tif (!state.view.graph.getModel().isEdge(state.cell))\n\t\t{\n\t\t\tcx = state.x + w * s;\n\t\t\tcy = state.y + h * s;\n\t\t\t\n\t\t\tif (state.shape != null)\n\t\t\t{\n\t\t\t\t// TODO: Factor out common code\n\t\t\t\tvar rot = state.shape.getShapeRotation();\n\t\t\t\t\n\t\t\t\tif (this.legacyControlPosition)\n\t\t\t\t{\n\t\t\t\t\trot = mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (state.shape.isPaintBoundsInverted())\n\t\t\t\t\t{\n\t\t\t\t\t\tvar t = (state.width - state.height) / 2;\n\t\t\t\t\t\tcx += t;\n\t\t\t\t\t\tcy -= t;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (rot != 0)\n\t\t\t\t{\n\t\t\t        var rad = mxUtils.toRadians(rot);\n\t\t\t        var cos = Math.cos(rad);\n\t\t\t        var sin = Math.sin(rad);\n\t\t\t        \n\t\t\t        var point = mxUtils.getRotatedPoint(new mxPoint(cx, cy), cos, sin,\n\t\t\t        \t\tnew mxPoint(state.getCenterX(), state.getCenterY()));\n\t\t\t        cx = point.x;\n\t\t\t        cy = point.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn (state.view.graph.getModel().isEdge(state.cell)) ? \n\t\t\tnew mxRectangle(Math.round(cx - w / 2 * s), Math.round(cy - h / 2 * s), Math.round(w * s), Math.round(h * s))\n\t\t\t: new mxRectangle(Math.round(cx - w / 2 * s), Math.round(cy - h / 2 * s), Math.round(w * s), Math.round(h * s));\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: insertStateAfter\n * \n * Inserts the given array of <mxShapes> after the given nodes in the DOM.\n * \n * Parameters:\n * \n * shapes - Array of <mxShapes> to be inserted.\n * node - Node in <drawPane> after which the shapes should be inserted.\n * htmlNode - Node in the graph container after which the shapes should be inserted that\n * will not go into the <drawPane> (eg. HTML labels without foreignObjects).\n */\nmxCellRenderer.prototype.insertStateAfter = function(state, node, htmlNode)\n{\n\tvar shapes = this.getShapesForState(state);\n\t\n\tfor (var i = 0; i < shapes.length; i++)\n\t{\n\t\tif (shapes[i] != null && shapes[i].node != null)\n\t\t{\n\t\t\tvar html = shapes[i].node.parentNode != state.view.getDrawPane() &&\n\t\t\t\tshapes[i].node.parentNode != state.view.getOverlayPane();\n\t\t\tvar temp = (html) ? htmlNode : node;\n\t\t\t\n\t\t\tif (temp != null && temp.nextSibling != shapes[i].node)\n\t\t\t{\n\t\t\t\tif (temp.nextSibling == null)\n\t\t\t\t{\n\t\t\t\t\ttemp.parentNode.appendChild(shapes[i].node);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttemp.parentNode.insertBefore(shapes[i].node, temp.nextSibling);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (temp == null)\n\t\t\t{\n\t\t\t\t// Special case: First HTML node should be first sibling after canvas\n\t\t\t\tif (shapes[i].node.parentNode == state.view.graph.container)\n\t\t\t\t{\n\t\t\t\t\tvar canvas = state.view.canvas;\n\t\t\t\t\t\n\t\t\t\t\twhile (canvas != null && canvas.parentNode != state.view.graph.container)\n\t\t\t\t\t{\n\t\t\t\t\t\tcanvas = canvas.parentNode;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (canvas != null && canvas.nextSibling != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (canvas.nextSibling != shapes[i].node)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshapes[i].node.parentNode.insertBefore(shapes[i].node, canvas.nextSibling);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tshapes[i].node.parentNode.appendChild(shapes[i].node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (shapes[i].node.parentNode != null &&\n\t\t\t\t\tshapes[i].node.parentNode.firstChild != null &&\n\t\t\t\t\tshapes[i].node.parentNode.firstChild != shapes[i].node)\n\t\t\t\t{\n\t\t\t\t\t// Inserts the node as the first child of the parent to implement the order\n\t\t\t\t\tshapes[i].node.parentNode.insertBefore(shapes[i].node, shapes[i].node.parentNode.firstChild);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (html)\n\t\t\t{\n\t\t\t\thtmlNode = shapes[i].node;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnode = shapes[i].node;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [node, htmlNode];\n};\n\n/**\n * Function: getShapesForState\n * \n * Returns the <mxShapes> for the given cell state in the order in which they should\n * appear in the DOM.\n * \n * Parameters:\n * \n * state - <mxCellState> whose shapes should be returned.\n */\nmxCellRenderer.prototype.getShapesForState = function(state)\n{\n\treturn [state.shape, state.text, state.control];\n};\n\n/**\n * Function: redraw\n * \n * Updates the bounds or points and scale of the shapes for the given cell\n * state. This is called in mxGraphView.validatePoints as the last step of\n * updating all cells.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shapes should be updated.\n * force - Optional boolean that specifies if the cell should be reconfiured\n * and redrawn without any additional checks.\n * rendering - Optional boolean that specifies if the cell should actually\n * be drawn into the DOM. If this is false then redraw and/or reconfigure\n * will not be called on the shape.\n */\nmxCellRenderer.prototype.redraw = function(state, force, rendering)\n{\n\tvar shapeChanged = this.redrawShape(state, force, rendering);\n\n\tif (state.shape != null && (rendering == null || rendering))\n\t{\n\t\tthis.redrawLabel(state, shapeChanged);\n\t\tthis.redrawCellOverlays(state, shapeChanged);\n\t\tthis.redrawControl(state, shapeChanged);\n\t}\n};\n\n/**\n * Function: redrawShape\n * \n * Redraws the shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be redrawn.\n */\nmxCellRenderer.prototype.redrawShape = function(state, force, rendering)\n{\n\tvar model = state.view.graph.model;\n\tvar shapeChanged = false;\n\n\t// Forces creation of new shape if shape style has changed\n\tif (state.shape != null && state.shape.style != null && state.style != null &&\n\t\tstate.shape.style[mxConstants.STYLE_SHAPE] != state.style[mxConstants.STYLE_SHAPE])\n\t{\n\t\tstate.shape.destroy();\n\t\tstate.shape = null;\n\t}\n\t\n\tif (state.shape == null && state.view.graph.container != null &&\n\t\tstate.cell != state.view.currentRoot &&\n\t\t(model.isVertex(state.cell) || model.isEdge(state.cell)))\n\t{\n\t\tstate.shape = this.createShape(state);\n\t\t\n\t\tif (state.shape != null)\n\t\t{\n\t\t\tstate.shape.minSvgStrokeWidth = this.minSvgStrokeWidth;\n\t\t\tstate.shape.antiAlias = this.antiAlias;\n\t\n\t\t\tthis.createIndicatorShape(state);\n\t\t\tthis.initializeShape(state);\n\t\t\tthis.createCellOverlays(state);\n\t\t\tthis.installListeners(state);\n\t\t\t\n\t\t\t// Forces a refresh of the handler if one exists\n\t\t\tstate.view.graph.selectionCellsHandler.updateHandler(state);\n\t\t}\n\t}\n\telse if (!force && state.shape != null && (!mxUtils.equalEntries(state.shape.style,\n\t\tstate.style) || this.checkPlaceholderStyles(state)))\n\t{\n\t\tstate.shape.resetStyles();\n\t\tthis.configureShape(state);\n\t\t// LATER: Ignore update for realtime to fix reset of current gesture\n\t\tstate.view.graph.selectionCellsHandler.updateHandler(state);\n\t\tforce = true;\n\t}\n\t\n\t// Updates indicator shape\n\tif (state.shape != null && state.shape.indicatorShape !=\n\t\tthis.getShape(state.view.graph.getIndicatorShape(state)))\n\t{\n\t\tif (state.shape.indicator != null)\n\t\t{\n\t\t\tstate.shape.indicator.destroy();\n\t\t\tstate.shape.indicator = null;\n\t\t}\n\t\t\n\t\tthis.createIndicatorShape(state);\n\t\t\n\t\tif (state.shape.indicatorShape != null)\n\t\t{\n\t\t\tstate.shape.indicator = new state.shape.indicatorShape();\n\t\t\tstate.shape.indicator.dialect = state.shape.dialect;\n\t\t\tstate.shape.indicator.init(state.node);\n\t\t\tforce = true;\n\t\t}\n\t}\n\n\tif (state.shape != null)\n\t{\n\t\t// Handles changes of the collapse icon\n\t\tthis.createControl(state);\n\t\t\n\t\t// Redraws the cell if required, ignores changes to bounds if points are\n\t\t// defined as the bounds are updated for the given points inside the shape\n\t\tif (force || this.isShapeInvalid(state, state.shape))\n\t\t{\n\t\t\tif (state.absolutePoints != null)\n\t\t\t{\n\t\t\t\tstate.shape.points = state.absolutePoints.slice();\n\t\t\t\tstate.shape.bounds = null;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.shape.points = null;\n\t\t\t\tstate.shape.bounds = new mxRectangle(state.x, state.y, state.width, state.height);\n\t\t\t}\n\n\t\t\tstate.shape.scale = state.view.scale;\n\t\t\t\n\t\t\tif (rendering == null || rendering)\n\t\t\t{\n\t\t\t\tthis.doRedrawShape(state);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.shape.updateBoundingBox();\n\t\t\t}\n\t\t\t\n\t\t\tshapeChanged = true;\n\t\t}\n\t}\n\n\treturn shapeChanged;\n};\n\n/**\n * Function: doRedrawShape\n * \n * Invokes redraw on the shape of the given state.\n */\nmxCellRenderer.prototype.doRedrawShape = function(state)\n{\n\tstate.shape.redraw();\n};\n\n/**\n * Function: isShapeInvalid\n * \n * Returns true if the given shape must be repainted.\n */\nmxCellRenderer.prototype.isShapeInvalid = function(state, shape)\n{\n\treturn shape.bounds == null || shape.scale != state.view.scale ||\n\t\t(state.absolutePoints == null && !shape.bounds.equals(state)) ||\n\t\t(state.absolutePoints != null && !mxUtils.equalPoints(shape.points, state.absolutePoints))\n};\n\n/**\n * Function: destroy\n * \n * Destroys the shapes associated with the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shapes should be destroyed.\n */\nmxCellRenderer.prototype.destroy = function(state)\n{\n\tif (state.shape != null)\n\t{\n\t\tif (state.text != null)\n\t\t{\t\t\n\t\t\tstate.text.destroy();\n\t\t\tstate.text = null;\n\t\t}\n\t\t\n\t\tif (state.overlays != null)\n\t\t{\n\t\t\tstate.overlays.visit(function(id, shape)\n\t\t\t{\n\t\t\t\tshape.destroy();\n\t\t\t});\n\t\t\t\n\t\t\tstate.overlays = null;\n\t\t}\n\n\t\tif (state.control != null)\n\t\t{\n\t\t\tstate.control.destroy();\n\t\t\tstate.control = null;\n\t\t}\n\t\t\n\t\tstate.shape.destroy();\n\t\tstate.shape = null;\n\t}\n};\n\n__mxOutput.mxCellRenderer = typeof mxCellRenderer !== 'undefined' ? mxCellRenderer : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxEdgeStyle =\n{\n\t/**\n\t * Class: mxEdgeStyle\n\t * \n\t * Provides various edge styles to be used as the values for\n\t * <mxConstants.STYLE_EDGE> in a cell style.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * var style = stylesheet.getDefaultEdgeStyle();\n\t * style[mxConstants.STYLE_EDGE] = mxEdgeStyle.ElbowConnector;\n\t * (end)\n\t * \n\t * Sets the default edge style to <ElbowConnector>.\n\t * \n\t * Custom edge style:\n\t * \n\t * To write a custom edge style, a function must be added to the mxEdgeStyle\n\t * object as follows:\n\t * \n\t * (code)\n\t * mxEdgeStyle.MyStyle = function(state, source, target, points, result)\n\t * {\n\t *   if (source != null && target != null)\n\t *   {\n\t *     var pt = new mxPoint(target.getCenterX(), source.getCenterY());\n\t * \n\t *     if (mxUtils.contains(source, pt.x, pt.y))\n\t *     {\n\t *       pt.y = source.y + source.height;\n\t *     }\n\t * \n\t *     result.push(pt);\n\t *   }\n\t * };\n\t * (end)\n\t * \n\t * In the above example, a right angle is created using a point on the\n\t * horizontal center of the target vertex and the vertical center of the source\n\t * vertex. The code checks if that point intersects the source vertex and makes\n\t * the edge straight if it does. The point is then added into the result array,\n\t * which acts as the return value of the function.\n\t *\n\t * The new edge style should then be registered in the <mxStyleRegistry> as follows:\n\t * (code)\n\t * mxStyleRegistry.putValue('myEdgeStyle', mxEdgeStyle.MyStyle);\n\t * (end)\n\t * \n\t * The custom edge style above can now be used in a specific edge as follows:\n\t * \n\t * (code)\n\t * model.setStyle(edge, 'edgeStyle=myEdgeStyle');\n\t * (end)\n\t * \n\t * Note that the key of the <mxStyleRegistry> entry for the function should\n\t * be used in string values, unless <mxGraphView.allowEval> is true, in\n\t * which case you can also use mxEdgeStyle.MyStyle for the value in the\n\t * cell style above.\n\t * \n\t * Or it can be used for all edges in the graph as follows:\n\t * \n\t * (code)\n\t * var style = graph.getStylesheet().getDefaultEdgeStyle();\n\t * style[mxConstants.STYLE_EDGE] = mxEdgeStyle.MyStyle;\n\t * (end)\n\t * \n\t * Note that the object can be used directly when programmatically setting\n\t * the value, but the key in the <mxStyleRegistry> should be used when\n\t * setting the value via a key, value pair in a cell style.\n\t * \n\t * Function: EntityRelation\n\t * \n\t * Implements an entity relation style for edges (as used in database\n\t * schema diagrams). At the time the function is called, the result\n\t * array contains a placeholder (null) for the first absolute point,\n\t * that is, the point where the edge and source terminal are connected.\n\t * The implementation of the style then adds all intermediate waypoints\n\t * except for the last point, that is, the connection point between the\n\t * edge and the target terminal. The first ant the last point in the\n\t * result array are then replaced with mxPoints that take into account\n\t * the terminal's perimeter and next point on the edge.\n\t *\n\t * Parameters:\n\t * \n\t * state - <mxCellState> that represents the edge to be updated.\n\t * source - <mxCellState> that represents the source terminal.\n\t * target - <mxCellState> that represents the target terminal.\n\t * points - List of relative control points.\n\t * result - Array of <mxPoints> that represent the actual points of the\n\t * edge.\n\t */\n\t EntityRelation: function(state, source, target, points, result)\n\t {\n\t\tvar view = state.view;\n\t \tvar graph = view.graph;\n\t \tvar segment = mxUtils.getValue(state.style,\n\t \t\t\tmxConstants.STYLE_SEGMENT,\n\t \t\t\tmxConstants.ENTITY_SEGMENT) * view.scale;\n\t \t\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\n\t \tvar isSourceLeft = false;\n\t \t\n\t \tif (source != null)\n\t \t{\n \t\t\tvar sourceGeometry = graph.getCellGeometry(source.cell);\n\t\n\t\t \tif (sourceGeometry.relative)\n\t\t \t{\n\t\t \t\tisSourceLeft = sourceGeometry.x <= 0.5;\n\t\t \t}\n\t\t \telse if (target != null)\n\t\t \t{\n\t\t \t\tisSourceLeft = ((pe != null) ? pe.x : target.x + target.width) < ((p0 != null) ? p0.x : source.x);\n\t\t \t}\n\t \t}\n\n\t\tif (p0 != null)\n\t\t{\n\t\t\tsource = new mxCellState();\n\t\t\tsource.x = p0.x;\n\t\t\tsource.y = p0.y;\n\t\t}\n\t\telse if (source != null)\n\t\t{\n\t\t\tvar constraint = mxUtils.getPortConstraints(source, state, true, mxConstants.DIRECTION_MASK_NONE);\n\t\t\t\n\t\t\tif (constraint != mxConstants.DIRECTION_MASK_NONE && constraint != mxConstants.DIRECTION_MASK_WEST +\n\t\t\t\tmxConstants.DIRECTION_MASK_EAST)\n\t\t\t{\n\t\t\t\tisSourceLeft = constraint == mxConstants.DIRECTION_MASK_WEST;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn;\n\t\t}\n\t \t\n\t \tvar isTargetLeft = true;\n\t \t\n\t \tif (target != null)\n\t \t{\n\t\t \tvar targetGeometry = graph.getCellGeometry(target.cell);\n\t\n\t\t \tif (targetGeometry.relative)\n\t\t \t{\n\t\t \t\tisTargetLeft = targetGeometry.x <= 0.5;\n\t\t \t}\n\t\t \telse if (source != null)\n\t\t \t{\n\t\t \t\tisTargetLeft = ((p0 != null) ? p0.x : source.x + source.width) < ((pe != null) ? pe.x : target.x);\n\t\t \t}\n\t \t}\n\t\t\n\t\tif (pe != null)\n\t\t{\n\t\t\ttarget = new mxCellState();\n\t\t\ttarget.x = pe.x;\n\t\t\ttarget.y = pe.y;\n\t\t}\n\t\telse if (target != null)\n\t \t{\n\t\t\tvar constraint = mxUtils.getPortConstraints(target, state, false, mxConstants.DIRECTION_MASK_NONE);\n\n\t\t\tif (constraint != mxConstants.DIRECTION_MASK_NONE && constraint != mxConstants.DIRECTION_MASK_WEST +\n\t\t\t\tmxConstants.DIRECTION_MASK_EAST)\n\t\t\t{\n\t\t\t\tisTargetLeft = constraint == mxConstants.DIRECTION_MASK_WEST;\n\t\t\t}\n\t \t}\n\t\t\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tvar x0 = (isSourceLeft) ? source.x : source.x + source.width;\n\t\t\tvar y0 = view.getRoutingCenterY(source);\n\t\t\t\n\t\t\tvar xe = (isTargetLeft) ? target.x : target.x + target.width;\n\t\t\tvar ye = view.getRoutingCenterY(target);\n\t\n\t\t\tvar seg = segment;\n\t\n\t\t\tvar dx = (isSourceLeft) ? -seg : seg;\n\t\t\tvar dep = new mxPoint(x0 + dx, y0);\n\t\t\t\t\t\n\t\t\tdx = (isTargetLeft) ? -seg : seg;\n\t\t\tvar arr = new mxPoint(xe + dx, ye);\n\t\t\t\n\t\t\t// Adds intermediate points if both go out on same side\n\t\t\tif (isSourceLeft == isTargetLeft)\n\t\t\t{\n\t\t\t\tvar x = (isSourceLeft) ?\n\t\t\t\t\tMath.min(x0, xe)-segment :\n\t\t\t\t\tMath.max(x0, xe)+segment;\n\t\n\t\t\t\tresult.push(new mxPoint(x, y0));\n\t\t\t\tresult.push(new mxPoint(x, ye));\n\t\t\t}\n\t\t\telse if ((dep.x < arr.x) == isSourceLeft)\n\t\t\t{\n\t\t\t\tvar midY = y0 + (ye - y0) / 2;\n\t\n\t\t\t\tresult.push(dep);\n\t\t\t\tresult.push(new mxPoint(dep.x, midY));\n\t\t\t\tresult.push(new mxPoint(arr.x, midY));\n\t\t\t\tresult.push(arr);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.push(dep);\n\t\t\t\tresult.push(arr);\n\t\t\t}\n\t\t}\n\t },\n\n\t /**\n\t * Function: Loop\n\t * \n\t * Implements a self-reference, aka. loop.\n\t */\n\tLoop: function(state, source, target, points, result)\n\t{\n\t\tvar pts = state.absolutePoints;\n\t\t\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\n\t\tif (p0 != null && pe != null)\n\t\t{\n\t\t\tif (points != null && points.length > 0)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < points.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar pt = points[i];\n\t\t\t\t\tpt = state.view.transformControlPoint(state, pt);\n\t\t\t\t\tresult.push(new mxPoint(pt.x, pt.y));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (source != null)\n\t\t{\n\t\t\tvar view = state.view;\n\t\t\tvar graph = view.graph;\n\t\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tpt = view.transformControlPoint(state, pt);\n\t\t\t\t\t\n\t\t\t\tif (mxUtils.contains(source, pt.x, pt.y))\n\t\t\t\t{\n\t\t\t\t\tpt = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = 0;\n\t\t\tvar dx = 0;\n\t\t\tvar y = 0;\n\t\t\tvar dy = 0;\n\t\t\t\n\t\t \tvar seg = mxUtils.getValue(state.style, mxConstants.STYLE_SEGMENT,\n\t\t \t\tgraph.gridSize) * view.scale;\n\t\t\tvar dir = mxUtils.getValue(state.style, mxConstants.STYLE_DIRECTION,\n\t\t\t\tmxConstants.DIRECTION_WEST);\n\t\t\t\n\t\t\tif (dir == mxConstants.DIRECTION_NORTH ||\n\t\t\t\tdir == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tx = view.getRoutingCenterX(source);\n\t\t\t\tdx = seg;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ty = view.getRoutingCenterY(source);\n\t\t\t\tdy = seg;\n\t\t\t}\n\t\t\t\n\t\t\tif (pt == null ||\n\t\t\t\tpt.x < source.x ||\n\t\t\t\tpt.x > source.x + source.width)\n\t\t\t{\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tx = pt.x;\n\t\t\t\t\tdy = Math.max(Math.abs(y - pt.y), dy);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (dir == mxConstants.DIRECTION_NORTH)\n\t\t\t\t\t{\n\t\t\t\t\t\ty = source.y - 2 * dx;\n\t\t\t\t\t}\n\t\t\t\t\telse if (dir == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t\t{\n\t\t\t\t\t\ty = source.y + source.height + 2 * dx;\n\t\t\t\t\t}\n\t\t\t\t\telse if (dir == mxConstants.DIRECTION_EAST)\n\t\t\t\t\t{\n\t\t\t\t\t\tx = source.x - 2 * dy;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tx = source.x + source.width + 2 * dy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pt != null)\n\t\t\t{\n\t\t\t\tx = view.getRoutingCenterX(source);\n\t\t\t\tdx = Math.max(Math.abs(x - pt.x), dy);\n\t\t\t\ty = pt.y;\n\t\t\t\tdy = 0;\n\t\t\t}\n\t\t\t\n\t\t\tresult.push(new mxPoint(x - dx, y - dy));\n\t\t\tresult.push(new mxPoint(x + dx, y + dy));\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: ElbowConnector\n\t * \n\t * Uses either <SideToSide> or <TopToBottom> depending on the horizontal\n\t * flag in the cell style. <SideToSide> is used if horizontal is true or\n\t * unspecified. See <EntityRelation> for a description of the\n\t * parameters.\n\t */\n\tElbowConnector: function(state, source, target, points, result)\n\t{\n\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\n\t\tvar vertical = false;\n\t\tvar horizontal = false;\n\t\t\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tvar left = Math.min(source.x, target.x);\n\t\t\t\tvar right = Math.max(source.x + source.width,\n\t\t\t\t\ttarget.x + target.width);\n\t\n\t\t\t\tvar top = Math.min(source.y, target.y);\n\t\t\t\tvar bottom = Math.max(source.y + source.height,\n\t\t\t\t\ttarget.y + target.height);\n\n\t\t\t\tpt = state.view.transformControlPoint(state, pt);\n\t\t\t\t\t\n\t\t\t\tvertical = pt.y < top || pt.y > bottom;\n\t\t\t\thorizontal = pt.x < left || pt.x > right;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar left = Math.max(source.x, target.x);\n\t\t\t\tvar right = Math.min(source.x + source.width,\n\t\t\t\t\ttarget.x + target.width);\n\t\t\t\t\t\n\t\t\t\tvertical = left == right;\n\t\t\t\t\n\t\t\t\tif (!vertical)\n\t\t\t\t{\n\t\t\t\t\tvar top = Math.max(source.y, target.y);\n\t\t\t\t\tvar bottom = Math.min(source.y + source.height,\n\t\t\t\t\t\ttarget.y + target.height);\n\t\t\t\t\t\t\n\t\t\t\t\thorizontal = top == bottom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!horizontal && (vertical ||\n\t\t\tstate.style[mxConstants.STYLE_ELBOW] == mxConstants.ELBOW_VERTICAL))\n\t\t{\n\t\t\tmxEdgeStyle.TopToBottom(state, source, target, points, result);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxEdgeStyle.SideToSide(state, source, target, points, result);\n\t\t}\n\t},\n\n\t/**\n\t * Function: SideToSide\n\t * \n\t * Implements a vertical elbow edge. See <EntityRelation> for a description\n\t * of the parameters.\n\t */\n\tSideToSide: function(state, source, target, points, result)\n\t{\n\t\tvar view = state.view;\n\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt = view.transformControlPoint(state, pt);\n\t\t}\n\t\t\n\t\tif (p0 != null)\n\t\t{\n\t\t\tsource = new mxCellState();\n\t\t\tsource.x = p0.x;\n\t\t\tsource.y = p0.y;\n\t\t}\n\t\t\n\t\tif (pe != null)\n\t\t{\n\t\t\ttarget = new mxCellState();\n\t\t\ttarget.x = pe.x;\n\t\t\ttarget.y = pe.y;\n\t\t}\n\t\t\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tvar l = Math.max(source.x, target.x);\n\t\t\tvar r = Math.min(source.x + source.width,\n\t\t\t\t\t\t\t target.x + target.width);\n\t\n\t\t\tvar x = (pt != null) ? pt.x : Math.round(r + (l - r) / 2);\n\t\n\t\t\tvar y1 = view.getRoutingCenterY(source);\n\t\t\tvar y2 = view.getRoutingCenterY(target);\n\t\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tif (pt.y >= source.y && pt.y <= source.y + source.height)\n\t\t\t\t{\n\t\t\t\t\ty1 = pt.y;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (pt.y >= target.y && pt.y <= target.y + target.height)\n\t\t\t\t{\n\t\t\t\t\ty2 = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (!mxUtils.contains(target, x, y1) &&\n\t\t\t\t!mxUtils.contains(source, x, y1))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x,  y1));\n\t\t\t}\n\t\n\t\t\tif (!mxUtils.contains(target, x, y2) &&\n\t\t\t\t!mxUtils.contains(source, x, y2))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x, y2));\n\t\t\t}\n\t\n\t\t\tif (result.length == 1)\n\t\t\t{\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tif (!mxUtils.contains(target, x, pt.y) &&\n\t\t\t\t\t\t!mxUtils.contains(source, x, pt.y))\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(new mxPoint(x, pt.y));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\t\n\t\t\t\t\tvar t = Math.max(source.y, target.y);\n\t\t\t\t\tvar b = Math.min(source.y + source.height,\n\t\t\t\t\t\t\t target.y + target.height);\n\t\t\t\t\t\t \n\t\t\t\t\tresult.push(new mxPoint(x, t + (b - t) / 2));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: TopToBottom\n\t * \n\t * Implements a horizontal elbow edge. See <EntityRelation> for a\n\t * description of the parameters.\n\t */\n\tTopToBottom: function(state, source, target, points, result)\n\t{\n\t\tvar view = state.view;\n\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt = view.transformControlPoint(state, pt);\n\t\t}\n\t\t\n\t\tif (p0 != null)\n\t\t{\n\t\t\tsource = new mxCellState();\n\t\t\tsource.x = p0.x;\n\t\t\tsource.y = p0.y;\n\t\t}\n\t\t\n\t\tif (pe != null)\n\t\t{\n\t\t\ttarget = new mxCellState();\n\t\t\ttarget.x = pe.x;\n\t\t\ttarget.y = pe.y;\n\t\t}\n\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tvar t = Math.max(source.y, target.y);\n\t\t\tvar b = Math.min(source.y + source.height,\n\t\t\t\t\t\t\t target.y + target.height);\n\t\n\t\t\tvar x = view.getRoutingCenterX(source);\n\t\t\t\n\t\t\tif (pt != null &&\n\t\t\t\tpt.x >= source.x &&\n\t\t\t\tpt.x <= source.x + source.width)\n\t\t\t{\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\t\n\t\t\tvar y = (pt != null) ? pt.y : Math.round(b + (t - b) / 2);\n\t\t\t\n\t\t\tif (!mxUtils.contains(target, x, y) &&\n\t\t\t\t!mxUtils.contains(source, x, y))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x, y));\t\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (pt != null &&\n\t\t\t\tpt.x >= target.x &&\n\t\t\t\tpt.x <= target.x + target.width)\n\t\t\t{\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx = view.getRoutingCenterX(target);\n\t\t\t}\n\t\t\t\n\t\t\tif (!mxUtils.contains(target, x, y) &&\n\t\t\t\t!mxUtils.contains(source, x, y))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x, y));\t\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (result.length == 1)\n\t\t\t{\n\t\t\t\tif (pt != null && result.length == 1)\n\t\t\t\t{\n\t\t\t\t\tif (!mxUtils.contains(target, pt.x, y) &&\n\t\t\t\t\t\t!mxUtils.contains(source, pt.x, y))\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(new mxPoint(pt.x, y));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar l = Math.max(source.x, target.x);\n\t\t\t\t\tvar r = Math.min(source.x + source.width,\n\t\t\t\t\t\t\t target.x + target.width);\n\t\t\t\t\t\t \n\t\t\t\t\tresult.push(new mxPoint(l + (r - l) / 2, y));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: SegmentConnector\n\t * \n\t * Implements an orthogonal edge style. Use <mxEdgeSegmentHandler>\n\t * as an interactive handler for this style.\n\t * \n\t * state - <mxCellState> that represents the edge to be updated.\n\t * sourceScaled - <mxCellState> that represents the source terminal.\n\t * targetScaled - <mxCellState> that represents the target terminal.\n\t * controlHints - List of relative control points.\n\t * result - Array of <mxPoints> that represent the actual points of the\n\t * edge.\n\t *\n\t */\n\tSegmentConnector: function(state, sourceScaled, targetScaled, controlHints, result)\n\t{\n\t\t// Creates array of all way- and terminalpoints\n\t\tvar pts = mxEdgeStyle.scalePointArray(state.absolutePoints, state.view.scale);\n\t\tvar source = mxEdgeStyle.scaleCellState(sourceScaled, state.view.scale);\n\t\tvar target = mxEdgeStyle.scaleCellState(targetScaled, state.view.scale);\n\t\tvar tol = 1;\n\t\t\n\t\t// Whether the first segment outgoing from the source end is horizontal\n\t\tvar lastPushed = (result.length > 0) ? result[0] : null;\n\t\tvar horizontal = true;\n\t\tvar hint = null;\n\t\t\n\t\t// Adds waypoints only if outside of tolerance\n\t\tfunction pushPoint(pt)\n\t\t{\n\t\t\tpt.x = Math.round(pt.x * state.view.scale * 10) / 10;\n\t\t\tpt.y = Math.round(pt.y * state.view.scale * 10) / 10;\n\n\t\t\tif (lastPushed == null || Math.abs(lastPushed.x - pt.x) >= tol || Math.abs(lastPushed.y - pt.y) >= Math.max(1, state.view.scale))\n\t\t\t{\n\t\t\t\tresult.push(pt);\n\t\t\t\tlastPushed = pt;\n\t\t\t}\n\t\t\t\n\t\t\treturn lastPushed;\n\t\t};\n\n\t\t// Adds the first point\n\t\tvar pt = pts[0];\n\t\t\n\t\tif (pt == null && source != null)\n\t\t{\n\t\t\tpt = new mxPoint(state.view.getRoutingCenterX(source), state.view.getRoutingCenterY(source));\n\t\t}\n\t\telse if (pt != null)\n\t\t{\n\t\t\tpt = pt.clone();\n\t\t}\n\t\t\n\t\tvar lastInx = pts.length - 1;\n\n\t\t// Adds the waypoints\n\t\tif (controlHints != null && controlHints.length > 0)\n\t\t{\n\t\t\t// Converts all hints and removes nulls\n\t\t\tvar hints = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < controlHints.length; i++)\n\t\t\t{\n\t\t\t\tvar tmp = state.view.transformControlPoint(state, controlHints[i], true);\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\thints.push(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (hints.length == 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// Aligns source and target hint to fixed points\n\t\t\tif (pt != null && hints[0] != null)\n\t\t\t{\n\t\t\t\tif (Math.abs(hints[0].x - pt.x) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[0].x = pt.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(hints[0].y - pt.y) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[0].y = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar pe = pts[lastInx];\n\t\t\t\n\t\t\tif (pe != null && hints[hints.length - 1] != null)\n\t\t\t{\n\t\t\t\tif (Math.abs(hints[hints.length - 1].x - pe.x) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[hints.length - 1].x = pe.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(hints[hints.length - 1].y - pe.y) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[hints.length - 1].y = pe.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\thint = hints[0];\n\n\t\t\tvar currentTerm = source;\n\t\t\tvar currentPt = pts[0];\n\t\t\tvar hozChan = false;\n\t\t\tvar vertChan = false;\n\t\t\tvar currentHint = hint;\n\t\t\t\n\t\t\tif (currentPt != null)\n\t\t\t{\n\t\t\t\tcurrentTerm = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Check for alignment with fixed points and with channels\n\t\t\t// at source and target segments only\n\t\t\tfor (var i = 0; i < 2; i++)\n\t\t\t{\n\t\t\t\tvar fixedVertAlign = currentPt != null && currentPt.x == currentHint.x;\n\t\t\t\tvar fixedHozAlign = currentPt != null && currentPt.y == currentHint.y;\n\t\t\t\t\n\t\t\t\tvar inHozChan = currentTerm != null && (currentHint.y >= currentTerm.y &&\n\t\t\t\t\t\tcurrentHint.y <= currentTerm.y + currentTerm.height);\n\t\t\t\tvar inVertChan = currentTerm != null && (currentHint.x >= currentTerm.x &&\n\t\t\t\t\t\tcurrentHint.x <= currentTerm.x + currentTerm.width);\n\n\t\t\t\thozChan = fixedHozAlign || (currentPt == null && inHozChan);\n\t\t\t\tvertChan = fixedVertAlign || (currentPt == null && inVertChan);\n\t\t\t\t\n\t\t\t\t// If the current hint falls in both the hor and vert channels in the case\n\t\t\t\t// of a floating port, or if the hint is exactly co-incident with a \n\t\t\t\t// fixed point, ignore the source and try to work out the orientation\n\t\t\t\t// from the target end\n\t\t\t\tif (i==0 && ((hozChan && vertChan) || (fixedVertAlign && fixedHozAlign)))\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (currentPt != null && (!fixedHozAlign && !fixedVertAlign) && (inHozChan || inVertChan)) \n\t\t\t\t\t{\n\t\t\t\t\t\thorizontal = inHozChan ? false : true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\tif (vertChan || hozChan)\n\t\t\t\t\t{\n\t\t\t\t\t\thorizontal = hozChan;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (i == 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Work back from target end\n\t\t\t\t\t\t\thorizontal = hints.length % 2 == 0 ? hozChan : vertChan;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrentTerm = target;\n\t\t\t\tcurrentPt = pts[lastInx];\n\t\t\t\t\n\t\t\t\tif (currentPt != null)\n\t\t\t\t{\n\t\t\t\t\tcurrentTerm = null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrentHint = hints[hints.length - 1];\n\t\t\t\t\n\t\t\t\tif (fixedVertAlign && fixedHozAlign)\n\t\t\t\t{\n\t\t\t\t\thints = hints.slice(1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (horizontal && ((pts[0] != null && pts[0].y != hint.y) ||\n\t\t\t\t(pts[0] == null && source != null &&\n\t\t\t\t(hint.y < source.y || hint.y > source.y + source.height))))\n\t\t\t{\n\t\t\t\tpushPoint(new mxPoint(pt.x, hint.y));\n\t\t\t}\n\t\t\telse if (!horizontal && ((pts[0] != null && pts[0].x != hint.x) ||\n\t\t\t\t\t(pts[0] == null && source != null &&\n\t\t\t\t\t(hint.x < source.x || hint.x > source.x + source.width))))\n\t\t\t{\n\t\t\t\tpushPoint(new mxPoint(hint.x, pt.y));\n\t\t\t}\n\t\t\t\n\t\t\tif (horizontal)\n\t\t\t{\n\t\t\t\tpt.y = hint.y;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpt.x = hint.x;\n\t\t\t}\n\t\t\n\t\t\tfor (var i = 0; i < hints.length; i++)\n\t\t\t{\n\t\t\t\thorizontal = !horizontal;\n\t\t\t\thint = hints[i];\n\t\t\t\t\n//\t\t\t\tmxLog.show();\n//\t\t\t\tmxLog.debug('hint', i, hint.x, hint.y);\n\t\t\t\t\n\t\t\t\tif (horizontal)\n\t\t\t\t{\n\t\t\t\t\tpt.y = hint.y;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpt.x = hint.x;\n\t\t\t\t}\n\t\t\n\t\t\t\tpushPoint(pt.clone());\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\thint = pt;\n\t\t\t// FIXME: First click in connect preview toggles orientation\n\t\t\thorizontal = true;\n\t\t}\n\n\t\t// Adds the last point\n\t\tpt = pts[lastInx];\n\n\t\tif (pt == null && target != null)\n\t\t{\n\t\t\tpt = new mxPoint(state.view.getRoutingCenterX(target), state.view.getRoutingCenterY(target));\n\t\t}\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tif (hint != null)\n\t\t\t{\n\t\t\t\tif (horizontal && ((pts[lastInx] != null && pts[lastInx].y != hint.y) ||\n\t\t\t\t\t(pts[lastInx] == null && target != null &&\n\t\t\t\t\t(hint.y < target.y || hint.y > target.y + target.height))))\n\t\t\t\t{\n\t\t\t\t\tpushPoint(new mxPoint(pt.x, hint.y));\n\t\t\t\t}\n\t\t\t\telse if (!horizontal && ((pts[lastInx] != null && pts[lastInx].x != hint.x) ||\n\t\t\t\t\t\t(pts[lastInx] == null && target != null &&\n\t\t\t\t\t\t(hint.x < target.x || hint.x > target.x + target.width))))\n\t\t\t\t{\n\t\t\t\t\tpushPoint(new mxPoint(hint.x, pt.y));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes bends inside the source terminal for floating ports\n\t\tif (pts[0] == null && source != null)\n\t\t{\n\t\t\twhile (result.length > 1 && result[1] != null &&\n\t\t\t\tmxUtils.contains(source, result[1].x, result[1].y))\n\t\t\t{\n\t\t\t\tresult.splice(1, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes bends inside the target terminal\n\t\tif (pts[lastInx] == null && target != null)\n\t\t{\n\t\t\twhile (result.length > 1 && result[result.length - 1] != null &&\n\t\t\t\tmxUtils.contains(target, result[result.length - 1].x, result[result.length - 1].y))\n\t\t\t{\n\t\t\t\tresult.splice(result.length - 1, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes last point if inside tolerance with end point\n\t\tif (pe != null && result[result.length - 1] != null &&\n\t\t\tMath.abs(pe.x - result[result.length - 1].x) <= tol &&\n\t\t\tMath.abs(pe.y - result[result.length - 1].y) <= tol)\n\t\t{\n\t\t\tresult.splice(result.length - 1, 1);\n\t\t\t\n\t\t\t// Lines up second last point in result with end point\n\t\t\tif (result[result.length - 1] != null)\n\t\t\t{\n\t\t\t\tif (Math.abs(result[result.length - 1].x - pe.x) < tol)\n\t\t\t\t{\n\t\t\t\t\tresult[result.length - 1].x = pe.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(result[result.length - 1].y - pe.y) < tol)\n\t\t\t\t{\n\t\t\t\t\tresult[result.length - 1].y = pe.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\n\torthBuffer: 10,\n\t\n\torthPointsFallback: true,\n\n\tdirVectors: [ [ -1, 0 ],\n\t\t\t[ 0, -1 ], [ 1, 0 ], [ 0, 1 ], [ -1, 0 ], [ 0, -1 ], [ 1, 0 ] ],\n\n\twayPoints1: [ [ 0, 0], [ 0, 0],  [ 0, 0], [ 0, 0], [ 0, 0],  [ 0, 0],\n\t              [ 0, 0],  [ 0, 0], [ 0, 0],  [ 0, 0], [ 0, 0],  [ 0, 0] ],\n\n\troutePatterns: [\n\t\t[ [ 513, 2308, 2081, 2562 ], [ 513, 1090, 514, 2184, 2114, 2561 ],\n\t\t\t[ 513, 1090, 514, 2564, 2184, 2562 ],\n\t\t\t[ 513, 2308, 2561, 1090, 514, 2568, 2308 ] ],\n\t[ [ 514, 1057, 513, 2308, 2081, 2562 ], [ 514, 2184, 2114, 2561 ],\n\t\t\t[ 514, 2184, 2562, 1057, 513, 2564, 2184 ],\n\t\t\t[ 514, 1057, 513, 2568, 2308, 2561 ] ],\n\t[ [ 1090, 514, 1057, 513, 2308, 2081, 2562 ], [ 2114, 2561 ],\n\t\t\t[ 1090, 2562, 1057, 513, 2564, 2184 ],\n\t\t\t[ 1090, 514, 1057, 513, 2308, 2561, 2568 ] ],\n\t[ [ 2081, 2562 ], [ 1057, 513, 1090, 514, 2184, 2114, 2561 ],\n\t\t\t[ 1057, 513, 1090, 514, 2184, 2562, 2564 ],\n\t\t\t[ 1057, 2561, 1090, 514, 2568, 2308 ] ] ],\n\t\n\tinlineRoutePatterns: [\n\t\t\t[ null, [ 2114, 2568 ], null, null ],\n\t\t\t[ null, [ 514, 2081, 2114, 2568 ] , null, null ],\n\t\t\t[ null, [ 2114, 2561 ], null, null ],\n\t\t\t[ [ 2081, 2562 ], [ 1057, 2114, 2568 ],\n\t\t\t\t\t[ 2184, 2562 ],\n\t\t\t\t\tnull ] ],\n\tvertexSeperations: [],\n\n\tlimits: [\n\t       [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n\t       [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ] ],\n\n\tLEFT_MASK: 32,\n\n\tTOP_MASK: 64,\n\n\tRIGHT_MASK: 128,\n\n\tBOTTOM_MASK: 256,\n\n\tLEFT: 1,\n\n\tTOP: 2,\n\n\tRIGHT: 4,\n\n\tBOTTOM: 8,\n\n\t// TODO remove magic numbers\n\tSIDE_MASK: 480,\n\t//mxEdgeStyle.LEFT_MASK | mxEdgeStyle.TOP_MASK | mxEdgeStyle.RIGHT_MASK\n\t//| mxEdgeStyle.BOTTOM_MASK,\n\n\tCENTER_MASK: 512,\n\n\tSOURCE_MASK: 1024,\n\n\tTARGET_MASK: 2048,\n\n\tVERTEX_MASK: 3072,\n\t// mxEdgeStyle.SOURCE_MASK | mxEdgeStyle.TARGET_MASK,\n\t\n\tgetJettySize: function(state, isSource)\n\t{\n\t\tvar value = mxUtils.getValue(state.style, (isSource) ? mxConstants.STYLE_SOURCE_JETTY_SIZE :\n\t\t\tmxConstants.STYLE_TARGET_JETTY_SIZE, mxUtils.getValue(state.style,\n\t\t\t\t\tmxConstants.STYLE_JETTY_SIZE, mxEdgeStyle.orthBuffer));\n\t\t\n\t\tif (value == 'auto')\n\t\t{\n\t\t\t// Computes the automatic jetty size\n\t\t\tvar type = mxUtils.getValue(state.style, (isSource) ? mxConstants.STYLE_STARTARROW : mxConstants.STYLE_ENDARROW, mxConstants.NONE);\n\t\t\t\n\t\t\tif (type != mxConstants.NONE)\n\t\t\t{\n\t\t\t\tvar size = mxUtils.getNumber(state.style, (isSource) ? mxConstants.STYLE_STARTSIZE : mxConstants.STYLE_ENDSIZE, mxConstants.DEFAULT_MARKERSIZE);\n\t\t\t\tvalue = Math.max(2, Math.ceil((size + mxEdgeStyle.orthBuffer) / mxEdgeStyle.orthBuffer)) * mxEdgeStyle.orthBuffer;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvalue = 2 * mxEdgeStyle.orthBuffer;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\t\n\t/**\n\t * Function: scalePointArray\n\t * \n\t * Scales an array of <mxPoint>\n\t * \n\t * Parameters:\n\t * \n\t * points - array of <mxPoint> to scale\n\t * scale - the scaling to divide by\n\t * \n\t */\n\tscalePointArray: function(points, scale)\n\t{\n\t\tvar result = [];\n\n\t\tif (points != null)\n\t\t{\n\t\t\tfor (var i = 0; i < points.length; i++)\n\t\t\t{\n\t\t\t\tif (points[i] != null)\n\t\t\t\t{\n\t\t\t\t\tvar pt = new mxPoint(Math.round(points[i].x / scale * 10) / 10,\n\t\t\t\t\t\t\t\t\t\tMath.round(points[i].y / scale * 10) / 10);\n\t\t\t\t\tresult[i] = pt;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult[i] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = null;\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: scaleCellState\n\t * \n\t * Scales an <mxCellState>\n\t * \n\t * Parameters:\n\t * \n\t * state - <mxCellState> to scale\n\t * scale - the scaling to divide by\n\t * \n\t */\n\tscaleCellState: function(state, scale)\n\t{\n\t\tvar result = null;\n\n\t\tif (state != null)\n\t\t{\n\t\t\tresult = state.clone();\n\t\t\tresult.setRect(Math.round(state.x / scale * 10) / 10,\n\t\t\t\t\t\t\tMath.round(state.y / scale * 10) / 10,\n\t\t\t\t\t\t\tMath.round(state.width / scale * 10) / 10,\n\t\t\t\t\t\t\tMath.round(state.height / scale * 10) / 10);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = null;\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\n\t/**\n\t * Function: OrthConnector\n\t * \n\t * Implements a local orthogonal router between the given\n\t * cells.\n\t * \n\t * Parameters:\n\t * \n\t * state - <mxCellState> that represents the edge to be updated.\n\t * sourceScaled - <mxCellState> that represents the source terminal.\n\t * targetScaled - <mxCellState> that represents the target terminal.\n\t * controlHints - List of relative control points.\n\t * result - Array of <mxPoints> that represent the actual points of the\n\t * edge.\n\t * \n\t */\n\tOrthConnector: function(state, sourceScaled, targetScaled, controlHints, result)\n\t{\n\t\tvar graph = state.view.graph;\n\t\tvar sourceEdge = source == null ? false : graph.getModel().isEdge(source.cell);\n\t\tvar targetEdge = target == null ? false : graph.getModel().isEdge(target.cell);\n\n\t\tvar pts = mxEdgeStyle.scalePointArray(state.absolutePoints, state.view.scale);\n\t\tvar source = mxEdgeStyle.scaleCellState(sourceScaled, state.view.scale);\n\t\tvar target = mxEdgeStyle.scaleCellState(targetScaled, state.view.scale);\n\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\t\t\n\t\tvar sourceX = source != null ? source.x : p0.x;\n\t\tvar sourceY = source != null ? source.y : p0.y;\n\t\tvar sourceWidth = source != null ? source.width : 0;\n\t\tvar sourceHeight = source != null ? source.height : 0;\n\t\t\n\t\tvar targetX = target != null ? target.x : pe.x;\n\t\tvar targetY = target != null ? target.y : pe.y;\n\t\tvar targetWidth = target != null ? target.width : 0;\n\t\tvar targetHeight = target != null ? target.height : 0;\n\n\t\tvar sourceBuffer = mxEdgeStyle.getJettySize(state, true);\n\t\tvar targetBuffer = mxEdgeStyle.getJettySize(state, false);\n\t\t\n\t\t//console.log('sourceBuffer', sourceBuffer);\n\t\t//console.log('targetBuffer', targetBuffer);\n\t\t// Workaround for loop routing within buffer zone\n\t\tif (source != null && target == source)\n\t\t{\n\t\t\ttargetBuffer = Math.max(sourceBuffer, targetBuffer);\n\t\t\tsourceBuffer = targetBuffer;\n\t\t}\n\t\t\n\t\tvar totalBuffer = targetBuffer + sourceBuffer;\n\t\t// console.log('totalBuffer', totalBuffer);\n\t\tvar tooShort = false;\n\t\t\n\t\t// Checks minimum distance for fixed points and falls back to segment connector\n\t\tif (p0 != null && pe != null)\n\t\t{\n\t\t\tvar dx = pe.x - p0.x;\n\t\t\tvar dy = pe.y - p0.y;\n\t\t\t\n\t\t\ttooShort = dx * dx + dy * dy < totalBuffer * totalBuffer;\n\t\t}\n\n\t\tif (tooShort || (mxEdgeStyle.orthPointsFallback && (controlHints != null &&\n\t\t\t\tcontrolHints.length > 0)) || sourceEdge || targetEdge)\n\t\t{\n\t\t\tmxEdgeStyle.SegmentConnector(state, sourceScaled, targetScaled, controlHints, result);\n\t\t\t\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine the side(s) of the source and target vertices\n\t\t// that the edge may connect to\n\t\t// portConstraint [source, target]\n\t\tvar portConstraint = [mxConstants.DIRECTION_MASK_ALL, mxConstants.DIRECTION_MASK_ALL];\n\t\tvar rotation = 0;\n\t\t\n\t\tif (source != null)\n\t\t{\n\t\t\tportConstraint[0] = mxUtils.getPortConstraints(source, state, true, \n\t\t\t\t\tmxConstants.DIRECTION_MASK_ALL);\n\t\t\trotation = mxUtils.getValue(source.style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t\n\t\t\t//console.log('source rotation', rotation);\n\t\t\t\n\t\t\tif (rotation != 0)\n\t\t\t{\n\t\t\t\tvar newRect = mxUtils.getBoundingBox(new mxRectangle(sourceX, sourceY, sourceWidth, sourceHeight), rotation);\n\t\t\t\tsourceX = newRect.x; \n\t\t\t\tsourceY = newRect.y;\n\t\t\t\tsourceWidth = newRect.width;\n\t\t\t\tsourceHeight = newRect.height;\n\t\t\t}\n\t\t}\n\n\t\tif (target != null)\n\t\t{\n\t\t\tportConstraint[1] = mxUtils.getPortConstraints(target, state, false,\n\t\t\t\tmxConstants.DIRECTION_MASK_ALL);\n\t\t\trotation = mxUtils.getValue(target.style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t\n\t\t\t//console.log('target rotation', rotation);\n\n\t\t\tif (rotation != 0)\n\t\t\t{\n\t\t\t\tvar newRect = mxUtils.getBoundingBox(new mxRectangle(targetX, targetY, targetWidth, targetHeight), rotation);\n\t\t\t\ttargetX = newRect.x;\n\t\t\t\ttargetY = newRect.y;\n\t\t\t\ttargetWidth = newRect.width;\n\t\t\t\ttargetHeight = newRect.height;\n\t\t\t}\n\t\t}\n\n\t\t//console.log('source' , sourceX, sourceY, sourceWidth, sourceHeight);\n\t\t//console.log('targetX' , targetX, targetY, targetWidth, targetHeight);\n\n\t\tvar dir = [0, 0];\n\n\t\t// Work out which faces of the vertices present against each other\n\t\t// in a way that would allow a 3-segment connection if port constraints\n\t\t// permitted.\n\t\t// geo -> [source, target] [x, y, width, height]\n\t\tvar geo = [ [sourceX, sourceY, sourceWidth, sourceHeight] ,\n\t\t            [targetX, targetY, targetWidth, targetHeight] ];\n\t\tvar buffer = [sourceBuffer, targetBuffer];\n\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tmxEdgeStyle.limits[i][1] = geo[i][0] - buffer[i];\n\t\t\tmxEdgeStyle.limits[i][2] = geo[i][1] - buffer[i];\n\t\t\tmxEdgeStyle.limits[i][4] = geo[i][0] + geo[i][2] + buffer[i];\n\t\t\tmxEdgeStyle.limits[i][8] = geo[i][1] + geo[i][3] + buffer[i];\n\t\t}\n\t\t\n\t\t// Work out which quad the target is in\n\t\tvar sourceCenX = geo[0][0] + geo[0][2] / 2.0;\n\t\tvar sourceCenY = geo[0][1] + geo[0][3] / 2.0;\n\t\tvar targetCenX = geo[1][0] + geo[1][2] / 2.0;\n\t\tvar targetCenY = geo[1][1] + geo[1][3] / 2.0;\n\t\t\n\t\tvar dx = sourceCenX - targetCenX;\n\t\tvar dy = sourceCenY - targetCenY;\n\n\t\tvar quad = 0;\n\n\t\t// 0 | 1\n\t\t// -----\n\t\t// 3 | 2\n\t\t\n\t\tif (dx < 0)\n\t\t{\n\t\t\tif (dy < 0)\n\t\t\t{\n\t\t\t\tquad = 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tquad = 1;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (dy <= 0)\n\t\t\t{\n\t\t\t\tquad = 3;\n\t\t\t\t\n\t\t\t\t// Special case on x = 0 and negative y\n\t\t\t\tif (dx == 0)\n\t\t\t\t{\n\t\t\t\t\tquad = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//console.log('quad', quad);\n\n\t\t// Check for connection constraints\n\t\tvar currentTerm = null;\n\t\t\n\t\tif (source != null)\n\t\t{\n\t\t\tcurrentTerm = p0;\n\t\t}\n\n\t\tvar constraint = [ [0.5, 0.5] , [0.5, 0.5] ];\n\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tif (currentTerm != null)\n\t\t\t{\n\t\t\t\tconstraint[i][0] = (currentTerm.x - geo[i][0]) / geo[i][2];\n\t\t\t\t\n\t\t\t\tif (Math.abs(currentTerm.x - geo[i][0]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t}\n\t\t\t\telse if (Math.abs(currentTerm.x - geo[i][0] - geo[i][2]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t}\n\n\t\t\t\tconstraint[i][1] = (currentTerm.y - geo[i][1]) / geo[i][3];\n\n\t\t\t\tif (Math.abs(currentTerm.y - geo[i][1]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t}\n\t\t\t\telse if (Math.abs(currentTerm.y - geo[i][1] - geo[i][3]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrentTerm = null;\n\t\t\t\n\t\t\tif (target != null)\n\t\t\t{\n\t\t\t\tcurrentTerm = pe;\n\t\t\t}\n\t\t}\n\n\t\tvar sourceTopDist = geo[0][1] - (geo[1][1] + geo[1][3]);\n\t\tvar sourceLeftDist = geo[0][0] - (geo[1][0] + geo[1][2]);\n\t\tvar sourceBottomDist = geo[1][1] - (geo[0][1] + geo[0][3]);\n\t\tvar sourceRightDist = geo[1][0] - (geo[0][0] + geo[0][2]);\n\n\t\tmxEdgeStyle.vertexSeperations[1] = Math.max(sourceLeftDist - totalBuffer, 0);\n\t\tmxEdgeStyle.vertexSeperations[2] = Math.max(sourceTopDist - totalBuffer, 0);\n\t\tmxEdgeStyle.vertexSeperations[4] = Math.max(sourceBottomDist - totalBuffer, 0);\n\t\tmxEdgeStyle.vertexSeperations[3] = Math.max(sourceRightDist - totalBuffer, 0);\n\t\t\t\t\n\t\t//==============================================================\n\t\t// Start of source and target direction determination\n\n\t\t// Work through the preferred orientations by relative positioning\n\t\t// of the vertices and list them in preferred and available order\n\t\t\n\t\tvar dirPref = [];\n\t\tvar horPref = [];\n\t\tvar vertPref = [];\n\n\t\thorPref[0] = (sourceLeftDist >= sourceRightDist) ? mxConstants.DIRECTION_MASK_WEST\n\t\t\t\t: mxConstants.DIRECTION_MASK_EAST;\n\t\tvertPref[0] = (sourceTopDist >= sourceBottomDist) ? mxConstants.DIRECTION_MASK_NORTH\n\t\t\t\t: mxConstants.DIRECTION_MASK_SOUTH;\n\n\t\thorPref[1] = mxUtils.reversePortConstraints(horPref[0]);\n\t\tvertPref[1] = mxUtils.reversePortConstraints(vertPref[0]);\n\t\t\n\t\tvar preferredHorizDist = sourceLeftDist >= sourceRightDist ? sourceLeftDist\n\t\t\t\t: sourceRightDist;\n\t\tvar preferredVertDist = sourceTopDist >= sourceBottomDist ? sourceTopDist\n\t\t\t\t: sourceBottomDist;\n\n\t\tvar prefOrdering = [ [0, 0] , [0, 0] ];\n\t\tvar preferredOrderSet = false;\n\n\t\t// If the preferred port isn't available, switch it\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tif (dir[i] != 0x0)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ((horPref[i] & portConstraint[i]) == 0)\n\t\t\t{\n\t\t\t\thorPref[i] = mxUtils.reversePortConstraints(horPref[i]);\n\t\t\t}\n\n\t\t\tif ((vertPref[i] & portConstraint[i]) == 0)\n\t\t\t{\n\t\t\t\tvertPref[i] = mxUtils\n\t\t\t\t\t\t.reversePortConstraints(vertPref[i]);\n\t\t\t}\n\n\t\t\tprefOrdering[i][0] = vertPref[i];\n\t\t\tprefOrdering[i][1] = horPref[i];\n\t\t}\n\n\t\tif (preferredVertDist > 0\n\t\t\t\t&& preferredHorizDist > 0)\n\t\t{\n\t\t\t// Possibility of two segment edge connection\n\t\t\tif (((horPref[0] & portConstraint[0]) > 0)\n\t\t\t\t\t&& ((vertPref[1] & portConstraint[1]) > 0))\n\t\t\t{\n\t\t\t\tprefOrdering[0][0] = horPref[0];\n\t\t\t\tprefOrdering[0][1] = vertPref[0];\n\t\t\t\tprefOrdering[1][0] = vertPref[1];\n\t\t\t\tprefOrdering[1][1] = horPref[1];\n\t\t\t\tpreferredOrderSet = true;\n\t\t\t}\n\t\t\telse if (((vertPref[0] & portConstraint[0]) > 0)\n\t\t\t\t\t&& ((horPref[1] & portConstraint[1]) > 0))\n\t\t\t{\n\t\t\t\tprefOrdering[0][0] = vertPref[0];\n\t\t\t\tprefOrdering[0][1] = horPref[0];\n\t\t\t\tprefOrdering[1][0] = horPref[1];\n\t\t\t\tprefOrdering[1][1] = vertPref[1];\n\t\t\t\tpreferredOrderSet = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (preferredVertDist > 0 && !preferredOrderSet)\n\t\t{\n\t\t\tprefOrdering[0][0] = vertPref[0];\n\t\t\tprefOrdering[0][1] = horPref[0];\n\t\t\tprefOrdering[1][0] = vertPref[1];\n\t\t\tprefOrdering[1][1] = horPref[1];\n\t\t\tpreferredOrderSet = true;\n\n\t\t}\n\t\t\n\t\tif (preferredHorizDist > 0 && !preferredOrderSet)\n\t\t{\n\t\t\tprefOrdering[0][0] = horPref[0];\n\t\t\tprefOrdering[0][1] = vertPref[0];\n\t\t\tprefOrdering[1][0] = horPref[1];\n\t\t\tprefOrdering[1][1] = vertPref[1];\n\t\t\tpreferredOrderSet = true;\n\t\t}\n\n\t\t// The source and target prefs are now an ordered list of\n\t\t// the preferred port selections\n\t\t// If the list contains gaps, compact it\n\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tif (dir[i] != 0x0)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ((prefOrdering[i][0] & portConstraint[i]) == 0)\n\t\t\t{\n\t\t\t\tprefOrdering[i][0] = prefOrdering[i][1];\n\t\t\t}\n\n\t\t\tdirPref[i] = prefOrdering[i][0] & portConstraint[i];\n\t\t\tdirPref[i] |= (prefOrdering[i][1] & portConstraint[i]) << 8;\n\t\t\tdirPref[i] |= (prefOrdering[1 - i][i] & portConstraint[i]) << 16;\n\t\t\tdirPref[i] |= (prefOrdering[1 - i][1 - i] & portConstraint[i]) << 24;\n\n\t\t\tif ((dirPref[i] & 0xF) == 0)\n\t\t\t{\n\t\t\t\tdirPref[i] = dirPref[i] << 8;\n\t\t\t}\n\t\t\t\n\t\t\tif ((dirPref[i] & 0xF00) == 0)\n\t\t\t{\n\t\t\t\tdirPref[i] = (dirPref[i] & 0xF) | dirPref[i] >> 8;\n\t\t\t}\n\t\t\t\n\t\t\tif ((dirPref[i] & 0xF0000) == 0)\n\t\t\t{\n\t\t\t\tdirPref[i] = (dirPref[i] & 0xFFFF)\n\t\t\t\t\t\t| ((dirPref[i] & 0xF000000) >> 8);\n\t\t\t}\n\n\t\t\tdir[i] = dirPref[i] & 0xF;\n\n\t\t\tif (portConstraint[i] == mxConstants.DIRECTION_MASK_WEST\n\t\t\t\t\t|| portConstraint[i] == mxConstants.DIRECTION_MASK_NORTH\n\t\t\t\t\t|| portConstraint[i] == mxConstants.DIRECTION_MASK_EAST\n\t\t\t\t\t|| portConstraint[i] == mxConstants.DIRECTION_MASK_SOUTH)\n\t\t\t{\n\t\t\t\tdir[i] = portConstraint[i];\n\t\t\t}\n\t\t}\n\n\t\t//==============================================================\n\t\t// End of source and target direction determination\n\n\t\tvar sourceIndex = dir[0] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[0];\n\t\tvar targetIndex = dir[1] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[1];\n\n\t\tsourceIndex -= quad;\n\t\ttargetIndex -= quad;\n\n\t\tif (sourceIndex < 1)\n\t\t{\n\t\t\tsourceIndex += 4;\n\t\t}\n\t\t\n\t\tif (targetIndex < 1)\n\t\t{\n\t\t\ttargetIndex += 4;\n\t\t}\n\n\t\tvar routePattern = mxEdgeStyle.routePatterns[sourceIndex - 1][targetIndex - 1];\n\t\t\n\t\t//console.log('routePattern', routePattern);\n\n\t\tmxEdgeStyle.wayPoints1[0][0] = geo[0][0];\n\t\tmxEdgeStyle.wayPoints1[0][1] = geo[0][1];\n\n\t\tswitch (dir[0])\n\t\t{\n\t\t\tcase mxConstants.DIRECTION_MASK_WEST:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] -= sourceBuffer;\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] += constraint[0][1] * geo[0][3];\n\t\t\t\tbreak;\n\t\t\tcase mxConstants.DIRECTION_MASK_SOUTH:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] += constraint[0][0] * geo[0][2];\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] += geo[0][3] + sourceBuffer;\n\t\t\t\tbreak;\n\t\t\tcase mxConstants.DIRECTION_MASK_EAST:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] += geo[0][2] + sourceBuffer;\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] += constraint[0][1] * geo[0][3];\n\t\t\t\tbreak;\n\t\t\tcase mxConstants.DIRECTION_MASK_NORTH:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] += constraint[0][0] * geo[0][2];\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] -= sourceBuffer;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tvar currentIndex = 0;\n\n\t\t// Orientation, 0 horizontal, 1 vertical\n\t\tvar lastOrientation = (dir[0] & (mxConstants.DIRECTION_MASK_EAST | mxConstants.DIRECTION_MASK_WEST)) > 0 ? 0\n\t\t\t\t: 1;\n\t\tvar initialOrientation = lastOrientation;\n\t\tvar currentOrientation = 0;\n\n\t\tfor (var i = 0; i < routePattern.length; i++)\n\t\t{\n\t\t\tvar nextDirection = routePattern[i] & 0xF;\n\n\t\t\t// Rotate the index of this direction by the quad\n\t\t\t// to get the real direction\n\t\t\tvar directionIndex = nextDirection == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t\t: nextDirection;\n\n\t\t\tdirectionIndex += quad;\n\n\t\t\tif (directionIndex > 4)\n\t\t\t{\n\t\t\t\tdirectionIndex -= 4;\n\t\t\t}\n\n\t\t\tvar direction = mxEdgeStyle.dirVectors[directionIndex - 1];\n\n\t\t\tcurrentOrientation = (directionIndex % 2 > 0) ? 0 : 1;\n\t\t\t// Only update the current index if the point moved\n\t\t\t// in the direction of the current segment move,\n\t\t\t// otherwise the same point is moved until there is \n\t\t\t// a segment direction change\n\t\t\tif (currentOrientation != lastOrientation)\n\t\t\t{\n\t\t\t\tcurrentIndex++;\n\t\t\t\t// Copy the previous way point into the new one\n\t\t\t\t// We can't base the new position on index - 1\n\t\t\t\t// because sometime elbows turn out not to exist,\n\t\t\t\t// then we'd have to rewind.\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][0] = mxEdgeStyle.wayPoints1[currentIndex - 1][0];\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][1] = mxEdgeStyle.wayPoints1[currentIndex - 1][1];\n\t\t\t}\n\n\t\t\tvar tar = (routePattern[i] & mxEdgeStyle.TARGET_MASK) > 0;\n\t\t\tvar sou = (routePattern[i] & mxEdgeStyle.SOURCE_MASK) > 0;\n\t\t\tvar side = (routePattern[i] & mxEdgeStyle.SIDE_MASK) >> 5;\n\t\t\tside = side << quad;\n\n\t\t\tif (side > 0xF)\n\t\t\t{\n\t\t\t\tside = side >> 4;\n\t\t\t}\n\n\t\t\tvar center = (routePattern[i] & mxEdgeStyle.CENTER_MASK) > 0;\n\n\t\t\tif ((sou || tar) && side < 9)\n\t\t\t{\n\t\t\t\tvar limit = 0;\n\t\t\t\tvar souTar = sou ? 0 : 1;\n\n\t\t\t\tif (center && currentOrientation == 0)\n\t\t\t\t{\n\t\t\t\t\tlimit = geo[souTar][0] + constraint[souTar][0] * geo[souTar][2];\n\t\t\t\t}\n\t\t\t\telse if (center)\n\t\t\t\t{\n\t\t\t\t\tlimit = geo[souTar][1] + constraint[souTar][1] * geo[souTar][3];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlimit = mxEdgeStyle.limits[souTar][side];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (currentOrientation == 0)\n\t\t\t\t{\n\t\t\t\t\tvar lastX = mxEdgeStyle.wayPoints1[currentIndex][0];\n\t\t\t\t\tvar deltaX = (limit - lastX) * direction[0];\n\n\t\t\t\t\tif (deltaX > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][0] += direction[0]\n\t\t\t\t\t\t\t\t* deltaX;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar lastY = mxEdgeStyle.wayPoints1[currentIndex][1];\n\t\t\t\t\tvar deltaY = (limit - lastY) * direction[1];\n\n\t\t\t\t\tif (deltaY > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][1] += direction[1]\n\t\t\t\t\t\t\t\t* deltaY;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse if (center)\n\t\t\t{\n\t\t\t\t// Which center we're travelling to depend on the current direction\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][0] += direction[0]\n\t\t\t\t\t\t* Math.abs(mxEdgeStyle.vertexSeperations[directionIndex] / 2);\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][1] += direction[1]\n\t\t\t\t\t\t* Math.abs(mxEdgeStyle.vertexSeperations[directionIndex] / 2);\n\t\t\t}\n\n\t\t\tif (currentIndex > 0\n\t\t\t\t\t&& mxEdgeStyle.wayPoints1[currentIndex][currentOrientation] == mxEdgeStyle.wayPoints1[currentIndex - 1][currentOrientation])\n\t\t\t{\n\t\t\t\tcurrentIndex--;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlastOrientation = currentOrientation;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= currentIndex; i++)\n\t\t{\n\t\t\tif (i == currentIndex)\n\t\t\t{\n\t\t\t\t// Last point can cause last segment to be in\n\t\t\t\t// same direction as jetty/approach. If so,\n\t\t\t\t// check the number of points is consistent\n\t\t\t\t// with the relative orientation of source and target\n\t\t\t\t// jx. Same orientation requires an even\n\t\t\t\t// number of turns (points), different requires\n\t\t\t\t// odd.\n\t\t\t\tvar targetOrientation = (dir[1] & (mxConstants.DIRECTION_MASK_EAST | mxConstants.DIRECTION_MASK_WEST)) > 0 ? 0\n\t\t\t\t\t\t: 1;\n\t\t\t\tvar sameOrient = targetOrientation == initialOrientation ? 0 : 1;\n\n\t\t\t\t// (currentIndex + 1) % 2 is 0 for even number of points,\n\t\t\t\t// 1 for odd\n\t\t\t\tif (sameOrient != (currentIndex + 1) % 2)\n\t\t\t\t{\n\t\t\t\t\t// The last point isn't required\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tresult.push(new mxPoint(Math.round(mxEdgeStyle.wayPoints1[i][0] * state.view.scale * 10) / 10,\n\t\t\t\t\t\t\t\t\tMath.round(mxEdgeStyle.wayPoints1[i][1] * state.view.scale * 10) / 10));\n\t\t}\n\t\t\n\t\t//console.log(result);\n\n\t\t// Removes duplicates\n\t\tvar index = 1;\n\t\t\n\t\twhile (index < result.length)\n\t\t{\n\t\t\tif (result[index - 1] == null || result[index] == null ||\n\t\t\t\tresult[index - 1].x != result[index].x ||\n\t\t\t\tresult[index - 1].y != result[index].y)\n\t\t\t{\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.splice(index, 1);\n\t\t\t}\n\t\t}\n\t},\n\t\n\tgetRoutePattern: function(dir, quad, dx, dy)\n\t{\n\t\tvar sourceIndex = dir[0] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[0];\n\t\tvar targetIndex = dir[1] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[1];\n\n\t\tsourceIndex -= quad;\n\t\ttargetIndex -= quad;\n\n\t\tif (sourceIndex < 1)\n\t\t{\n\t\t\tsourceIndex += 4;\n\t\t}\n\t\tif (targetIndex < 1)\n\t\t{\n\t\t\ttargetIndex += 4;\n\t\t}\n\n\t\tvar result = routePatterns[sourceIndex - 1][targetIndex - 1];\n\n\t\tif (dx == 0 || dy == 0)\n\t\t{\n\t\t\tif (inlineRoutePatterns[sourceIndex - 1][targetIndex - 1] != null)\n\t\t\t{\n\t\t\t\tresult = inlineRoutePatterns[sourceIndex - 1][targetIndex - 1];\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n__mxOutput.mxEdgeStyle = typeof mxEdgeStyle !== 'undefined' ? mxEdgeStyle : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxStyleRegistry =\n{\n\t/**\n\t * Class: mxStyleRegistry\n\t *\n\t * Singleton class that acts as a global converter from string to object values\n\t * in a style. This is currently only used to perimeters and edge styles.\n\t * \n\t * Variable: values\n\t *\n\t * Maps from strings to objects.\n\t */\n\tvalues: [],\n\n\t/**\n\t * Function: putValue\n\t *\n\t * Puts the given object into the registry under the given name.\n\t */\n\tputValue: function(name, obj)\n\t{\n\t\tmxStyleRegistry.values[name] = obj;\n\t},\n\n\t/**\n\t * Function: getValue\n\t *\n\t * Returns the value associated with the given name.\n\t */\n\tgetValue: function(name)\n\t{\n\t\treturn mxStyleRegistry.values[name];\n\t},\n\t\n\t/**\n\t * Function: getName\n\t * \n\t * Returns the name for the given value.\n\t */\n\tgetName: function(value)\n\t{\n\t\tfor (var key in mxStyleRegistry.values)\n\t\t{\n\t\t\tif (mxStyleRegistry.values[key] == value)\n\t\t\t{\n\t\t\t\treturn key;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\n};\n\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_ELBOW, mxEdgeStyle.ElbowConnector);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_ENTITY_RELATION, mxEdgeStyle.EntityRelation);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_LOOP, mxEdgeStyle.Loop);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_SIDETOSIDE, mxEdgeStyle.SideToSide);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_TOPTOBOTTOM, mxEdgeStyle.TopToBottom);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_ORTHOGONAL, mxEdgeStyle.OrthConnector);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_SEGMENT, mxEdgeStyle.SegmentConnector);\n\nmxStyleRegistry.putValue(mxConstants.PERIMETER_ELLIPSE, mxPerimeter.EllipsePerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_RECTANGLE, mxPerimeter.RectanglePerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_RHOMBUS, mxPerimeter.RhombusPerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_TRIANGLE, mxPerimeter.TrianglePerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_HEXAGON, mxPerimeter.HexagonPerimeter);\n\n__mxOutput.mxStyleRegistry = typeof mxStyleRegistry !== 'undefined' ? mxStyleRegistry : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphView\n *\n * Extends <mxEventSource> to implement a view for a graph. This class is in\n * charge of computing the absolute coordinates for the relative child\n * geometries, the points for perimeters and edge styles and keeping them\n * cached in <mxCellStates> for faster retrieval. The states are updated\n * whenever the model or the view state (translate, scale) changes. The scale\n * and translate are honoured in the bounds.\n * \n * Event: mxEvent.UNDO\n * \n * Fires after the root was changed in <setCurrentRoot>. The <code>edit</code>\n * property contains the <mxUndoableEdit> which contains the\n * <mxCurrentRootChange>.\n * \n * Event: mxEvent.SCALE_AND_TRANSLATE\n * \n * Fires after the scale and translate have been changed in <scaleAndTranslate>.\n * The <code>scale</code>, <code>previousScale</code>, <code>translate</code>\n * and <code>previousTranslate</code> properties contain the new and previous\n * scale and translate, respectively.\n * \n * Event: mxEvent.SCALE\n * \n * Fires after the scale was changed in <setScale>. The <code>scale</code> and\n * <code>previousScale</code> properties contain the new and previous scale.\n * \n * Event: mxEvent.TRANSLATE\n * \n * Fires after the translate was changed in <setTranslate>. The\n * <code>translate</code> and <code>previousTranslate</code> properties contain\n * the new and previous value for translate.\n * \n * Event: mxEvent.DOWN and mxEvent.UP\n * \n * Fire if the current root is changed by executing an <mxCurrentRootChange>.\n * The event name depends on the location of the root in the cell hierarchy\n * with respect to the current root. The <code>root</code> and\n * <code>previous</code> properties contain the new and previous root,\n * respectively.\n * \n * Constructor: mxGraphView\n *\n * Constructs a new view for the given <mxGraph>.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxGraphView(graph)\n{\n\tthis.graph = graph;\n\tthis.translate = new mxPoint();\n\tthis.graphBounds = new mxRectangle();\n\tthis.states = new mxDictionary();\n};\n\n/**\n * Extends mxEventSource.\n */\nmxGraphView.prototype = new mxEventSource();\nmxGraphView.prototype.constructor = mxGraphView;\n\n/**\n *\n */\nmxGraphView.prototype.EMPTY_POINT = new mxPoint();\n\n/**\n * Variable: doneResource\n * \n * Specifies the resource key for the status message after a long operation.\n * If the resource for this key does not exist then the value is used as\n * the status message. Default is 'done'.\n */\nmxGraphView.prototype.doneResource = (mxClient.language != 'none') ? 'done' : '';\n\n/**\n * Function: updatingDocumentResource\n *\n * Specifies the resource key for the status message while the document is\n * being updated. If the resource for this key does not exist then the\n * value is used as the status message. Default is 'updatingDocument'.\n */\nmxGraphView.prototype.updatingDocumentResource = (mxClient.language != 'none') ? 'updatingDocument' : '';\n\n/**\n * Variable: allowEval\n * \n * Specifies if string values in cell styles should be evaluated using\n * <mxUtils.eval>. This will only be used if the string values can't be mapped\n * to objects using <mxStyleRegistry>. Default is false. NOTE: Enabling this\n * switch carries a possible security risk.\n */\nmxGraphView.prototype.allowEval = false;\n\n/**\n * Variable: captureDocumentGesture\n * \n * Specifies if a gesture should be captured when it goes outside of the\n * graph container. Default is true.\n */\nmxGraphView.prototype.captureDocumentGesture = true;\n\n/**\n * Variable: optimizeVmlReflows\n * \n * Specifies if the <canvas> should be hidden while rendering in IE8 standards\n * mode and quirks mode. This will significantly improve rendering performance.\n * Default is true.\n */\nmxGraphView.prototype.optimizeVmlReflows = true;\n\n/**\n * Variable: rendering\n * \n * Specifies if shapes should be created, updated and destroyed using the\n * methods of <mxCellRenderer> in <graph>. Default is true.\n */\nmxGraphView.prototype.rendering = true;\n\n/**\n * Variable: graph\n *\n * Reference to the enclosing <mxGraph>.\n */\nmxGraphView.prototype.graph = null;\n\n/**\n * Variable: currentRoot\n *\n * <mxCell> that acts as the root of the displayed cell hierarchy.\n */\nmxGraphView.prototype.currentRoot = null;\n\n/**\n * Variable: graphBounds\n *\n * <mxRectangle> that caches the scales, translated bounds of the current view.\n */\nmxGraphView.prototype.graphBounds = null;\n\n/**\n * Variable: scale\n * \n * Specifies the scale. Default is 1 (100%).\n */\nmxGraphView.prototype.scale = 1;\n\t\n/**\n * Variable: translate\n *\n * <mxPoint> that specifies the current translation. Default is a new\n * empty <mxPoint>.\n */\nmxGraphView.prototype.translate = null;\n\n/**\n * Variable: states\n * \n * <mxDictionary> that maps from cell IDs to <mxCellStates>.\n */\nmxGraphView.prototype.states = null;\n\n/**\n * Variable: updateStyle\n * \n * Specifies if the style should be updated in each validation step. If this\n * is false then the style is only updated if the state is created or if the\n * style of the cell was changed. Default is false.\n */\nmxGraphView.prototype.updateStyle = false;\n\n/**\n * Variable: lastNode\n * \n * During validation, this contains the last DOM node that was processed.\n */\nmxGraphView.prototype.lastNode = null;\n\n/**\n * Variable: lastHtmlNode\n * \n * During validation, this contains the last HTML DOM node that was processed.\n */\nmxGraphView.prototype.lastHtmlNode = null;\n\n/**\n * Variable: lastForegroundNode\n * \n * During validation, this contains the last edge's DOM node that was processed.\n */\nmxGraphView.prototype.lastForegroundNode = null;\n\n/**\n * Variable: lastForegroundHtmlNode\n * \n * During validation, this contains the last edge HTML DOM node that was processed.\n */\nmxGraphView.prototype.lastForegroundHtmlNode = null;\n\n/**\n * Function: getGraphBounds\n *\n * Returns <graphBounds>.\n */\nmxGraphView.prototype.getGraphBounds = function()\n{\n\treturn this.graphBounds;\n};\n\n/**\n * Function: setGraphBounds\n *\n * Sets <graphBounds>.\n */\nmxGraphView.prototype.setGraphBounds = function(value)\n{\n\tthis.graphBounds = value;\n};\n\n/**\n * Function: getBounds\n * \n * Returns the union of all <mxCellStates> for the given array of <mxCells>.\n *\n * Parameters:\n *\n * cells - Array of <mxCells> whose bounds should be returned.\n */\nmxGraphView.prototype.getBounds = function(cells)\n{\n\tvar result = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (model.isVertex(cells[i]) || model.isEdge(cells[i]))\n\t\t\t{\n\t\t\t\tvar state = this.getState(cells[i]);\n\t\t\t\n\t\t\t\tif (state != null)\n\t\t\t\t{\n\t\t\t\t\tif (result == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = mxRectangle.fromRectangle(state);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.add(state);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: setCurrentRoot\n *\n * Sets and returns the current root and fires an <undo> event before\n * calling <mxGraph.sizeDidChange>.\n *\n * Parameters:\n *\n * root - <mxCell> that specifies the root of the displayed cell hierarchy.\n */\nmxGraphView.prototype.setCurrentRoot = function(root)\n{\n\tif (this.currentRoot != root)\n\t{\n\t\tvar change = new mxCurrentRootChange(this, root);\n\t\tchange.execute();\n\t\tvar edit = new mxUndoableEdit(this, true);\n\t\tedit.add(change);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n\t\tthis.graph.sizeDidChange();\n\t}\n\t\n\treturn root;\n};\n\n/**\n * Function: scaleAndTranslate\n *\n * Sets the scale and translation and fires a <scale> and <translate> event\n * before calling <revalidate> followed by <mxGraph.sizeDidChange>.\n *\n * Parameters:\n *\n * scale - Decimal value that specifies the new scale (1 is 100%).\n * dx - X-coordinate of the translation.\n * dy - Y-coordinate of the translation.\n */\nmxGraphView.prototype.scaleAndTranslate = function(scale, dx, dy)\n{\n\tvar previousScale = this.scale;\n\tvar previousTranslate = new mxPoint(this.translate.x, this.translate.y);\n\t\n\tif (this.scale != scale || this.translate.x != dx || this.translate.y != dy)\n\t{\n\t\tthis.scale = scale;\n\t\t\n\t\tthis.translate.x = dx;\n\t\tthis.translate.y = dy;\n\n\t\tif (this.isEventsEnabled())\n\t\t{\n\t\t\tthis.viewStateChanged();\n\t\t}\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.SCALE_AND_TRANSLATE,\n\t\t'scale', scale, 'previousScale', previousScale,\n\t\t'translate', this.translate, 'previousTranslate', previousTranslate));\n};\n\n/**\n * Function: getScale\n * \n * Returns the <scale>.\n */\nmxGraphView.prototype.getScale = function()\n{\n\treturn this.scale;\n};\n\n/**\n * Function: setScale\n *\n * Sets the scale and fires a <scale> event before calling <revalidate> followed\n * by <mxGraph.sizeDidChange>.\n *\n * Parameters:\n *\n * value - Decimal value that specifies the new scale (1 is 100%).\n */\nmxGraphView.prototype.setScale = function(value)\n{\n\tvar previousScale = this.scale;\n\t\n\tif (this.scale != value)\n\t{\n\t\tthis.scale = value;\n\n\t\tif (this.isEventsEnabled())\n\t\t{\n\t\t\tthis.viewStateChanged();\n\t\t}\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.SCALE,\n\t\t'scale', value, 'previousScale', previousScale));\n};\n\n/**\n * Function: getTranslate\n * \n * Returns the <translate>.\n */\nmxGraphView.prototype.getTranslate = function()\n{\n\treturn this.translate;\n};\n\n/**\n * Function: setTranslate\n *\n * Sets the translation and fires a <translate> event before calling\n * <revalidate> followed by <mxGraph.sizeDidChange>. The translation is the\n * negative of the origin.\n *\n * Parameters:\n *\n * dx - X-coordinate of the translation.\n * dy - Y-coordinate of the translation.\n */\nmxGraphView.prototype.setTranslate = function(dx, dy)\n{\n\tvar previousTranslate = new mxPoint(this.translate.x, this.translate.y);\n\t\n\tif (this.translate.x != dx || this.translate.y != dy)\n\t{\n\t\tthis.translate.x = dx;\n\t\tthis.translate.y = dy;\n\n\t\tif (this.isEventsEnabled())\n\t\t{\n\t\t\tthis.viewStateChanged();\n\t\t}\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.TRANSLATE,\n\t\t'translate', this.translate, 'previousTranslate', previousTranslate));\n};\n\n/**\n * Function: viewStateChanged\n * \n * Invoked after <scale> and/or <translate> has changed.\n */\nmxGraphView.prototype.viewStateChanged = function()\n{\n\tthis.revalidate();\n\tthis.graph.sizeDidChange();\n};\n\n/**\n * Function: refresh\n *\n * Clears the view if <currentRoot> is not null and revalidates.\n */\nmxGraphView.prototype.refresh = function()\n{\n\tif (this.currentRoot != null)\n\t{\n\t\tthis.clear();\n\t}\n\t\n\tthis.revalidate();\n};\n\n/**\n * Function: revalidate\n *\n * Revalidates the complete view with all cell states.\n */\nmxGraphView.prototype.revalidate = function()\n{\n\tthis.invalidate();\n\tthis.validate();\n};\n\n/**\n * Function: clear\n *\n * Removes the state of the given cell and all descendants if the given\n * cell is not the current root.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> for which the state should be removed. Default\n * is the root of the model.\n * force - Boolean indicating if the current root should be ignored for\n * recursion.\n */\nmxGraphView.prototype.clear = function(cell, force, recurse)\n{\n\tvar model = this.graph.getModel();\n\tcell = cell || model.getRoot();\n\tforce = (force != null) ? force : false;\n\trecurse = (recurse != null) ? recurse : true;\n\t\n\tthis.removeState(cell);\n\t\n\tif (recurse && (force || cell != this.currentRoot))\n\t{\n\t\tvar childCount = model.getChildCount(cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.clear(model.getChildAt(cell, i), force);\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.invalidate(cell);\n\t}\n};\n\n/**\n * Function: invalidate\n * \n * Invalidates the state of the given cell, all its descendants and\n * connected edges.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> to be invalidated. Default is the root of the\n * model.\n */\nmxGraphView.prototype.invalidate = function(cell, recurse, includeEdges)\n{\n\tvar model = this.graph.getModel();\n\tcell = cell || model.getRoot();\n\trecurse = (recurse != null) ? recurse : true;\n\tincludeEdges = (includeEdges != null) ? includeEdges : true;\n\t\n\tvar state = this.getState(cell);\n\t\n\tif (state != null)\n\t{\n\t\tstate.invalid = true;\n\t}\n\t\n\t// Avoids infinite loops for invalid graphs\n\tif (!cell.invalidating)\n\t{\n\t\tcell.invalidating = true;\n\t\t\n\t\t// Recursively invalidates all descendants\n\t\tif (recurse)\n\t\t{\n\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar child = model.getChildAt(cell, i);\n\t\t\t\tthis.invalidate(child, recurse, includeEdges);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Propagates invalidation to all connected edges\n\t\tif (includeEdges)\n\t\t{\n\t\t\tvar edgeCount = model.getEdgeCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < edgeCount; i++)\n\t\t\t{\n\t\t\t\tthis.invalidate(model.getEdgeAt(cell, i), recurse, includeEdges);\n\t\t\t}\n\t\t}\n\t\t\n\t\tdelete cell.invalidating;\n\t}\n};\n\n/**\n * Function: validate\n * \n * Calls <validateCell> and <validateCellState> and updates the <graphBounds>\n * using <getBoundingBox>. Finally the background is validated using\n * <validateBackground>.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> to be used as the root of the validation.\n * Default is <currentRoot> or the root of the model.\n */\nmxGraphView.prototype.validate = function(cell)\n{\n\tvar t0 = mxLog.enter('mxGraphView.validate');\n\twindow.status = mxResources.get(this.updatingDocumentResource) ||\n\t\tthis.updatingDocumentResource;\n\t\n\tthis.resetValidationState();\n\t\n\t// Improves IE rendering speed by minimizing reflows\n\tvar prevDisplay = null;\n\t\n\tif (this.optimizeVmlReflows && this.canvas != null && this.textDiv == null &&\n\t\t((document.documentMode == 8 && !mxClient.IS_EM) || mxClient.IS_QUIRKS))\n\t{\n\t\t// Placeholder keeps scrollbar positions when canvas is hidden\n\t\tthis.placeholder = document.createElement('div');\n\t\tthis.placeholder.style.position = 'absolute';\n\t\tthis.placeholder.style.width = this.canvas.clientWidth + 'px';\n\t\tthis.placeholder.style.height = this.canvas.clientHeight + 'px';\n\t\tthis.canvas.parentNode.appendChild(this.placeholder);\n\n\t\tprevDisplay = this.drawPane.style.display;\n\t\tthis.canvas.style.display = 'none';\n\t\t\n\t\t// Creates temporary DIV used for text measuring in mxText.updateBoundingBox\n\t\tthis.textDiv = document.createElement('div');\n\t\tthis.textDiv.style.position = 'absolute';\n\t\tthis.textDiv.style.whiteSpace = 'nowrap';\n\t\tthis.textDiv.style.visibility = 'hidden';\n\t\tthis.textDiv.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\tthis.textDiv.style.zoom = '1';\n\t\t\n\t\tdocument.body.appendChild(this.textDiv);\n\t}\n\t\n\tvar graphBounds = this.getBoundingBox(this.validateCellState(\n\t\tthis.validateCell(cell || ((this.currentRoot != null) ?\n\t\t\tthis.currentRoot : this.graph.getModel().getRoot()))));\n\tthis.setGraphBounds((graphBounds != null) ? graphBounds : this.getEmptyBounds());\n\tthis.validateBackground();\n\t\n\tif (prevDisplay != null)\n\t{\n\t\tthis.canvas.style.display = prevDisplay;\n\t\tthis.textDiv.parentNode.removeChild(this.textDiv);\n\t\t\n\t\tif (this.placeholder != null)\n\t\t{\n\t\t\tthis.placeholder.parentNode.removeChild(this.placeholder);\n\t\t}\n\t\t\t\t\n\t\t// Textdiv cannot be reused\n\t\tthis.textDiv = null;\n\t}\n\t\n\tthis.resetValidationState();\n\t\n\twindow.status = mxResources.get(this.doneResource) ||\n\t\tthis.doneResource;\n\tmxLog.leave('mxGraphView.validate', t0);\n};\n\n/**\n * Function: getEmptyBounds\n * \n * Returns the bounds for an empty graph. This returns a rectangle at\n * <translate> with the size of 0 x 0.\n */\nmxGraphView.prototype.getEmptyBounds = function()\n{\n\treturn new mxRectangle(this.translate.x * this.scale, this.translate.y * this.scale);\n};\n\n/**\n * Function: getBoundingBox\n * \n * Returns the bounding box of the shape and the label for the given\n * <mxCellState> and its children if recurse is true.\n * \n * Parameters:\n * \n * state - <mxCellState> whose bounding box should be returned.\n * recurse - Optional boolean indicating if the children should be included.\n * Default is true.\n */\nmxGraphView.prototype.getBoundingBox = function(state, recurse)\n{\n\trecurse = (recurse != null) ? recurse : true;\n\tvar bbox = null;\n\t\n\tif (state != null)\n\t{\n\t\tif (state.shape != null && state.shape.boundingBox != null)\n\t\t{\n\t\t\tbbox = state.shape.boundingBox.clone();\n\t\t}\n\t\t\n\t\t// Adds label bounding box to graph bounds\n\t\tif (state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tif (bbox != null)\n\t\t\t{\n\t\t\t\tbbox.add(state.text.boundingBox);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbbox = state.text.boundingBox.clone();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (recurse)\n\t\t{\n\t\t\tvar model = this.graph.getModel();\n\t\t\tvar childCount = model.getChildCount(state.cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar bounds = this.getBoundingBox(this.getState(model.getChildAt(state.cell, i)));\n\t\t\t\t\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tif (bbox == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tbbox = bounds;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tbbox.add(bounds);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn bbox;\n};\n\n/**\n * Function: createBackgroundPageShape\n *\n * Creates and returns the shape used as the background page.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that represents the bounds of the shape.\n */\nmxGraphView.prototype.createBackgroundPageShape = function(bounds)\n{\n\treturn new mxRectangleShape(bounds, 'white', 'black');\n};\n\n/**\n * Function: validateBackground\n *\n * Calls <validateBackgroundImage> and <validateBackgroundPage>.\n */\nmxGraphView.prototype.validateBackground = function()\n{\n\tthis.validateBackgroundImage();\n\tthis.validateBackgroundPage();\n};\n\n/**\n * Function: validateBackgroundImage\n * \n * Validates the background image.\n */\nmxGraphView.prototype.validateBackgroundImage = function()\n{\n\tvar bg = this.graph.getBackgroundImage();\n\t\n\tif (bg != null)\n\t{\n\t\tif (this.backgroundImage == null || this.backgroundImage.image != bg.src)\n\t\t{\n\t\t\tif (this.backgroundImage != null)\n\t\t\t{\n\t\t\t\tthis.backgroundImage.destroy();\n\t\t\t}\n\t\t\t\n\t\t\tvar bounds = new mxRectangle(0, 0, 1, 1);\n\t\t\t\n\t\t\tthis.backgroundImage = new mxImageShape(bounds, bg.src);\n\t\t\tthis.backgroundImage.dialect = this.graph.dialect;\n\t\t\tthis.backgroundImage.init(this.backgroundPane);\n\t\t\tthis.backgroundImage.redraw();\n\n\t\t\t// Workaround for ignored event on background in IE8 standards mode\n\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tmxEvent.addGestureListeners(this.backgroundImage.node,\n\t\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t\t\t\t\t}),\n\t\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t\t\t\t}),\n\t\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.redrawBackgroundImage(this.backgroundImage, bg);\n\t}\n\telse if (this.backgroundImage != null)\n\t{\n\t\tthis.backgroundImage.destroy();\n\t\tthis.backgroundImage = null;\n\t}\n};\n\n/**\n * Function: validateBackgroundPage\n * \n * Validates the background page.\n */\nmxGraphView.prototype.validateBackgroundPage = function()\n{\n\tif (this.graph.pageVisible)\n\t{\n\t\tvar bounds = this.getBackgroundPageBounds();\n\t\t\n\t\tif (this.backgroundPageShape == null)\n\t\t{\n\t\t\tthis.backgroundPageShape = this.createBackgroundPageShape(bounds);\n\t\t\tthis.backgroundPageShape.scale = this.scale;\n\t\t\tthis.backgroundPageShape.isShadow = true;\n\t\t\tthis.backgroundPageShape.dialect = this.graph.dialect;\n\t\t\tthis.backgroundPageShape.init(this.backgroundPane);\n\t\t\tthis.backgroundPageShape.redraw();\n\t\t\t\n\t\t\t// Adds listener for double click handling on background\n\t\t\tif (this.graph.nativeDblClickEnabled)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(this.backgroundPageShape.node, 'dblclick', mxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.dblClick(evt);\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\t// Adds basic listeners for graph event dispatching outside of the\n\t\t\t// container and finishing the handling of a single gesture\n\t\t\tmxEvent.addGestureListeners(this.backgroundPageShape.node,\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t\t\t\t}),\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\t// Hides the tooltip if mouse is outside container\n\t\t\t\t\tif (this.graph.tooltipHandler != null && this.graph.tooltipHandler.isHideOnHover())\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.tooltipHandler.hide();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.graph.isMouseDown && !mxEvent.isConsumed(evt))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.backgroundPageShape.scale = this.scale;\n\t\t\tthis.backgroundPageShape.bounds = bounds;\n\t\t\tthis.backgroundPageShape.redraw();\n\t\t}\n\t}\n\telse if (this.backgroundPageShape != null)\n\t{\n\t\tthis.backgroundPageShape.destroy();\n\t\tthis.backgroundPageShape = null;\n\t}\n};\n\n/**\n * Function: getBackgroundPageBounds\n * \n * Returns the bounds for the background page.\n */\nmxGraphView.prototype.getBackgroundPageBounds = function()\n{\n\tvar fmt = this.graph.pageFormat;\n\tvar ps = this.scale * this.graph.pageScale;\n\tvar bounds = new mxRectangle(this.scale * this.translate.x, this.scale * this.translate.y,\n\t\t\tfmt.width * ps, fmt.height * ps);\n\t\n\treturn bounds;\n};\n\n/**\n * Function: redrawBackgroundImage\n *\n * Updates the bounds and redraws the background image.\n * \n * Example:\n * \n * If the background image should not be scaled, this can be replaced with\n * the following.\n * \n * (code)\n * mxGraphView.prototype.redrawBackground = function(backgroundImage, bg)\n * {\n *   backgroundImage.bounds.x = this.translate.x;\n *   backgroundImage.bounds.y = this.translate.y;\n *   backgroundImage.bounds.width = bg.width;\n *   backgroundImage.bounds.height = bg.height;\n *\n *   backgroundImage.redraw();\n * };\n * (end)\n * \n * Parameters:\n * \n * backgroundImage - <mxImageShape> that represents the background image.\n * bg - <mxImage> that specifies the image and its dimensions.\n */\nmxGraphView.prototype.redrawBackgroundImage = function(backgroundImage, bg)\n{\n\tbackgroundImage.scale = this.scale;\n\tbackgroundImage.bounds.x = this.scale * this.translate.x;\n\tbackgroundImage.bounds.y = this.scale * this.translate.y;\n\tbackgroundImage.bounds.width = this.scale * bg.width;\n\tbackgroundImage.bounds.height = this.scale * bg.height;\n\n\tbackgroundImage.redraw();\n};\n\n/**\n * Function: validateCell\n * \n * Recursively creates the cell state for the given cell if visible is true and\n * the given cell is visible. If the cell is not visible but the state exists\n * then it is removed using <removeState>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose <mxCellState> should be created.\n * visible - Optional boolean indicating if the cell should be visible. Default\n * is true.\n */\nmxGraphView.prototype.validateCell = function(cell, visible)\n{\n\tvisible = (visible != null) ? visible : true;\n\t\n\tif (cell != null)\n\t{\n\t\tvisible = visible && this.graph.isCellVisible(cell);\n\t\tvar state = this.getState(cell, visible);\n\t\t\n\t\tif (state != null && !visible)\n\t\t{\n\t\t\tthis.removeState(cell);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar model = this.graph.getModel();\n\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tthis.validateCell(model.getChildAt(cell, i), visible &&\n\t\t\t\t\t(!this.isCellCollapsed(cell) || cell == this.currentRoot));\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: validateCellState\n * \n * Validates and repaints the <mxCellState> for the given <mxCell>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose <mxCellState> should be validated.\n * recurse - Optional boolean indicating if the children of the cell should be\n * validated. Default is true.\n */\nmxGraphView.prototype.validateCellState = function(cell, recurse)\n{\n\trecurse = (recurse != null) ? recurse : true;\n\tvar state = null;\n\t\n\tif (cell != null)\n\t{\n\t\tstate = this.getState(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tvar model = this.graph.getModel();\n\t\t\t\n\t\t\tif (state.invalid)\n\t\t\t{\n\t\t\t\tstate.invalid = false;\n\t\t\t\t\n\t\t\t\tif (state.style == null || state.invalidStyle)\n\t\t\t\t{\n\t\t\t\t\tstate.style = this.graph.getCellStyle(state.cell);\n\t\t\t\t\tstate.invalidStyle = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (cell != this.currentRoot)\n\t\t\t\t{\n\t\t\t\t\tthis.validateCellState(model.getParent(cell), false);\n\t\t\t\t}\n\n\t\t\t\tstate.setVisibleTerminalState(this.validateCellState(this.getVisibleTerminal(cell, true), false), true);\n\t\t\t\tstate.setVisibleTerminalState(this.validateCellState(this.getVisibleTerminal(cell, false), false), false);\n\t\t\t\t\n\t\t\t\tthis.updateCellState(state);\n\t\t\t\t\n\t\t\t\t// Repaint happens immediately after the cell is validated\n\t\t\t\tif (cell != this.currentRoot && !state.invalid)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.cellRenderer.redraw(state, false, this.isRendering());\n\n\t\t\t\t\t// Handles changes to invertex paintbounds after update of rendering shape\n\t\t\t\t\tstate.updateCachedBounds();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (recurse && !state.invalid)\n\t\t\t{\n\t\t\t\t// Updates order in DOM if recursively traversing\n\t\t\t\tif (state.shape != null)\n\t\t\t\t{\n\t\t\t\t\tthis.stateValidated(state);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.validateCellState(model.getChildAt(cell, i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn state;\n};\n\n/**\n * Function: updateCellState\n * \n * Updates the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to be updated.\n */\nmxGraphView.prototype.updateCellState = function(state)\n{\n\tstate.absoluteOffset.x = 0;\n\tstate.absoluteOffset.y = 0;\n\tstate.origin.x = 0;\n\tstate.origin.y = 0;\n\tstate.length = 0;\n\t\n\tif (state.cell != this.currentRoot)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\tvar pState = this.getState(model.getParent(state.cell)); \n\t\t\n\t\tif (pState != null && pState.cell != this.currentRoot)\n\t\t{\n\t\t\tstate.origin.x += pState.origin.x;\n\t\t\tstate.origin.y += pState.origin.y;\n\t\t}\n\t\t\n\t\tvar offset = this.graph.getChildOffsetForCell(state.cell);\n\t\t\n\t\tif (offset != null)\n\t\t{\n\t\t\tstate.origin.x += offset.x;\n\t\t\tstate.origin.y += offset.y;\n\t\t}\n\t\t\n\t\tvar geo = this.graph.getCellGeometry(state.cell);\t\t\t\t\n\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tif (!model.isEdge(state.cell))\n\t\t\t{\n\t\t\t\toffset = (geo.offset != null) ? geo.offset : this.EMPTY_POINT;\n\t\n\t\t\t\tif (geo.relative && pState != null)\n\t\t\t\t{\n\t\t\t\t\tif (model.isEdge(pState.cell))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar origin = this.getPoint(pState, geo);\n\n\t\t\t\t\t\tif (origin != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate.origin.x += (origin.x / this.scale) - pState.origin.x - this.translate.x;\n\t\t\t\t\t\t\tstate.origin.y += (origin.y / this.scale) - pState.origin.y - this.translate.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstate.origin.x += geo.x * pState.unscaledWidth + offset.x;\n\t\t\t\t\t\tstate.origin.y += geo.y * pState.unscaledHeight + offset.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstate.absoluteOffset.x = this.scale * offset.x;\n\t\t\t\t\tstate.absoluteOffset.y = this.scale * offset.y;\n\t\t\t\t\tstate.origin.x += geo.x;\n\t\t\t\t\tstate.origin.y += geo.y;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tstate.x = this.scale * (this.translate.x + state.origin.x);\n\t\t\tstate.y = this.scale * (this.translate.y + state.origin.y);\n\t\t\tstate.width = this.scale * geo.width;\n\t\t\tstate.unscaledWidth = geo.width;\n\t\t\tstate.height = this.scale * geo.height;\n\t\t\tstate.unscaledHeight = geo.height;\n\t\t\t\n\t\t\tif (model.isVertex(state.cell))\n\t\t\t{\n\t\t\t\tthis.updateVertexState(state, geo);\n\t\t\t}\n\t\t\t\n\t\t\tif (model.isEdge(state.cell))\n\t\t\t{\n\t\t\t\tthis.updateEdgeState(state, geo);\n\t\t\t}\n\t\t}\n\t}\n\n\tstate.updateCachedBounds();\n};\n\n/**\n * Function: isCellCollapsed\n * \n * Returns true if the children of the given cell should not be visible in the\n * view. This implementation uses <mxGraph.isCellVisible> but it can be\n * overidden to use a separate condition.\n */\nmxGraphView.prototype.isCellCollapsed = function(cell)\n{\n\treturn this.graph.isCellCollapsed(cell);\n};\n\n/**\n * Function: updateVertexState\n * \n * Validates the given cell state.\n */\nmxGraphView.prototype.updateVertexState = function(state, geo)\n{\n\tvar model = this.graph.getModel();\n\tvar pState = this.getState(model.getParent(state.cell));\n\t\n\tif (geo.relative && pState != null && !model.isEdge(pState.cell))\n\t{\n\t\tvar alpha = mxUtils.toRadians(pState.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\n\t\tif (alpha != 0)\n\t\t{\n\t\t\tvar cos = Math.cos(alpha);\n\t\t\tvar sin = Math.sin(alpha);\n\n\t\t\tvar ct = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\tvar cx = new mxPoint(pState.getCenterX(), pState.getCenterY());\n\t\t\tvar pt = mxUtils.getRotatedPoint(ct, cos, sin, cx);\n\t\t\tstate.x = pt.x - state.width / 2;\n\t\t\tstate.y = pt.y - state.height / 2;\n\t\t}\n\t}\n\t\n\tthis.updateVertexLabelOffset(state);\n};\n\n/**\n * Function: updateEdgeState\n * \n * Validates the given cell state.\n */\nmxGraphView.prototype.updateEdgeState = function(state, geo)\n{\n\tvar source = state.getVisibleTerminalState(true);\n\tvar target = state.getVisibleTerminalState(false);\n\t\n\t// This will remove edges with no terminals and no terminal points\n\t// as such edges are invalid and produce NPEs in the edge styles.\n\t// Also removes connected edges that have no visible terminals.\n\tif ((this.graph.model.getTerminal(state.cell, true) != null && source == null) ||\n\t\t(source == null && geo.getTerminalPoint(true) == null) ||\n\t\t(this.graph.model.getTerminal(state.cell, false) != null && target == null) ||\n\t\t(target == null && geo.getTerminalPoint(false) == null))\n\t{\n\t\tthis.clear(state.cell, true);\n\t}\n\telse\n\t{\n\t\tthis.updateFixedTerminalPoints(state, source, target);\n\t\tthis.updatePoints(state, geo.points, source, target);\n\t\tthis.updateFloatingTerminalPoints(state, source, target);\n\t\t\n\t\tvar pts = state.absolutePoints;\n\t\t\n\t\tif (state.cell != this.currentRoot && (pts == null || pts.length < 2 ||\n\t\t\tpts[0] == null || pts[pts.length - 1] == null))\n\t\t{\n\t\t\t// This will remove edges with invalid points from the list of states in the view.\n\t\t\t// Happens if the one of the terminals and the corresponding terminal point is null.\n\t\t\tthis.clear(state.cell, true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.updateEdgeBounds(state);\n\t\t\tthis.updateEdgeLabelOffset(state);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateVertexLabelOffset\n * \n * Updates the absoluteOffset of the given vertex cell state. This takes\n * into account the label position styles.\n * \n * Parameters:\n * \n * state - <mxCellState> whose absolute offset should be updated.\n */\nmxGraphView.prototype.updateVertexLabelOffset = function(state)\n{\n\tvar h = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\n\tif (h == mxConstants.ALIGN_LEFT)\n\t{\n\t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\n\t\tif (lw != null)\n\t\t{\n\t\t\tlw *= this.scale;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlw = state.width;\n\t\t}\n\t\t\n\t\tstate.absoluteOffset.x -= lw;\n\t}\n\telse if (h == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tstate.absoluteOffset.x += state.width;\n\t}\n\telse if (h == mxConstants.ALIGN_CENTER)\n\t{\n\t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\n\t\tif (lw != null)\n\t\t{\n\t\t\t// Aligns text block with given width inside the vertex width\n\t\t\tvar align = mxUtils.getValue(state.style, mxConstants.STYLE_ALIGN, mxConstants.ALIGN_CENTER);\n\t\t\tvar dx = 0;\n\t\t\t\n\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t{\n\t\t\t\tdx = 0.5;\n\t\t\t}\n\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tdx = 1;\n\t\t\t}\n\t\t\t\n\t\t\tif (dx != 0)\n\t\t\t{\n\t\t\t\tstate.absoluteOffset.x -= (lw * this.scale - state.width) * dx;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar v = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\n\tif (v == mxConstants.ALIGN_TOP)\n\t{\n\t\tstate.absoluteOffset.y -= state.height;\n\t}\n\telse if (v == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tstate.absoluteOffset.y += state.height;\n\t}\n};\n\n/**\n * Function: resetValidationState\n *\n * Resets the current validation state.\n */\nmxGraphView.prototype.resetValidationState = function()\n{\n\tthis.lastNode = null;\n\tthis.lastHtmlNode = null;\n\tthis.lastForegroundNode = null;\n\tthis.lastForegroundHtmlNode = null;\n};\n\n/**\n * Function: stateValidated\n * \n * Invoked when a state has been processed in <validatePoints>. This is used\n * to update the order of the DOM nodes of the shape.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the cell state.\n */\nmxGraphView.prototype.stateValidated = function(state)\n{\n\tvar fg = (this.graph.getModel().isEdge(state.cell) && this.graph.keepEdgesInForeground) ||\n\t\t(this.graph.getModel().isVertex(state.cell) && this.graph.keepEdgesInBackground);\n\tvar htmlNode = (fg) ? this.lastForegroundHtmlNode || this.lastHtmlNode : this.lastHtmlNode;\n\tvar node = (fg) ? this.lastForegroundNode || this.lastNode : this.lastNode;\n\tvar result = this.graph.cellRenderer.insertStateAfter(state, node, htmlNode);\n\n\tif (fg)\n\t{\n\t\tthis.lastForegroundHtmlNode = result[1];\n\t\tthis.lastForegroundNode = result[0];\n\t}\n\telse\n\t{\n\t\tthis.lastHtmlNode = result[1];\n\t\tthis.lastNode = result[0];\n\t}\n};\n\n/**\n * Function: updateFixedTerminalPoints\n *\n * Sets the initial absolute terminal points in the given state before the edge\n * style is computed.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose initial terminal points should be updated.\n * source - <mxCellState> which represents the source terminal.\n * target - <mxCellState> which represents the target terminal.\n */\nmxGraphView.prototype.updateFixedTerminalPoints = function(edge, source, target)\n{\n\tthis.updateFixedTerminalPoint(edge, source, true,\n\t\tthis.graph.getConnectionConstraint(edge, source, true));\n\tthis.updateFixedTerminalPoint(edge, target, false,\n\t\tthis.graph.getConnectionConstraint(edge, target, false));\n};\n\n/**\n * Function: updateFixedTerminalPoint\n *\n * Sets the fixed source or target terminal point on the given edge.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be updated.\n * terminal - <mxCellState> which represents the actual terminal.\n * source - Boolean that specifies if the terminal is the source.\n * constraint - <mxConnectionConstraint> that specifies the connection.\n */\nmxGraphView.prototype.updateFixedTerminalPoint = function(edge, terminal, source, constraint)\n{\n\tedge.setAbsoluteTerminalPoint(this.getFixedTerminalPoint(edge, terminal, source, constraint), source);\n};\n\n/**\n * Function: getFixedTerminalPoint\n *\n * Returns the fixed source or target terminal point for the given edge.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be returned.\n * terminal - <mxCellState> which represents the actual terminal.\n * source - Boolean that specifies if the terminal is the source.\n * constraint - <mxConnectionConstraint> that specifies the connection.\n */\nmxGraphView.prototype.getFixedTerminalPoint = function(edge, terminal, source, constraint)\n{\n\tvar pt = null;\n\t\n\tif (constraint != null)\n\t{\n\t\tpt = this.graph.getConnectionPoint(terminal, constraint, false); // FIXME Rounding introduced bugs when calculating label positions -> , this.graph.isOrthogonal(edge));\n\t}\n\t\n\tif (pt == null && terminal == null)\n\t{\n\t\tvar s = this.scale;\n\t\tvar tr = this.translate;\n\t\tvar orig = edge.origin;\n\t\tvar geo = this.graph.getCellGeometry(edge.cell);\n\t\tpt = geo.getTerminalPoint(source);\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt = new mxPoint(s * (tr.x + pt.x + orig.x),\n\t\t\t\t\t\t\t s * (tr.y + pt.y + orig.y));\n\t\t}\n\t}\n\t\n\treturn pt;\n};\n\n/**\n * Function: updateBoundsFromStencil\n * \n * Updates the bounds of the given cell state to reflect the bounds of the stencil\n * if it has a fixed aspect and returns the previous bounds as an <mxRectangle> if\n * the bounds have been modified or null otherwise.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose bounds should be updated.\n */\nmxGraphView.prototype.updateBoundsFromStencil = function(state)\n{\n\tvar previous = null;\n\t\n\tif (state != null && state.shape != null && state.shape.stencil != null && state.shape.stencil.aspect == 'fixed')\n\t{\n\t\tprevious = mxRectangle.fromRectangle(state);\n\t\tvar asp = state.shape.stencil.computeAspect(state.style, state.x, state.y, state.width, state.height);\n\t\tstate.setRect(asp.x, asp.y, state.shape.stencil.w0 * asp.width, state.shape.stencil.h0 * asp.height);\n\t}\n\t\n\treturn previous;\n};\n\n/**\n * Function: updatePoints\n *\n * Updates the absolute points in the given state using the specified array\n * of <mxPoints> as the relative points.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose absolute points should be updated.\n * points - Array of <mxPoints> that constitute the relative points.\n * source - <mxCellState> that represents the source terminal.\n * target - <mxCellState> that represents the target terminal.\n */\nmxGraphView.prototype.updatePoints = function(edge, points, source, target)\n{\n\tif (edge != null)\n\t{\n\t\tvar pts = [];\n\t\tpts.push(edge.absolutePoints[0]);\n\t\tvar edgeStyle = this.getEdgeStyle(edge, points, source, target);\n\t\t\n\t\tif (edgeStyle != null)\n\t\t{\n\t\t\tvar src = this.getTerminalPort(edge, source, true);\n\t\t\tvar trg = this.getTerminalPort(edge, target, false);\n\t\t\t\n\t\t\t// Uses the stencil bounds for routing and restores after routing\n\t\t\tvar srcBounds = this.updateBoundsFromStencil(src);\n\t\t\tvar trgBounds = this.updateBoundsFromStencil(trg);\n\n\t\t\tedgeStyle(edge, src, trg, points, pts);\n\t\t\t\n\t\t\t// Restores previous bounds\n\t\t\tif (srcBounds != null)\n\t\t\t{\n\t\t\t\tsrc.setRect(srcBounds.x, srcBounds.y, srcBounds.width, srcBounds.height);\n\t\t\t}\n\t\t\t\n\t\t\tif (trgBounds != null)\n\t\t\t{\n\t\t\t\ttrg.setRect(trgBounds.x, trgBounds.y, trgBounds.width, trgBounds.height);\n\t\t\t}\n\t\t}\n\t\telse if (points != null)\n\t\t{\n\t\t\tfor (var i = 0; i < points.length; i++)\n\t\t\t{\n\t\t\t\tif (points[i] != null)\n\t\t\t\t{\n\t\t\t\t\tvar pt = mxUtils.clone(points[i]);\n\t\t\t\t\tpts.push(this.transformControlPoint(edge, pt));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar tmp = edge.absolutePoints;\n\t\tpts.push(tmp[tmp.length-1]);\n\n\t\tedge.absolutePoints = pts;\n\t}\n};\n\n/**\n * Function: transformControlPoint\n *\n * Transforms the given control point to an absolute point.\n */\nmxGraphView.prototype.transformControlPoint = function(state, pt, ignoreScale)\n{\n\tif (state != null && pt != null)\n\t{\n\t\tvar orig = state.origin;\n\t\tvar scale = ignoreScale ? 1 : this.scale\n\t\t\n\t    return new mxPoint(scale * (pt.x + this.translate.x + orig.x),\n\t    \t\tscale * (pt.y + this.translate.y + orig.y));\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: isLoopStyleEnabled\n * \n * Returns true if the given edge should be routed with <mxGraph.defaultLoopStyle>\n * or the <mxConstants.STYLE_LOOP> defined for the given edge. This implementation\n * returns true if the given edge is a loop and does not have connections constraints\n * associated.\n */\nmxGraphView.prototype.isLoopStyleEnabled = function(edge, points, source, target)\n{\n\tvar sc = this.graph.getConnectionConstraint(edge, source, true);\n\tvar tc = this.graph.getConnectionConstraint(edge, target, false);\n\t\n\tif ((points == null || points.length < 2) &&\n\t\t(!mxUtils.getValue(edge.style, mxConstants.STYLE_ORTHOGONAL_LOOP, false) ||\n\t\t((sc == null || sc.point == null) && (tc == null || tc.point == null))))\n\t{\n\t\treturn source != null && source == target;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getEdgeStyle\n * \n * Returns the edge style function to be used to render the given edge state.\n */\nmxGraphView.prototype.getEdgeStyle = function(edge, points, source, target)\n{\n\tvar edgeStyle = this.isLoopStyleEnabled(edge, points, source, target) ?\n\t\tmxUtils.getValue(edge.style, mxConstants.STYLE_LOOP, this.graph.defaultLoopStyle) :\n\t\t(!mxUtils.getValue(edge.style, mxConstants.STYLE_NOEDGESTYLE, false) ?\n\t\tedge.style[mxConstants.STYLE_EDGE] : null);\n\n\t// Converts string values to objects\n\tif (typeof(edgeStyle) == \"string\")\n\t{\n\t\tvar tmp = mxStyleRegistry.getValue(edgeStyle);\n\t\t\n\t\tif (tmp == null && this.isAllowEval())\n\t\t{\n \t\t\ttmp = mxUtils.eval(edgeStyle);\n\t\t}\n\t\t\n\t\tedgeStyle = tmp;\n\t}\n\t\n\tif (typeof(edgeStyle) == \"function\")\n\t{\n\t\treturn edgeStyle;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: updateFloatingTerminalPoints\n *\n * Updates the terminal points in the given state after the edge style was\n * computed for the edge.\n * \n * Parameters:\n * \n * state - <mxCellState> whose terminal points should be updated.\n * source - <mxCellState> that represents the source terminal.\n * target - <mxCellState> that represents the target terminal.\n */\nmxGraphView.prototype.updateFloatingTerminalPoints = function(state, source, target)\n{\n\tvar pts = state.absolutePoints;\n\tvar p0 = pts[0];\n\tvar pe = pts[pts.length - 1];\n\n\tif (pe == null && target != null)\n\t{\n\t\tthis.updateFloatingTerminalPoint(state, target, source, false);\n\t}\n\t\n\tif (p0 == null && source != null)\n\t{\n\t\tthis.updateFloatingTerminalPoint(state, source, target, true);\n\t}\n};\n\n/**\n * Function: updateFloatingTerminalPoint\n *\n * Updates the absolute terminal point in the given state for the given\n * start and end state, where start is the source if source is true.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be updated.\n * start - <mxCellState> for the terminal on \"this\" side of the edge.\n * end - <mxCellState> for the terminal on the other side of the edge.\n * source - Boolean indicating if start is the source terminal state.\n */\nmxGraphView.prototype.updateFloatingTerminalPoint = function(edge, start, end, source)\n{\n\tedge.setAbsoluteTerminalPoint(this.getFloatingTerminalPoint(edge, start, end, source), source);\n};\n\n/**\n * Function: getFloatingTerminalPoint\n * \n * Returns the floating terminal point for the given edge, start and end\n * state, where start is the source if source is true.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be returned.\n * start - <mxCellState> for the terminal on \"this\" side of the edge.\n * end - <mxCellState> for the terminal on the other side of the edge.\n * source - Boolean indicating if start is the source terminal state.\n */\nmxGraphView.prototype.getFloatingTerminalPoint = function(edge, start, end, source)\n{\n\tstart = this.getTerminalPort(edge, start, source);\n\tvar next = this.getNextPoint(edge, end, source);\n\t\n\tvar orth = this.graph.isOrthogonal(edge);\n\tvar alpha = mxUtils.toRadians(Number(start.style[mxConstants.STYLE_ROTATION] || '0'));\n\tvar center = new mxPoint(start.getCenterX(), start.getCenterY());\n\t\n\tif (alpha != 0)\n\t{\n\t\tvar cos = Math.cos(-alpha);\n\t\tvar sin = Math.sin(-alpha);\n\t\tnext = mxUtils.getRotatedPoint(next, cos, sin, center);\n\t}\n\t\n\tvar border = parseFloat(edge.style[mxConstants.STYLE_PERIMETER_SPACING] || 0);\n\tborder += parseFloat(edge.style[(source) ?\n\t\tmxConstants.STYLE_SOURCE_PERIMETER_SPACING :\n\t\tmxConstants.STYLE_TARGET_PERIMETER_SPACING] || 0);\n\tvar pt = this.getPerimeterPoint(start, next, alpha == 0 && orth, border);\n\n\tif (alpha != 0)\n\t{\n\t\tvar cos = Math.cos(alpha);\n\t\tvar sin = Math.sin(alpha);\n\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, center);\n\t}\n\n\treturn pt;\n};\n\n/**\n * Function: getTerminalPort\n * \n * Returns an <mxCellState> that represents the source or target terminal or\n * port for the given edge.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the state of the edge.\n * terminal - <mxCellState> that represents the terminal.\n * source - Boolean indicating if the given terminal is the source terminal.\n */\nmxGraphView.prototype.getTerminalPort = function(state, terminal, source)\n{\n\tvar key = (source) ? mxConstants.STYLE_SOURCE_PORT :\n\t\tmxConstants.STYLE_TARGET_PORT;\n\tvar id = mxUtils.getValue(state.style, key);\n\t\n\tif (id != null)\n\t{\n\t\tvar tmp = this.getState(this.graph.getModel().getCell(id));\n\t\t\n\t\t// Only uses ports where a cell state exists\n\t\tif (tmp != null)\n\t\t{\n\t\t\tterminal = tmp;\n\t\t}\n\t}\n\t\n\treturn terminal;\n};\n\n/**\n * Function: getPerimeterPoint\n *\n * Returns an <mxPoint> that defines the location of the intersection point between\n * the perimeter and the line between the center of the shape and the given point.\n * \n * Parameters:\n * \n * terminal - <mxCellState> for the source or target terminal.\n * next - <mxPoint> that lies outside of the given terminal.\n * orthogonal - Boolean that specifies if the orthogonal projection onto\n * the perimeter should be returned. If this is false then the intersection\n * of the perimeter and the line between the next and the center point is\n * returned.\n * border - Optional border between the perimeter and the shape.\n */\nmxGraphView.prototype.getPerimeterPoint = function(terminal, next, orthogonal, border)\n{\n\tvar point = null;\n\t\n\tif (terminal != null)\n\t{\n\t\tvar perimeter = this.getPerimeterFunction(terminal);\n\t\t\n\t\tif (perimeter != null && next != null)\n\t\t{\n\t\t\tvar bounds = this.getPerimeterBounds(terminal, border);\n\n\t\t\tif (bounds.width > 0 || bounds.height > 0)\n\t\t\t{\n\t\t\t\tpoint = new mxPoint(next.x, next.y);\n\t\t\t\tvar flipH = false;\n\t\t\t\tvar flipV = false;\t\n\t\t\t\t\n\t\t\t\tif (this.graph.model.isVertex(terminal.cell))\n\t\t\t\t{\n\t\t\t\t\tflipH = mxUtils.getValue(terminal.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\t\t\t\tflipV = mxUtils.getValue(terminal.style, mxConstants.STYLE_FLIPV, 0) == 1;\t\n\t\n\t\t\t\t\t// Legacy support for stencilFlipH/V\n\t\t\t\t\tif (terminal.shape != null && terminal.shape.stencil != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tflipH = (mxUtils.getValue(terminal.style, 'stencilFlipH', 0) == 1) || flipH;\n\t\t\t\t\t\tflipV = (mxUtils.getValue(terminal.style, 'stencilFlipV', 0) == 1) || flipV;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (flipH)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.x = 2 * bounds.getCenterX() - point.x;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.y = 2 * bounds.getCenterY() - point.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpoint = perimeter(bounds, terminal, point, orthogonal);\n\n\t\t\t\tif (point != null)\n\t\t\t\t{\n\t\t\t\t\tif (flipH)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.x = 2 * bounds.getCenterX() - point.x;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.y = 2 * bounds.getCenterY() - point.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (point == null)\n\t\t{\n\t\t\tpoint = this.getPoint(terminal);\n\t\t}\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: getRoutingCenterX\n * \n * Returns the x-coordinate of the center point for automatic routing.\n */\nmxGraphView.prototype.getRoutingCenterX = function (state)\n{\n\tvar f = (state.style != null) ? parseFloat(state.style\n\t\t[mxConstants.STYLE_ROUTING_CENTER_X]) || 0 : 0;\n\n\treturn state.getCenterX() + f * state.width;\n};\n\n/**\n * Function: getRoutingCenterY\n * \n * Returns the y-coordinate of the center point for automatic routing.\n */\nmxGraphView.prototype.getRoutingCenterY = function (state)\n{\n\tvar f = (state.style != null) ? parseFloat(state.style\n\t\t[mxConstants.STYLE_ROUTING_CENTER_Y]) || 0 : 0;\n\n\treturn state.getCenterY() + f * state.height;\n};\n\n/**\n * Function: getPerimeterBounds\n *\n * Returns the perimeter bounds for the given terminal, edge pair as an\n * <mxRectangle>.\n * \n * If you have a model where each terminal has a relative child that should\n * act as the graphical endpoint for a connection from/to the terminal, then\n * this method can be replaced as follows:\n * \n * (code)\n * var oldGetPerimeterBounds = mxGraphView.prototype.getPerimeterBounds;\n * mxGraphView.prototype.getPerimeterBounds = function(terminal, edge, isSource)\n * {\n *   var model = this.graph.getModel();\n *   var childCount = model.getChildCount(terminal.cell);\n * \n *   if (childCount > 0)\n *   {\n *     var child = model.getChildAt(terminal.cell, 0);\n *     var geo = model.getGeometry(child);\n *\n *     if (geo != null &&\n *         geo.relative)\n *     {\n *       var state = this.getState(child);\n *       \n *       if (state != null)\n *       {\n *         terminal = state;\n *       }\n *     }\n *   }\n *   \n *   return oldGetPerimeterBounds.apply(this, arguments);\n * };\n * (end)\n * \n * Parameters:\n * \n * terminal - <mxCellState> that represents the terminal.\n * border - Number that adds a border between the shape and the perimeter.\n */\nmxGraphView.prototype.getPerimeterBounds = function(terminal, border)\n{\n\tborder = (border != null) ? border : 0;\n\n\tif (terminal != null)\n\t{\n\t\tborder += parseFloat(terminal.style[mxConstants.STYLE_PERIMETER_SPACING] || 0);\n\t}\n\n\treturn terminal.getPerimeterBounds(border * this.scale);\n};\n\n/**\n * Function: getPerimeterFunction\n *\n * Returns the perimeter function for the given state.\n */\nmxGraphView.prototype.getPerimeterFunction = function(state)\n{\n\tvar perimeter = state.style[mxConstants.STYLE_PERIMETER];\n\n\t// Converts string values to objects\n\tif (typeof(perimeter) == \"string\")\n\t{\n\t\tvar tmp = mxStyleRegistry.getValue(perimeter);\n\t\t\n\t\tif (tmp == null && this.isAllowEval())\n\t\t{\n \t\t\ttmp = mxUtils.eval(perimeter);\n\t\t}\n\n\t\tperimeter = tmp;\n\t}\n\t\n\tif (typeof(perimeter) == \"function\")\n\t{\n\t\treturn perimeter;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getNextPoint\n *\n * Returns the nearest point in the list of absolute points or the center\n * of the opposite terminal.\n * \n * Parameters:\n * \n * edge - <mxCellState> that represents the edge.\n * opposite - <mxCellState> that represents the opposite terminal.\n * source - Boolean indicating if the next point for the source or target\n * should be returned.\n */\nmxGraphView.prototype.getNextPoint = function(edge, opposite, source)\n{\n\tvar pts = edge.absolutePoints;\n\tvar point = null;\n\t\n\tif (pts != null && pts.length >= 2)\n\t{\n\t\tvar count = pts.length;\n\t\tpoint = pts[(source) ? Math.min(1, count - 1) : Math.max(0, count - 2)];\n\t}\n\t\n\tif (point == null && opposite != null)\n\t{\n\t\tpoint = new mxPoint(opposite.getCenterX(), opposite.getCenterY());\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: getVisibleTerminal\n *\n * Returns the nearest ancestor terminal that is visible. The edge appears\n * to be connected to this terminal on the display. The result of this method\n * is cached in <mxCellState.getVisibleTerminalState>.\n * \n * Parameters:\n * \n * edge - <mxCell> whose visible terminal should be returned.\n * source - Boolean that specifies if the source or target terminal\n * should be returned.\n */\nmxGraphView.prototype.getVisibleTerminal = function(edge, source)\n{\n\tvar model = this.graph.getModel();\n\tvar result = model.getTerminal(edge, source);\n\tvar best = result;\n\t\n\twhile (result != null && result != this.currentRoot)\n\t{\n\t\tif (!this.graph.isCellVisible(best) || this.isCellCollapsed(result))\n\t\t{\n\t\t\tbest = result;\n\t\t}\n\t\t\n\t\tresult = model.getParent(result);\n\t}\n\n\t// Checks if the result is valid for the current view state\n\tif (best != null && (!model.contains(best) ||\n\t\tmodel.getParent(best) == model.getRoot() ||\n\t\tbest == this.currentRoot))\n\t{\n\t\tbest = null;\n\t}\n\t\n\treturn best;\n};\n\n/**\n * Function: updateEdgeBounds\n *\n * Updates the given state using the bounding box of t\n * he absolute points.\n * Also updates <mxCellState.terminalDistance>, <mxCellState.length> and\n * <mxCellState.segments>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose bounds should be updated.\n */\nmxGraphView.prototype.updateEdgeBounds = function(state)\n{\n\tvar points = state.absolutePoints;\n\tvar p0 = points[0];\n\tvar pe = points[points.length - 1];\n\t\n\tif (p0.x != pe.x || p0.y != pe.y)\n\t{\n\t\tvar dx = pe.x - p0.x;\n\t\tvar dy = pe.y - p0.y;\n\t\tstate.terminalDistance = Math.sqrt(dx * dx + dy * dy);\n\t}\n\telse\n\t{\n\t\tstate.terminalDistance = 0;\n\t}\n\t\n\tvar length = 0;\n\tvar segments = [];\n\tvar pt = p0;\n\t\n\tif (pt != null)\n\t{\n\t\tvar minX = pt.x;\n\t\tvar minY = pt.y;\n\t\tvar maxX = minX;\n\t\tvar maxY = minY;\n\t\t\n\t\tfor (var i = 1; i < points.length; i++)\n\t\t{\n\t\t\tvar tmp = points[i];\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tvar dx = pt.x - tmp.x;\n\t\t\t\tvar dy = pt.y - tmp.y;\n\t\t\t\t\n\t\t\t\tvar segment = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\tsegments.push(segment);\n\t\t\t\tlength += segment;\n\t\t\t\t\n\t\t\t\tpt = tmp;\n\t\t\t\t\n\t\t\t\tminX = Math.min(pt.x, minX);\n\t\t\t\tminY = Math.min(pt.y, minY);\n\t\t\t\tmaxX = Math.max(pt.x, maxX);\n\t\t\t\tmaxY = Math.max(pt.y, maxY);\n\t\t\t}\n\t\t}\n\t\t\n\t\tstate.length = length;\n\t\tstate.segments = segments;\n\t\t\n\t\tvar markerSize = 1; // TODO: include marker size\n\t\t\n\t\tstate.x = minX;\n\t\tstate.y = minY;\n\t\tstate.width = Math.max(markerSize, maxX - minX);\n\t\tstate.height = Math.max(markerSize, maxY - minY);\n\t}\n};\n\n/**\n * Function: getPoint\n *\n * Returns the absolute point on the edge for the given relative\n * <mxGeometry> as an <mxPoint>. The edge is represented by the given\n * <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the state of the parent edge.\n * geometry - <mxGeometry> that represents the relative location.\n */\nmxGraphView.prototype.getPoint = function(state, geometry)\n{\n\tvar x = state.getCenterX();\n\tvar y = state.getCenterY();\n\t\n\tif (state.segments != null && (geometry == null || geometry.relative))\n\t{\n\t\tvar gx = (geometry != null) ? geometry.x / 2 : 0;\n\t\tvar pointCount = state.absolutePoints.length;\n\t\tvar dist = Math.round((gx + 0.5) * state.length);\n\t\tvar segment = state.segments[0];\n\t\tvar length = 0;\t\t\t\t\n\t\tvar index = 1;\n\n\t\twhile (dist >= Math.round(length + segment) && index < pointCount - 1)\n\t\t{\n\t\t\tlength += segment;\n\t\t\tsegment = state.segments[index++];\n\t\t}\n\n\t\tvar factor = (segment == 0) ? 0 : (dist - length) / segment;\n\t\tvar p0 = state.absolutePoints[index-1];\n\t\tvar pe = state.absolutePoints[index];\n\n\t\tif (p0 != null && pe != null)\n\t\t{\n\t\t\tvar gy = 0;\n\t\t\tvar offsetX = 0;\n\t\t\tvar offsetY = 0;\n\n\t\t\tif (geometry != null)\n\t\t\t{\n\t\t\t\tgy = geometry.y;\n\t\t\t\tvar offset = geometry.offset;\n\t\t\t\t\n\t\t\t\tif (offset != null)\n\t\t\t\t{\n\t\t\t\t\toffsetX = offset.x;\n\t\t\t\t\toffsetY = offset.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar dx = pe.x - p0.x;\n\t\t\tvar dy = pe.y - p0.y;\n\t\t\tvar nx = (segment == 0) ? 0 : dy / segment;\n\t\t\tvar ny = (segment == 0) ? 0 : dx / segment;\n\t\t\t\n\t\t\tx = p0.x + dx * factor + (nx * gy + offsetX) * this.scale;\n\t\t\ty = p0.y + dy * factor - (ny * gy - offsetY) * this.scale;\n\t\t}\n\t}\n\telse if (geometry != null)\n\t{\n\t\tvar offset = geometry.offset;\n\t\t\n\t\tif (offset != null)\n\t\t{\n\t\t\tx += offset.x;\n\t\t\ty += offset.y;\n\t\t}\n\t}\n\t\n\treturn new mxPoint(x, y);\t\t\n};\n\n/**\n * Function: getRelativePoint\n *\n * Gets the relative point that describes the given, absolute label\n * position for the given edge state.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the state of the parent edge.\n * x - Specifies the x-coordinate of the absolute label location.\n * y - Specifies the y-coordinate of the absolute label location.\n */\nmxGraphView.prototype.getRelativePoint = function(edgeState, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar geometry = model.getGeometry(edgeState.cell);\n\t\n\tif (geometry != null)\n\t{\n\t\tvar pointCount = edgeState.absolutePoints.length;\n\t\t\n\t\tif (geometry.relative && pointCount > 1)\n\t\t{\n\t\t\tvar totalLength = edgeState.length;\n\t\t\tvar segments = edgeState.segments;\n\n\t\t\t// Works which line segment the point of the label is closest to\n\t\t\tvar p0 = edgeState.absolutePoints[0];\n\t\t\tvar pe = edgeState.absolutePoints[1];\n\t\t\tvar minDist = mxUtils.ptSegDistSq(p0.x, p0.y, pe.x, pe.y, x, y);\n\n\t\t\tvar index = 0;\n\t\t\tvar tmp = 0;\n\t\t\tvar length = 0;\n\t\t\t\n\t\t\tfor (var i = 2; i < pointCount; i++)\n\t\t\t{\n\t\t\t\ttmp += segments[i - 2];\n\t\t\t\tpe = edgeState.absolutePoints[i];\n\t\t\t\tvar dist = mxUtils.ptSegDistSq(p0.x, p0.y, pe.x, pe.y, x, y);\n\n\t\t\t\tif (dist <= minDist)\n\t\t\t\t{\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tindex = i - 1;\n\t\t\t\t\tlength = tmp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tp0 = pe;\n\t\t\t}\n\t\t\t\n\t\t\tvar seg = segments[index];\n\t\t\tp0 = edgeState.absolutePoints[index];\n\t\t\tpe = edgeState.absolutePoints[index + 1];\n\t\t\t\n\t\t\tvar x2 = p0.x;\n\t\t\tvar y2 = p0.y;\n\t\t\t\n\t\t\tvar x1 = pe.x;\n\t\t\tvar y1 = pe.y;\n\t\t\t\n\t\t\tvar px = x;\n\t\t\tvar py = y;\n\t\t\t\n\t\t\tvar xSegment = x2 - x1;\n\t\t\tvar ySegment = y2 - y1;\n\t\t\t\n\t\t\tpx -= x1;\n\t\t\tpy -= y1;\n\t\t\tvar projlenSq = 0;\n\t\t\t\n\t\t\tpx = xSegment - px;\n\t\t\tpy = ySegment - py;\n\t\t\tvar dotprod = px * xSegment + py * ySegment;\n\n\t\t\tif (dotprod <= 0.0)\n\t\t\t{\n\t\t\t\tprojlenSq = 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprojlenSq = dotprod * dotprod\n\t\t\t\t\t\t/ (xSegment * xSegment + ySegment * ySegment);\n\t\t\t}\n\n\t\t\tvar projlen = Math.sqrt(projlenSq);\n\n\t\t\tif (projlen > seg)\n\t\t\t{\n\t\t\t\tprojlen = seg;\n\t\t\t}\n\n\t\t\tvar yDistance = Math.sqrt(mxUtils.ptSegDistSq(p0.x, p0.y, pe\n\t\t\t\t\t.x, pe.y, x, y));\n\t\t\tvar direction = mxUtils.relativeCcw(p0.x, p0.y, pe.x, pe.y, x, y);\n\n\t\t\tif (direction == -1)\n\t\t\t{\n\t\t\t\tyDistance = -yDistance;\n\t\t\t}\n\n\t\t\t// Constructs the relative point for the label\n\t\t\treturn new mxPoint(((totalLength / 2 - length - projlen) / totalLength) * -2,\n\t\t\t\t\t\tyDistance / this.scale);\n\t\t}\n\t}\n\t\n\treturn new mxPoint();\n};\n\n/**\n * Function: updateEdgeLabelOffset\n *\n * Updates <mxCellState.absoluteOffset> for the given state. The absolute\n * offset is normally used for the position of the edge label. Is is\n * calculated from the geometry as an absolute offset from the center\n * between the two endpoints if the geometry is absolute, or as the\n * relative distance between the center along the line and the absolute\n * orthogonal distance if the geometry is relative.\n * \n * Parameters:\n * \n * state - <mxCellState> whose absolute offset should be updated.\n */\nmxGraphView.prototype.updateEdgeLabelOffset = function(state)\n{\n\tvar points = state.absolutePoints;\n\t\n\tstate.absoluteOffset.x = state.getCenterX();\n\tstate.absoluteOffset.y = state.getCenterY();\n\n\tif (points != null && points.length > 0 && state.segments != null)\n\t{\n\t\tvar geometry = this.graph.getCellGeometry(state.cell);\n\t\t\n\t\tif (geometry.relative)\n\t\t{\n\t\t\tvar offset = this.getPoint(state, geometry);\n\t\t\t\n\t\t\tif (offset != null)\n\t\t\t{\n\t\t\t\tstate.absoluteOffset = offset;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar p0 = points[0];\n\t\t\tvar pe = points[points.length - 1];\n\t\t\t\n\t\t\tif (p0 != null && pe != null)\n\t\t\t{\n\t\t\t\tvar dx = pe.x - p0.x;\n\t\t\t\tvar dy = pe.y - p0.y;\n\t\t\t\tvar x0 = 0;\n\t\t\t\tvar y0 = 0;\n\n\t\t\t\tvar off = geometry.offset;\n\t\t\t\t\n\t\t\t\tif (off != null)\n\t\t\t\t{\n\t\t\t\t\tx0 = off.x;\n\t\t\t\t\ty0 = off.y;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar x = p0.x + dx / 2 + x0 * this.scale;\n\t\t\t\tvar y = p0.y + dy / 2 + y0 * this.scale;\n\t\t\t\t\n\t\t\t\tstate.absoluteOffset.x = x;\n\t\t\t\tstate.absoluteOffset.y = y;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getState\n *\n * Returns the <mxCellState> for the given cell. If create is true, then\n * the state is created if it does not yet exist.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the <mxCellState> should be returned.\n * create - Optional boolean indicating if a new state should be created\n * if it does not yet exist. Default is false.\n */\nmxGraphView.prototype.getState = function(cell, create)\n{\n\tcreate = create || false;\n\tvar state = null;\n\t\n\tif (cell != null)\n\t{\n\t\tstate = this.states.get(cell);\n\t\t\n\t\tif (create && (state == null || this.updateStyle) && this.graph.isCellVisible(cell))\n\t\t{\n\t\t\tif (state == null)\n\t\t\t{\n\t\t\t\tstate = this.createState(cell);\n\t\t\t\tthis.states.put(cell, state);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.style = this.graph.getCellStyle(cell);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn state;\n};\n\n/**\n * Function: isRendering\n *\n * Returns <rendering>.\n */\nmxGraphView.prototype.isRendering = function()\n{\n\treturn this.rendering;\n};\n\n/**\n * Function: setRendering\n *\n * Sets <rendering>.\n */\nmxGraphView.prototype.setRendering = function(value)\n{\n\tthis.rendering = value;\n};\n\n/**\n * Function: isAllowEval\n *\n * Returns <allowEval>.\n */\nmxGraphView.prototype.isAllowEval = function()\n{\n\treturn this.allowEval;\n};\n\n/**\n * Function: setAllowEval\n *\n * Sets <allowEval>.\n */\nmxGraphView.prototype.setAllowEval = function(value)\n{\n\tthis.allowEval = value;\n};\n\n/**\n * Function: getStates\n *\n * Returns <states>.\n */\nmxGraphView.prototype.getStates = function()\n{\n\treturn this.states;\n};\n\n/**\n * Function: setStates\n *\n * Sets <states>.\n */\nmxGraphView.prototype.setStates = function(value)\n{\n\tthis.states = value;\n};\n\n/**\n * Function: getCellStates\n *\n * Returns the <mxCellStates> for the given array of <mxCells>. The array\n * contains all states that are not null, that is, the returned array may\n * have less elements than the given array. If no argument is given, then\n * this returns <states>.\n */\nmxGraphView.prototype.getCellStates = function(cells)\n{\n\tif (cells == null)\n\t{\n\t\treturn this.states;\n\t}\n\telse\n\t{\n\t\tvar result = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar state = this.getState(cells[i]);\n\t\t\t\n\t\t\tif (state != null)\n\t\t\t{\n\t\t\t\tresult.push(state);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n};\n\n/**\n * Function: removeState\n *\n * Removes and returns the <mxCellState> for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the <mxCellState> should be removed.\n */\nmxGraphView.prototype.removeState = function(cell)\n{\n\tvar state = null;\n\t\n\tif (cell != null)\n\t{\n\t\tstate = this.states.remove(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.graph.cellRenderer.destroy(state);\n\t\t\tstate.invalid = true;\n\t\t\tstate.destroy();\n\t\t}\n\t}\n\t\n\treturn state;\n};\n\n/**\n * Function: createState\n *\n * Creates and returns an <mxCellState> for the given cell and initializes\n * it using <mxCellRenderer.initialize>.\n * \n * Parameters:\n * \n * cell - <mxCell> for which a new <mxCellState> should be created.\n */\nmxGraphView.prototype.createState = function(cell)\n{\n\treturn new mxCellState(this, cell, this.graph.getCellStyle(cell));\n};\n\n/**\n * Function: getCanvas\n *\n * Returns the DOM node that contains the background-, draw- and\n * overlay- and decoratorpanes.\n */\nmxGraphView.prototype.getCanvas = function()\n{\n\treturn this.canvas;\n};\n\n/**\n * Function: getBackgroundPane\n *\n * Returns the DOM node that represents the background layer.\n */\nmxGraphView.prototype.getBackgroundPane = function()\n{\n\treturn this.backgroundPane;\n};\n\n/**\n * Function: getDrawPane\n *\n * Returns the DOM node that represents the main drawing layer.\n */\nmxGraphView.prototype.getDrawPane = function()\n{\n\treturn this.drawPane;\n};\n\n/**\n * Function: getOverlayPane\n *\n * Returns the DOM node that represents the layer above the drawing layer.\n */\nmxGraphView.prototype.getOverlayPane = function()\n{\n\treturn this.overlayPane;\n};\n\n/**\n * Function: getDecoratorPane\n *\n * Returns the DOM node that represents the topmost drawing layer.\n */\nmxGraphView.prototype.getDecoratorPane = function()\n{\n\treturn this.decoratorPane;\n};\n\n/**\n * Function: isContainerEvent\n * \n * Returns true if the event origin is one of the drawing panes or\n * containers of the view.\n */\nmxGraphView.prototype.isContainerEvent = function(evt)\n{\n\tvar source = mxEvent.getSource(evt);\n\n\treturn (source == this.graph.container ||\n\t\tsource.parentNode == this.backgroundPane ||\n\t\t(source.parentNode != null &&\n\t\tsource.parentNode.parentNode == this.backgroundPane) ||\n\t\tsource == this.canvas.parentNode ||\n\t\tsource == this.canvas ||\n\t\tsource == this.backgroundPane ||\n\t\tsource == this.drawPane ||\n\t\tsource == this.overlayPane ||\n\t\tsource == this.decoratorPane);\n};\n\n/**\n * Function: isScrollEvent\n * \n * Returns true if the event origin is one of the scrollbars of the\n * container in IE. Such events are ignored.\n */\n mxGraphView.prototype.isScrollEvent = function(evt)\n{\n\tvar offset = mxUtils.getOffset(this.graph.container);\n\tvar pt = new mxPoint(evt.clientX - offset.x, evt.clientY - offset.y);\n\n\tvar outWidth = this.graph.container.offsetWidth;\n\tvar inWidth = this.graph.container.clientWidth;\n\n\tif (outWidth > inWidth && pt.x > inWidth + 2 && pt.x <= outWidth)\n\t{\n\t\treturn true;\n\t}\n\n\tvar outHeight = this.graph.container.offsetHeight;\n\tvar inHeight = this.graph.container.clientHeight;\n\t\n\tif (outHeight > inHeight && pt.y > inHeight + 2 && pt.y <= outHeight)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: init\n *\n * Initializes the graph event dispatch loop for the specified container\n * and invokes <create> to create the required DOM nodes for the display.\n */\nmxGraphView.prototype.init = function()\n{\n\tthis.installListeners();\n\t\n\t// Creates the DOM nodes for the respective display dialect\n\tvar graph = this.graph;\n\t\n\tif (graph.dialect == mxConstants.DIALECT_SVG)\n\t{\n\t\tthis.createSvg();\n\t}\n\telse if (graph.dialect == mxConstants.DIALECT_VML)\n\t{\n\t\tthis.createVml();\n\t}\n\telse\n\t{\n\t\tthis.createHtml();\n\t}\n};\n\n/**\n * Function: installListeners\n *\n * Installs the required listeners in the container.\n */\nmxGraphView.prototype.installListeners = function()\n{\n\tvar graph = this.graph;\n\tvar container = graph.container;\n\t\n\tif (container != null)\n\t{\n\t\t// Support for touch device gestures (eg. pinch to zoom)\n\t\t// Double-tap handling is implemented in mxGraph.fireMouseEvent\n\t\tif (mxClient.IS_TOUCH)\n\t\t{\n\t\t\tmxEvent.addListener(container, 'gesturestart', mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tgraph.fireGestureEvent(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}));\n\t\t\t\n\t\t\tmxEvent.addListener(container, 'gesturechange', mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tgraph.fireGestureEvent(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}));\n\n\t\t\tmxEvent.addListener(container, 'gestureend', mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tgraph.fireGestureEvent(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}));\n\t\t}\n\t\t\n\t\t// Fires event only for one pointer per gesture\n\t\tvar pointerId = null;\n\t\t\n\t\t// Adds basic listeners for graph event dispatching\n\t\tmxEvent.addGestureListeners(container, mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\t// Condition to avoid scrollbar events starting a rubberband selection\n\t\t\tif (this.isContainerEvent(evt) && ((!mxClient.IS_IE && !mxClient.IS_IE11 && !mxClient.IS_GC &&\n\t\t\t\t!mxClient.IS_OP && !mxClient.IS_SF) || !this.isScrollEvent(evt)))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t\t\t\tpointerId = evt.pointerId;\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isContainerEvent(evt) && (pointerId == null || evt.pointerId == pointerId))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isContainerEvent(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t}\n\t\t\t\n\t\t\tpointerId = null;\n\t\t}));\n\t\t\n\t\t// Adds listener for double click handling on background, this does always\n\t\t// use native event handler, we assume that the DOM of the background\n\t\t// does not change during the double click\n\t\tmxEvent.addListener(container, 'dblclick', mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isContainerEvent(evt))\n\t\t\t{\n\t\t\t\tgraph.dblClick(evt);\n\t\t\t}\n\t\t}));\n\n\t\t// Workaround for touch events which started on some DOM node\n\t\t// on top of the container, in which case the cells under the\n\t\t// mouse for the move and up events are not detected.\n\t\tvar getState = function(evt)\n\t\t{\n\t\t\tvar state = null;\n\t\t\t\n\t\t\t// Workaround for touch events which started on some DOM node\n\t\t\t// on top of the container, in which case the cells under the\n\t\t\t// mouse for the move and up events are not detected.\n\t\t\tif (mxClient.IS_TOUCH)\n\t\t\t{\n\t\t\t\tvar x = mxEvent.getClientX(evt);\n\t\t\t\tvar y = mxEvent.getClientY(evt);\n\t\t\t\t\n\t\t\t\t// Dispatches the drop event to the graph which\n\t\t\t\t// consumes and executes the source function\n\t\t\t\tvar pt = mxUtils.convertPoint(container, x, y);\n\t\t\t\tstate = graph.view.getState(graph.getCellAt(pt.x, pt.y));\n\t\t\t}\n\t\t\t\n\t\t\treturn state;\n\t\t};\n\t\t\n\t\t// Adds basic listeners for graph event dispatching outside of the\n\t\t// container and finishing the handling of a single gesture\n\t\t// Implemented via graph event dispatch loop to avoid duplicate events\n\t\t// in Firefox and Chrome\n\t\tgraph.addMouseListener(\n\t\t{\n\t\t\tmouseDown: function(sender, me)\n\t\t\t{\n\t\t\t\tgraph.popupMenuHandler.hideMenu();\n\t\t\t},\n\t\t\tmouseMove: function() { },\n\t\t\tmouseUp: function() { }\n\t\t});\n\t\t\n\t\tthis.moveHandler = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\t// Hides the tooltip if mouse is outside container\n\t\t\tif (graph.tooltipHandler != null && graph.tooltipHandler.isHideOnHover())\n\t\t\t{\n\t\t\t\tgraph.tooltipHandler.hide();\n\t\t\t}\n\n\t\t\tif (this.captureDocumentGesture && graph.isMouseDown && graph.container != null &&\n\t\t\t\t!this.isContainerEvent(evt) && graph.container.style.display != 'none' &&\n\t\t\t\tgraph.container.style.visibility != 'hidden' && !mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.endHandler = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.captureDocumentGesture && graph.isMouseDown && graph.container != null &&\n\t\t\t\t!this.isContainerEvent(evt) && graph.container.style.display != 'none' &&\n\t\t\t\tgraph.container.style.visibility != 'hidden')\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t}\n\t\t});\n\t\t\n\t\tmxEvent.addGestureListeners(document, null, this.moveHandler, this.endHandler);\n\t}\n};\n\n/**\n * Function: createHtml\n *\n * Creates the DOM nodes for the HTML display.\n */\nmxGraphView.prototype.createHtml = function()\n{\n\tvar container = this.graph.container;\n\t\n\tif (container != null)\n\t{\n\t\tthis.canvas = this.createHtmlPane('100%', '100%');\n\t\tthis.canvas.style.overflow = 'hidden';\n\t\n\t\t// Uses minimal size for inner DIVs on Canvas. This is required\n\t\t// for correct event processing in IE. If we have an overlapping\n\t\t// DIV then the events on the cells are only fired for labels.\n\t\tthis.backgroundPane = this.createHtmlPane('1px', '1px');\n\t\tthis.drawPane = this.createHtmlPane('1px', '1px');\n\t\tthis.overlayPane = this.createHtmlPane('1px', '1px');\n\t\tthis.decoratorPane = this.createHtmlPane('1px', '1px');\n\t\t\n\t\tthis.canvas.appendChild(this.backgroundPane);\n\t\tthis.canvas.appendChild(this.drawPane);\n\t\tthis.canvas.appendChild(this.overlayPane);\n\t\tthis.canvas.appendChild(this.decoratorPane);\n\n\t\tcontainer.appendChild(this.canvas);\n\t\tthis.updateContainerStyle(container);\n\t\t\n\t\t// Implements minWidth/minHeight in quirks mode\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tvar onResize = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tvar bounds = this.getGraphBounds();\n\t\t\t\tvar width = bounds.x + bounds.width + this.graph.border;\n\t\t\t\tvar height = bounds.y + bounds.height + this.graph.border;\n\t\t\t\t\n\t\t\t\tthis.updateHtmlCanvasSize(width, height);\n\t\t\t});\n\t\t\t\n\t\t\tmxEvent.addListener(window, 'resize', onResize);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateHtmlCanvasSize\n * \n * Updates the size of the HTML canvas.\n */\nmxGraphView.prototype.updateHtmlCanvasSize = function(width, height)\n{\n\tif (this.graph.container != null)\n\t{\n\t\tvar ow = this.graph.container.offsetWidth;\n\t\tvar oh = this.graph.container.offsetHeight;\n\n\t\tif (ow < width)\n\t\t{\n\t\t\tthis.canvas.style.width = width + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.canvas.style.width = '100%';\n\t\t}\n\n\t\tif (oh < height)\n\t\t{\n\t\t\tthis.canvas.style.height = height + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.canvas.style.height = '100%';\n\t\t}\n\t}\n};\n\n/**\n * Function: createHtmlPane\n * \n * Creates and returns a drawing pane in HTML (DIV).\n */\nmxGraphView.prototype.createHtmlPane = function(width, height)\n{\n\tvar pane = document.createElement('DIV');\n\t\n\tif (width != null && height != null)\n\t{\n\t\tpane.style.position = 'absolute';\n\t\tpane.style.left = '0px';\n\t\tpane.style.top = '0px';\n\n\t\tpane.style.width = width;\n\t\tpane.style.height = height;\n\t}\n\telse\n\t{\n\t\tpane.style.position = 'relative';\n\t}\n\t\n\treturn pane;\n};\n\n/**\n * Function: createVml\n *\n * Creates the DOM nodes for the VML display.\n */\nmxGraphView.prototype.createVml = function()\n{\n\tvar container = this.graph.container;\n\n\tif (container != null)\n\t{\n\t\tvar width = container.offsetWidth;\n\t\tvar height = container.offsetHeight;\n\t\tthis.canvas = this.createVmlPane(width, height);\n\t\tthis.canvas.style.overflow = 'hidden';\n\t\t\n\t\tthis.backgroundPane = this.createVmlPane(width, height);\n\t\tthis.drawPane = this.createVmlPane(width, height);\n\t\tthis.overlayPane = this.createVmlPane(width, height);\n\t\tthis.decoratorPane = this.createVmlPane(width, height);\n\t\t\n\t\tthis.canvas.appendChild(this.backgroundPane);\n\t\tthis.canvas.appendChild(this.drawPane);\n\t\tthis.canvas.appendChild(this.overlayPane);\n\t\tthis.canvas.appendChild(this.decoratorPane);\n\t\t\n\t\tcontainer.appendChild(this.canvas);\n\t}\n};\n\n/**\n * Function: createVmlPane\n * \n * Creates a drawing pane in VML (group).\n */\nmxGraphView.prototype.createVmlPane = function(width, height)\n{\n\tvar pane = document.createElement(mxClient.VML_PREFIX + ':group');\n\t\n\t// At this point the width and height are potentially\n\t// uninitialized. That's OK.\n\tpane.style.position = 'absolute';\n\tpane.style.left = '0px';\n\tpane.style.top = '0px';\n\n\tpane.style.width = width + 'px';\n\tpane.style.height = height + 'px';\n\n\tpane.setAttribute('coordsize', width + ',' + height);\n\tpane.setAttribute('coordorigin', '0,0');\n\t\n\treturn pane;\n};\n\n/**\n * Function: createSvg\n *\n * Creates and returns the DOM nodes for the SVG display.\n */\nmxGraphView.prototype.createSvg = function()\n{\n\tvar container = this.graph.container;\n\tthis.canvas = document.createElementNS(mxConstants.NS_SVG, 'g');\n\t\n\t// For background image\n\tthis.backgroundPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.backgroundPane);\n\n\t// Adds two layers (background is early feature)\n\tthis.drawPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.drawPane);\n\n\tthis.overlayPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.overlayPane);\n\t\n\tthis.decoratorPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.decoratorPane);\n\t\n\tvar root = document.createElementNS(mxConstants.NS_SVG, 'svg');\n\troot.style.left = '0px';\n\troot.style.top = '0px';\n\troot.style.width = '100%';\n\troot.style.height = '100%';\n\t\n\t// NOTE: In standards mode, the SVG must have block layout\n\t// in order for the container DIV to not show scrollbars.\n\troot.style.display = 'block';\n\troot.appendChild(this.canvas);\n\t\n\t// Workaround for scrollbars in IE11 and below\n\tif (mxClient.IS_IE || mxClient.IS_IE11)\n\t{\n\t\troot.style.overflow = 'hidden';\n\t}\n\n\tif (container != null)\n\t{\n\t\tcontainer.appendChild(root);\n\t\tthis.updateContainerStyle(container);\n\t}\n};\n\n/**\n * Function: updateContainerStyle\n * \n * Updates the style of the container after installing the SVG DOM elements.\n */\nmxGraphView.prototype.updateContainerStyle = function(container)\n{\n\t// Workaround for offset of container\n\tvar style = mxUtils.getCurrentStyle(container);\n\t\n\tif (style != null && style.position == 'static')\n\t{\n\t\tcontainer.style.position = 'relative';\n\t}\n\t\n\t// Disables built-in pan and zoom in IE10 and later\n\tif (mxClient.IS_POINTER)\n\t{\n\t\tcontainer.style.touchAction = 'none';\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the view and all its resources.\n */\nmxGraphView.prototype.destroy = function()\n{\n\tvar root = (this.canvas != null) ? this.canvas.ownerSVGElement : null;\n\t\n\tif (root == null)\n\t{\n\t\troot = this.canvas;\n\t}\n\t\n\tif (root != null && root.parentNode != null)\n\t{\n\t\tthis.clear(this.currentRoot, true);\n\t\tmxEvent.removeGestureListeners(document, null, this.moveHandler, this.endHandler);\n\t\tmxEvent.release(this.graph.container);\n\t\troot.parentNode.removeChild(root);\n\t\t\n\t\tthis.moveHandler = null;\n\t\tthis.endHandler = null;\n\t\tthis.canvas = null;\n\t\tthis.backgroundPane = null;\n\t\tthis.drawPane = null;\n\t\tthis.overlayPane = null;\n\t\tthis.decoratorPane = null;\n\t}\n};\n\n/**\n * Class: mxCurrentRootChange\n *\n * Action to change the current root in a view.\n *\n * Constructor: mxCurrentRootChange\n *\n * Constructs a change of the current root in the given view.\n */\nfunction mxCurrentRootChange(view, root)\n{\n\tthis.view = view;\n\tthis.root = root;\n\tthis.previous = root;\n\tthis.isUp = root == null;\n\t\n\tif (!this.isUp)\n\t{\n\t\tvar tmp = this.view.currentRoot;\n\t\tvar model = this.view.graph.getModel();\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp == root)\n\t\t\t{\n\t\t\t\tthis.isUp = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\ttmp = model.getParent(tmp);\n\t\t}\n\t}\n};\n\n/**\n * Function: execute\n *\n * Changes the current root of the view.\n */\nmxCurrentRootChange.prototype.execute = function()\n{\n\tvar tmp = this.view.currentRoot;\n\tthis.view.currentRoot = this.previous;\n\tthis.previous = tmp;\n\n\tvar translate = this.view.graph.getTranslateForRoot(this.view.currentRoot);\n\t\n\tif (translate != null)\n\t{\n\t\tthis.view.translate = new mxPoint(-translate.x, -translate.y);\n\t}\n\n\tif (this.isUp)\n\t{\n\t\tthis.view.clear(this.view.currentRoot, true);\n\t\tthis.view.validate();\n\t}\n\telse\n\t{\n\t\tthis.view.refresh();\n\t}\n\t\n\tvar name = (this.isUp) ? mxEvent.UP : mxEvent.DOWN;\n\tthis.view.fireEvent(new mxEventObject(name,\n\t\t'root', this.view.currentRoot, 'previous', this.previous));\n\tthis.isUp = !this.isUp;\n};\n\n__mxOutput.mxGraphView = typeof mxGraphView !== 'undefined' ? mxGraphView : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraph\n *\n * Extends <mxEventSource> to implement a graph component for\n * the browser. This is the main class of the package. To activate\n * panning and connections use <setPanning> and <setConnectable>.\n * For rubberband selection you must create a new instance of\n * <mxRubberband>. The following listeners are added to\n * <mouseListeners> by default:\n * \n * - <tooltipHandler>: <mxTooltipHandler> that displays tooltips\n * - <panningHandler>: <mxPanningHandler> for panning and popup menus\n * - <connectionHandler>: <mxConnectionHandler> for creating connections\n * - <graphHandler>: <mxGraphHandler> for moving and cloning cells\n * \n * These listeners will be called in the above order if they are enabled.\n *\n * Background Images:\n * \n * To display a background image, set the image, image width and\n * image height using <setBackgroundImage>. If one of the\n * above values has changed then the <view>'s <mxGraphView.validate>\n * should be invoked.\n * \n * Cell Images:\n * \n * To use images in cells, a shape must be specified in the default\n * vertex style (or any named style). Possible shapes are\n * <mxConstants.SHAPE_IMAGE> and <mxConstants.SHAPE_LABEL>.\n * The code to change the shape used in the default vertex style,\n * the following code is used:\n * \n * (code)\n * var style = graph.getStylesheet().getDefaultVertexStyle();\n * style[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_IMAGE;\n * (end)\n * \n * For the default vertex style, the image to be displayed can be\n * specified in a cell's style using the <mxConstants.STYLE_IMAGE>\n * key and the image URL as a value, for example:\n * \n * (code)\n * image=http://www.example.com/image.gif\n * (end)\n * \n * For a named style, the the stylename must be the first element\n * of the cell style:\n * \n * (code)\n * stylename;image=http://www.example.com/image.gif\n * (end)\n * \n * A cell style can have any number of key=value pairs added, divided\n * by a semicolon as follows:\n * \n * (code)\n * [stylename;|key=value;]\n * (end)\n *\n * Labels:\n * \n * The cell labels are defined by <getLabel> which uses <convertValueToString>\n * if <labelsVisible> is true. If a label must be rendered as HTML markup, then\n * <isHtmlLabel> should return true for the respective cell. If all labels\n * contain HTML markup, <htmlLabels> can be set to true. NOTE: Enabling HTML\n * labels carries a possible security risk (see the section on security in\n * the manual).\n * \n * If wrapping is needed for a label, then <isHtmlLabel> and <isWrapping> must\n * return true for the cell whose label should be wrapped. See <isWrapping> for\n * an example.\n * \n * If clipping is needed to keep the rendering of a HTML label inside the\n * bounds of its vertex, then <isClipping> should return true for the\n * respective cell.\n * \n * By default, edge labels are movable and vertex labels are fixed. This can be\n * changed by setting <edgeLabelsMovable> and <vertexLabelsMovable>, or by\n * overriding <isLabelMovable>.\n *\n * In-place Editing:\n * \n * In-place editing is started with a doubleclick or by typing F2.\n * Programmatically, <edit> is used to check if the cell is editable\n * (<isCellEditable>) and call <startEditingAtCell>, which invokes\n * <mxCellEditor.startEditing>. The editor uses the value returned\n * by <getEditingValue> as the editing value.\n * \n * After in-place editing, <labelChanged> is called, which invokes\n * <mxGraphModel.setValue>, which in turn calls\n * <mxGraphModel.valueForCellChanged> via <mxValueChange>.\n * \n * The event that triggers in-place editing is passed through to the\n * <cellEditor>, which may take special actions depending on the type of the\n * event or mouse location, and is also passed to <getEditingValue>. The event\n * is then passed back to the event processing functions which can perform\n * specific actions based on the trigger event.\n * \n * Tooltips:\n * \n * Tooltips are implemented by <getTooltip>, which calls <getTooltipForCell>\n * if a cell is under the mousepointer. The default implementation checks if\n * the cell has a getTooltip function and calls it if it exists. Hence, in order\n * to provide custom tooltips, the cell must provide a getTooltip function, or \n * one of the two above functions must be overridden.\n * \n * Typically, for custom cell tooltips, the latter function is overridden as\n * follows:\n * \n * (code)\n * graph.getTooltipForCell = function(cell)\n * {\n *   var label = this.convertValueToString(cell);\n *   return 'Tooltip for '+label;\n * }\n * (end)\n * \n * When using a config file, the function is overridden in the mxGraph section\n * using the following entry:\n * \n * (code)\n * <add as=\"getTooltipForCell\"><![CDATA[\n *   function(cell)\n *   {\n *     var label = this.convertValueToString(cell);\n *     return 'Tooltip for '+label;\n *   }\n * ]]></add>\n * (end)\n * \n * \"this\" refers to the graph in the implementation, so for example to check if \n * a cell is an edge, you use this.getModel().isEdge(cell)\n *\n * For replacing the default implementation of <getTooltipForCell> (rather than \n * replacing the function on a specific instance), the following code should be \n * used after loading the JavaScript files, but before creating a new mxGraph \n * instance using <mxGraph>:\n * \n * (code)\n * mxGraph.prototype.getTooltipForCell = function(cell)\n * {\n *   var label = this.convertValueToString(cell);\n *   return 'Tooltip for '+label;\n * }\n * (end)\n * \n * Shapes & Styles:\n * \n * The implementation of new shapes is demonstrated in the examples. We'll assume\n * that we have implemented a custom shape with the name BoxShape which we want\n * to use for drawing vertices. To use this shape, it must first be registered in\n * the cell renderer as follows:\n * \n * (code)\n * mxCellRenderer.registerShape('box', BoxShape);\n * (end)\n * \n * The code registers the BoxShape constructor under the name box in the cell\n * renderer of the graph. The shape can now be referenced using the shape-key in\n * a style definition. (The cell renderer contains a set of additional shapes,\n * namely one for each constant with a SHAPE-prefix in <mxConstants>.)\n *\n * Styles are a collection of key, value pairs and a stylesheet is a collection\n * of named styles. The names are referenced by the cellstyle, which is stored\n * in <mxCell.style> with the following format: [stylename;|key=value;]. The\n * string is resolved to a collection of key, value pairs, where the keys are\n * overridden with the values in the string.\n *\n * When introducing a new shape, the name under which the shape is registered\n * must be used in the stylesheet. There are three ways of doing this:\n * \n *   - By changing the default style, so that all vertices will use the new\n * \t\tshape\n *   - By defining a new style, so that only vertices with the respective\n * \t\tcellstyle will use the new shape\n *   - By using shape=box in the cellstyle's optional list of key, value pairs\n * \t\tto be overridden\n *\n * In the first case, the code to fetch and modify the default style for\n * vertices is as follows:\n * \n * (code)\n * var style = graph.getStylesheet().getDefaultVertexStyle();\n * style[mxConstants.STYLE_SHAPE] = 'box';\n * (end)\n * \n * The code takes the default vertex style, which is used for all vertices that\n * do not have a specific cellstyle, and modifies the value for the shape-key\n * in-place to use the new BoxShape for drawing vertices. This is done by\n * assigning the box value in the second line, which refers to the name of the\n * BoxShape in the cell renderer.\n * \n * In the second case, a collection of key, value pairs is created and then\n * added to the stylesheet under a new name. In order to distinguish the\n * shapename and the stylename we'll use boxstyle for the stylename:\n * \n * (code)\n * var style = new Object();\n * style[mxConstants.STYLE_SHAPE] = 'box';\n * style[mxConstants.STYLE_STROKECOLOR] = '#000000';\n * style[mxConstants.STYLE_FONTCOLOR] = '#000000';\n * graph.getStylesheet().putCellStyle('boxstyle', style);\n * (end)\n * \n * The code adds a new style with the name boxstyle to the stylesheet. To use\n * this style with a cell, it must be referenced from the cellstyle as follows:\n * \n * (code)\n * var vertex = graph.insertVertex(parent, null, 'Hello, World!', 20, 20, 80, 20,\n * \t\t\t\t'boxstyle');\n * (end)\n * \n * To summarize, each new shape must be registered in the <mxCellRenderer> with\n * a unique name. That name is then used as the value of the shape-key in a\n * default or custom style. If there are multiple custom shapes, then there\n * should be a separate style for each shape.\n * \n * Inheriting Styles:\n * \n * For fill-, stroke-, gradient-, font- and indicatorColors special keywords\n * can be used. The inherit keyword for one of these colors will inherit the\n * color for the same key from the parent cell. The swimlane keyword does the\n * same, but inherits from the nearest swimlane in the ancestor hierarchy.\n * Finally, the indicated keyword will use the color of the indicator as the\n * color for the given key.\n * \n * Scrollbars:\n * \n * The <containers> overflow CSS property defines if scrollbars are used to\n * display the graph. For values of 'auto' or 'scroll', the scrollbars will\n * be shown. Note that the <resizeContainer> flag is normally not used\n * together with scrollbars, as it will resize the container to match the\n * size of the graph after each change.\n * \n * Multiplicities and Validation:\n * \n * To control the possible connections in mxGraph, <getEdgeValidationError> is\n * used. The default implementation of the function uses <multiplicities>,\n * which is an array of <mxMultiplicity>. Using this class allows to establish\n * simple multiplicities, which are enforced by the graph.\n * \n * The <mxMultiplicity> uses <mxCell.is> to determine for which terminals it\n * applies. The default implementation of <mxCell.is> works with DOM nodes (XML\n * nodes) and checks if the given type parameter matches the nodeName of the\n * node (case insensitive). Optionally, an attributename and value can be\n * specified which are also checked.\n * \n * <getEdgeValidationError> is called whenever the connectivity of an edge\n * changes. It returns an empty string or an error message if the edge is\n * invalid or null if the edge is valid. If the returned string is not empty\n * then it is displayed as an error message.\n * \n * <mxMultiplicity> allows to specify the multiplicity between a terminal and\n * its possible neighbors. For example, if any rectangle may only be connected\n * to, say, a maximum of two circles you can add the following rule to\n * <multiplicities>:\n * \n * (code)\n * graph.multiplicities.push(new mxMultiplicity(\n *   true, 'rectangle', null, null, 0, 2, ['circle'],\n *   'Only 2 targets allowed',\n *   'Only shape targets allowed'));\n * (end)\n * \n * This will display the first error message whenever a rectangle is connected\n * to more than two circles and the second error message if a rectangle is\n * connected to anything but a circle.\n * \n * For certain multiplicities, such as a minimum of 1 connection, which cannot\n * be enforced at cell creation time (unless the cell is created together with\n * the connection), mxGraph offers <validate> which checks all multiplicities\n * for all cells and displays the respective error messages in an overlay icon\n * on the cells.\n * \n * If a cell is collapsed and contains validation errors, a respective warning\n * icon is attached to the collapsed cell.\n * \n * Auto-Layout:\n * \n * For automatic layout, the <getLayout> hook is provided in <mxLayoutManager>.\n * It can be overridden to return a layout algorithm for the children of a\n * given cell.\n * \n * Unconnected edges:\n * \n * The default values for all switches are designed to meet the requirements of\n * general diagram drawing applications. A very typical set of settings to\n * avoid edges that are not connected is the following:\n * \n * (code)\n * graph.setAllowDanglingEdges(false);\n * graph.setDisconnectOnMove(false);\n * (end)\n * \n * Setting the <cloneInvalidEdges> switch to true is optional. This switch\n * controls if edges are inserted after a copy, paste or clone-drag if they are\n * invalid. For example, edges are invalid if copied or control-dragged without \n * having selected the corresponding terminals and allowDanglingEdges is\n * false, in which case the edges will not be cloned if the switch is false.\n * \n * Output:\n * \n * To produce an XML representation for a diagram, the following code can be\n * used.\n * \n * (code)\n * var enc = new mxCodec(mxUtils.createXmlDocument());\n * var node = enc.encode(graph.getModel());\n * (end)\n * \n * This will produce an XML node than can be handled using the DOM API or\n * turned into a string representation using the following code:\n * \n * (code)\n * var xml = mxUtils.getXml(node);\n * (end)\n * \n * To obtain a formatted string, mxUtils.getPrettyXml can be used instead.\n * \n * This string can now be stored in a local persistent storage (for example\n * using Google Gears) or it can be passed to a backend using mxUtils.post as\n * follows. The url variable is the URL of the Java servlet, PHP page or HTTP\n * handler, depending on the server.\n * \n * (code)\n * var xmlString = encodeURIComponent(mxUtils.getXml(node));\n * mxUtils.post(url, 'xml='+xmlString, function(req)\n * {\n *   // Process server response using req of type mxXmlRequest\n * });\n * (end)\n * \n * Input:\n * \n * To load an XML representation of a diagram into an existing graph object\n * mxUtils.load can be used as follows. The url variable is the URL of the Java\n * servlet, PHP page or HTTP handler that produces the XML string.\n * \n * (code)\n * var xmlDoc = mxUtils.load(url).getXml();\n * var node = xmlDoc.documentElement;\n * var dec = new mxCodec(node.ownerDocument);\n * dec.decode(node, graph.getModel());\n * (end)\n * \n * For creating a page that loads the client and a diagram using a single\n * request please refer to the deployment examples in the backends.\n * \n * Functional dependencies:\n * \n * (see images/callgraph.png)\n * \n * Resources:\n *\n * resources/graph - Language resources for mxGraph\n *\n * Group: Events\n * \n * Event: mxEvent.ROOT\n * \n * Fires if the root in the model has changed. This event has no properties.\n * \n * Event: mxEvent.ALIGN_CELLS\n * \n * Fires between begin- and endUpdate in <alignCells>. The <code>cells</code>\n * and <code>align</code> properties contain the respective arguments that were\n * passed to <alignCells>.\n *\n * Event: mxEvent.FLIP_EDGE\n *\n * Fires between begin- and endUpdate in <flipEdge>. The <code>edge</code>\n * property contains the edge passed to <flipEdge>.\n * \n * Event: mxEvent.ORDER_CELLS\n * \n * Fires between begin- and endUpdate in <orderCells>. The <code>cells</code>\n * and <code>back</code> properties contain the respective arguments that were\n * passed to <orderCells>.\n *\n * Event: mxEvent.CELLS_ORDERED\n *\n * Fires between begin- and endUpdate in <cellsOrdered>. The <code>cells</code>\n * and <code>back</code> arguments contain the respective arguments that were\n * passed to <cellsOrdered>.\n * \n * Event: mxEvent.GROUP_CELLS\n * \n * Fires between begin- and endUpdate in <groupCells>. The <code>group</code>,\n * <code>cells</code> and <code>border</code> arguments contain the respective\n * arguments that were passed to <groupCells>.\n * \n * Event: mxEvent.UNGROUP_CELLS\n * \n * Fires between begin- and endUpdate in <ungroupCells>. The <code>cells</code>\n * property contains the array of cells that was passed to <ungroupCells>.\n * \n * Event: mxEvent.REMOVE_CELLS_FROM_PARENT\n * \n * Fires between begin- and endUpdate in <removeCellsFromParent>. The\n * <code>cells</code> property contains the array of cells that was passed to\n * <removeCellsFromParent>.\n * \n * Event: mxEvent.ADD_CELLS\n * \n * Fires between begin- and endUpdate in <addCells>. The <code>cells</code>,\n * <code>parent</code>, <code>index</code>, <code>source</code> and\n * <code>target</code> properties contain the respective arguments that were\n * passed to <addCells>.\n * \n * Event: mxEvent.CELLS_ADDED\n * \n * Fires between begin- and endUpdate in <cellsAdded>. The <code>cells</code>,\n * <code>parent</code>, <code>index</code>, <code>source</code>,\n * <code>target</code> and <code>absolute</code> properties contain the\n * respective arguments that were passed to <cellsAdded>.\n * \n * Event: mxEvent.REMOVE_CELLS\n * \n * Fires between begin- and endUpdate in <removeCells>. The <code>cells</code>\n * and <code>includeEdges</code> arguments contain the respective arguments\n * that were passed to <removeCells>.\n * \n * Event: mxEvent.CELLS_REMOVED\n * \n * Fires between begin- and endUpdate in <cellsRemoved>. The <code>cells</code>\n * argument contains the array of cells that was removed.\n * \n * Event: mxEvent.SPLIT_EDGE\n * \n * Fires between begin- and endUpdate in <splitEdge>. The <code>edge</code>\n * property contains the edge to be splitted, the <code>cells</code>,\n * <code>newEdge</code>, <code>dx</code> and <code>dy</code> properties contain\n * the respective arguments that were passed to <splitEdge>.\n * \n * Event: mxEvent.TOGGLE_CELLS\n * \n * Fires between begin- and endUpdate in <toggleCells>. The <code>show</code>,\n * <code>cells</code> and <code>includeEdges</code> properties contain the\n * respective arguments that were passed to <toggleCells>.\n * \n * Event: mxEvent.FOLD_CELLS\n * \n * Fires between begin- and endUpdate in <foldCells>. The\n * <code>collapse</code>, <code>cells</code> and <code>recurse</code>\n * properties contain the respective arguments that were passed to <foldCells>.\n * \n * Event: mxEvent.CELLS_FOLDED\n * \n * Fires between begin- and endUpdate in cellsFolded. The\n * <code>collapse</code>, <code>cells</code> and <code>recurse</code>\n * properties contain the respective arguments that were passed to\n * <cellsFolded>.\n * \n * Event: mxEvent.UPDATE_CELL_SIZE\n * \n * Fires between begin- and endUpdate in <updateCellSize>. The\n * <code>cell</code> and <code>ignoreChildren</code> properties contain the\n * respective arguments that were passed to <updateCellSize>.\n * \n * Event: mxEvent.RESIZE_CELLS\n * \n * Fires between begin- and endUpdate in <resizeCells>. The <code>cells</code>\n * and <code>bounds</code> properties contain the respective arguments that\n * were passed to <resizeCells>.\n * \n * Event: mxEvent.CELLS_RESIZED\n * \n * Fires between begin- and endUpdate in <cellsResized>. The <code>cells</code>\n * and <code>bounds</code> properties contain the respective arguments that\n * were passed to <cellsResized>.\n * \n * Event: mxEvent.MOVE_CELLS\n * \n * Fires between begin- and endUpdate in <moveCells>. The <code>cells</code>,\n * <code>dx</code>, <code>dy</code>, <code>clone</code>, <code>target</code>\n * and <code>event</code> properties contain the respective arguments that\n * were passed to <moveCells>.\n * \n * Event: mxEvent.CELLS_MOVED\n * \n * Fires between begin- and endUpdate in <cellsMoved>. The <code>cells</code>,\n * <code>dx</code>, <code>dy</code> and <code>disconnect</code> properties\n * contain the respective arguments that were passed to <cellsMoved>.\n * \n * Event: mxEvent.CONNECT_CELL\n * \n * Fires between begin- and endUpdate in <connectCell>. The <code>edge</code>,\n * <code>terminal</code> and <code>source</code> properties contain the\n * respective arguments that were passed to <connectCell>.\n * \n * Event: mxEvent.CELL_CONNECTED\n * \n * Fires between begin- and endUpdate in <cellConnected>. The\n * <code>edge</code>, <code>terminal</code> and <code>source</code> properties\n * contain the respective arguments that were passed to <cellConnected>.\n * \n * Event: mxEvent.REFRESH\n * \n * Fires after <refresh> was executed. This event has no properties.\n *\n * Event: mxEvent.CLICK\n * \n * Fires in <click> after a click event. The <code>event</code> property\n * contains the original mouse event and <code>cell</code> property contains\n * the cell under the mouse or null if the background was clicked.\n * \n * Event: mxEvent.DOUBLE_CLICK\n *\n * Fires in <dblClick> after a double click. The <code>event</code> property\n * contains the original mouse event and the <code>cell</code> property\n * contains the cell under the mouse or null if the background was clicked.\n * \n * Event: mxEvent.GESTURE\n *\n * Fires in <fireGestureEvent> after a touch gesture. The <code>event</code>\n * property contains the original gesture end event and the <code>cell</code>\n * property contains the optional cell associated with the gesture.\n *\n * Event: mxEvent.TAP_AND_HOLD\n *\n * Fires in <tapAndHold> if a tap and hold event was detected. The <code>event</code>\n * property contains the initial touch event and the <code>cell</code> property\n * contains the cell under the mouse or null if the background was clicked.\n *\n * Event: mxEvent.FIRE_MOUSE_EVENT\n *\n * Fires in <fireMouseEvent> before the mouse listeners are invoked. The\n * <code>eventName</code> property contains the event name and the\n * <code>event</code> property contains the <mxMouseEvent>.\n *\n * Event: mxEvent.SIZE\n *\n * Fires after <sizeDidChange> was executed. The <code>bounds</code> property\n * contains the new graph bounds.\n *\n * Event: mxEvent.START_EDITING\n *\n * Fires before the in-place editor starts in <startEditingAtCell>. The\n * <code>cell</code> property contains the cell that is being edited and the\n * <code>event</code> property contains the optional event argument that was\n * passed to <startEditingAtCell>.\n * \n * Event: mxEvent.EDITING_STARTED\n *\n * Fires after the in-place editor starts in <startEditingAtCell>. The\n * <code>cell</code> property contains the cell that is being edited and the\n * <code>event</code> property contains the optional event argument that was\n * passed to <startEditingAtCell>.\n * \n * Event: mxEvent.EDITING_STOPPED\n *\n * Fires after the in-place editor stops in <stopEditing>.\n *\n * Event: mxEvent.LABEL_CHANGED\n *\n * Fires between begin- and endUpdate in <cellLabelChanged>. The\n * <code>cell</code> property contains the cell, the <code>value</code>\n * property contains the new value for the cell, the <code>old</code> property\n * contains the old value and the optional <code>event</code> property contains\n * the mouse event that started the edit.\n * \n * Event: mxEvent.ADD_OVERLAY\n *\n * Fires after an overlay is added in <addCellOverlay>. The <code>cell</code>\n * property contains the cell and the <code>overlay</code> property contains\n * the <mxCellOverlay> that was added.\n *\n * Event: mxEvent.REMOVE_OVERLAY\n *\n * Fires after an overlay is removed in <removeCellOverlay> and\n * <removeCellOverlays>. The <code>cell</code> property contains the cell and\n * the <code>overlay</code> property contains the <mxCellOverlay> that was\n * removed.\n * \n * Constructor: mxGraph\n * \n * Constructs a new mxGraph in the specified container. Model is an optional\n * mxGraphModel. If no model is provided, a new mxGraphModel instance is \n * used as the model. The container must have a valid owner document prior \n * to calling this function in Internet Explorer. RenderHint is a string to\n * affect the display performance and rendering in IE, but not in SVG-based \n * browsers. The parameter is mapped to <dialect>, which may \n * be one of <mxConstants.DIALECT_SVG> for SVG-based browsers, \n * <mxConstants.DIALECT_STRICTHTML> for fastest display mode,\n * <mxConstants.DIALECT_PREFERHTML> for faster display mode,\n * <mxConstants.DIALECT_MIXEDHTML> for fast and <mxConstants.DIALECT_VML> \n * for exact display mode (slowest). The dialects are defined in mxConstants.\n * The default values are DIALECT_SVG for SVG-based browsers and\n * DIALECT_MIXED for IE.\n *\n * The possible values for the renderingHint parameter are explained below:\n * \n * fast - The parameter is based on the fact that the display performance is \n * highly improved in IE if the VML is not contained within a VML group \n * element. The lack of a group element only slightly affects the display while \n * panning, but improves the performance by almost a factor of 2, while keeping \n * the display sufficiently accurate. This also allows to render certain shapes as HTML \n * if the display accuracy is not affected, which is implemented by \n * <mxShape.isMixedModeHtml>. This is the default setting and is mapped to\n * DIALECT_MIXEDHTML.\n * faster - Same as fast, but more expensive shapes are avoided. This is \n * controlled by <mxShape.preferModeHtml>. The default implementation will \n * avoid gradients and rounded rectangles, but more significant shapes, such \n * as rhombus, ellipse, actor and cylinder will be rendered accurately. This \n * setting is mapped to DIALECT_PREFERHTML.\n * fastest - Almost anything will be rendered in Html. This allows for \n * rectangles, labels and images. This setting is mapped to\n * DIALECT_STRICTHTML.\n * exact - If accurate panning is required and if the diagram is small (up\n * to 100 cells), then this value should be used. In this mode, a group is \n * created that contains the VML. This allows for accurate panning and is \n * mapped to DIALECT_VML.\n *\n * Example:\n * \n * To create a graph inside a DOM node with an id of graph:\n * (code)\n * var container = document.getElementById('graph');\n * var graph = new mxGraph(container);\n * (end)\n * \n * Parameters:\n * \n * container - Optional DOM node that acts as a container for the graph.\n * If this is null then the container can be initialized later using\n * <init>.\n * model - Optional <mxGraphModel> that constitutes the graph data.\n * renderHint - Optional string that specifies the display accuracy and\n * performance. Default is mxConstants.DIALECT_MIXEDHTML (for IE).\n * stylesheet - Optional <mxStylesheet> to be used in the graph.\n */\nfunction mxGraph(container, model, renderHint, stylesheet)\n{\n\t// Initializes the variable in case the prototype has been\n\t// modified to hold some listeners (which is possible because\n\t// the createHandlers call is executed regardless of the\n\t// arguments passed into the ctor).\n\tthis.mouseListeners = null;\n\t\n\t// Converts the renderHint into a dialect\n\tthis.renderHint = renderHint;\n\n\tif (mxClient.IS_SVG)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_SVG;\n\t}\n\telse if (renderHint == mxConstants.RENDERING_HINT_EXACT && mxClient.IS_VML)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_VML;\n\t}\n\telse if (renderHint == mxConstants.RENDERING_HINT_FASTEST)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_STRICTHTML;\n\t}\n\telse if (renderHint == mxConstants.RENDERING_HINT_FASTER)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_PREFERHTML;\n\t}\n\telse // default for VML\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_MIXEDHTML;\n\t}\n\t\n\t// Initializes the main members that do not require a container\n\tthis.model = (model != null) ? model : new mxGraphModel();\n\tthis.multiplicities = [];\n\tthis.imageBundles = [];\n\tthis.cellRenderer = this.createCellRenderer();\n\tthis.setSelectionModel(this.createSelectionModel());\n\tthis.setStylesheet((stylesheet != null) ? stylesheet : this.createStylesheet());\n\tthis.view = this.createGraphView();\n\t\n\t// Adds a graph model listener to update the view\n\tthis.graphModelChangeListener = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tthis.graphModelChanged(evt.getProperty('edit').changes);\n\t});\n\t\n\tthis.model.addListener(mxEvent.CHANGE, this.graphModelChangeListener);\n\n\t// Installs basic event handlers with disabled default settings.\n\tthis.createHandlers();\n\t\n\t// Initializes the display if a container was specified\n\tif (container != null)\n\t{\n\t\tthis.init(container);\n\t}\n\t\n\tthis.view.revalidate();\n};\n\n/**\n * Installs the required language resources at class\n * loading time.\n */\nif (mxLoadResources)\n{\n\tmxResources.add(mxClient.basePath + '/resources/graph');\n}\nelse\n{\n\tmxClient.defaultBundles.push(mxClient.basePath + '/resources/graph');\n}\n\n/**\n * Extends mxEventSource.\n */\nmxGraph.prototype = new mxEventSource();\nmxGraph.prototype.constructor = mxGraph;\n\n/**\n * Group: Variables\n */\n\n/**\n * Variable: mouseListeners\n * \n * Holds the mouse event listeners. See <fireMouseEvent>.\n */\nmxGraph.prototype.mouseListeners = null;\n\n/**\n * Variable: isMouseDown\n * \n * Holds the state of the mouse button.\n */\nmxGraph.prototype.isMouseDown = false;\n\n/**\n * Variable: model\n * \n * Holds the <mxGraphModel> that contains the cells to be displayed.\n */\nmxGraph.prototype.model = null;\n\n/**\n * Variable: view\n * \n * Holds the <mxGraphView> that caches the <mxCellStates> for the cells.\n */\nmxGraph.prototype.view = null;\n\n/**\n * Variable: stylesheet\n * \n * Holds the <mxStylesheet> that defines the appearance of the cells.\n * \n * \n * Example:\n * \n * Use the following code to read a stylesheet into an existing graph.\n * \n * (code)\n * var req = mxUtils.load('stylesheet.xml');\n * var root = req.getDocumentElement();\n * var dec = new mxCodec(root.ownerDocument);\n * dec.decode(root, graph.stylesheet);\n * (end)\n */\nmxGraph.prototype.stylesheet = null;\n\t\n/**\n * Variable: selectionModel\n * \n * Holds the <mxGraphSelectionModel> that models the current selection.\n */\nmxGraph.prototype.selectionModel = null;\n\n/**\n * Variable: cellEditor\n * \n * Holds the <mxCellEditor> that is used as the in-place editing.\n */\nmxGraph.prototype.cellEditor = null;\n\n/**\n * Variable: cellRenderer\n * \n * Holds the <mxCellRenderer> for rendering the cells in the graph.\n */\nmxGraph.prototype.cellRenderer = null;\n\n/**\n * Variable: multiplicities\n * \n * An array of <mxMultiplicities> describing the allowed\n * connections in a graph.\n */\nmxGraph.prototype.multiplicities = null;\n\n/**\n * Variable: renderHint\n * \n * RenderHint as it was passed to the constructor.\n */\nmxGraph.prototype.renderHint = null;\n\n/**\n * Variable: dialect\n * \n * Dialect to be used for drawing the graph. Possible values are all\n * constants in <mxConstants> with a DIALECT-prefix.\n */\nmxGraph.prototype.dialect = null;\n\n/**\n * Variable: gridSize\n * \n * Specifies the grid size. Default is 10.\n */\nmxGraph.prototype.gridSize = 10;\n\t\n/**\n * Variable: gridEnabled\n * \n * Specifies if the grid is enabled. This is used in <snap>. Default is\n * true.\n */\nmxGraph.prototype.gridEnabled = true;\n\n/**\n * Variable: portsEnabled\n * \n * Specifies if ports are enabled. This is used in <cellConnected> to update\n * the respective style. Default is true.\n */\nmxGraph.prototype.portsEnabled = true;\n\n/**\n * Variable: nativeDoubleClickEnabled\n * \n * Specifies if native double click events should be detected. Default is true.\n */\nmxGraph.prototype.nativeDblClickEnabled = true;\n\n/**\n * Variable: doubleTapEnabled\n * \n * Specifies if double taps on touch-based devices should be handled as a\n * double click. Default is true.\n */\nmxGraph.prototype.doubleTapEnabled = true;\n\n/**\n * Variable: doubleTapTimeout\n * \n * Specifies the timeout for double taps and non-native double clicks. Default\n * is 500 ms.\n */\nmxGraph.prototype.doubleTapTimeout = 500;\n\n/**\n * Variable: doubleTapTolerance\n * \n * Specifies the tolerance for double taps and double clicks in quirks mode.\n * Default is 25 pixels.\n */\nmxGraph.prototype.doubleTapTolerance = 25;\n\n/**\n * Variable: lastTouchX\n * \n * Holds the x-coordinate of the last touch event for double tap detection.\n */\nmxGraph.prototype.lastTouchY = 0;\n\n/**\n * Variable: lastTouchX\n * \n * Holds the y-coordinate of the last touch event for double tap detection.\n */\nmxGraph.prototype.lastTouchY = 0;\n\n/**\n * Variable: lastTouchTime\n * \n * Holds the time of the last touch event for double click detection.\n */\nmxGraph.prototype.lastTouchTime = 0;\n\n/**\n * Variable: tapAndHoldEnabled\n * \n * Specifies if tap and hold should be used for starting connections on touch-based\n * devices. Default is true.\n */\nmxGraph.prototype.tapAndHoldEnabled = true;\n\n/**\n * Variable: tapAndHoldDelay\n * \n * Specifies the time for a tap and hold. Default is 500 ms.\n */\nmxGraph.prototype.tapAndHoldDelay = 500;\n\n/**\n * Variable: tapAndHoldInProgress\n * \n * True if the timer for tap and hold events is running.\n */\nmxGraph.prototype.tapAndHoldInProgress = false;\n\n/**\n * Variable: tapAndHoldValid\n * \n * True as long as the timer is running and the touch events\n * stay within the given <tapAndHoldTolerance>.\n */\nmxGraph.prototype.tapAndHoldValid = false;\n\n/**\n * Variable: initialTouchX\n * \n * Holds the x-coordinate of the intial touch event for tap and hold.\n */\nmxGraph.prototype.initialTouchX = 0;\n\n/**\n * Variable: initialTouchY\n * \n * Holds the y-coordinate of the intial touch event for tap and hold.\n */\nmxGraph.prototype.initialTouchY = 0;\n\n/**\n * Variable: tolerance\n * \n * Tolerance for a move to be handled as a single click.\n * Default is 4 pixels.\n */\nmxGraph.prototype.tolerance = 4;\n\n/**\n * Variable: defaultOverlap\n * \n * Value returned by <getOverlap> if <isAllowOverlapParent> returns\n * true for the given cell. <getOverlap> is used in <constrainChild> if\n * <isConstrainChild> returns true. The value specifies the\n * portion of the child which is allowed to overlap the parent.\n */\nmxGraph.prototype.defaultOverlap = 0.5;\n\n/**\n * Variable: defaultParent\n * \n * Specifies the default parent to be used to insert new cells.\n * This is used in <getDefaultParent>. Default is null.\n */\nmxGraph.prototype.defaultParent = null;\n\n/**\n * Variable: alternateEdgeStyle\n * \n * Specifies the alternate edge style to be used if the main control point\n * on an edge is being doubleclicked. Default is null.\n */\nmxGraph.prototype.alternateEdgeStyle = null;\n\n/**\n * Variable: backgroundImage\n *\n * Specifies the <mxImage> to be returned by <getBackgroundImage>. Default\n * is null.\n * \n * Example:\n *\n * (code)\n * var img = new mxImage('http://www.example.com/maps/examplemap.jpg', 1024, 768);\n * graph.setBackgroundImage(img);\n * graph.view.validate();\n * (end)\n */\nmxGraph.prototype.backgroundImage = null;\n\n/**\n * Variable: pageVisible\n *\n * Specifies if the background page should be visible. Default is false.\n * Not yet implemented.\n */\nmxGraph.prototype.pageVisible = false;\n\n/**\n * Variable: pageBreaksVisible\n * \n * Specifies if a dashed line should be drawn between multiple pages. Default\n * is false. If you change this value while a graph is being displayed then you\n * should call <sizeDidChange> to force an update of the display.\n */\nmxGraph.prototype.pageBreaksVisible = false;\n\n/**\n * Variable: pageBreakColor\n * \n * Specifies the color for page breaks. Default is 'gray'.\n */\nmxGraph.prototype.pageBreakColor = 'gray';\n\n/**\n * Variable: pageBreakDashed\n * \n * Specifies the page breaks should be dashed. Default is true.\n */\nmxGraph.prototype.pageBreakDashed = true;\n\n/**\n * Variable: minPageBreakDist\n * \n * Specifies the minimum distance for page breaks to be visible. Default is\n * 20 (in pixels).\n */\nmxGraph.prototype.minPageBreakDist = 20;\n\n/**\n * Variable: preferPageSize\n * \n * Specifies if the graph size should be rounded to the next page number in\n * <sizeDidChange>. This is only used if the graph container has scrollbars.\n * Default is false.\n */\nmxGraph.prototype.preferPageSize = false;\n\n/**\n * Variable: pageFormat\n *\n * Specifies the page format for the background page. Default is\n * <mxConstants.PAGE_FORMAT_A4_PORTRAIT>. This is used as the default in\n * <mxPrintPreview> and for painting the background page if <pageVisible> is\n * true and the pagebreaks if <pageBreaksVisible> is true.\n */\nmxGraph.prototype.pageFormat = mxConstants.PAGE_FORMAT_A4_PORTRAIT;\n\n/**\n * Variable: pageScale\n *\n * Specifies the scale of the background page. Default is 1.5.\n * Not yet implemented.\n */\nmxGraph.prototype.pageScale = 1.5;\n\n/**\n * Variable: enabled\n * \n * Specifies the return value for <isEnabled>. Default is true.\n */\nmxGraph.prototype.enabled = true;\n\n/**\n * Variable: escapeEnabled\n * \n * Specifies if <mxKeyHandler> should invoke <escape> when the escape key\n * is pressed. Default is true.\n */\nmxGraph.prototype.escapeEnabled = true;\n\n/**\n * Variable: invokesStopCellEditing\n * \n * If true, when editing is to be stopped by way of selection changing,\n * data in diagram changing or other means stopCellEditing is invoked, and\n * changes are saved. This is implemented in a focus handler in\n * <mxCellEditor>. Default is true.\n */\nmxGraph.prototype.invokesStopCellEditing = true;\n\n/**\n * Variable: enterStopsCellEditing\n * \n * If true, pressing the enter key without pressing control or shift will stop\n * editing and accept the new value. This is used in <mxCellEditor> to stop\n * cell editing. Note: You can always use F2 and escape to stop editing.\n * Default is false.\n */\nmxGraph.prototype.enterStopsCellEditing = false;\n\n/**\n * Variable: useScrollbarsForPanning\n * \n * Specifies if scrollbars should be used for panning in <panGraph> if\n * any scrollbars are available. If scrollbars are enabled in CSS, but no\n * scrollbars appear because the graph is smaller than the container size,\n * then no panning occurs if this is true. Default is true.\n */\nmxGraph.prototype.useScrollbarsForPanning = true;\n\n/**\n * Variable: exportEnabled\n * \n * Specifies the return value for <canExportCell>. Default is true.\n */\nmxGraph.prototype.exportEnabled = true;\n\n/**\n * Variable: importEnabled\n * \n * Specifies the return value for <canImportCell>. Default is true.\n */\nmxGraph.prototype.importEnabled = true;\n\n/**\n * Variable: cellsLocked\n * \n * Specifies the return value for <isCellLocked>. Default is false.\n */\nmxGraph.prototype.cellsLocked = false;\n\n/**\n * Variable: cellsCloneable\n * \n * Specifies the return value for <isCellCloneable>. Default is true.\n */\nmxGraph.prototype.cellsCloneable = true;\n\n/**\n * Variable: foldingEnabled\n * \n * Specifies if folding (collapse and expand via an image icon in the graph\n * should be enabled). Default is true.\n */\nmxGraph.prototype.foldingEnabled = true;\n\n/**\n * Variable: cellsEditable\n * \n * Specifies the return value for <isCellEditable>. Default is true.\n */\nmxGraph.prototype.cellsEditable = true;\n\t\t\n/**\n * Variable: cellsDeletable\n * \n * Specifies the return value for <isCellDeletable>. Default is true.\n */\nmxGraph.prototype.cellsDeletable = true;\n\n/**\n * Variable: cellsMovable\n * \n * Specifies the return value for <isCellMovable>. Default is true.\n */\nmxGraph.prototype.cellsMovable = true;\n\t\n/**\n * Variable: edgeLabelsMovable\n * \n * Specifies the return value for edges in <isLabelMovable>. Default is true.\n */\nmxGraph.prototype.edgeLabelsMovable = true;\n\t\n/**\n * Variable: vertexLabelsMovable\n * \n * Specifies the return value for vertices in <isLabelMovable>. Default is false.\n */\nmxGraph.prototype.vertexLabelsMovable = false;\n\n/**\n * Variable: dropEnabled\n * \n * Specifies the return value for <isDropEnabled>. Default is false.\n */\nmxGraph.prototype.dropEnabled = false;\n\n/**\n * Variable: splitEnabled\n * \n * Specifies if dropping onto edges should be enabled. This is ignored if\n * <dropEnabled> is false. If enabled, it will call <splitEdge> to carry\n * out the drop operation. Default is true.\n */\nmxGraph.prototype.splitEnabled = true;\n\n/**\n * Variable: cellsResizable\n * \n * Specifies the return value for <isCellResizable>. Default is true.\n */\nmxGraph.prototype.cellsResizable = true;\n\n/**\n * Variable: cellsBendable\n * \n * Specifies the return value for <isCellsBendable>. Default is true.\n */\nmxGraph.prototype.cellsBendable = true;\n\n/**\n * Variable: cellsSelectable\n * \n * Specifies the return value for <isCellSelectable>. Default is true.\n */\nmxGraph.prototype.cellsSelectable = true;\n\n/**\n * Variable: cellsDisconnectable\n * \n * Specifies the return value for <isCellDisconntable>. Default is true.\n */\nmxGraph.prototype.cellsDisconnectable = true;\n\n/**\n * Variable: autoSizeCells\n * \n * Specifies if the graph should automatically update the cell size after an\n * edit. This is used in <isAutoSizeCell>. Default is false.\n */\nmxGraph.prototype.autoSizeCells = false;\n\n/**\n * Variable: autoSizeCellsOnAdd\n * \n * Specifies if autoSize style should be applied when cells are added. Default is false.\n */\nmxGraph.prototype.autoSizeCellsOnAdd = false;\n\n/**\n * Variable: autoScroll\n * \n * Specifies if the graph should automatically scroll if the mouse goes near\n * the container edge while dragging. This is only taken into account if the\n * container has scrollbars. Default is true.\n * \n * If you need this to work without scrollbars then set <ignoreScrollbars> to\n * true. Please consult the <ignoreScrollbars> for details. In general, with\n * no scrollbars, the use of <allowAutoPanning> is recommended.\n */\nmxGraph.prototype.autoScroll = true;\n\n/**\n * Variable: ignoreScrollbars\n * \n * Specifies if the graph should automatically scroll regardless of the\n * scrollbars. This will scroll the container using positive values for\n * scroll positions (ie usually only rightwards and downwards). To avoid\n * possible conflicts with panning, set <translateToScrollPosition> to true.\n */\nmxGraph.prototype.ignoreScrollbars = false;\n\n/**\n * Variable: translateToScrollPosition\n * \n * Specifies if the graph should automatically convert the current scroll\n * position to a translate in the graph view when a mouseUp event is received.\n * This can be used to avoid conflicts when using <autoScroll> and\n * <ignoreScrollbars> with no scrollbars in the container.\n */\nmxGraph.prototype.translateToScrollPosition = false;\n\n/**\n * Variable: timerAutoScroll\n * \n * Specifies if autoscrolling should be carried out via mxPanningManager even\n * if the container has scrollbars. This disables <scrollPointToVisible> and\n * uses <mxPanningManager> instead. If this is true then <autoExtend> is\n * disabled. It should only be used with a scroll buffer or when scollbars\n * are visible and scrollable in all directions. Default is false.\n */\nmxGraph.prototype.timerAutoScroll = false;\n\n/**\n * Variable: allowAutoPanning\n * \n * Specifies if panning via <panGraph> should be allowed to implement autoscroll\n * if no scrollbars are available in <scrollPointToVisible>. To enable panning\n * inside the container, near the edge, set <mxPanningManager.border> to a\n * positive value. Default is false.\n */\nmxGraph.prototype.allowAutoPanning = false;\n\n/**\n * Variable: autoExtend\n * \n * Specifies if the size of the graph should be automatically extended if the\n * mouse goes near the container edge while dragging. This is only taken into\n * account if the container has scrollbars. Default is true. See <autoScroll>.\n */\nmxGraph.prototype.autoExtend = true;\n\n/**\n * Variable: maximumGraphBounds\n * \n * <mxRectangle> that specifies the area in which all cells in the diagram\n * should be placed. Uses in <getMaximumGraphBounds>. Use a width or height of\n * 0 if you only want to give a upper, left corner.\n */\nmxGraph.prototype.maximumGraphBounds = null;\n\n/**\n * Variable: minimumGraphSize\n * \n * <mxRectangle> that specifies the minimum size of the graph. This is ignored\n * if the graph container has no scrollbars. Default is null.\n */\nmxGraph.prototype.minimumGraphSize = null;\n\n/**\n * Variable: minimumContainerSize\n * \n * <mxRectangle> that specifies the minimum size of the <container> if\n * <resizeContainer> is true.\n */\nmxGraph.prototype.minimumContainerSize = null;\n\t\t\n/**\n * Variable: maximumContainerSize\n * \n * <mxRectangle> that specifies the maximum size of the container if\n * <resizeContainer> is true.\n */\nmxGraph.prototype.maximumContainerSize = null;\n\n/**\n * Variable: resizeContainer\n * \n * Specifies if the container should be resized to the graph size when\n * the graph size has changed. Default is false.\n */\nmxGraph.prototype.resizeContainer = false;\n\n/**\n * Variable: border\n * \n * Border to be added to the bottom and right side when the container is\n * being resized after the graph has been changed. Default is 0.\n */\nmxGraph.prototype.border = 0;\n\t\t\n/**\n * Variable: keepEdgesInForeground\n * \n * Specifies if edges should appear in the foreground regardless of their order\n * in the model. If <keepEdgesInForeground> and <keepEdgesInBackground> are\n * both true then the normal order is applied. Default is false.\n */\nmxGraph.prototype.keepEdgesInForeground = false;\n\n/**\n * Variable: keepEdgesInBackground\n * \n * Specifies if edges should appear in the background regardless of their order\n * in the model. If <keepEdgesInForeground> and <keepEdgesInBackground> are\n * both true then the normal order is applied. Default is false.\n */\nmxGraph.prototype.keepEdgesInBackground = false;\n\n/**\n * Variable: allowNegativeCoordinates\n * \n * Specifies if negative coordinates for vertices are allowed. Default is true.\n */\nmxGraph.prototype.allowNegativeCoordinates = true;\n\n/**\n * Variable: constrainChildren\n * \n * Specifies if a child should be constrained inside the parent bounds after a\n * move or resize of the child. Default is true.\n */\nmxGraph.prototype.constrainChildren = true;\n\n/**\n * Variable: constrainRelativeChildren\n * \n * Specifies if child cells with relative geometries should be constrained\n * inside the parent bounds, if <constrainChildren> is true, and/or the\n * <maximumGraphBounds>. Default is false.\n */\nmxGraph.prototype.constrainRelativeChildren = false;\n\n/**\n * Variable: extendParents\n * \n * Specifies if a parent should contain the child bounds after a resize of\n * the child. Default is true. This has precedence over <constrainChildren>.\n */\nmxGraph.prototype.extendParents = true;\n\n/**\n * Variable: extendParentsOnAdd\n * \n * Specifies if parents should be extended according to the <extendParents>\n * switch if cells are added. Default is true.\n */\nmxGraph.prototype.extendParentsOnAdd = true;\n\n/**\n * Variable: extendParentsOnAdd\n * \n * Specifies if parents should be extended according to the <extendParents>\n * switch if cells are added. Default is false for backwards compatiblity.\n */\nmxGraph.prototype.extendParentsOnMove = false;\n\n/**\n * Variable: recursiveResize\n * \n * Specifies the return value for <isRecursiveResize>. Default is\n * false for backwards compatiblity.\n */\nmxGraph.prototype.recursiveResize = false;\n\n/**\n * Variable: collapseToPreferredSize\n * \n * Specifies if the cell size should be changed to the preferred size when\n * a cell is first collapsed. Default is true.\n */\nmxGraph.prototype.collapseToPreferredSize = true;\n\n/**\n * Variable: zoomFactor\n * \n * Specifies the factor used for <zoomIn> and <zoomOut>. Default is 1.2\n * (120%).\n */\nmxGraph.prototype.zoomFactor = 1.2;\n\n/**\n * Variable: keepSelectionVisibleOnZoom\n * \n * Specifies if the viewport should automatically contain the selection cells\n * after a zoom operation. Default is false.\n */\nmxGraph.prototype.keepSelectionVisibleOnZoom = false;\n\n/**\n * Variable: centerZoom\n * \n * Specifies if the zoom operations should go into the center of the actual\n * diagram rather than going from top, left. Default is true.\n */\nmxGraph.prototype.centerZoom = true;\n\n/**\n * Variable: resetViewOnRootChange\n * \n * Specifies if the scale and translate should be reset if the root changes in\n * the model. Default is true.\n */\nmxGraph.prototype.resetViewOnRootChange = true;\n\n/**\n * Variable: resetEdgesOnResize\n * \n * Specifies if edge control points should be reset after the resize of a\n * connected cell. Default is false.\n */\nmxGraph.prototype.resetEdgesOnResize = false;\n\n/**\n * Variable: resetEdgesOnMove\n * \n * Specifies if edge control points should be reset after the move of a\n * connected cell. Default is false.\n */\nmxGraph.prototype.resetEdgesOnMove = false;\n\n/**\n * Variable: resetEdgesOnConnect\n * \n * Specifies if edge control points should be reset after the the edge has been\n * reconnected. Default is true.\n */\nmxGraph.prototype.resetEdgesOnConnect = true;\n\n/**\n * Variable: allowLoops\n * \n * Specifies if loops (aka self-references) are allowed. Default is false.\n */\nmxGraph.prototype.allowLoops = false;\n\t\n/**\n * Variable: defaultLoopStyle\n * \n * <mxEdgeStyle> to be used for loops. This is a fallback for loops if the\n * <mxConstants.STYLE_LOOP> is undefined. Default is <mxEdgeStyle.Loop>.\n */\nmxGraph.prototype.defaultLoopStyle = mxEdgeStyle.Loop;\n\n/**\n * Variable: multigraph\n * \n * Specifies if multiple edges in the same direction between the same pair of\n * vertices are allowed. Default is true.\n */\nmxGraph.prototype.multigraph = true;\n\n/**\n * Variable: connectableEdges\n * \n * Specifies if edges are connectable. Default is false. This overrides the\n * connectable field in edges.\n */\nmxGraph.prototype.connectableEdges = false;\n\n/**\n * Variable: allowDanglingEdges\n * \n * Specifies if edges with disconnected terminals are allowed in the graph.\n * Default is true.\n */\nmxGraph.prototype.allowDanglingEdges = true;\n\n/**\n * Variable: cloneInvalidEdges\n * \n * Specifies if edges that are cloned should be validated and only inserted\n * if they are valid. Default is true.\n */\nmxGraph.prototype.cloneInvalidEdges = false;\n\n/**\n * Variable: disconnectOnMove\n * \n * Specifies if edges should be disconnected from their terminals when they\n * are moved. Default is true.\n */\nmxGraph.prototype.disconnectOnMove = true;\n\n/**\n * Variable: labelsVisible\n * \n * Specifies if labels should be visible. This is used in <getLabel>. Default\n * is true.\n */\nmxGraph.prototype.labelsVisible = true;\n\t\n/**\n * Variable: htmlLabels\n * \n * Specifies the return value for <isHtmlLabel>. Default is false.\n */\nmxGraph.prototype.htmlLabels = false;\n\n/**\n * Variable: swimlaneSelectionEnabled\n * \n * Specifies if swimlanes should be selectable via the content if the\n * mouse is released. Default is true.\n */\nmxGraph.prototype.swimlaneSelectionEnabled = true;\n\n/**\n * Variable: swimlaneNesting\n * \n * Specifies if nesting of swimlanes is allowed. Default is true.\n */\nmxGraph.prototype.swimlaneNesting = true;\n\t\n/**\n * Variable: swimlaneIndicatorColorAttribute\n * \n * The attribute used to find the color for the indicator if the indicator\n * color is set to 'swimlane'. Default is <mxConstants.STYLE_FILLCOLOR>.\n */\nmxGraph.prototype.swimlaneIndicatorColorAttribute = mxConstants.STYLE_FILLCOLOR;\n\n/**\n * Variable: imageBundles\n * \n * Holds the list of image bundles.\n */\nmxGraph.prototype.imageBundles = null;\n\n/**\n * Variable: minFitScale\n * \n * Specifies the minimum scale to be applied in <fit>. Default is 0.1. Set this\n * to null to allow any value.\n */\nmxGraph.prototype.minFitScale = 0.1;\n\n/**\n * Variable: maxFitScale\n * \n * Specifies the maximum scale to be applied in <fit>. Default is 8. Set this\n * to null to allow any value.\n */\nmxGraph.prototype.maxFitScale = 8;\n\n/**\n * Variable: panDx\n * \n * Current horizontal panning value. Default is 0.\n */\nmxGraph.prototype.panDx = 0;\n\n/**\n * Variable: panDy\n * \n * Current vertical panning value. Default is 0.\n */\nmxGraph.prototype.panDy = 0;\n\n/**\n * Variable: collapsedImage\n * \n * Specifies the <mxImage> to indicate a collapsed state.\n * Default value is mxClient.imageBasePath + '/collapsed.gif'\n */\nmxGraph.prototype.collapsedImage = new mxImage(mxClient.imageBasePath + '/collapsed.gif', 9, 9);\n\n/**\n * Variable: expandedImage\n * \n * Specifies the <mxImage> to indicate a expanded state.\n * Default value is mxClient.imageBasePath + '/expanded.gif'\n */\nmxGraph.prototype.expandedImage = new mxImage(mxClient.imageBasePath + '/expanded.gif', 9, 9);\n\n/**\n * Variable: warningImage\n * \n * Specifies the <mxImage> for the image to be used to display a warning\n * overlay. See <setCellWarning>. Default value is mxClient.imageBasePath +\n * '/warning'.  The extension for the image depends on the platform. It is\n * '.png' on the Mac and '.gif' on all other platforms.\n */\nmxGraph.prototype.warningImage = new mxImage(mxClient.imageBasePath + '/warning'+\n\t((mxClient.IS_MAC) ? '.png' : '.gif'), 16, 16);\n\n/**\n * Variable: alreadyConnectedResource\n * \n * Specifies the resource key for the error message to be displayed in\n * non-multigraphs when two vertices are already connected. If the resource\n * for this key does not exist then the value is used as the error message.\n * Default is 'alreadyConnected'.\n */\nmxGraph.prototype.alreadyConnectedResource = (mxClient.language != 'none') ? 'alreadyConnected' : '';\n\n/**\n * Variable: containsValidationErrorsResource\n * \n * Specifies the resource key for the warning message to be displayed when\n * a collapsed cell contains validation errors. If the resource for this\n * key does not exist then the value is used as the warning message.\n * Default is 'containsValidationErrors'.\n */\nmxGraph.prototype.containsValidationErrorsResource = (mxClient.language != 'none') ? 'containsValidationErrors' : '';\n\n/**\n * Variable: collapseExpandResource\n * \n * Specifies the resource key for the tooltip on the collapse/expand icon.\n * If the resource for this key does not exist then the value is used as\n * the tooltip. Default is 'collapse-expand'.\n */\nmxGraph.prototype.collapseExpandResource = (mxClient.language != 'none') ? 'collapse-expand' : '';\n\n/**\n * Function: init\n * \n * Initializes the <container> and creates the respective datastructures.\n * \n * Parameters:\n * \n * container - DOM node that will contain the graph display.\n */\nmxGraph.prototype.init = function(container)\n{\n\tthis.container = container;\n\t\n\t// Initializes the in-place editor\n\tthis.cellEditor = this.createCellEditor();\t\n\n\t// Initializes the container using the view\n\tthis.view.init();\n\t\n\t// Updates the size of the container for the current graph\n\tthis.sizeDidChange();\n\t\n\t// Hides tooltips and resets tooltip timer if mouse leaves container\n\tmxEvent.addListener(container, 'mouseleave', mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.tooltipHandler != null && this.tooltipHandler.div != null &&\n\t\t\tthis.tooltipHandler.div != evt.relatedTarget)\n\t\t{\n\t\t\tthis.tooltipHandler.hide();\n\t\t}\n\t}));\n\n\t// Automatic deallocation of memory\n\tif (mxClient.IS_IE)\n\t{\n\t\tmxEvent.addListener(window, 'unload', mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.destroy();\n\t\t}));\n\t\t\n\t\t// Disable shift-click for text\n\t\tmxEvent.addListener(container, 'selectstart',\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\treturn this.isEditing() || (!this.isMouseDown && !mxEvent.isShiftDown(evt));\n\t\t\t})\n\t\t);\n\t}\n\t\n\t// Workaround for missing last shape and connect preview in IE8 standards\n\t// mode if no initial graph displayed or no label for shape defined\n\tif (document.documentMode == 8)\n\t{\n\t\tcontainer.insertAdjacentHTML('beforeend', '<' + mxClient.VML_PREFIX + ':group' +\n\t\t\t' style=\"DISPLAY: none;\"></' + mxClient.VML_PREFIX + ':group>');\n\t}\n};\n\n/**\n * Function: createHandlers\n * \n * Creates the tooltip-, panning-, connection- and graph-handler (in this\n * order). This is called in the constructor before <init> is called.\n */\nmxGraph.prototype.createHandlers = function()\n{\n\tthis.tooltipHandler = this.createTooltipHandler();\n\tthis.tooltipHandler.setEnabled(false);\n\tthis.selectionCellsHandler = this.createSelectionCellsHandler();\n\tthis.connectionHandler = this.createConnectionHandler();\n\tthis.connectionHandler.setEnabled(false);\n\tthis.graphHandler = this.createGraphHandler();\n\tthis.panningHandler = this.createPanningHandler();\n\tthis.panningHandler.panningEnabled = false;\n\tthis.popupMenuHandler = this.createPopupMenuHandler();\n};\n\n/**\n * Function: createTooltipHandler\n * \n * Creates and returns a new <mxTooltipHandler> to be used in this graph.\n */\nmxGraph.prototype.createTooltipHandler = function()\n{\n\treturn new mxTooltipHandler(this);\n};\n\n/**\n * Function: createSelectionCellsHandler\n * \n * Creates and returns a new <mxTooltipHandler> to be used in this graph.\n */\nmxGraph.prototype.createSelectionCellsHandler = function()\n{\n\treturn new mxSelectionCellsHandler(this);\n};\n\n/**\n * Function: createConnectionHandler\n * \n * Creates and returns a new <mxConnectionHandler> to be used in this graph.\n */\nmxGraph.prototype.createConnectionHandler = function()\n{\n\treturn new mxConnectionHandler(this);\n};\n\n/**\n * Function: createGraphHandler\n * \n * Creates and returns a new <mxGraphHandler> to be used in this graph.\n */\nmxGraph.prototype.createGraphHandler = function()\n{\n\treturn new mxGraphHandler(this);\n};\n\n/**\n * Function: createPanningHandler\n * \n * Creates and returns a new <mxPanningHandler> to be used in this graph.\n */\nmxGraph.prototype.createPanningHandler = function()\n{\n\treturn new mxPanningHandler(this);\n};\n\n/**\n * Function: createPopupMenuHandler\n * \n * Creates and returns a new <mxPopupMenuHandler> to be used in this graph.\n */\nmxGraph.prototype.createPopupMenuHandler = function()\n{\n\treturn new mxPopupMenuHandler(this);\n};\n\n/**\n * Function: createSelectionModel\n * \n * Creates a new <mxGraphSelectionModel> to be used in this graph.\n */\nmxGraph.prototype.createSelectionModel = function()\n{\n\treturn new mxGraphSelectionModel(this);\n};\n\n/**\n * Function: createStylesheet\n * \n * Creates a new <mxGraphSelectionModel> to be used in this graph.\n */\nmxGraph.prototype.createStylesheet = function()\n{\n\treturn new mxStylesheet();\n};\n\n/**\n * Function: createGraphView\n * \n * Creates a new <mxGraphView> to be used in this graph.\n */\nmxGraph.prototype.createGraphView = function()\n{\n\treturn new mxGraphView(this);\n};\n \n/**\n * Function: createCellRenderer\n * \n * Creates a new <mxCellRenderer> to be used in this graph.\n */\nmxGraph.prototype.createCellRenderer = function()\n{\n\treturn new mxCellRenderer();\n};\n\n/**\n * Function: createCellEditor\n * \n * Creates a new <mxCellEditor> to be used in this graph.\n */\nmxGraph.prototype.createCellEditor = function()\n{\n\treturn new mxCellEditor(this);\n};\n\n/**\n * Function: getModel\n * \n * Returns the <mxGraphModel> that contains the cells.\n */\nmxGraph.prototype.getModel = function()\n{\n\treturn this.model;\n};\n\n/**\n * Function: getView\n * \n * Returns the <mxGraphView> that contains the <mxCellStates>.\n */\nmxGraph.prototype.getView = function()\n{\n\treturn this.view;\n};\n\n/**\n * Function: getStylesheet\n * \n * Returns the <mxStylesheet> that defines the style.\n */\nmxGraph.prototype.getStylesheet = function()\n{\n\treturn this.stylesheet;\n};\n\n/**\n * Function: setStylesheet\n * \n * Sets the <mxStylesheet> that defines the style.\n */\nmxGraph.prototype.setStylesheet = function(stylesheet)\n{\n\tthis.stylesheet = stylesheet;\n};\n\n/**\n * Function: getSelectionModel\n * \n * Returns the <mxGraphSelectionModel> that contains the selection.\n */\nmxGraph.prototype.getSelectionModel = function()\n{\n\treturn this.selectionModel;\n};\n\n/**\n * Function: setSelectionModel\n * \n * Sets the <mxSelectionModel> that contains the selection.\n */\nmxGraph.prototype.setSelectionModel = function(selectionModel)\n{\n\tthis.selectionModel = selectionModel;\n};\n\n/**\n * Function: getSelectionCellsForChanges\n * \n * Returns the cells to be selected for the given array of changes.\n * \n * Parameters:\n * \n * ignoreFn - Optional function that takes a change and returns true if the\n * change should be ignored.\n * \n */\nmxGraph.prototype.getSelectionCellsForChanges = function(changes, ignoreFn)\n{\n\tvar dict = new mxDictionary();\n\tvar cells = [];\n\t\n\tvar addCell = mxUtils.bind(this, function(cell)\n\t{\n\t\tif (!dict.get(cell) && this.model.contains(cell))\n\t\t{\n\t\t\tif (this.model.isEdge(cell) || this.model.isVertex(cell))\n\t\t\t{\n\t\t\t\tdict.put(cell, true);\n\t\t\t\tcells.push(cell);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar childCount = this.model.getChildCount(cell);\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t\t{\n\t\t\t\t\taddCell(this.model.getChildAt(cell, i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfor (var i = 0; i < changes.length; i++)\n\t{\n\t\tvar change = changes[i];\n\t\t\n\t\tif (change.constructor != mxRootChange &&\n\t\t\t(ignoreFn == null || !ignoreFn(change)))\n\t\t{\n\t\t\tvar cell = null;\n\n\t\t\tif (change instanceof mxChildChange)\n\t\t\t{\n\t\t\t\tcell = change.child;\n\t\t\t}\n\t\t\telse if (change.cell != null &&\n\t\t\t\tchange.cell instanceof mxCell)\n\t\t\t{\n\t\t\t\tcell = change.cell;\n\t\t\t}\n\t\t\t\n\t\t\tif (cell != null)\n\t\t\t{\n\t\t\t\taddCell(cell);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn cells;\n};\n\n/**\n * Function: graphModelChanged\n * \n * Called when the graph model changes. Invokes <processChange> on each\n * item of the given array to update the view accordingly.\n * \n * Parameters:\n * \n * changes - Array that contains the individual changes.\n */\nmxGraph.prototype.graphModelChanged = function(changes)\n{\n\tfor (var i = 0; i < changes.length; i++)\n\t{\n\t\tthis.processChange(changes[i]);\n\t}\n\n\tthis.updateSelection();\n\tthis.view.validate();\n\tthis.sizeDidChange();\n};\n\n/**\n * Function: updateSelection\n * \n * Removes selection cells that are not in the model from the selection.\n */\nmxGraph.prototype.updateSelection = function()\n{\n\tvar cells = this.getSelectionCells();\n\tvar removed = [];\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tif (!this.model.contains(cells[i]) || !this.isCellVisible(cells[i]))\n\t\t{\n\t\t\tremoved.push(cells[i]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar par = this.model.getParent(cells[i]);\n\t\t\t\n\t\t\twhile (par != null && par != this.view.currentRoot)\n\t\t\t{\n\t\t\t\tif (this.isCellCollapsed(par) || !this.isCellVisible(par))\n\t\t\t\t{\n\t\t\t\t\tremoved.push(cells[i]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpar = this.model.getParent(par);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.removeSelectionCells(removed);\n};\n\n/**\n * Function: processChange\n * \n * Processes the given change and invalidates the respective cached data\n * in <view>. This fires a <root> event if the root has changed in the\n * model.\n * \n * Parameters:\n * \n * change - Object that represents the change on the model.\n */\nmxGraph.prototype.processChange = function(change)\n{\n\t// Resets the view settings, removes all cells and clears\n\t// the selection if the root changes.\n\tif (change instanceof mxRootChange)\n\t{\n\t\tthis.clearSelection();\n\t\tthis.setDefaultParent(null);\n\t\tthis.removeStateForCell(change.previous);\n\t\t\n\t\tif (this.resetViewOnRootChange)\n\t\t{\n\t\t\tthis.view.scale = 1;\n\t\t\tthis.view.translate.x = 0;\n\t\t\tthis.view.translate.y = 0;\n\t\t}\n\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ROOT));\n\t}\n\t\n\t// Adds or removes a child to the view by online invaliding\n\t// the minimal required portions of the cache, namely, the\n\t// old and new parent and the child.\n\telse if (change instanceof mxChildChange)\n\t{\n\t\tvar newParent = this.model.getParent(change.child);\n\t\tthis.view.invalidate(change.child, true, true);\n\t\t\n\t\tif (!this.model.contains(newParent) || this.isCellCollapsed(newParent))\n\t\t{\n\t\t\tthis.view.invalidate(change.child, true, true);\n\t\t\tthis.removeStateForCell(change.child);\n\t\t\t\n\t\t\t// Handles special case of current root of view being removed\n\t\t\tif (this.view.currentRoot == change.child)\n\t\t\t{\n\t\t\t\tthis.home();\n\t\t\t}\n\t\t}\n \n\t\tif (newParent != change.previous)\n\t\t{\n\t\t\t// Refreshes the collapse/expand icons on the parents\n\t\t\tif (newParent != null)\n\t\t\t{\n\t\t\t\tthis.view.invalidate(newParent, false, false);\n\t\t\t}\n\t\t\t\n\t\t\tif (change.previous != null)\n\t\t\t{\n\t\t\t\tthis.view.invalidate(change.previous, false, false);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Handles two special cases where the shape does not need to be\n\t// recreated from scratch, it only needs to be invalidated.\n\telse if (change instanceof mxTerminalChange || change instanceof mxGeometryChange)\n\t{\n\t\t// Checks if the geometry has changed to avoid unnessecary revalidation\n\t\tif (change instanceof mxTerminalChange || ((change.previous == null && change.geometry != null) ||\n\t\t\t(change.previous != null && !change.previous.equals(change.geometry))))\n\t\t{\n\t\t\tthis.view.invalidate(change.cell);\n\t\t}\n\t}\n\n\t// Handles two special cases where only the shape, but no\n\t// descendants need to be recreated\n\telse if (change instanceof mxValueChange)\n\t{\n\t\tthis.view.invalidate(change.cell, false, false);\n\t}\n\t\n\t// Requires a new mxShape in JavaScript\n\telse if (change instanceof mxStyleChange)\n\t{\n\t\tthis.view.invalidate(change.cell, true, true);\n\t\tvar state = this.view.getState(change.cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tstate.invalidStyle = true;\n\t\t}\n\t}\n\t\n\t// Removes the state from the cache by default\n\telse if (change.cell != null && change.cell instanceof mxCell)\n\t{\n\t\tthis.removeStateForCell(change.cell);\n\t}\n};\n\n/**\n * Function: removeStateForCell\n * \n * Removes all cached information for the given cell and its descendants.\n * This is called when a cell was removed from the model.\n * \n * Paramters:\n * \n * cell - <mxCell> that was removed from the model.\n */\nmxGraph.prototype.removeStateForCell = function(cell)\n{\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.removeStateForCell(this.model.getChildAt(cell, i));\n\t}\n\n\tthis.view.invalidate(cell, false, true);\n\tthis.view.removeState(cell);\n};\n\n/**\n * Group: Overlays\n */\n\n/**\n * Function: addCellOverlay\n * \n * Adds an <mxCellOverlay> for the specified cell. This method fires an\n * <addoverlay> event and returns the new <mxCellOverlay>.\n * \n * Parameters:\n * \n * cell - <mxCell> to add the overlay for.\n * overlay - <mxCellOverlay> to be added for the cell.\n */\nmxGraph.prototype.addCellOverlay = function(cell, overlay)\n{\n\tif (cell.overlays == null)\n\t{\n\t\tcell.overlays = [];\n\t}\n\t\n\tcell.overlays.push(overlay);\n\n\tvar state = this.view.getState(cell);\n\n\t// Immediately updates the cell display if the state exists\n\tif (state != null)\n\t{\n\t\tthis.cellRenderer.redraw(state);\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.ADD_OVERLAY,\n\t\t\t'cell', cell, 'overlay', overlay));\n\t\n\treturn overlay;\n};\n\n/**\n * Function: getCellOverlays\n * \n * Returns the array of <mxCellOverlays> for the given cell or null, if\n * no overlays are defined.\n * \n * Parameters:\n * \n * cell - <mxCell> whose overlays should be returned.\n */\nmxGraph.prototype.getCellOverlays = function(cell)\n{\n\treturn cell.overlays;\n};\n\n/**\n * Function: removeCellOverlay\n * \n * Removes and returns the given <mxCellOverlay> from the given cell. This\n * method fires a <removeoverlay> event. If no overlay is given, then all\n * overlays are removed using <removeOverlays>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose overlay should be removed.\n * overlay - Optional <mxCellOverlay> to be removed.\n */\nmxGraph.prototype.removeCellOverlay = function(cell, overlay)\n{\n\tif (overlay == null)\n\t{\n\t\tthis.removeCellOverlays(cell);\n\t}\n\telse\n\t{\n\t\tvar index = mxUtils.indexOf(cell.overlays, overlay);\n\t\t\n\t\tif (index >= 0)\n\t\t{\n\t\t\tcell.overlays.splice(index, 1);\n\t\t\t\n\t\t\tif (cell.overlays.length == 0)\n\t\t\t{\n\t\t\t\tcell.overlays = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Immediately updates the cell display if the state exists\n\t\t\tvar state = this.view.getState(cell);\n\t\t\t\n\t\t\tif (state != null)\n\t\t\t{\n\t\t\t\tthis.cellRenderer.redraw(state);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_OVERLAY,\n\t\t\t\t\t'cell', cell, 'overlay', overlay));\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\toverlay = null;\n\t\t}\n\t}\n\t\n\treturn overlay;\n};\n\n/**\n * Function: removeCellOverlays\n * \n * Removes all <mxCellOverlays> from the given cell. This method\n * fires a <removeoverlay> event for each <mxCellOverlay> and returns\n * the array of <mxCellOverlays> that was removed from the cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose overlays should be removed\n */\nmxGraph.prototype.removeCellOverlays = function(cell)\n{\n\tvar overlays = cell.overlays;\n\t\n\tif (overlays != null)\n\t{\n\t\tcell.overlays = null;\n\t\t\n\t\t// Immediately updates the cell display if the state exists\n\t\tvar state = this.view.getState(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.cellRenderer.redraw(state);\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < overlays.length; i++)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_OVERLAY,\n\t\t\t\t\t'cell', cell, 'overlay', overlays[i]));\n\t\t}\n\t}\n\t\n\treturn overlays;\n};\n\n/**\n * Function: clearCellOverlays\n * \n * Removes all <mxCellOverlays> in the graph for the given cell and all its\n * descendants. If no cell is specified then all overlays are removed from\n * the graph. This implementation uses <removeCellOverlays> to remove the\n * overlays from the individual cells.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> that represents the root of the subtree to\n * remove the overlays from. Default is the root in the model.\n */\nmxGraph.prototype.clearCellOverlays = function(cell)\n{\n\tcell = (cell != null) ? cell : this.model.getRoot();\n\tthis.removeCellOverlays(cell);\n\t\n\t// Recursively removes all overlays from the children\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.model.getChildAt(cell, i);\n\t\tthis.clearCellOverlays(child); // recurse\n\t}\n};\n\n/**\n * Function: setCellWarning\n * \n * Creates an overlay for the given cell using the warning and image or\n * <warningImage> and returns the new <mxCellOverlay>. The warning is\n * displayed as a tooltip in a red font and may contain HTML markup. If\n * the warning is null or a zero length string, then all overlays are\n * removed from the cell.\n * \n * Example:\n * \n * (code)\n * graph.setCellWarning(cell, '<b>Warning:</b>: Hello, World!');\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> whose warning should be set.\n * warning - String that represents the warning to be displayed.\n * img - Optional <mxImage> to be used for the overlay. Default is\n * <warningImage>.\n * isSelect - Optional boolean indicating if a click on the overlay\n * should select the corresponding cell. Default is false.\n */\nmxGraph.prototype.setCellWarning = function(cell, warning, img, isSelect)\n{\n\tif (warning != null && warning.length > 0)\n\t{\n\t\timg = (img != null) ? img : this.warningImage;\n\t\t\n\t\t// Creates the overlay with the image and warning\n\t\tvar overlay = new mxCellOverlay(img,\n\t\t\t'<font color=red>'+warning+'</font>');\n\t\t\n\t\t// Adds a handler for single mouseclicks to select the cell\n\t\tif (isSelect)\n\t\t{\n\t\t\toverlay.addListener(mxEvent.CLICK,\n\t\t\t\tmxUtils.bind(this, function(sender, evt)\n\t\t\t\t{\n\t\t\t\t\tif (this.isEnabled())\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setSelectionCell(cell);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\t\n\t\t// Sets and returns the overlay in the graph\n\t\treturn this.addCellOverlay(cell, overlay);\n\t}\n\telse\n\t{\n\t\tthis.removeCellOverlays(cell);\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Group: In-place editing\n */\n\n/**\n * Function: startEditing\n * \n * Calls <startEditingAtCell> using the given cell or the first selection\n * cell.\n * \n * Parameters:\n * \n * evt - Optional mouse event that triggered the editing.\n */\nmxGraph.prototype.startEditing = function(evt)\n{\n\tthis.startEditingAtCell(null, evt);\n};\n\n/**\n * Function: startEditingAtCell\n * \n * Fires a <startEditing> event and invokes <mxCellEditor.startEditing>\n * on <editor>. After editing was started, a <editingStarted> event is\n * fired.\n * \n * Parameters:\n * \n * cell - <mxCell> to start the in-place editor for.\n * evt - Optional mouse event that triggered the editing.\n */\nmxGraph.prototype.startEditingAtCell = function(cell, evt)\n{\n\tif (evt == null || !mxEvent.isMultiTouchEvent(evt))\n\t{\n\t\tif (cell == null)\n\t\t{\n\t\t\tcell = this.getSelectionCell();\n\t\t\t\n\t\t\tif (cell != null && !this.isCellEditable(cell))\n\t\t\t{\n\t\t\t\tcell = null;\n\t\t\t}\n\t\t}\n\t\n\t\tif (cell != null)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.START_EDITING,\n\t\t\t\t\t'cell', cell, 'event', evt));\n\t\t\tthis.cellEditor.startEditing(cell, evt);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.EDITING_STARTED,\n\t\t\t\t\t'cell', cell, 'event', evt));\n\t\t}\n\t}\n};\n\n/**\n * Function: getEditingValue\n * \n * Returns the initial value for in-place editing. This implementation\n * returns <convertValueToString> for the given cell. If this function is\n * overridden, then <mxGraphModel.valueForCellChanged> should take care\n * of correctly storing the actual new value inside the user object.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the initial editing value should be returned.\n * evt - Optional mouse event that triggered the editor.\n */\nmxGraph.prototype.getEditingValue = function(cell, evt)\n{\n\treturn this.convertValueToString(cell);\n};\n\n/**\n * Function: stopEditing\n * \n * Stops the current editing  and fires a <editingStopped> event.\n * \n * Parameters:\n * \n * cancel - Boolean that specifies if the current editing value\n * should be stored.\n */\nmxGraph.prototype.stopEditing = function(cancel)\n{\n\tthis.cellEditor.stopEditing(cancel);\n\tthis.fireEvent(new mxEventObject(mxEvent.EDITING_STOPPED, 'cancel', cancel));\n};\n\n/**\n * Function: labelChanged\n * \n * Sets the label of the specified cell to the given value using\n * <cellLabelChanged> and fires <mxEvent.LABEL_CHANGED> while the\n * transaction is in progress. Returns the cell whose label was changed.\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be changed.\n * value - New label to be assigned.\n * evt - Optional event that triggered the change.\n */\nmxGraph.prototype.labelChanged = function(cell, value, evt)\n{\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tvar old = cell.value;\n\t\tthis.cellLabelChanged(cell, value, this.isAutoSizeCell(cell));\n\t\tthis.fireEvent(new mxEventObject(mxEvent.LABEL_CHANGED,\n\t\t\t'cell', cell, 'value', value, 'old', old, 'event', evt));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: cellLabelChanged\n * \n * Sets the new label for a cell. If autoSize is true then\n * <cellSizeUpdated> will be called.\n * \n * In the following example, the function is extended to map changes to\n * attributes in an XML node, as shown in <convertValueToString>.\n * Alternatively, the handling of this can be implemented as shown in\n * <mxGraphModel.valueForCellChanged> without the need to clone the\n * user object.\n * \n * (code)\n * var graphCellLabelChanged = graph.cellLabelChanged;\n * graph.cellLabelChanged = function(cell, newValue, autoSize)\n * {\n * \t// Cloned for correct undo/redo\n * \tvar elt = cell.value.cloneNode(true);\n *  elt.setAttribute('label', newValue);\n *  \n *  newValue = elt;\n *  graphCellLabelChanged.apply(this, arguments);\n * };\n * (end) \n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be changed.\n * value - New label to be assigned.\n * autoSize - Boolean that specifies if <cellSizeUpdated> should be called.\n */\nmxGraph.prototype.cellLabelChanged = function(cell, value, autoSize)\n{\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.model.setValue(cell, value);\n\t\t\n\t\tif (autoSize)\n\t\t{\n\t\t\tthis.cellSizeUpdated(cell, false);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n};\n\n/**\n * Group: Event processing\n */\n\n/**\n * Function: escape\n * \n * Processes an escape keystroke.\n * \n * Parameters:\n * \n * evt - Mouseevent that represents the keystroke.\n */\nmxGraph.prototype.escape = function(evt)\n{\n\tthis.fireEvent(new mxEventObject(mxEvent.ESCAPE, 'event', evt));\n};\n\n/**\n * Function: click\n * \n * Processes a singleclick on an optional cell and fires a <click> event.\n * The click event is fired initially. If the graph is enabled and the\n * event has not been consumed, then the cell is selected using\n * <selectCellForEvent> or the selection is cleared using\n * <clearSelection>. The events consumed state is set to true if the\n * corresponding <mxMouseEvent> has been consumed.\n *\n * To handle a click event, use the following code.\n * \n * (code)\n * graph.addListener(mxEvent.CLICK, function(sender, evt)\n * {\n *   var e = evt.getProperty('event'); // mouse event\n *   var cell = evt.getProperty('cell'); // cell may be null\n *   \n *   if (cell != null)\n *   {\n *     // Do something useful with cell and consume the event\n *     evt.consume();\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * me - <mxMouseEvent> that represents the single click.\n */\nmxGraph.prototype.click = function(me)\n{\n\tvar evt = me.getEvent();\n\tvar cell = me.getCell();\n\tvar mxe = new mxEventObject(mxEvent.CLICK, 'event', evt, 'cell', cell);\n\t\n\tif (me.isConsumed())\n\t{\n\t\tmxe.consume();\n\t}\n\t\n\tthis.fireEvent(mxe);\n\t\n\tif (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed())\n\t{\n\t\tif (cell != null)\n\t\t{\n\t\t\tif (this.isTransparentClickEvent(evt))\n\t\t\t{\n\t\t\t\tvar active = false;\n\t\t\t\t\n\t\t\t\tvar tmp = this.getCellAt(me.graphX, me.graphY, null, null, null,\n\t\t\t\t\tmxUtils.bind(this, function(state)\n\t\t\t\t{\n\t\t\t\t\tvar selected = this.isCellSelected(state.cell);\n\t\t\t\t\tactive = active || selected;\n\t\t\t\t\t\n\t\t\t\t\treturn !active || selected || (state.cell != cell &&\n\t\t\t\t\t\tthis.model.isAncestor(state.cell, cell));\n\t\t\t\t}));\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tcell = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.isSwimlaneSelectionEnabled())\n\t\t{\n\t\t\tcell = this.getSwimlaneAt(me.getGraphX(), me.getGraphY());\n\t\t\t\t\n\t\t\tif (cell != null && (!this.isToggleEvent(evt) ||\n\t\t\t\t!mxEvent.isAltDown(evt)))\n\t\t\t{\n\t\t\t\tvar temp = cell;\n\t\t\t\tvar swimlanes = [];\n\t\t\t\t\n\t\t\t\twhile (temp != null)\n\t\t\t\t{\n\t\t\t\t\ttemp = this.model.getParent(temp);\n\t\t\t\t\tvar state = this.view.getState(temp);\n\t\t\t\t\t\n\t\t\t\t\tif (this.isSwimlane(temp) && state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tswimlanes.push(temp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Selects ancestors for selected swimlanes\n\t\t\t\tif (swimlanes.length > 0)\n\t\t\t\t{\n\t\t\t\t\tswimlanes = swimlanes.reverse();\n\t\t\t\t\tswimlanes.splice(0, 0, cell);\n\t\t\t\t\tswimlanes.push(cell);\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = 0; i < swimlanes.length - 1; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.isCellSelected(swimlanes[i]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcell = swimlanes[(this.isToggleEvent(evt)) ?\n\t\t\t\t\t\t\t\ti : i + 1];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tif (cell != null)\n\t\t{\n\t\t\tthis.selectCellForEvent(cell, evt);\n\t\t}\n\t\telse if (!this.isToggleEvent(evt))\n\t\t{\n\t\t\tthis.clearSelection();\n\t\t}\n\t}\n};\n\n/**\n * Function: isSiblingSelected\n * \n * Returns true if any sibling of the given cell is selected.\n */\nmxGraph.prototype.isSiblingSelected = function(cell)\n{\n\tvar model = this.model;\n\tvar parent = model.getParent(cell);\n\tvar childCount = model.getChildCount(parent);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(parent, i);\n\t\t\n\t\tif (cell != child && this.isCellSelected(child))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n\n/**\n * Function: dblClick\n * \n * Processes a doubleclick on an optional cell and fires a <dblclick>\n * event. The event is fired initially. If the graph is enabled and the\n * event has not been consumed, then <edit> is called with the given\n * cell. The event is ignored if no cell was specified.\n *\n * Example for overriding this method.\n *\n * (code)\n * graph.dblClick = function(evt, cell)\n * {\n *   var mxe = new mxEventObject(mxEvent.DOUBLE_CLICK, 'event', evt, 'cell', cell);\n *   this.fireEvent(mxe);\n *   \n *   if (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed())\n *   {\n * \t   mxUtils.alert('Hello, World!');\n *     mxe.consume();\n *   }\n * }\n * (end)\n * \n * Example listener for this event.\n * \n * (code)\n * graph.addListener(mxEvent.DOUBLE_CLICK, function(sender, evt)\n * {\n *   var cell = evt.getProperty('cell');\n *   // do something with the cell and consume the\n *   // event to prevent in-place editing from start\n * });\n * (end) \n * \n * Parameters:\n * \n * evt - Mouseevent that represents the doubleclick.\n * cell - Optional <mxCell> under the mousepointer.\n */\nmxGraph.prototype.dblClick = function(evt, cell)\n{\n\tvar mxe = new mxEventObject(mxEvent.DOUBLE_CLICK, 'event', evt, 'cell', cell);\n\tthis.fireEvent(mxe);\n\t\n\t// Handles the event if it has not been consumed\n\tif (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed() &&\n\t\tcell != null && this.isCellEditable(cell) && !this.isEditing(cell))\n\t{\n\t\tthis.startEditingAtCell(cell, evt);\n\t\tmxEvent.consume(evt);\n\t}\n};\n\n/**\n * Function: tapAndHold\n * \n * Handles the <mxMouseEvent> by highlighting the <mxCellState>.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> that represents the touch event.\n * state - Optional <mxCellState> that is associated with the event.\n */\nmxGraph.prototype.tapAndHold = function(me)\n{\n\tvar evt = me.getEvent();\n\tvar mxe = new mxEventObject(mxEvent.TAP_AND_HOLD, 'event', evt, 'cell', me.getCell());\n\n\t// LATER: Check if event should be consumed if me is consumed\n\tthis.fireEvent(mxe);\n\n\tif (mxe.isConsumed())\n\t{\n\t\t// Resets the state of the panning handler\n\t\tthis.panningHandler.panningTrigger = false;\n\t}\n\t\n\t// Handles the event if it has not been consumed\n\tif (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed() && this.connectionHandler.isEnabled())\n\t{\n\t\tvar state = this.view.getState(this.connectionHandler.marker.getCell(me));\n\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.connectionHandler.marker.currentColor = this.connectionHandler.marker.validColor;\n\t\t\tthis.connectionHandler.marker.markedState = state;\n\t\t\tthis.connectionHandler.marker.mark();\n\t\t\t\n\t\t\tthis.connectionHandler.first = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t\tthis.connectionHandler.edgeState = this.connectionHandler.createEdgeState(me);\n\t\t\tthis.connectionHandler.previous = state;\n\t\t\tthis.connectionHandler.fireEvent(new mxEventObject(mxEvent.START, 'state', this.connectionHandler.previous));\n\t\t}\n\t}\n};\n\n/**\n * Function: scrollPointToVisible\n * \n * Scrolls the graph to the given point, extending the graph container if\n * specified.\n */\nmxGraph.prototype.scrollPointToVisible = function(x, y, extend, border)\n{\n\tif (!this.timerAutoScroll && (this.ignoreScrollbars || mxUtils.hasScrollbars(this.container)))\n\t{\n\t\tvar c = this.container;\n\t\tborder = (border != null) ? border : 20;\n\t\t\n\t\tif (x >= c.scrollLeft && y >= c.scrollTop && x <= c.scrollLeft + c.clientWidth &&\n\t\t\ty <= c.scrollTop + c.clientHeight)\n\t\t{\n\t\t\tvar dx = c.scrollLeft + c.clientWidth - x;\n\t\t\t\n\t\t\tif (dx < border)\n\t\t\t{\n\t\t\t\tvar old = c.scrollLeft;\n\t\t\t\tc.scrollLeft += border - dx;\n\n\t\t\t\t// Automatically extends the canvas size to the bottom, right\n\t\t\t\t// if the event is outside of the canvas and the edge of the\n\t\t\t\t// canvas has been reached. Notes: Needs fix for IE.\n\t\t\t\tif (extend && old == c.scrollLeft)\n\t\t\t\t{\n\t\t\t\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar root = this.view.getDrawPane().ownerSVGElement;\n\t\t\t\t\t\tvar width = this.container.scrollWidth + border - dx;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Updates the clipping region. This is an expensive\n\t\t\t\t\t\t// operation that should not be executed too often.\n\t\t\t\t\t\troot.style.width = width + 'px';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar width = Math.max(c.clientWidth, c.scrollWidth) + border - dx;\n\t\t\t\t\t\tvar canvas = this.view.getCanvas();\n\t\t\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tc.scrollLeft += border - dx;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdx = x - c.scrollLeft;\n\t\t\t\t\n\t\t\t\tif (dx < border)\n\t\t\t\t{\n\t\t\t\t\tc.scrollLeft -= border - dx;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar dy = c.scrollTop + c.clientHeight - y;\n\t\t\t\n\t\t\tif (dy < border)\n\t\t\t{\n\t\t\t\tvar old = c.scrollTop;\n\t\t\t\tc.scrollTop += border - dy;\n\n\t\t\t\tif (old == c.scrollTop && extend)\n\t\t\t\t{\n\t\t\t\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar root = this.view.getDrawPane().ownerSVGElement;\n\t\t\t\t\t\tvar height = this.container.scrollHeight + border - dy;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Updates the clipping region. This is an expensive\n\t\t\t\t\t\t// operation that should not be executed too often.\n\t\t\t\t\t\troot.style.height = height + 'px';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar height = Math.max(c.clientHeight, c.scrollHeight) + border - dy;\n\t\t\t\t\t\tvar canvas = this.view.getCanvas();\n\t\t\t\t\t\tcanvas.style.height = height + 'px';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tc.scrollTop += border - dy;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdy = y - c.scrollTop;\n\t\t\t\t\n\t\t\t\tif (dy < border)\n\t\t\t\t{\n\t\t\t\t\tc.scrollTop -= border - dy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse if (this.allowAutoPanning && !this.panningHandler.isActive())\n\t{\n\t\tif (this.panningManager == null)\n\t\t{\n\t\t\tthis.panningManager = this.createPanningManager();\n\t\t}\n\n\t\tthis.panningManager.panTo(x + this.panDx, y + this.panDy);\n\t}\n};\n\n\n/**\n * Function: createPanningManager\n * \n * Creates and returns an <mxPanningManager>.\n */\nmxGraph.prototype.createPanningManager = function()\n{\n\treturn new mxPanningManager(this);\n};\n\n/**\n * Function: getBorderSizes\n * \n * Returns the size of the border and padding on all four sides of the\n * container. The left, top, right and bottom borders are stored in the x, y,\n * width and height of the returned <mxRectangle>, respectively.\n */\nmxGraph.prototype.getBorderSizes = function()\n{\n\tvar css = mxUtils.getCurrentStyle(this.container);\n\t\n\treturn new mxRectangle(mxUtils.parseCssNumber(css.paddingLeft) +\n\t\t\t((css.borderLeftStyle != 'none') ? mxUtils.parseCssNumber(css.borderLeftWidth) : 0),\n\t\tmxUtils.parseCssNumber(css.paddingTop) +\n\t\t\t((css.borderTopStyle != 'none') ? mxUtils.parseCssNumber(css.borderTopWidth) : 0),\n\t\tmxUtils.parseCssNumber(css.paddingRight) +\n\t\t\t((css.borderRightStyle != 'none') ? mxUtils.parseCssNumber(css.borderRightWidth) : 0),\n\t\tmxUtils.parseCssNumber(css.paddingBottom) +\n\t\t\t((css.borderBottomStyle != 'none') ? mxUtils.parseCssNumber(css.borderBottomWidth) : 0));\n};\n\n/**\n * Function: getPreferredPageSize\n * \n * Returns the preferred size of the background page if <preferPageSize> is true.\n */\nmxGraph.prototype.getPreferredPageSize = function(bounds, width, height)\n{\n\tvar scale = this.view.scale;\n\tvar tr = this.view.translate;\n\tvar fmt = this.pageFormat;\n\tvar ps = this.pageScale;\n\tvar page = new mxRectangle(0, 0, Math.ceil(fmt.width * ps), Math.ceil(fmt.height * ps));\n\t\n\tvar hCount = (this.pageBreaksVisible) ? Math.ceil(width / page.width) : 1;\n\tvar vCount = (this.pageBreaksVisible) ? Math.ceil(height / page.height) : 1;\n\t\n\treturn new mxRectangle(0, 0, hCount * page.width + 2 + tr.x, vCount * page.height + 2 + tr.y);\n};\n\n/**\n * Function: fit\n *\n * Scales the graph such that the complete diagram fits into <container> and\n * returns the current scale in the view. To fit an initial graph prior to\n * rendering, set <mxGraphView.rendering> to false prior to changing the model\n * and execute the following after changing the model.\n * \n * (code)\n * graph.fit();\n * graph.view.rendering = true;\n * graph.refresh();\n * (end)\n * \n * To fit and center the graph, the following code can be used.\n * \n * (code)\n * var margin = 2;\n * var max = 3;\n * \n * var bounds = graph.getGraphBounds();\n * var cw = graph.container.clientWidth - margin;\n * var ch = graph.container.clientHeight - margin;\n * var w = bounds.width / graph.view.scale;\n * var h = bounds.height / graph.view.scale;\n * var s = Math.min(max, Math.min(cw / w, ch / h));\n * \n * graph.view.scaleAndTranslate(s,\n *   (margin + cw - w * s) / (2 * s) - bounds.x / graph.view.scale,\n *   (margin + ch - h * s) / (2 * s) - bounds.y / graph.view.scale);\n * (end)\n * \n * Parameters:\n * \n * border - Optional number that specifies the border. Default is <border>.\n * keepOrigin - Optional boolean that specifies if the translate should be\n * changed. Default is false.\n * margin - Optional margin in pixels. Default is 0.\n * enabled - Optional boolean that specifies if the scale should be set or\n * just returned. Default is true.\n * ignoreWidth - Optional boolean that specifies if the width should be\n * ignored. Default is false.\n * ignoreHeight - Optional boolean that specifies if the height should be\n * ignored. Default is false.\n * maxHeight - Optional maximum height.\n */\nmxGraph.prototype.fit = function(border, keepOrigin, margin, enabled, ignoreWidth, ignoreHeight, maxHeight)\n{\n\tif (this.container != null)\n\t{\n\t\tborder = (border != null) ? border : this.getBorder();\n\t\tkeepOrigin = (keepOrigin != null) ? keepOrigin : false;\n\t\tmargin = (margin != null) ? margin : 0;\n\t\tenabled = (enabled != null) ? enabled : true;\n\t\tignoreWidth = (ignoreWidth != null) ? ignoreWidth : false;\n\t\tignoreHeight = (ignoreHeight != null) ? ignoreHeight : false;\n\t\t\n\t\t// Adds spacing and border from css\n\t\tvar cssBorder = this.getBorderSizes();\n\t\tvar w1 = this.container.offsetWidth - cssBorder.x - cssBorder.width - 1;\n\t\tvar h1 = (maxHeight != null) ? maxHeight : this.container.offsetHeight - cssBorder.y - cssBorder.height - 1;\n\t\tvar bounds = this.view.getGraphBounds();\n\t\t\n\t\tif (bounds.width > 0 && bounds.height > 0)\n\t\t{\n\t\t\tif (keepOrigin && bounds.x != null && bounds.y != null)\n\t\t\t{\n\t\t\t\tbounds = bounds.clone();\n\t\t\t\tbounds.width += bounds.x;\n\t\t\t\tbounds.height += bounds.y;\n\t\t\t\tbounds.x = 0;\n\t\t\t\tbounds.y = 0;\n\t\t\t}\n\t\t\t\n\t\t\t// LATER: Use unscaled bounding boxes to fix rounding errors\n\t\t\tvar s = this.view.scale;\n\t\t\tvar w2 = bounds.width / s;\n\t\t\tvar h2 = bounds.height / s;\n\t\t\t\n\t\t\t// Fits to the size of the background image if required\n\t\t\tif (this.backgroundImage != null)\n\t\t\t{\n\t\t\t\tw2 = Math.max(w2, this.backgroundImage.width - bounds.x / s);\n\t\t\t\th2 = Math.max(h2, this.backgroundImage.height - bounds.y / s);\n\t\t\t}\n\t\t\t\n\t\t\tvar b = ((keepOrigin) ? border : 2 * border) + margin + 1;\n\n\t\t\tw1 -= b;\n\t\t\th1 -= b;\n\t\t\t\n\t\t\tvar s2 = (((ignoreWidth) ? h1 / h2 : (ignoreHeight) ? w1 / w2 :\n\t\t\t\tMath.min(w1 / w2, h1 / h2)));\n\t\t\t\n\t\t\tif (this.minFitScale != null)\n\t\t\t{\n\t\t\t\ts2 = Math.max(s2, this.minFitScale);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.maxFitScale != null)\n\t\t\t{\n\t\t\t\ts2 = Math.min(s2, this.maxFitScale);\n\t\t\t}\n\t\n\t\t\tif (enabled)\n\t\t\t{\n\t\t\t\tif (!keepOrigin)\n\t\t\t\t{\n\t\t\t\t\tif (!mxUtils.hasScrollbars(this.container))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar x0 = (bounds.x != null) ? Math.floor(this.view.translate.x - bounds.x / s + border / s2 + margin / 2) : border;\n\t\t\t\t\t\tvar y0 = (bounds.y != null) ? Math.floor(this.view.translate.y - bounds.y / s + border / s2 + margin / 2) : border;\n\n\t\t\t\t\t\tthis.view.scaleAndTranslate(s2, x0, y0);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.view.setScale(s2);\n\t\t\t\t\t\tvar b2 = this.getGraphBounds();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (b2.x != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.container.scrollLeft = b2.x;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (b2.y != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.container.scrollTop = b2.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.view.scale != s2)\n\t\t\t\t{\n\t\t\t\t\tthis.view.setScale(s2);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn s2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.view.scale;\n};\n\n/**\n * Function: sizeDidChange\n * \n * Called when the size of the graph has changed. This implementation fires\n * a <size> event after updating the clipping region of the SVG element in\n * SVG-bases browsers.\n */\nmxGraph.prototype.sizeDidChange = function()\n{\n\tvar bounds = this.getGraphBounds();\n\t\n\tif (this.container != null)\n\t{\n\t\tvar border = this.getBorder();\n\t\t\n\t\tvar width = Math.max(0, bounds.x) + bounds.width + 2 * border;\n\t\tvar height = Math.max(0, bounds.y) + bounds.height + 2 * border;\n\t\t\n\t\tif (this.minimumContainerSize != null)\n\t\t{\n\t\t\twidth = Math.max(width, this.minimumContainerSize.width);\n\t\t\theight = Math.max(height, this.minimumContainerSize.height);\n\t\t}\n\n\t\tif (this.resizeContainer)\n\t\t{\n\t\t\tthis.doResizeContainer(width, height);\n\t\t}\n\n\t\tif (this.preferPageSize || (!mxClient.IS_IE && this.pageVisible))\n\t\t{\n\t\t\tvar size = this.getPreferredPageSize(bounds, Math.max(1, width), Math.max(1, height));\n\t\t\t\n\t\t\tif (size != null)\n\t\t\t{\n\t\t\t\twidth = size.width * this.view.scale;\n\t\t\t\theight = size.height * this.view.scale;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.minimumGraphSize != null)\n\t\t{\n\t\t\twidth = Math.max(width, this.minimumGraphSize.width * this.view.scale);\n\t\t\theight = Math.max(height, this.minimumGraphSize.height * this.view.scale);\n\t\t}\n\n\t\twidth = Math.ceil(width);\n\t\theight = Math.ceil(height);\n\n\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\tvar root = this.view.getDrawPane().ownerSVGElement;\n\t\t\t\n\t\t\tif (root != null)\n\t\t\t{\n\t\t\t\troot.style.minWidth = Math.max(1, width) + 'px';\n\t\t\t\troot.style.minHeight = Math.max(1, height) + 'px';\n\t\t\t\troot.style.width = '100%';\n\t\t\t\troot.style.height = '100%';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (mxClient.IS_QUIRKS)\n\t\t\t{\n\t\t\t\t// Quirks mode does not support minWidth/-Height\n\t\t\t\tthis.view.updateHtmlCanvasSize(Math.max(1, width), Math.max(1, height));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.view.canvas.style.minWidth = Math.max(1, width) + 'px';\n\t\t\t\tthis.view.canvas.style.minHeight = Math.max(1, height) + 'px';\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.updatePageBreaks(this.pageBreaksVisible, width, height);\n\t}\n\n\tthis.fireEvent(new mxEventObject(mxEvent.SIZE, 'bounds', bounds));\n};\n\n/**\n * Function: doResizeContainer\n * \n * Resizes the container for the given graph width and height.\n */\nmxGraph.prototype.doResizeContainer = function(width, height)\n{\n\tif (this.maximumContainerSize != null)\n\t{\n\t\twidth = Math.min(this.maximumContainerSize.width, width);\n\t\theight = Math.min(this.maximumContainerSize.height, height);\n\t}\n\n\tthis.container.style.width = Math.ceil(width) + 'px';\n\tthis.container.style.height = Math.ceil(height) + 'px';\n};\n\n/**\n * Function: updatePageBreaks\n * \n * Invokes from <sizeDidChange> to redraw the page breaks.\n * \n * Parameters:\n * \n * visible - Boolean that specifies if page breaks should be shown.\n * width - Specifies the width of the container in pixels.\n * height - Specifies the height of the container in pixels.\n */\nmxGraph.prototype.updatePageBreaks = function(visible, width, height)\n{\n\tvar scale = this.view.scale;\n\tvar tr = this.view.translate;\n\tvar fmt = this.pageFormat;\n\tvar ps = scale * this.pageScale;\n\tvar bounds = new mxRectangle(0, 0, fmt.width * ps, fmt.height * ps);\n\n\tvar gb = mxRectangle.fromRectangle(this.getGraphBounds());\n\tgb.width = Math.max(1, gb.width);\n\tgb.height = Math.max(1, gb.height);\n\t\n\tbounds.x = Math.floor((gb.x - tr.x * scale) / bounds.width) * bounds.width + tr.x * scale;\n\tbounds.y = Math.floor((gb.y - tr.y * scale) / bounds.height) * bounds.height + tr.y * scale;\n\t\n\tgb.width = Math.ceil((gb.width + (gb.x - bounds.x)) / bounds.width) * bounds.width;\n\tgb.height = Math.ceil((gb.height + (gb.y - bounds.y)) / bounds.height) * bounds.height;\n\t\n\t// Does not show page breaks if the scale is too small\n\tvisible = visible && Math.min(bounds.width, bounds.height) > this.minPageBreakDist;\n\n\tvar horizontalCount = (visible) ? Math.ceil(gb.height / bounds.height) + 1 : 0;\n\tvar verticalCount = (visible) ? Math.ceil(gb.width / bounds.width) + 1 : 0;\n\tvar right = (verticalCount - 1) * bounds.width;\n\tvar bottom = (horizontalCount - 1) * bounds.height;\n\t\n\tif (this.horizontalPageBreaks == null && horizontalCount > 0)\n\t{\n\t\tthis.horizontalPageBreaks = [];\n\t}\n\n\tif (this.verticalPageBreaks == null && verticalCount > 0)\n\t{\n\t\tthis.verticalPageBreaks = [];\n\t}\n\t\n\tvar drawPageBreaks = mxUtils.bind(this, function(breaks)\n\t{\n\t\tif (breaks != null)\n\t\t{\n\t\t\tvar count = (breaks == this.horizontalPageBreaks) ? horizontalCount : verticalCount; \n\t\t\t\n\t\t\tfor (var i = 0; i <= count; i++)\n\t\t\t{\n\t\t\t\tvar pts = (breaks == this.horizontalPageBreaks) ?\n\t\t\t\t\t[new mxPoint(Math.round(bounds.x), Math.round(bounds.y + i * bounds.height)),\n\t\t\t         new mxPoint(Math.round(bounds.x + right), Math.round(bounds.y + i * bounds.height))] :\n\t\t\t        [new mxPoint(Math.round(bounds.x + i * bounds.width), Math.round(bounds.y)),\n\t\t\t         new mxPoint(Math.round(bounds.x + i * bounds.width), Math.round(bounds.y + bottom))];\n\n\t\t\t\tif (breaks[i] != null)\n\t\t\t\t{\n\t\t\t\t\tbreaks[i].points = pts;\n\t\t\t\t\tbreaks[i].redraw();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar pageBreak = new mxPolyline(pts, this.pageBreakColor);\n\t\t\t\t\tpageBreak.dialect = this.dialect;\n\t\t\t\t\tpageBreak.pointerEvents = false;\n\t\t\t\t\tpageBreak.isDashed = this.pageBreakDashed;\n\t\t\t\t\tpageBreak.init(this.view.backgroundPane);\n\t\t\t\t\tpageBreak.redraw();\n\t\t\t\t\t\n\t\t\t\t\tbreaks[i] = pageBreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = count; i < breaks.length; i++)\n\t\t\t{\n\t\t\t\tbreaks[i].destroy();\n\t\t\t}\n\t\t\t\n\t\t\tbreaks.splice(count, breaks.length - count);\n\t\t}\n\t});\n\t\n\tdrawPageBreaks(this.horizontalPageBreaks);\n\tdrawPageBreaks(this.verticalPageBreaks);\n};\n\n/**\n * Group: Cell styles\n */\n\n/**\n * Function: getCurrentCellStyle\n * \n * Returns the style for the given cell from the cell state, if one exists,\n * or using <getCellStyle>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose style should be returned as an array.\n * ignoreState - Optional boolean that specifies if the cell state should be ignored.\n */\nmxGraph.prototype.getCurrentCellStyle = function(cell, ignoreState)\n{\n\tvar state = (ignoreState) ? null : this.view.getState(cell);\n\t\n\treturn (state != null) ? state.style : this.getCellStyle(cell);\n};\n\n/**\n * Function: getCellStyle\n * \n * Returns an array of key, value pairs representing the cell style for the\n * given cell. If no string is defined in the model that specifies the\n * style, then the default style for the cell is returned or an empty object,\n * if no style can be found. Note: You should try and get the cell state\n * for the given cell and use the cached style in the state before using\n * this method.\n * \n * Parameters:\n * \n * cell - <mxCell> whose style should be returned as an array.\n */\nmxGraph.prototype.getCellStyle = function(cell)\n{\n\tvar stylename = this.model.getStyle(cell);\n\tvar style = null;\n\t\n\t// Gets the default style for the cell\n\tif (this.model.isEdge(cell))\n\t{\n\t\tstyle = this.stylesheet.getDefaultEdgeStyle();\n\t}\n\telse\n\t{\n\t\tstyle = this.stylesheet.getDefaultVertexStyle();\n\t}\n\t\n\t// Resolves the stylename using the above as the default\n\tif (stylename != null)\n\t{\n\t\tstyle = this.postProcessCellStyle(this.stylesheet.getCellStyle(stylename, style));\n\t}\n\t\n\t// Returns a non-null value if no style can be found\n\tif (style == null)\n\t{\n\t\tstyle = new Object();\n\t}\n\t\n\treturn style;\n};\n\n/**\n * Function: postProcessCellStyle\n * \n * Tries to resolve the value for the image style in the image bundles and\n * turns short data URIs as defined in mxImageBundle to data URIs as\n * defined in RFC 2397 of the IETF.\n */\nmxGraph.prototype.postProcessCellStyle = function(style)\n{\n\tif (style != null)\n\t{\n\t\tvar key = style[mxConstants.STYLE_IMAGE];\n\t\tvar image = this.getImageFromBundles(key);\n\n\t\tif (image != null)\n\t\t{\n\t\t\tstyle[mxConstants.STYLE_IMAGE] = image;\n\t\t}\n\t\telse\n\t\t{\n\t\t\timage = key;\n\t\t}\n\t\t\n\t\t// Converts short data uris to normal data uris\n\t\tif (image != null && image.substring(0, 11) == 'data:image/')\n\t\t{\n\t\t\tif (image.substring(0, 20) == 'data:image/svg+xml,<')\n\t\t\t{\n\t\t\t\t// Required for FF and IE11\n\t\t\t\timage = image.substring(0, 19) + encodeURIComponent(image.substring(19));\n\t\t\t}\n\t\t\telse if (image.substring(0, 22) != 'data:image/svg+xml,%3C')\n\t\t\t{\n\t\t\t\tvar comma = image.indexOf(',');\n\t\t\t\t\n\t\t\t\t// Adds base64 encoding prefix if needed\n\t\t\t\tif (comma > 0 && image.substring(comma - 7, comma + 1) != ';base64,')\n\t\t\t\t{\n\t\t\t\t\timage = image.substring(0, comma) + ';base64,'\n\t\t\t\t\t\t+ image.substring(comma + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tstyle[mxConstants.STYLE_IMAGE] = image;\n\t\t}\n\t}\n\n\treturn style;\n};\n\n/**\n * Function: setCellStyle\n * \n * Sets the style of the specified cells. If no cells are given, then the\n * selection cells are changed.\n * \n * Parameters:\n * \n * style - String representing the new style of the cells.\n * cells - Optional array of <mxCells> to set the style for. Default is the\n * selection cells.\n */\nmxGraph.prototype.setCellStyle = function(style, cells)\n{\n\tcells = cells || this.getSelectionCells();\n\t\n\tif (cells != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tthis.model.setStyle(cells[i], style);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: toggleCellStyle\n * \n * Toggles the boolean value for the given key in the style of the given cell\n * and returns the new value as 0 or 1. If no cell is specified then the\n * selection cell is used.\n * \n * Parameter:\n * \n * key - String representing the key for the boolean value to be toggled.\n * defaultValue - Optional boolean default value if no value is defined.\n * Default is false.\n * cell - Optional <mxCell> whose style should be modified. Default is\n * the selection cell.\n */\nmxGraph.prototype.toggleCellStyle = function(key, defaultValue, cell)\n{\n\tcell = cell || this.getSelectionCell();\n\t\n\treturn this.toggleCellStyles(key, defaultValue, [cell]);\n};\n\n/**\n * Function: toggleCellStyles\n * \n * Toggles the boolean value for the given key in the style of the given cells\n * and returns the new value as 0 or 1. If no cells are specified, then the\n * selection cells are used. For example, this can be used to toggle\n * <mxConstants.STYLE_ROUNDED> or any other style with a boolean value.\n * \n * Parameter:\n * \n * key - String representing the key for the boolean value to be toggled.\n * defaultValue - Optional boolean default value if no value is defined.\n * Default is false.\n * cells - Optional array of <mxCells> whose styles should be modified.\n * Default is the selection cells.\n */\nmxGraph.prototype.toggleCellStyles = function(key, defaultValue, cells)\n{\n\tdefaultValue = (defaultValue != null) ? defaultValue : false;\n\tcells = cells || this.getSelectionCells();\n\tvar value = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar style = this.getCurrentCellStyle(cells[0]);\n\t\tvalue = (mxUtils.getValue(style, key, defaultValue)) ? 0 : 1;\n\t\tthis.setCellStyles(key, value, cells);\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: setCellStyles\n * \n * Sets the key to value in the styles of the given cells. This will modify\n * the existing cell styles in-place and override any existing assignment\n * for the given key. If no cells are specified, then the selection cells\n * are changed. If no value is specified, then the respective key is\n * removed from the styles.\n * \n * Parameters:\n * \n * key - String representing the key to be assigned.\n * value - String representing the new value for the key.\n * cells - Optional array of <mxCells> to change the style for. Default is\n * the selection cells.\n */\nmxGraph.prototype.setCellStyles = function(key, value, cells)\n{\n\tcells = cells || this.getSelectionCells();\n\tmxUtils.setCellStyles(this.model, cells, key, value);\n};\n\n/**\n * Function: toggleCellStyleFlags\n * \n * Toggles the given bit for the given key in the styles of the specified\n * cells.\n * \n * Parameters:\n * \n * key - String representing the key to toggle the flag in.\n * flag - Integer that represents the bit to be toggled.\n * cells - Optional array of <mxCells> to change the style for. Default is\n * the selection cells.\n */\nmxGraph.prototype.toggleCellStyleFlags = function(key, flag, cells)\n{\n\tthis.setCellStyleFlags(key, flag, null, cells);\n};\n\n/**\n * Function: setCellStyleFlags\n * \n * Sets or toggles the given bit for the given key in the styles of the\n * specified cells.\n * \n * Parameters:\n * \n * key - String representing the key to toggle the flag in.\n * flag - Integer that represents the bit to be toggled.\n * value - Boolean value to be used or null if the value should be toggled.\n * cells - Optional array of <mxCells> to change the style for. Default is\n * the selection cells.\n */\nmxGraph.prototype.setCellStyleFlags = function(key, flag, value, cells)\n{\n\tcells = cells || this.getSelectionCells();\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tif (value == null)\n\t\t{\n\t\t\tvar style = this.getCurrentCellStyle(cells[0]);\n\t\t\tvar current = parseInt(style[key] || 0);\n\t\t\tvalue = !((current & flag) == flag);\n\t\t}\n\n\t\tmxUtils.setCellStyleFlags(this.model, cells, key, flag, value);\n\t}\n};\n\n/**\n * Group: Cell alignment and orientation\n */\n\n/**\n * Function: alignCells\n * \n * Aligns the given cells vertically or horizontally according to the given\n * alignment using the optional parameter as the coordinate.\n * \n * Parameters:\n * \n * align - Specifies the alignment. Possible values are all constants in\n * mxConstants with an ALIGN prefix.\n * cells - Array of <mxCells> to be aligned.\n * param - Optional coordinate for the alignment.\n */\nmxGraph.prototype.alignCells = function(align, cells, param)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\t\n\tif (cells != null && cells.length > 1)\n\t{\n\t\t// Finds the required coordinate for the alignment\n\t\tif (param == null)\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\n\t\t\t\tif (state != null && !this.model.isEdge(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tif (param == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.x + state.width / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.x + state.width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_TOP)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_MIDDLE)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.y + state.height / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_BOTTOM)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.y + state.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.x;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (align == mxConstants.ALIGN_RIGHT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.max(param, state.x + state.width);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_TOP)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.min(param, state.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_BOTTOM)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.max(param, state.y + state.height);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.min(param, state.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Aligns the cells to the coordinate\n\t\tif (param != null)\n\t\t{\n\t\t\tvar s = this.view.scale;\n\n\t\t\tthis.model.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (geo != null && !this.model.isEdge(cells[i]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x += (param - state.x - state.width / 2) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x += (param - state.x - state.width) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_TOP)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.y += (param - state.y) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_MIDDLE)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.y += (param - state.y - state.height / 2) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_BOTTOM)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.y += (param - state.y - state.height) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x += (param - state.x) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.resizeCell(cells[i], geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ALIGN_CELLS,\n\t\t\t\t\t\t'align', align, 'cells', cells));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tthis.model.endUpdate();\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn cells;\n};\n\n/**\n * Function: flipEdge\n * \n * Toggles the style of the given edge between null (or empty) and\n * <alternateEdgeStyle>. This method fires <mxEvent.FLIP_EDGE> while the\n * transaction is in progress. Returns the edge that was flipped.\n * \n * Here is an example that overrides this implementation to invert the\n * value of <mxConstants.STYLE_ELBOW> without removing any existing styles.\n * \n * (code)\n * graph.flipEdge = function(edge)\n * {\n *   if (edge != null)\n *   {\n *     var style = this.getCurrentCellStyle(edge);\n *     var elbow = mxUtils.getValue(style, mxConstants.STYLE_ELBOW,\n *         mxConstants.ELBOW_HORIZONTAL);\n *     var value = (elbow == mxConstants.ELBOW_HORIZONTAL) ?\n *         mxConstants.ELBOW_VERTICAL : mxConstants.ELBOW_HORIZONTAL;\n *     this.setCellStyles(mxConstants.STYLE_ELBOW, value, [edge]);\n *   }\n * };\n * (end)\n * \n * Parameters:\n * \n * edge - <mxCell> whose style should be changed.\n */\nmxGraph.prototype.flipEdge = function(edge)\n{\n\tif (edge != null &&\n\t\tthis.alternateEdgeStyle != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar style = this.model.getStyle(edge);\n\n\t\t\tif (style == null || style.length == 0)\n\t\t\t{\n\t\t\t\tthis.model.setStyle(edge, this.alternateEdgeStyle);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.model.setStyle(edge, null);\n\t\t\t}\n\n\t\t\t// Removes all existing control points\n\t\t\tthis.resetEdge(edge);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.FLIP_EDGE, 'edge', edge));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\n\treturn edge;\n};\n\n/**\n * Function: addImageBundle\n *\n * Adds the specified <mxImageBundle>.\n */\nmxGraph.prototype.addImageBundle = function(bundle)\n{\n\tthis.imageBundles.push(bundle);\n};\n\n/**\n * Function: removeImageBundle\n * \n * Removes the specified <mxImageBundle>.\n */\nmxGraph.prototype.removeImageBundle = function(bundle)\n{\n\tvar tmp = [];\n\t\n\tfor (var i = 0; i < this.imageBundles.length; i++)\n\t{\n\t\tif (this.imageBundles[i] != bundle)\n\t\t{\n\t\t\ttmp.push(this.imageBundles[i]);\n\t\t}\n\t}\n\t\n\tthis.imageBundles = tmp;\n};\n\n/**\n * Function: getImageFromBundles\n *\n * Searches all <imageBundles> for the specified key and returns the value\n * for the first match or null if the key is not found.\n */\nmxGraph.prototype.getImageFromBundles = function(key)\n{\n\tif (key != null)\n\t{\n\t\tfor (var i = 0; i < this.imageBundles.length; i++)\n\t\t{\n\t\t\tvar image = this.imageBundles[i].getImage(key);\n\t\t\t\n\t\t\tif (image != null)\n\t\t\t{\n\t\t\t\treturn image;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Group: Order\n */\n\n/**\n * Function: orderCells\n * \n * Moves the given cells to the front or back. The change is carried out\n * using <cellsOrdered>. This method fires <mxEvent.ORDER_CELLS> while the\n * transaction is in progress.\n * \n * Parameters:\n * \n * back - Boolean that specifies if the cells should be moved to back.\n * cells - Array of <mxCells> to move to the background. If null is\n * specified then the selection cells are used.\n */\nmxGraph.prototype.orderCells = function(back, cells)\n{\n\tif (cells == null)\n\t{\n\t\tcells = mxUtils.sortCells(this.getSelectionCells(), true);\n\t}\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsOrdered(cells, back);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ORDER_CELLS,\n\t\t\t\t'back', back, 'cells', cells));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsOrdered\n * \n * Moves the given cells to the front or back. This method fires\n * <mxEvent.CELLS_ORDERED> while the transaction is in progress.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose order should be changed.\n * back - Boolean that specifies if the cells should be moved to back.\n */\nmxGraph.prototype.cellsOrdered = function(cells, back)\n{\n\tif (cells != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\n\t\t\t\tif (back)\n\t\t\t\t{\n\t\t\t\t\tthis.model.add(parent, cells[i], i);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.model.add(parent, cells[i],\n\t\t\t\t\t\t\tthis.model.getChildCount(parent) - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_ORDERED,\n\t\t\t\t\t'back', back, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Group: Grouping\n */\n\n/**\n * Function: groupCells\n * \n * Adds the cells into the given group. The change is carried out using\n * <cellsAdded>, <cellsMoved> and <cellsResized>. This method fires\n * <mxEvent.GROUP_CELLS> while the transaction is in progress. Returns the\n * new group. A group is only created if there is at least one entry in the\n * given array of cells.\n * \n * Parameters:\n * \n * group - <mxCell> that represents the target group. If null is specified\n * then a new group is created using <createGroupCell>.\n * border - Optional integer that specifies the border between the child\n * area and the group bounds. Default is 0.\n * cells - Optional array of <mxCells> to be grouped. If null is specified\n * then the selection cells are used.\n */\nmxGraph.prototype.groupCells = function(group, border, cells)\n{\n\tif (cells == null)\n\t{\n\t\tcells = mxUtils.sortCells(this.getSelectionCells(), true);\n\t}\n\n\tcells = this.getCellsForGroup(cells);\n\n\tif (group == null)\n\t{\n\t\tgroup = this.createGroupCell(cells);\n\t}\n\n\tvar bounds = this.getBoundsForGroup(group, cells, border);\n\n\tif (cells.length > 1 && bounds != null)\n\t{\n\t\t// Uses parent of group or previous parent of first child\n\t\tvar parent = this.model.getParent(group);\n\t\t\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.model.getParent(cells[0]);\n\t\t}\n\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Checks if the group has a geometry and\n\t\t\t// creates one if one does not exist\n\t\t\tif (this.getCellGeometry(group) == null)\n\t\t\t{\n\t\t\t\tthis.model.setGeometry(group, new mxGeometry());\n\t\t\t}\n\n\t\t\t// Adds the group into the parent\n\t\t\tvar index = this.model.getChildCount(parent);\n\t\t\tthis.cellsAdded([group], parent, index, null, null, false, false, false);\n\n\t\t\t// Adds the children into the group and moves\n\t\t\tindex = this.model.getChildCount(group);\n\t\t\tthis.cellsAdded(cells, group, index, null, null, false, false, false);\n\t\t\tthis.cellsMoved(cells, -bounds.x, -bounds.y, false, false, false);\n\n\t\t\t// Resizes the group\n\t\t\tthis.cellsResized([group], [bounds], false);\n\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.GROUP_CELLS,\n\t\t\t\t\t'group', group, 'border', border, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\n\treturn group;\n};\n\n/**\n * Function: getCellsForGroup\n * \n * Returns the cells with the same parent as the first cell\n * in the given array.\n */\nmxGraph.prototype.getCellsForGroup = function(cells)\n{\n\tvar result = [];\n\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar parent = this.model.getParent(cells[0]);\n\t\tresult.push(cells[0]);\n\n\t\t// Filters selection cells with the same parent\n\t\tfor (var i = 1; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.model.getParent(cells[i]) == parent)\n\t\t\t{\n\t\t\t\tresult.push(cells[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getBoundsForGroup\n * \n * Returns the bounds to be used for the given group and children.\n */\nmxGraph.prototype.getBoundsForGroup = function(group, children, border)\n{\n\tvar result = this.getBoundingBoxFromGeometry(children, true);\n\t\n\tif (result != null)\n\t{\n\t\tif (this.isSwimlane(group))\n\t\t{\n\t\t\tvar size = this.getStartSize(group);\n\t\t\t\n\t\t\tresult.x -= size.width;\n\t\t\tresult.y -= size.height;\n\t\t\tresult.width += size.width;\n\t\t\tresult.height += size.height;\n\t\t}\n\t\t\n\t\t// Adds the border\n\t\tif (border != null)\n\t\t{\n\t\t\tresult.x -= border;\n\t\t\tresult.y -= border;\n\t\t\tresult.width += 2 * border;\n\t\t\tresult.height += 2 * border;\n\t\t}\n\t}\t\t\t\n\t\n\treturn result;\n};\n\n/**\n * Function: createGroupCell\n * \n * Hook for creating the group cell to hold the given array of <mxCells> if\n * no group cell was given to the <group> function.\n * \n * The following code can be used to set the style of new group cells.\n * \n * (code)\n * var graphCreateGroupCell = graph.createGroupCell;\n * graph.createGroupCell = function(cells)\n * {\n *   var group = graphCreateGroupCell.apply(this, arguments);\n *   group.setStyle('group');\n *   \n *   return group;\n * };\n */\nmxGraph.prototype.createGroupCell = function(cells)\n{\n\tvar group = new mxCell('');\n\tgroup.setVertex(true);\n\tgroup.setConnectable(false);\n\t\n\treturn group;\n};\n\n/**\n * Function: ungroupCells\n * \n * Ungroups the given cells by moving the children the children to their\n * parents parent and removing the empty groups. Returns the children that\n * have been removed from the groups.\n * \n * Parameters:\n * \n * cells - Array of cells to be ungrouped. If null is specified then the\n * selection cells are used.\n */\nmxGraph.prototype.ungroupCells = function(cells)\n{\n\tvar result = [];\n\t\n\tif (cells == null)\n\t{\n\t\tcells = this.getCellsForUngroup();\n\t}\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar children = this.model.getChildren(cells[i]);\n\t\t\t\t\n\t\t\t\tif (children != null && children.length > 0)\n\t\t\t\t{\n\t\t\t\t\tchildren = children.slice();\n\t\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\t\t\t\t\tvar index = this.model.getChildCount(parent);\n\n\t\t\t\t\tthis.cellsAdded(children, parent, index, null, null, true);\n\t\t\t\t\tresult = result.concat(children);\n\t\t\t\t\t\n\t\t\t\t\t// Fix relative child cells\n\t\t\t\t\tfor (var j = 0; j < children.length; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar state = this.view.getState(children[j]);\n\t\t\t\t\t\tvar geo = this.getCellGeometry(children[j]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (state != null && geo != null && geo.relative)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\tgeo.x = state.origin.x;\n\t\t\t\t\t\t\tgeo.y = state.origin.y;\n\t\t\t\t\t\t\tgeo.relative = false;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.model.setGeometry(children[j], geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.removeCellsAfterUngroup(cells);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.UNGROUP_CELLS, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getCellsForUngroup\n * \n * Returns the selection cells that can be ungrouped.\n */\nmxGraph.prototype.getCellsForUngroup = function()\n{\n\tvar cells = this.getSelectionCells();\n\n\t// Finds the cells with children\n\tvar tmp = [];\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tif (this.model.isVertex(cells[i]) &&\n\t\t\tthis.model.getChildCount(cells[i]) > 0)\n\t\t{\n\t\t\ttmp.push(cells[i]);\n\t\t}\n\t}\n\n\treturn tmp;\n};\n\n/**\n * Function: removeCellsAfterUngroup\n * \n * Hook to remove the groups after <ungroupCells>.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> that were ungrouped.\n */\nmxGraph.prototype.removeCellsAfterUngroup = function(cells)\n{\n\tthis.cellsRemoved(this.addAllEdges(cells));\n};\n\n/**\n * Function: removeCellsFromParent\n * \n * Removes the specified cells from their parents and adds them to the\n * default parent. Returns the cells that were removed from their parents.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be removed from their parents.\n */\nmxGraph.prototype.removeCellsFromParent = function(cells)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\t\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tvar parent = this.getDefaultParent();\n\t\tvar index = this.model.getChildCount(parent);\n\n\t\tthis.cellsAdded(cells, parent, index, null, null, true);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_CELLS_FROM_PARENT, 'cells', cells));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: updateGroupBounds\n * \n * Updates the bounds of the given groups to include all children and returns\n * the passed-in cells. Call this with the groups in parent to child order,\n * top-most group first, the cells are processed in reverse order and cells\n * with no children are ignored.\n * \n * Parameters:\n * \n * cells - The groups whose bounds should be updated. If this is null, then\n * the selection cells are used.\n * border - Optional border to be added in the group. Default is 0.\n * moveGroup - Optional boolean that allows the group to be moved. Default\n * is false.\n * topBorder - Optional top border to be added in the group. Default is 0.\n * rightBorder - Optional top border to be added in the group. Default is 0.\n * bottomBorder - Optional top border to be added in the group. Default is 0.\n * leftBorder - Optional top border to be added in the group. Default is 0.\n */\nmxGraph.prototype.updateGroupBounds = function(cells, border, moveGroup, topBorder, rightBorder, bottomBorder, leftBorder)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\t\n\tborder = (border != null) ? border : 0;\n\tmoveGroup = (moveGroup != null) ? moveGroup : false;\n\ttopBorder = (topBorder != null) ? topBorder : 0;\n\trightBorder = (rightBorder != null) ? rightBorder : 0;\n\tbottomBorder = (bottomBorder != null) ? bottomBorder : 0;\n\tleftBorder = (leftBorder != null) ? leftBorder : 0;\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = cells.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar children = this.getChildCells(cells[i]);\n\t\t\t\t\n\t\t\t\tif (children != null && children.length > 0)\n\t\t\t\t{\n\t\t\t\t\tvar bounds = this.getBoundingBoxFromGeometry(children, true);\n\t\t\t\t\t\n\t\t\t\t\tif (bounds != null && bounds.width > 0 && bounds.height > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Adds the size of the title area for swimlanes\n\t\t\t\t\t\tvar size = (this.isSwimlane(cells[i])) ?\n\t\t\t\t\t\t\tthis.getActualStartSize(cells[i], true) : new mxRectangle();\n\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (moveGroup)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.x = Math.round(geo.x + bounds.x - border - size.x - leftBorder);\n\t\t\t\t\t\t\tgeo.y = Math.round(geo.y + bounds.y - border - size.y - topBorder);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tgeo.width = Math.round(bounds.width + 2 * border + size.x + leftBorder + rightBorder + size.width);\n\t\t\t\t\t\tgeo.height = Math.round(bounds.height + 2 * border + size.y + topBorder + bottomBorder + size.height);\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.model.setGeometry(cells[i], geo);\n\t\t\t\t\t\tthis.moveCells(children, border + size.x - bounds.x + leftBorder,\n\t\t\t\t\t\t\t\tborder + size.y - bounds.y + topBorder);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: getBoundingBox\n * \n * Returns the bounding box for the given array of <mxCells>. The bounding box for\n * each cell and its descendants is computed using <mxGraphView.getBoundingBox>.\n *\n * Parameters:\n *\n * cells - Array of <mxCells> whose bounding box should be returned.\n */\nmxGraph.prototype.getBoundingBox = function(cells)\n{\n\tvar result = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.model.isVertex(cells[i]) || this.model.isEdge(cells[i]))\n\t\t\t{\n\t\t\t\tvar bbox = this.view.getBoundingBox(this.view.getState(cells[i]), true);\n\t\t\t\n\t\t\t\tif (bbox != null)\n\t\t\t\t{\n\t\t\t\t\tif (result == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = mxRectangle.fromRectangle(bbox);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.add(bbox);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Group: Cell cloning, insertion and removal\n */\n\n/**\n * Function: cloneCell\n * \n * Returns the clone for the given cell. Uses <cloneCells>.\n * \n * Parameters:\n * \n * cell - <mxCell> to be cloned.\n * allowInvalidEdges - Optional boolean that specifies if invalid edges\n * should be cloned. Default is true.\n * mapping - Optional mapping for existing clones.\n * keepPosition - Optional boolean indicating if the position of the cells should\n * be updated to reflect the lost parent cell. Default is false.\n */\nmxGraph.prototype.cloneCell = function(cell, allowInvalidEdges, mapping, keepPosition)\n{\n\treturn this.cloneCells([cell], allowInvalidEdges, mapping, keepPosition)[0];\n};\n\n/**\n * Function: cloneCells\n * \n * Returns the clones for the given cells. The clones are created recursively\n * using <mxGraphModel.cloneCells>. If the terminal of an edge is not in the\n * given array, then the respective end is assigned a terminal point and the\n * terminal is removed.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be cloned.\n * allowInvalidEdges - Optional boolean that specifies if invalid edges\n * should be cloned. Default is true.\n * mapping - Optional mapping for existing clones.\n * keepPosition - Optional boolean indicating if the position of the cells should\n * be updated to reflect the lost parent cell. Default is false.\n */\nmxGraph.prototype.cloneCells = function(cells, allowInvalidEdges, mapping, keepPosition)\n{\n\tallowInvalidEdges = (allowInvalidEdges != null) ? allowInvalidEdges : true;\n\tvar clones = null;\n\t\n\tif (cells != null)\n\t{\n\t\t// Creates a dictionary for fast lookups\n\t\tvar dict = new mxDictionary();\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tdict.put(cells[i], true);\n\t\t\ttmp.push(cells[i]);\n\t\t}\n\t\t\n\t\tif (tmp.length > 0)\n\t\t{\n\t\t\tvar scale = this.view.scale;\n\t\t\tvar trans = this.view.translate;\n\t\t\tclones = this.model.cloneCells(cells, true, mapping);\n\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (!allowInvalidEdges && this.model.isEdge(clones[i]) &&\n\t\t\t\t\tthis.getEdgeValidationError(clones[i],\n\t\t\t\t\t\tthis.model.getTerminal(clones[i], true),\n\t\t\t\t\t\tthis.model.getTerminal(clones[i], false)) != null)\n\t\t\t\t{\n\t\t\t\t\tclones[i] = null;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar g = this.model.getGeometry(clones[i]);\n\t\t\t\t\t\n\t\t\t\t\tif (g != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\t\tvar pstate = this.view.getState(this.model.getParent(cells[i]));\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (state != null && pstate != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar dx = (keepPosition) ? 0 : pstate.origin.x;\n\t\t\t\t\t\t\tvar dy = (keepPosition) ? 0 : pstate.origin.y;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (this.model.isEdge(clones[i]))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar pts = state.absolutePoints;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (pts != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t// Checks if the source is cloned or sets the terminal point\n\t\t\t\t\t\t\t\t\tvar src = this.model.getTerminal(cells[i], true);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\twhile (src != null && !dict.get(src))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tsrc = this.model.getParent(src);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (src == null && pts[0] != null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tg.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[0].x / scale - trans.x,\n\t\t\t\t\t\t\t\t\t\t\t\tpts[0].y / scale - trans.y), true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// Checks if the target is cloned or sets the terminal point\n\t\t\t\t\t\t\t\t\tvar trg = this.model.getTerminal(cells[i], false);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\twhile (trg != null && !dict.get(trg))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttrg = this.model.getParent(trg);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tvar n = pts.length - 1;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (trg == null && pts[n] != null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tg.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[n].x / scale - trans.x,\n\t\t\t\t\t\t\t\t\t\t\t\tpts[n].y / scale - trans.y), false);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// Translates the control points\n\t\t\t\t\t\t\t\t\tvar points = g.points;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (points != null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfor (var j = 0; j < points.length; j++)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tpoints[j].x += dx;\n\t\t\t\t\t\t\t\t\t\t\tpoints[j].y += dy;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tg.translate(dx, dy);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tclones = [];\n\t\t}\n\t}\n\t\n\treturn clones;\n};\n\n/**\n * Function: insertVertex\n * \n * Adds a new vertex into the given parent <mxCell> using value as the user\n * object and the given coordinates as the <mxGeometry> of the new vertex.\n * The id and style are used for the respective properties of the new\n * <mxCell>, which is returned.\n *\n * When adding new vertices from a mouse event, one should take into\n * account the offset of the graph container and the scale and translation\n * of the view in order to find the correct unscaled, untranslated\n * coordinates using <mxGraph.getPointForEvent> as follows:\n * \n * (code)\n * var pt = graph.getPointForEvent(evt);\n * var parent = graph.getDefaultParent();\n * graph.insertVertex(parent, null,\n * \t\t\t'Hello, World!', x, y, 220, 30);\n * (end)\n * \n * For adding image cells, the style parameter can be assigned as\n * \n * (code)\n * stylename;image=imageUrl\n * (end)\n * \n * See <mxGraph> for more information on using images.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent of the new vertex.\n * id - Optional string that defines the Id of the new vertex.\n * value - Object to be used as the user object.\n * x - Integer that defines the x coordinate of the vertex.\n * y - Integer that defines the y coordinate of the vertex.\n * width - Integer that defines the width of the vertex.\n * height - Integer that defines the height of the vertex.\n * style - Optional string that defines the cell style.\n * relative - Optional boolean that specifies if the geometry is relative.\n * Default is false.\n */\nmxGraph.prototype.insertVertex = function(parent, id, value,\n\tx, y, width, height, style, relative)\n{\n\tvar vertex = this.createVertex(parent, id, value, x, y, width, height, style, relative);\n\n\treturn this.addCell(vertex, parent);\n};\n\n/**\n * Function: createVertex\n * \n * Hook method that creates the new vertex for <insertVertex>.\n */\nmxGraph.prototype.createVertex = function(parent, id, value,\n\t\tx, y, width, height, style, relative)\n{\n\t// Creates the geometry for the vertex\n\tvar geometry = new mxGeometry(x, y, width, height);\n\tgeometry.relative = (relative != null) ? relative : false;\n\t\n\t// Creates the vertex\n\tvar vertex = new mxCell(value, geometry, style);\n\tvertex.setId(id);\n\tvertex.setVertex(true);\n\tvertex.setConnectable(true);\n\t\n\treturn vertex;\n};\n\t\n/**\n * Function: insertEdge\n * \n * Adds a new edge into the given parent <mxCell> using value as the user\n * object and the given source and target as the terminals of the new edge.\n * The id and style are used for the respective properties of the new\n * <mxCell>, which is returned.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent of the new edge.\n * id - Optional string that defines the Id of the new edge.\n * value - JavaScript object to be used as the user object.\n * source - <mxCell> that defines the source of the edge.\n * target - <mxCell> that defines the target of the edge.\n * style - Optional string that defines the cell style.\n */\nmxGraph.prototype.insertEdge = function(parent, id, value, source, target, style)\n{\n\tvar edge = this.createEdge(parent, id, value, source, target, style);\n\t\n\treturn this.addEdge(edge, parent, source, target);\n};\n\n/**\n * Function: createEdge\n * \n * Hook method that creates the new edge for <insertEdge>. This\n * implementation does not set the source and target of the edge, these\n * are set when the edge is added to the model.\n * \n */\nmxGraph.prototype.createEdge = function(parent, id, value, source, target, style)\n{\n\t// Creates the edge\n\tvar edge = new mxCell(value, new mxGeometry(), style);\n\tedge.setId(id);\n\tedge.setEdge(true);\n\tedge.geometry.relative = true;\n\t\n\treturn edge;\n};\n\n/**\n * Function: addEdge\n * \n * Adds the edge to the parent and connects it to the given source and\n * target terminals. This is a shortcut method. Returns the edge that was\n * added.\n * \n * Parameters:\n * \n * edge - <mxCell> to be inserted into the given parent.\n * parent - <mxCell> that represents the new parent. If no parent is\n * given then the default parent is used.\n * source - Optional <mxCell> that represents the source terminal.\n * target - Optional <mxCell> that represents the target terminal.\n * index - Optional index to insert the cells at. Default is to append.\n */\nmxGraph.prototype.addEdge = function(edge, parent, source, target, index)\n{\n\treturn this.addCell(edge, parent, index, source, target);\n};\n\n/**\n * Function: addCell\n * \n * Adds the cell to the parent and connects it to the given source and\n * target terminals. This is a shortcut method. Returns the cell that was\n * added.\n * \n * Parameters:\n * \n * cell - <mxCell> to be inserted into the given parent.\n * parent - <mxCell> that represents the new parent. If no parent is\n * given then the default parent is used.\n * index - Optional index to insert the cells at. Default is to append.\n * source - Optional <mxCell> that represents the source terminal.\n * target - Optional <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.addCell = function(cell, parent, index, source, target)\n{\n\treturn this.addCells([cell], parent, index, source, target)[0];\n};\n\n/**\n * Function: addCells\n * \n * Adds the cells to the parent at the given index, connecting each cell to\n * the optional source and target terminal. The change is carried out using\n * <cellsAdded>. This method fires <mxEvent.ADD_CELLS> while the\n * transaction is in progress. Returns the cells that were added.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be inserted.\n * parent - <mxCell> that represents the new parent. If no parent is\n * given then the default parent is used.\n * index - Optional index to insert the cells at. Default is to append.\n * source - Optional source <mxCell> for all inserted cells.\n * target - Optional target <mxCell> for all inserted cells.\n * absolute - Optional boolean indicating of cells should be kept at\n * their absolute position. Default is false.\n */\nmxGraph.prototype.addCells = function(cells, parent, index, source, target, absolute)\n{\n\tif (parent == null)\n\t{\n\t\tparent = this.getDefaultParent();\n\t}\n\t\n\tif (index == null)\n\t{\n\t\tindex = this.model.getChildCount(parent);\n\t}\n\t\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsAdded(cells, parent, index, source, target, (absolute != null) ? absolute : false, true);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ADD_CELLS, 'cells', cells,\n\t\t\t\t'parent', parent, 'index', index, 'source', source, 'target', target));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsAdded\n * \n * Adds the specified cells to the given parent. This method fires\n * <mxEvent.CELLS_ADDED> while the transaction is in progress.\n */\nmxGraph.prototype.cellsAdded = function(cells, parent, index, source, target, absolute, constrain, extend)\n{\n\tif (cells != null && parent != null && index != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar parentState = (absolute) ? this.view.getState(parent) : null;\n\t\t\tvar o1 = (parentState != null) ? parentState.origin : null;\n\t\t\tvar zero = new mxPoint(0, 0);\n\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (cells[i] == null)\n\t\t\t\t{\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar previous = this.model.getParent(cells[i]);\n\t\n\t\t\t\t\t// Keeps the cell at its absolute location\n\t\t\t\t\tif (o1 != null && cells[i] != parent && parent != previous)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar oldState = this.view.getState(previous);\n\t\t\t\t\t\tvar o2 = (oldState != null) ? oldState.origin : zero;\n\t\t\t\t\t\tvar geo = this.model.getGeometry(cells[i]);\n\t\n\t\t\t\t\t\tif (geo != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar dx = o2.x - o1.x;\n\t\t\t\t\t\t\tvar dy = o2.y - o1.y;\n\t\n\t\t\t\t\t\t\t// FIXME: Cells should always be inserted first before any other edit\n\t\t\t\t\t\t\t// to avoid forward references in sessions.\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\tgeo.translate(dx, dy);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!geo.relative && this.model.isVertex(cells[i]) &&\n\t\t\t\t\t\t\t\t!this.isAllowNegativeCoordinates())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x = Math.max(0, geo.x);\n\t\t\t\t\t\t\t\tgeo.y = Math.max(0, geo.y);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.model.setGeometry(cells[i], geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Decrements all following indices\n\t\t\t\t\t// if cell is already in parent\n\t\t\t\t\tif (parent == previous && index + i > this.model.getChildCount(parent))\n\t\t\t\t\t{\n\t\t\t\t\t\tindex--;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.model.add(parent, cells[i], index + i);\n\t\t\t\t\t\n\t\t\t\t\tif (this.autoSizeCellsOnAdd)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.autoSizeCell(cells[i], true);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Extends the parent or constrains the child\n\t\t\t\t\tif ((extend == null || extend) &&\n\t\t\t\t\t\tthis.isExtendParentsOnAdd(cells[i]) && this.isExtendParent(cells[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Additionally constrains the child after extending the parent\n\t\t\t\t\tif (constrain == null || constrain)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Sets the source terminal\n\t\t\t\t\tif (source != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.cellConnected(cells[i], source, true);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Sets the target terminal\n\t\t\t\t\tif (target != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.cellConnected(cells[i], target, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_ADDED, 'cells', cells,\n\t\t\t\t'parent', parent, 'index', index, 'source', source, 'target', target,\n\t\t\t\t'absolute', absolute));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: autoSizeCell\n * \n * Resizes the specified cell to just fit around the its label and/or children\n * \n * Parameters:\n * \n * cell - <mxCells> to be resized.\n * recurse - Optional boolean which specifies if all descendants should be\n * autosized. Default is true.\n */\nmxGraph.prototype.autoSizeCell = function(cell, recurse)\n{\n\trecurse = (recurse != null) ? recurse : true;\n\t\n\tif (recurse)\n\t{\n\t\tvar childCount = this.model.getChildCount(cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.autoSizeCell(this.model.getChildAt(cell, i));\n\t\t}\n\t}\n\n\tif (this.getModel().isVertex(cell) && this.isAutoSizeCell(cell))\n\t{\n\t\tthis.updateCellSize(cell);\n\t}\n};\n\n/**\n * Function: removeCells\n * \n * Removes the given cells from the graph including all connected edges if\n * includeEdges is true. The change is carried out using <cellsRemoved>.\n * This method fires <mxEvent.REMOVE_CELLS> while the transaction is in\n * progress. The removed cells are returned as an array.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to remove. If null is specified then the\n * selection cells which are deletable are used.\n * includeEdges - Optional boolean which specifies if all connected edges\n * should be removed as well. Default is true.\n */\nmxGraph.prototype.removeCells = function(cells, includeEdges)\n{\n\tincludeEdges = (includeEdges != null) ? includeEdges : true;\n\t\n\tif (cells == null)\n\t{\n\t\tcells = this.getDeletableCells(this.getSelectionCells());\n\t}\n\n\t// Adds all edges to the cells\n\tif (includeEdges)\n\t{\n\t\t// FIXME: Remove duplicate cells in result or do not add if\n\t\t// in cells or descendant of cells\n\t\tcells = this.getDeletableCells(this.addAllEdges(cells));\n\t}\n\telse\n\t{\n\t\tcells = cells.slice();\n\t\t\n\t\t// Removes edges that are currently not\n\t\t// visible as those cannot be updated\n\t\tvar edges = this.getDeletableCells(this.getAllEdges(cells));\n\t\tvar dict = new mxDictionary();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tdict.put(cells[i], true);\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tif (this.view.getState(edges[i]) == null &&\n\t\t\t\t!dict.get(edges[i]))\n\t\t\t{\n\t\t\t\tdict.put(edges[i], true);\n\t\t\t\tcells.push(edges[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsRemoved(cells);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_CELLS, \n\t\t\t\t'cells', cells, 'includeEdges', includeEdges));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\t\n\treturn cells;\n};\n\n/**\n * Function: cellsRemoved\n * \n * Removes the given cells from the model. This method fires\n * <mxEvent.CELLS_REMOVED> while the transaction is in progress.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to remove.\n */\nmxGraph.prototype.cellsRemoved = function(cells)\n{\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar scale = this.view.scale;\n\t\tvar tr = this.view.translate;\n\t\t\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Creates hashtable for faster lookup\n\t\t\tvar dict = new mxDictionary();\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tdict.put(cells[i], true);\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\t// Disconnects edges which are not being removed\n\t\t\t\tvar edges = this.getAllEdges([cells[i]]);\n\t\t\t\t\n\t\t\t\tvar disconnectTerminal = mxUtils.bind(this, function(edge, source)\n\t\t\t\t{\n\t\t\t\t\tvar geo = this.model.getGeometry(edge);\n\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Checks if terminal is being removed\n\t\t\t\t\t\tvar terminal = this.model.getTerminal(edge, source);\n\t\t\t\t\t\tvar connected = false;\n\t\t\t\t\t\tvar tmp = terminal;\n\t\t\t\t\t\t\n\t\t\t\t\t\twhile (tmp != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (cells[i] == tmp)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconnected = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttmp = this.model.getParent(tmp);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (connected)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\tvar state = this.view.getState(edge);\n\n\t\t\t\t\t\t\tif (state != null && state.absolutePoints != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar pts = state.absolutePoints;\n\t\t\t\t\t\t\t\tvar n = (source) ? 0 : pts.length - 1;\n\n\t\t\t\t\t\t\t\tgeo.setTerminalPoint(new mxPoint(\n\t\t\t\t\t\t\t\t\tpts[n].x / scale - tr.x - state.origin.x,\n\t\t\t\t\t\t\t\t\tpts[n].y / scale - tr.y - state.origin.y), source);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// Fallback to center of terminal if routing\n\t\t\t\t\t\t\t\t// points are not available to add new point\n\t\t\t\t\t\t\t\t// KNOWN: Should recurse to find parent offset\n\t\t\t\t\t\t\t\t// of edge for nested groups but invisible edges\n\t\t\t\t\t\t\t\t// should be removed in removeCells step\n\t\t\t\t\t\t\t\tvar tstate = this.view.getState(terminal);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (tstate != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgeo.setTerminalPoint(new mxPoint(\n\t\t\t\t\t\t\t\t\t\ttstate.getCenterX() / scale - tr.x,\n\t\t\t\t\t\t\t\t\t\ttstate.getCenterY() / scale - tr.y), source);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.model.setGeometry(edge, geo);\n\t\t\t\t\t\t\tthis.model.setTerminal(edge, null, source);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tfor (var j = 0; j < edges.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (!dict.get(edges[j]))\n\t\t\t\t\t{\n\t\t\t\t\t\tdict.put(edges[j], true);\n\t\t\t\t\t\tdisconnectTerminal(edges[j], true);\n\t\t\t\t\t\tdisconnectTerminal(edges[j], false);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.model.remove(cells[i]);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_REMOVED, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: splitEdge\n * \n * Splits the given edge by adding the newEdge between the previous source\n * and the given cell and reconnecting the source of the given edge to the\n * given cell. This method fires <mxEvent.SPLIT_EDGE> while the transaction\n * is in progress. Returns the new edge that was inserted.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to be splitted.\n * cells - <mxCells> that represents the cells to insert into the edge.\n * newEdge - <mxCell> that represents the edge to be inserted.\n * dx - Optional integer that specifies the vector to move the cells.\n * dy - Optional integer that specifies the vector to move the cells.\n * x - Integer that specifies the x-coordinate of the drop location.\n * y - Integer that specifies the y-coordinate of the drop location.\n * parent - Optional parent to insert the cell. If null the parent of\n * the edge is used.\n */\nmxGraph.prototype.splitEdge = function(edge, cells, newEdge, dx, dy, x, y, parent)\n{\n\tdx = dx || 0;\n\tdy = dy || 0;\n\n\tparent = (parent != null) ? parent : this.model.getParent(edge);\n\tvar source = this.model.getTerminal(edge, true);\n\t\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tif (newEdge == null)\n\t\t{\n\t\t\tnewEdge = this.cloneCell(edge);\n\t\t\t\n\t\t\t// Removes waypoints before/after new cell\n\t\t\tvar state = this.view.getState(edge);\n\t\t\tvar geo = this.getCellGeometry(newEdge);\n\t\t\t\n\t\t\tif (geo != null && geo.points != null && state != null)\n\t\t\t{\n\t\t\t\tvar t = this.view.translate;\n\t\t\t\tvar s = this.view.scale;\n\t\t\t\tvar idx = mxUtils.findNearestSegment(state, (dx + t.x) * s, (dy + t.y) * s);\n\t\t\t\tgeo.points = geo.points.slice(0, idx);\n\t\t\t\t\t\t\t\t\n\t\t\t\tgeo = this.getCellGeometry(edge);\n\t\t\t\t\n\t\t\t\tif (geo != null && geo.points != null)\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\tgeo.points = geo.points.slice(idx);\n\t\t\t\t\tthis.model.setGeometry(edge, geo);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.cellsMoved(cells, dx, dy, false, false);\n\t\tthis.cellsAdded(cells, parent, this.model.getChildCount(parent), null, null,\n\t\t\t\ttrue);\n\t\tthis.cellsAdded([newEdge], parent, this.model.getChildCount(parent),\n\t\t\t\tsource, cells[0], false);\n\t\tthis.cellConnected(edge, cells[0], true);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.SPLIT_EDGE, 'edge', edge,\n\t\t\t\t'cells', cells, 'newEdge', newEdge, 'dx', dx, 'dy', dy));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn newEdge;\n};\n\n/**\n * Group: Cell visibility\n */\n\n/**\n * Function: toggleCells\n * \n * Sets the visible state of the specified cells and all connected edges\n * if includeEdges is true. The change is carried out using <cellsToggled>.\n * This method fires <mxEvent.TOGGLE_CELLS> while the transaction is in\n * progress. Returns the cells whose visible state was changed.\n * \n * Parameters:\n * \n * show - Boolean that specifies the visible state to be assigned.\n * cells - Array of <mxCells> whose visible state should be changed. If\n * null is specified then the selection cells are used.\n * includeEdges - Optional boolean indicating if the visible state of all\n * connected edges should be changed as well. Default is true.\n */\nmxGraph.prototype.toggleCells = function(show, cells, includeEdges)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\n\t// Adds all connected edges recursively\n\tif (includeEdges)\n\t{\n\t\tcells = this.addAllEdges(cells);\n\t}\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsToggled(cells, show);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.TOGGLE_CELLS,\n\t\t\t'show', show, 'cells', cells, 'includeEdges', includeEdges));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsToggled\n * \n * Sets the visible state of the specified cells.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose visible state should be changed.\n * show - Boolean that specifies the visible state to be assigned.\n */\nmxGraph.prototype.cellsToggled = function(cells, show)\n{\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tthis.model.setVisible(cells[i], show);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Group: Folding\n */\n\n/**\n * Function: foldCells\n * \n * Sets the collapsed state of the specified cells and all descendants\n * if recurse is true. The change is carried out using <cellsFolded>.\n * This method fires <mxEvent.FOLD_CELLS> while the transaction is in\n * progress. Returns the cells whose collapsed state was changed.\n * \n * Parameters:\n * \n * collapsed - Boolean indicating the collapsed state to be assigned.\n * recurse - Optional boolean indicating if the collapsed state of all\n * descendants should be set. Default is false.\n * cells - Array of <mxCells> whose collapsed state should be set. If\n * null is specified then the foldable selection cells are used.\n * checkFoldable - Optional boolean indicating of isCellFoldable should be\n * checked. Default is false.\n * evt - Optional native event that triggered the invocation.\n */\nmxGraph.prototype.foldCells = function(collapse, recurse, cells, checkFoldable, evt)\n{\n\trecurse = (recurse != null) ? recurse : false;\n\t\n\tif (cells == null)\n\t{\n\t\tcells = this.getFoldableCells(this.getSelectionCells(), collapse);\n\t}\n\n\tthis.stopEditing(false);\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsFolded(cells, collapse, recurse, checkFoldable);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.FOLD_CELLS,\n\t\t\t'collapse', collapse, 'recurse', recurse, 'cells', cells));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsFolded\n * \n * Sets the collapsed state of the specified cells. This method fires\n * <mxEvent.CELLS_FOLDED> while the transaction is in progress. Returns the\n * cells whose collapsed state was changed.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose collapsed state should be set.\n * collapsed - Boolean indicating the collapsed state to be assigned.\n * recurse - Boolean indicating if the collapsed state of all descendants\n * should be set.\n * checkFoldable - Optional boolean indicating of isCellFoldable should be\n * checked. Default is false.\n */\nmxGraph.prototype.cellsFolded = function(cells, collapse, recurse, checkFoldable)\n{\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif ((!checkFoldable || this.isCellFoldable(cells[i], collapse)) &&\n\t\t\t\t\tcollapse != this.isCellCollapsed(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.model.setCollapsed(cells[i], collapse);\n\t\t\t\t\tthis.swapBounds(cells[i], collapse);\n\n\t\t\t\t\tif (this.isExtendParent(cells[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (recurse)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar children = this.model.getChildren(cells[i]);\n\t\t\t\t\t\tthis.cellsFolded(children, collapse, recurse);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_FOLDED,\n\t\t\t\t'cells', cells, 'collapse', collapse, 'recurse', recurse));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: swapBounds\n * \n * Swaps the alternate and the actual bounds in the geometry of the given\n * cell invoking <updateAlternateBounds> before carrying out the swap.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the bounds should be swapped.\n * willCollapse - Boolean indicating if the cell is going to be collapsed.\n */\nmxGraph.prototype.swapBounds = function(cell, willCollapse)\n{\n\tif (cell != null)\n\t{\n\t\tvar geo = this.model.getGeometry(cell);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\t\n\t\t\tthis.updateAlternateBounds(cell, geo, willCollapse);\n\t\t\tgeo.swap();\n\t\t\t\n\t\t\tthis.model.setGeometry(cell, geo);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateAlternateBounds\n * \n * Updates or sets the alternate bounds in the given geometry for the given\n * cell depending on whether the cell is going to be collapsed. If no\n * alternate bounds are defined in the geometry and\n * <collapseToPreferredSize> is true, then the preferred size is used for\n * the alternate bounds. The top, left corner is always kept at the same\n * location.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the geometry is being udpated.\n * g - <mxGeometry> for which the alternate bounds should be updated.\n * willCollapse - Boolean indicating if the cell is going to be collapsed.\n */\nmxGraph.prototype.updateAlternateBounds = function(cell, geo, willCollapse)\n{\n\tif (cell != null && geo != null)\n\t{\n\t\tvar style = this.getCurrentCellStyle(cell);\n\n\t\tif (geo.alternateBounds == null)\n\t\t{\n\t\t\tvar bounds = geo;\n\t\t\t\n\t\t\tif (this.collapseToPreferredSize)\n\t\t\t{\n\t\t\t\tvar tmp = this.getPreferredSizeForCell(cell);\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tbounds = tmp;\n\n\t\t\t\t\tvar startSize = mxUtils.getValue(style, mxConstants.STYLE_STARTSIZE);\n\n\t\t\t\t\tif (startSize > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tbounds.height = Math.max(bounds.height, startSize);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tgeo.alternateBounds = new mxRectangle(0, 0, bounds.width, bounds.height);\n\t\t}\n\t\t\n\t\tif (geo.alternateBounds != null)\n\t\t{\n\t\t\tgeo.alternateBounds.x = geo.x;\n\t\t\tgeo.alternateBounds.y = geo.y;\n\t\t\t\n\t\t\tvar alpha = mxUtils.toRadians(style[mxConstants.STYLE_ROTATION] || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar dx = geo.alternateBounds.getCenterX() - geo.getCenterX();\n\t\t\t\tvar dy = geo.alternateBounds.getCenterY() - geo.getCenterY();\n\t\n\t\t\t\tvar cos = Math.cos(alpha);\n\t\t\t\tvar sin = Math.sin(alpha);\n\t\n\t\t\t\tvar dx2 = cos * dx - sin * dy;\n\t\t\t\tvar dy2 = sin * dx + cos * dy;\n\t\t\t\t\n\t\t\t\tgeo.alternateBounds.x += dx2 - dx;\n\t\t\t\tgeo.alternateBounds.y += dy2 - dy;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: addAllEdges\n * \n * Returns an array with the given cells and all edges that are connected\n * to a cell or one of its descendants.\n */\nmxGraph.prototype.addAllEdges = function(cells)\n{\n\tvar allCells = cells.slice();\n\t\n\treturn mxUtils.removeDuplicates(allCells.concat(this.getAllEdges(cells)));\n};\n\n/**\n * Function: getAllEdges\n * \n * Returns all edges connected to the given cells or its descendants.\n */\nmxGraph.prototype.getAllEdges = function(cells)\n{\n\tvar edges = [];\n\t\n\tif (cells != null)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar edgeCount = this.model.getEdgeCount(cells[i]);\n\t\t\t\n\t\t\tfor (var j = 0; j < edgeCount; j++)\n\t\t\t{\n\t\t\t\tedges.push(this.model.getEdgeAt(cells[i], j));\n\t\t\t}\n\n\t\t\t// Recurses\n\t\t\tvar children = this.model.getChildren(cells[i]);\n\t\t\tedges = edges.concat(this.getAllEdges(children));\n\t\t}\n\t}\n\t\n\treturn edges;\n};\n\n/**\n * Group: Cell sizing\n */\n\n/**\n * Function: updateCellSize\n * \n * Updates the size of the given cell in the model using <cellSizeUpdated>.\n * This method fires <mxEvent.UPDATE_CELL_SIZE> while the transaction is in\n * progress. Returns the cell whose size was updated.\n * \n * Parameters:\n * \n * cell - <mxCell> whose size should be updated.\n */\nmxGraph.prototype.updateCellSize = function(cell, ignoreChildren)\n{\n\tignoreChildren = (ignoreChildren != null) ? ignoreChildren : false;\n\t\n\tthis.model.beginUpdate();\t\t\t\t\n\ttry\n\t{\n\t\tthis.cellSizeUpdated(cell, ignoreChildren);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.UPDATE_CELL_SIZE,\n\t\t\t\t'cell', cell, 'ignoreChildren', ignoreChildren));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: cellSizeUpdated\n * \n * Updates the size of the given cell in the model using\n * <getPreferredSizeForCell> to get the new size.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the size should be changed.\n */\nmxGraph.prototype.cellSizeUpdated = function(cell, ignoreChildren)\n{\n\tif (cell != null)\n\t{\n\t\tthis.model.beginUpdate();\t\t\t\t\n\t\ttry\n\t\t{\n\t\t\tvar size = this.getPreferredSizeForCell(cell);\n\t\t\tvar geo = this.model.getGeometry(cell);\n\t\t\t\n\t\t\tif (size != null && geo != null)\n\t\t\t{\n\t\t\t\tvar collapsed = this.isCellCollapsed(cell);\n\t\t\t\tgeo = geo.clone();\n\n\t\t\t\tif (this.isSwimlane(cell))\n\t\t\t\t{\n\t\t\t\t\tvar style = this.getCellStyle(cell);\n\t\t\t\t\tvar cellStyle = this.model.getStyle(cell);\n\n\t\t\t\t\tif (cellStyle == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcellStyle = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t\t\t\t{\n\t\t\t\t\t\tcellStyle = mxUtils.setStyle(cellStyle,\n\t\t\t\t\t\t\t\tmxConstants.STYLE_STARTSIZE, size.height + 8);\n\n\t\t\t\t\t\tif (collapsed)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.height = size.height + 8;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeo.width = size.width;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcellStyle = mxUtils.setStyle(cellStyle,\n\t\t\t\t\t\t\t\tmxConstants.STYLE_STARTSIZE, size.width + 8);\n\n\t\t\t\t\t\tif (collapsed)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.width = size.width + 8;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeo.height = size.height;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.model.setStyle(cell, cellStyle);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar state = this.view.createState(cell);\n\t\t\t\t\tvar align = (state.style[mxConstants.STYLE_ALIGN] || mxConstants.ALIGN_CENTER);\n\t\t\t\t\t\n\t\t\t\t\tif (align == mxConstants.ALIGN_RIGHT)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.x += geo.width - size.width;\n\t\t\t\t\t}\n\t\t\t\t\telse if (align == mxConstants.ALIGN_CENTER)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.x += Math.round((geo.width - size.width) / 2);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar valign = this.getVerticalAlign(state);\n\t\t\t\t\t\n\t\t\t\t\tif (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.y += geo.height - size.height;\n\t\t\t\t\t}\n\t\t\t\t\telse if (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.y += Math.round((geo.height - size.height) / 2);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeo.width = size.width;\n\t\t\t\t\tgeo.height = size.height;\n\t\t\t\t}\n\n\t\t\t\tif (!ignoreChildren && !collapsed)\n\t\t\t\t{\n\t\t\t\t\tvar bounds = this.view.getBounds(this.model.getChildren(cell));\n\n\t\t\t\t\tif (bounds != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tr = this.view.translate;\n\t\t\t\t\t\tvar scale = this.view.scale;\n\n\t\t\t\t\t\tvar width = (bounds.x + bounds.width) / scale - geo.x - tr.x;\n\t\t\t\t\t\tvar height = (bounds.y + bounds.height) / scale - geo.y - tr.y;\n\n\t\t\t\t\t\tgeo.width = Math.max(geo.width, width);\n\t\t\t\t\t\tgeo.height = Math.max(geo.height, height);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.cellsResized([cell], [geo], false);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: getPreferredSizeForCell\n * \n * Returns the preferred width and height of the given <mxCell> as an\n * <mxRectangle>. To implement a minimum width, add a new style eg.\n * minWidth in the vertex and override this method as follows.\n * \n * (code)\n * var graphGetPreferredSizeForCell = graph.getPreferredSizeForCell;\n * graph.getPreferredSizeForCell = function(cell)\n * {\n *   var result = graphGetPreferredSizeForCell.apply(this, arguments);\n *   var style = this.getCellStyle(cell);\n *   \n *   if (style['minWidth'] > 0)\n *   {\n *     result.width = Math.max(style['minWidth'], result.width);\n *   }\n * \n *   return result;\n * };\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> for which the preferred size should be returned.\n * textWidth - Optional maximum text width for word wrapping.\n */\nmxGraph.prototype.getPreferredSizeForCell = function(cell, textWidth)\n{\n\tvar result = null;\n\t\n\tif (cell != null)\n\t{\n\t\tvar state = this.view.createState(cell);\n\t\tvar style = state.style;\n\n\t\tif (!this.model.isEdge(cell))\n\t\t{\n\t\t\tvar fontSize = style[mxConstants.STYLE_FONTSIZE] || mxConstants.DEFAULT_FONTSIZE;\n\t\t\tvar dx = 0;\n\t\t\tvar dy = 0;\n\t\t\t\n\t\t\t// Adds dimension of image if shape is a label\n\t\t\tif (this.getImage(state) != null || style[mxConstants.STYLE_IMAGE] != null)\n\t\t\t{\n\t\t\t\tif (style[mxConstants.STYLE_SHAPE] == mxConstants.SHAPE_LABEL)\n\t\t\t\t{\n\t\t\t\t\tif (style[mxConstants.STYLE_VERTICAL_ALIGN] == mxConstants.ALIGN_MIDDLE)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx += parseFloat(style[mxConstants.STYLE_IMAGE_WIDTH]) || mxLabel.prototype.imageSize;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (style[mxConstants.STYLE_ALIGN] != mxConstants.ALIGN_CENTER)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy += parseFloat(style[mxConstants.STYLE_IMAGE_HEIGHT]) || mxLabel.prototype.imageSize;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Adds spacings\n\t\t\tdx += 2 * (style[mxConstants.STYLE_SPACING] || 0);\n\t\t\tdx += style[mxConstants.STYLE_SPACING_LEFT] || 0;\n\t\t\tdx += style[mxConstants.STYLE_SPACING_RIGHT] || 0;\n\n\t\t\tdy += 2 * (style[mxConstants.STYLE_SPACING] || 0);\n\t\t\tdy += style[mxConstants.STYLE_SPACING_TOP] || 0;\n\t\t\tdy += style[mxConstants.STYLE_SPACING_BOTTOM] || 0;\n\t\t\t\n\t\t\t// Add spacing for collapse/expand icon\n\t\t\t// LATER: Check alignment and use constants\n\t\t\t// for image spacing\n\t\t\tvar image = this.getFoldingImage(state);\n\t\t\t\n\t\t\tif (image != null)\n\t\t\t{\n\t\t\t\tdx += image.width + 8;\n\t\t\t}\n\n\t\t\t// Adds space for label\n\t\t\tvar value = this.cellRenderer.getLabelValue(state);\n\n\t\t\tif (value != null && value.length > 0)\n\t\t\t{\n\t\t\t\tif (!this.isHtmlLabel(state.cell))\n\t\t\t\t{\n\t\t\t\t\tvalue = mxUtils.htmlEntities(value, false);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvalue = value.replace(/\\n/g, '<br>');\n\t\t\t\t\n\t\t\t\tvar size = mxUtils.getSizeForString(value, fontSize,\n\t\t\t\t\tstyle[mxConstants.STYLE_FONTFAMILY], textWidth,\n\t\t\t\t\tstyle[mxConstants.STYLE_FONTSTYLE]);\n\t\t\t\tvar width = size.width + dx;\n\t\t\t\tvar height = size.height + dy;\n\t\t\t\t\n\t\t\t\tif (!mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t\t\t{\n\t\t\t\t\tvar tmp = height;\n\t\t\t\t\t\n\t\t\t\t\theight = width;\n\t\t\t\t\twidth = tmp;\n\t\t\t\t}\n\t\t\t\n\t\t\t\tif (this.gridEnabled)\n\t\t\t\t{\n\t\t\t\t\twidth = this.snap(width + this.gridSize / 2);\n\t\t\t\t\theight = this.snap(height + this.gridSize / 2);\n\t\t\t\t}\n\n\t\t\t\tresult = new mxRectangle(0, 0, width, height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar gs2 = 4 * this.gridSize;\n\t\t\t\tresult = new mxRectangle(0, 0, gs2, gs2);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: resizeCell\n * \n * Sets the bounds of the given cell using <resizeCells>. Returns the\n * cell which was passed to the function.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bounds should be changed.\n * bounds - <mxRectangle> that represents the new bounds.\n */\nmxGraph.prototype.resizeCell = function(cell, bounds, recurse)\n{\n\treturn this.resizeCells([cell], [bounds], recurse)[0];\n};\n\n/**\n * Function: resizeCells\n * \n * Sets the bounds of the given cells and fires a <mxEvent.RESIZE_CELLS>\n * event while the transaction is in progress. Returns the cells which\n * have been passed to the function.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose bounds should be changed.\n * bounds - Array of <mxRectangles> that represent the new bounds.\n */\nmxGraph.prototype.resizeCells = function(cells, bounds, recurse)\n{\n\trecurse = (recurse != null) ? recurse : this.isRecursiveResize();\n\t\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tvar prev = this.cellsResized(cells, bounds, recurse);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE_CELLS,\n\t\t\t'cells', cells, 'bounds', bounds, 'previous', prev));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsResized\n * \n * Sets the bounds of the given cells and fires a <mxEvent.CELLS_RESIZED>\n * event. If <extendParents> is true, then the parent is extended if a\n * child size is changed so that it overlaps with the parent.\n * \n * The following example shows how to control group resizes to make sure\n * that all child cells stay within the group.\n * \n * (code)\n * graph.addListener(mxEvent.CELLS_RESIZED, function(sender, evt)\n * {\n *   var cells = evt.getProperty('cells');\n *   \n *   if (cells != null)\n *   {\n *     for (var i = 0; i < cells.length; i++)\n *     {\n *       if (graph.getModel().getChildCount(cells[i]) > 0)\n *       {\n *         var geo = graph.getCellGeometry(cells[i]);\n *         \n *         if (geo != null)\n *         {\n *           var children = graph.getChildCells(cells[i], true, true);\n *           var bounds = graph.getBoundingBoxFromGeometry(children, true);\n *           \n *           geo = geo.clone();\n *           geo.width = Math.max(geo.width, bounds.width);\n *           geo.height = Math.max(geo.height, bounds.height);\n *           \n *           graph.getModel().setGeometry(cells[i], geo);\n *         }\n *       }\n *     }\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose bounds should be changed.\n * bounds - Array of <mxRectangles> that represent the new bounds.\n * recurse - Optional boolean that specifies if the children should be resized.\n */\nmxGraph.prototype.cellsResized = function(cells, bounds, recurse)\n{\n\trecurse = (recurse != null) ? recurse : false;\n\tvar prev = [];\n\n\tif (cells != null && bounds != null && cells.length == bounds.length)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tprev.push(this.cellResized(cells[i], bounds[i], false, recurse));\n\n\t\t\t\tif (this.isExtendParent(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t}\n\n\t\t\tif (this.resetEdgesOnResize)\n\t\t\t{\n\t\t\t\tthis.resetEdges(cells);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_RESIZED,\n\t\t\t\t'cells', cells, 'bounds', bounds, 'previous', prev));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\t\n\treturn prev;\n};\n\n/**\n * Function: cellResized\n * \n * Resizes the parents recursively so that they contain the complete area\n * of the resized child cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bounds should be changed.\n * bounds - <mxRectangles> that represent the new bounds.\n * ignoreRelative - Boolean that indicates if relative cells should be ignored.\n * recurse - Optional boolean that specifies if the children should be resized.\n */\nmxGraph.prototype.cellResized = function(cell, bounds, ignoreRelative, recurse)\n{\n\tvar prev = this.model.getGeometry(cell);\n\n\tif (prev != null && (prev.x != bounds.x || prev.y != bounds.y ||\n\t\tprev.width != bounds.width || prev.height != bounds.height))\n\t{\n\t\tvar geo = prev.clone();\n\n\t\tif (!ignoreRelative && geo.relative)\n\t\t{\n\t\t\tvar offset = geo.offset;\n\n\t\t\tif (offset != null)\n\t\t\t{\n\t\t\t\toffset.x += bounds.x - geo.x;\n\t\t\t\toffset.y += bounds.y - geo.y;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgeo.x = bounds.x;\n\t\t\tgeo.y = bounds.y;\n\t\t}\n\n\t\tgeo.width = bounds.width;\n\t\tgeo.height = bounds.height;\n\n\t\tif (!geo.relative && this.model.isVertex(cell) && !this.isAllowNegativeCoordinates())\n\t\t{\n\t\t\tgeo.x = Math.max(0, geo.x);\n\t\t\tgeo.y = Math.max(0, geo.y);\n\t\t}\n\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (recurse)\n\t\t\t{\n\t\t\t\tthis.resizeChildCells(cell, geo);\n\t\t\t}\n\t\t\t\t\t\t\n\t\t\tthis.model.setGeometry(cell, geo);\n\t\t\tthis.constrainChildCells(cell);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\t\n\treturn prev;\n};\n\n/**\n * Function: resizeChildCells\n * \n * Resizes the child cells of the given cell for the given new geometry with\n * respect to the current geometry of the cell.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n * newGeo - <mxGeometry> that represents the new bounds.\n */\nmxGraph.prototype.resizeChildCells = function(cell, newGeo)\n{\n\tvar geo = this.model.getGeometry(cell);\n\tvar dx = (geo.width != 0) ? newGeo.width / geo.width : 1;\n\tvar dy = (geo.height != 0) ? newGeo.height / geo.height : 1;\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.scaleCell(this.model.getChildAt(cell, i), dx, dy, true);\n\t}\n};\n\n/**\n * Function: constrainChildCells\n * \n * Constrains the children of the given cell using <constrainChild>.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n */\nmxGraph.prototype.constrainChildCells = function(cell)\n{\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.constrainChild(this.model.getChildAt(cell, i));\n\t}\n};\n\n/**\n * Function: scaleCell\n * \n * Scales the points, position and size of the given cell according to the\n * given vertical and horizontal scaling factors.\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry should be scaled.\n * dx - Horizontal scaling factor.\n * dy - Vertical scaling factor.\n * recurse - Boolean indicating if the child cells should be scaled.\n */\nmxGraph.prototype.scaleCell = function(cell, dx, dy, recurse)\n{\n\tvar geo = this.model.getGeometry(cell);\n\t\n\tif (geo != null)\n\t{\n\t\tvar style = this.getCurrentCellStyle(cell);\n\t\tgeo = geo.clone();\n\t\t\n\t\t// Stores values for restoring based on style\n\t\tvar x = geo.x;\n\t\tvar y = geo.y\n\t\tvar w = geo.width;\n\t\tvar h = geo.height;\n\t\t\n\t\tgeo.scale(dx, dy, style[mxConstants.STYLE_ASPECT] == 'fixed');\n\t\t\n\t\tif (style[mxConstants.STYLE_RESIZE_WIDTH] == '1')\n\t\t{\n\t\t\tgeo.width = w * dx;\n\t\t}\n\t\telse if (style[mxConstants.STYLE_RESIZE_WIDTH] == '0')\n\t\t{\n\t\t\tgeo.width = w;\n\t\t}\n\t\t\n\t\tif (style[mxConstants.STYLE_RESIZE_HEIGHT] == '1')\n\t\t{\n\t\t\tgeo.height = h * dy;\n\t\t}\n\t\telse if (style[mxConstants.STYLE_RESIZE_HEIGHT] == '0')\n\t\t{\n\t\t\tgeo.height = h;\n\t\t}\n\t\t\n\t\tif (!this.isCellMovable(cell))\n\t\t{\n\t\t\tgeo.x = x;\n\t\t\tgeo.y = y;\n\t\t}\n\t\t\n\t\tif (!this.isCellResizable(cell))\n\t\t{\n\t\t\tgeo.width = w;\n\t\t\tgeo.height = h;\n\t\t}\n\n\t\tif (this.model.isVertex(cell))\n\t\t{\n\t\t\tthis.cellResized(cell, geo, true, recurse);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.model.setGeometry(cell, geo);\n\t\t}\n\t}\n};\n\n/**\n * Function: extendParent\n * \n * Resizes the parents recursively so that they contain the complete area\n * of the resized child cell.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n */\nmxGraph.prototype.extendParent = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tvar parent = this.model.getParent(cell);\n\t\tvar p = this.getCellGeometry(parent);\n\t\t\n\t\tif (parent != null && p != null && !this.isCellCollapsed(parent))\n\t\t{\n\t\t\tvar geo = this.getCellGeometry(cell);\n\t\t\t\n\t\t\tif (geo != null && !geo.relative &&\n\t\t\t\t(p.width < geo.x + geo.width ||\n\t\t\t\tp.height < geo.y + geo.height))\n\t\t\t{\n\t\t\t\tp = p.clone();\n\t\t\t\t\n\t\t\t\tp.width = Math.max(p.width, geo.x + geo.width);\n\t\t\t\tp.height = Math.max(p.height, geo.y + geo.height);\n\t\t\t\t\n\t\t\t\tthis.cellsResized([parent], [p], false);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Group: Cell moving\n */\n\n/**\n * Function: importCells\n * \n * Clones and inserts the given cells into the graph using the move\n * method and returns the inserted cells. This shortcut is used if\n * cells are inserted via datatransfer.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be imported.\n * dx - Integer that specifies the x-coordinate of the vector. Default is 0.\n * dy - Integer that specifies the y-coordinate of the vector. Default is 0.\n * target - <mxCell> that represents the new parent of the cells.\n * evt - Mouseevent that triggered the invocation.\n * mapping - Optional mapping for existing clones.\n */\nmxGraph.prototype.importCells = function(cells, dx, dy, target, evt, mapping)\n{\t\n\treturn this.moveCells(cells, dx, dy, true, target, evt, mapping);\n};\n\n/**\n * Function: moveCells\n * \n * Moves or clones the specified cells and moves the cells or clones by the\n * given amount, adding them to the optional target cell. The evt is the\n * mouse event as the mouse was released. The change is carried out using\n * <cellsMoved>. This method fires <mxEvent.MOVE_CELLS> while the\n * transaction is in progress. Returns the cells that were moved.\n * \n * Use the following code to move all cells in the graph.\n * \n * (code)\n * graph.moveCells(graph.getChildCells(null, true, true), 10, 10);\n * (end)\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be moved, cloned or added to the target.\n * dx - Integer that specifies the x-coordinate of the vector. Default is 0.\n * dy - Integer that specifies the y-coordinate of the vector. Default is 0.\n * clone - Boolean indicating if the cells should be cloned. Default is false.\n * target - <mxCell> that represents the new parent of the cells.\n * evt - Mouseevent that triggered the invocation.\n * mapping - Optional mapping for existing clones.\n */\nmxGraph.prototype.moveCells = function(cells, dx, dy, clone, target, evt, mapping)\n{\n\tdx = (dx != null) ? dx : 0;\n\tdy = (dy != null) ? dy : 0;\n\tclone = (clone != null) ? clone : false;\n\t\n\tif (cells != null && (dx != 0 || dy != 0 || clone || target != null))\n\t{\n\t\t// Removes descendants with ancestors in cells to avoid multiple moving\n\t\tcells = this.model.getTopmostCells(cells);\n\t\tvar origCells = cells;\n\t\t\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Faster cell lookups to remove relative edge labels with selected\n\t\t\t// terminals to avoid explicit and implicit move at same time\n\t\t\tvar dict = new mxDictionary();\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tdict.put(cells[i], true);\n\t\t\t}\n\t\t\t\n\t\t\tvar isSelected = mxUtils.bind(this, function(cell)\n\t\t\t{\n\t\t\t\twhile (cell != null)\n\t\t\t\t{\n\t\t\t\t\tif (dict.get(cell))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcell = this.model.getParent(cell);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\t\n\t\t\t// Removes relative edge labels with selected terminals\n\t\t\tvar checked = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\t\t\n\t\t\t\tif ((geo == null || !geo.relative) || !this.model.isEdge(parent) ||\n\t\t\t\t\t(!isSelected(this.model.getTerminal(parent, true)) &&\n\t\t\t\t\t!isSelected(this.model.getTerminal(parent, false))))\n\t\t\t\t{\n\t\t\t\t\tchecked.push(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcells = checked;\n\t\t\t\n\t\t\tif (clone)\n\t\t\t{\n\t\t\t\tcells = this.cloneCells(cells, this.isCloneInvalidEdges(), mapping);\n\n\t\t\t\tif (target == null)\n\t\t\t\t{\n\t\t\t\t\ttarget = this.getDefaultParent();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// FIXME: Cells should always be inserted first before any other edit\n\t\t\t// to avoid forward references in sessions.\n\t\t\t// Need to disable allowNegativeCoordinates if target not null to\n\t\t\t// allow for temporary negative numbers until cellsAdded is called.\n\t\t\tvar previous = this.isAllowNegativeCoordinates();\n\t\t\t\n\t\t\tif (target != null)\n\t\t\t{\n\t\t\t\tthis.setAllowNegativeCoordinates(true);\n\t\t\t}\n\t\t\t\n\t\t\tthis.cellsMoved(cells, dx, dy, !clone && this.isDisconnectOnMove()\n\t\t\t\t\t&& this.isAllowDanglingEdges(), target == null,\n\t\t\t\t\tthis.isExtendParentsOnMove() && target == null);\n\t\t\t\n\t\t\tthis.setAllowNegativeCoordinates(previous);\n\n\t\t\tif (target != null)\n\t\t\t{\n\t\t\t\tvar index = this.model.getChildCount(target);\n\t\t\t\tthis.cellsAdded(cells, target, index, null, null, true);\n\t\t\t\t\n\t\t\t\t// Restores parent edge on cloned edge labels\n\t\t\t\tif (clone)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\t\t\tvar parent = this.model.getParent(origCells[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (geo != null && geo.relative &&\n\t\t\t\t\t\t\tthis.model.isEdge(parent) &&\n\t\t\t\t\t\t\tthis.model.contains(parent))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.model.add(parent, cells[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Dispatches a move event\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE_CELLS, 'cells', cells,\n\t\t\t\t'dx', dx, 'dy', dy, 'clone', clone, 'target', target, 'event', evt));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsMoved\n * \n * Moves the specified cells by the given vector, disconnecting the cells\n * using disconnectGraph is disconnect is true. This method fires\n * <mxEvent.CELLS_MOVED> while the transaction is in progress.\n */\nmxGraph.prototype.cellsMoved = function(cells, dx, dy, disconnect, constrain, extend)\n{\n\tif (cells != null && (dx != 0 || dy != 0))\n\t{\n\t\textend = (extend != null) ? extend : false;\n\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (disconnect)\n\t\t\t{\n\t\t\t\tthis.disconnectGraph(cells);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tthis.translateCell(cells[i], dx, dy);\n\t\t\t\t\n\t\t\t\tif (extend && this.isExtendParent(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t}\n\t\t\t\telse if (constrain)\n\t\t\t\t{\n\t\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.resetEdgesOnMove)\n\t\t\t{\n\t\t\t\tthis.resetEdges(cells);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_MOVED,\n\t\t\t\t'cells', cells, 'dx', dx, 'dy', dy, 'disconnect', disconnect));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: translateCell\n * \n * Translates the geometry of the given cell and stores the new,\n * translated geometry in the model as an atomic change.\n */\nmxGraph.prototype.translateCell = function(cell, dx, dy)\n{\n\tvar geo = this.model.getGeometry(cell);\n\n\tif (geo != null)\n\t{\n\t\tdx = parseFloat(dx);\n\t\tdy = parseFloat(dy);\n\t\tgeo = geo.clone();\n\t\tgeo.translate(dx, dy);\n\n\t\tif (!geo.relative && this.model.isVertex(cell) && !this.isAllowNegativeCoordinates())\n\t\t{\n\t\t\tgeo.x = Math.max(0, parseFloat(geo.x));\n\t\t\tgeo.y = Math.max(0, parseFloat(geo.y));\n\t\t}\n\t\t\n\t\tif (geo.relative && !this.model.isEdge(cell))\n\t\t{\n\t\t\tvar parent = this.model.getParent(cell);\n\t\t\tvar angle = 0;\n\t\t\t\n\t\t\tif (this.model.isVertex(parent))\n\t\t\t{\n\t\t\t\tvar style = this.getCurrentCellStyle(parent);\n\t\t\t\tangle = mxUtils.getValue(style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t}\n\t\t\t\n\t\t\tif (angle != 0)\n\t\t\t{\n\t\t\t\tvar rad = mxUtils.toRadians(-angle);\n\t\t\t\tvar cos = Math.cos(rad);\n\t\t\t\tvar sin = Math.sin(rad);\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(dx, dy), cos, sin, new mxPoint(0, 0));\n\t\t\t\tdx = pt.x;\n\t\t\t\tdy = pt.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (geo.offset == null)\n\t\t\t{\n\t\t\t\tgeo.offset = new mxPoint(dx, dy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgeo.offset.x = parseFloat(geo.offset.x) + dx;\n\t\t\t\tgeo.offset.y = parseFloat(geo.offset.y) + dy;\n\t\t\t}\n\t\t}\n\n\t\tthis.model.setGeometry(cell, geo);\n\t}\n};\n\n/**\n * Function: getCellContainmentArea\n * \n * Returns the <mxRectangle> inside which a cell is to be kept.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the area should be returned.\n */\nmxGraph.prototype.getCellContainmentArea = function(cell)\n{\n\tif (cell != null && !this.model.isEdge(cell))\n\t{\n\t\tvar parent = this.model.getParent(cell);\n\t\t\n\t\tif (parent != null && parent != this.getDefaultParent())\n\t\t{\n\t\t\tvar g = this.model.getGeometry(parent);\n\t\t\t\n\t\t\tif (g != null)\n\t\t\t{\n\t\t\t\tvar x = 0;\n\t\t\t\tvar y = 0;\n\t\t\t\tvar w = g.width;\n\t\t\t\tvar h = g.height;\n\t\t\t\t\n\t\t\t\tif (this.isSwimlane(parent))\n\t\t\t\t{\n\t\t\t\t\tvar size = this.getStartSize(parent);\n\t\t\t\t\tvar style = this.getCurrentCellStyle(parent);\n\t\t\t\t\tvar dir = mxUtils.getValue(style, mxConstants.STYLE_DIRECTION, mxConstants.DIRECTION_EAST);\n\t\t\t\t\tvar flipH = mxUtils.getValue(style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\t\t\t\tvar flipV = mxUtils.getValue(style, mxConstants.STYLE_FLIPV, 0) == 1;\n\t\t\t\t\t\n\t\t\t\t\tif (dir == mxConstants.DIRECTION_SOUTH || dir == mxConstants.DIRECTION_NORTH)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp = size.width;\n\t\t\t\t\t\tsize.width = size.height;\n\t\t\t\t\t\tsize.height = tmp;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif ((dir == mxConstants.DIRECTION_EAST && !flipV) || (dir == mxConstants.DIRECTION_NORTH && !flipH) ||\n\t\t\t\t\t\t(dir == mxConstants.DIRECTION_WEST && flipV) || (dir == mxConstants.DIRECTION_SOUTH && flipH))\n\t\t\t\t\t{\n\t\t\t\t\t\tx = size.width;\n\t\t\t\t\t\ty = size.height;\n\t\t\t\t\t}\n\n\t\t\t\t\tw -= size.width;\n\t\t\t\t\th -= size.height;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn new mxRectangle(x, y, w, h);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getMaximumGraphBounds\n * \n * Returns the bounds inside which the diagram should be kept as an\n * <mxRectangle>.\n */\nmxGraph.prototype.getMaximumGraphBounds = function()\n{\n\treturn this.maximumGraphBounds;\n};\n\n/**\n * Function: constrainChild\n * \n * Keeps the given cell inside the bounds returned by\n * <getCellContainmentArea> for its parent, according to the rules defined by\n * <getOverlap> and <isConstrainChild>. This modifies the cell's geometry\n * in-place and does not clone it.\n * \n * Parameters:\n * \n * cells - <mxCell> which should be constrained.\n * sizeFirst - Specifies if the size should be changed first. Default is true.\n */\nmxGraph.prototype.constrainChild = function(cell, sizeFirst)\n{\n\tsizeFirst = (sizeFirst != null) ? sizeFirst : true;\n\t\n\tif (cell != null)\n\t{\n\t\tvar geo = this.getCellGeometry(cell);\n\t\t\n\t\tif (geo != null && (this.isConstrainRelativeChildren() || !geo.relative))\n\t\t{\n\t\t\tvar parent = this.model.getParent(cell);\n\t\t\tvar pgeo = this.getCellGeometry(parent);\n\t\t\tvar max = this.getMaximumGraphBounds();\n\t\t\t\n\t\t\t// Finds parent offset\n\t\t\tif (max != null)\n\t\t\t{\n\t\t\t\tvar off = this.getBoundingBoxFromGeometry([parent], false);\n\t\t\t\t\n\t\t\t\tif (off != null)\n\t\t\t\t{\n\t\t\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\t\t\n\t\t\t\t\tmax.x -= off.x;\n\t\t\t\t\tmax.y -= off.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (this.isConstrainChild(cell))\n\t\t\t{\n\t\t\t\tvar tmp = this.getCellContainmentArea(cell);\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tvar overlap = this.getOverlap(cell);\n\t\n\t\t\t\t\tif (overlap > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp = mxRectangle.fromRectangle(tmp);\n\t\t\t\t\t\t\n\t\t\t\t\t\ttmp.x -= tmp.width * overlap;\n\t\t\t\t\t\ttmp.y -= tmp.height * overlap;\n\t\t\t\t\t\ttmp.width += 2 * tmp.width * overlap;\n\t\t\t\t\t\ttmp.height += 2 * tmp.height * overlap;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Find the intersection between max and tmp\n\t\t\t\t\tif (max == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tmax = tmp;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\t\t\tmax.intersect(tmp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (max != null)\n\t\t\t{\n\t\t\t\tvar cells = [cell];\n\t\t\t\t\n\t\t\t\tif (!this.isCellCollapsed(cell))\n\t\t\t\t{\n\t\t\t\t\tvar desc = this.model.getDescendants(cell);\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = 0; i < desc.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.isCellVisible(desc[i]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcells.push(desc[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar bbox = this.getBoundingBoxFromGeometry(cells, false);\n\t\t\t\t\n\t\t\t\tif (bbox != null)\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\n\t\t\t\t\t// Cumulative horizontal movement\n\t\t\t\t\tvar dx = 0;\n\t\t\t\t\t\n\t\t\t\t\tif (geo.width > max.width)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx = geo.width - max.width;\n\t\t\t\t\t\tgeo.width -= dx;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.x + bbox.width > max.x + max.width)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx -= bbox.x + bbox.width - max.x - max.width - dx;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Cumulative vertical movement\n\t\t\t\t\tvar dy = 0;\n\t\t\t\t\t\n\t\t\t\t\tif (geo.height > max.height)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy = geo.height - max.height;\n\t\t\t\t\t\tgeo.height -= dy;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.y + bbox.height > max.y + max.height)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy -= bbox.y + bbox.height - max.y - max.height - dy;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.x < max.x)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx -= bbox.x - max.x;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.y < max.y)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy -= bbox.y - max.y;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (dx != 0 || dy != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (geo.relative)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Relative geometries are moved via absolute offset\n\t\t\t\t\t\t\tif (geo.offset == null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.offset = new mxPoint();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tgeo.offset.x += dx;\n\t\t\t\t\t\t\tgeo.offset.y += dy;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.x += dx;\n\t\t\t\t\t\t\tgeo.y += dy;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.model.setGeometry(cell, geo);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: resetEdges\n * \n * Resets the control points of the edges that are connected to the given\n * cells if not both ends of the edge are in the given cells array.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> for which the connected edges should be\n * reset.\n */\nmxGraph.prototype.resetEdges = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\t// Prepares faster cells lookup\n\t\tvar dict = new mxDictionary();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tdict.put(cells[i], true);\n\t\t}\n\t\t\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar edges = this.model.getEdges(cells[i]);\n\t\t\t\t\n\t\t\t\tif (edges != null)\n\t\t\t\t{\n\t\t\t\t\tfor (var j = 0; j < edges.length; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar state = this.view.getState(edges[j]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar source = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[j], true);\n\t\t\t\t\t\tvar target = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[j], false);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Checks if one of the terminals is not in the given array\n\t\t\t\t\t\tif (!dict.get(source) || !dict.get(target))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.resetEdge(edges[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.resetEdges(this.model.getChildren(cells[i]));\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: resetEdge\n * \n * Resets the control points of the given edge.\n * \n * Parameters:\n * \n * edge - <mxCell> whose points should be reset.\n */\nmxGraph.prototype.resetEdge = function(edge)\n{\n\tvar geo = this.model.getGeometry(edge);\n\t\n\t// Resets the control points\n\tif (geo != null && geo.points != null && geo.points.length > 0)\n\t{\n\t\tgeo = geo.clone();\n\t\tgeo.points = [];\n\t\tthis.model.setGeometry(edge, geo);\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Group: Cell connecting and connection constraints\n */\n\n/**\n * Function: getOutlineConstraint\n * \n * Returns the constraint used to connect to the outline of the given state.\n */\nmxGraph.prototype.getOutlineConstraint = function(point, terminalState, me)\n{\n\tif (terminalState.shape != null)\n\t{\n\t\tvar bounds = this.view.getPerimeterBounds(terminalState);\n\t\tvar direction = terminalState.style[mxConstants.STYLE_DIRECTION];\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH || direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tbounds.x += bounds.width / 2 - bounds.height / 2;\n\t\t\tbounds.y += bounds.height / 2 - bounds.width / 2;\n\t\t\tvar tmp = bounds.width;\n\t\t\tbounds.width = bounds.height;\n\t\t\tbounds.height = tmp;\n\t\t}\n\t\n\t\tvar alpha = mxUtils.toRadians(terminalState.shape.getShapeRotation());\n\t\t\n\t\tif (alpha != 0)\n\t\t{\n\t\t\tvar cos = Math.cos(-alpha);\n\t\t\tvar sin = Math.sin(-alpha);\n\t\n\t\t\tvar ct = new mxPoint(bounds.getCenterX(), bounds.getCenterY());\n\t\t\tpoint = mxUtils.getRotatedPoint(point, cos, sin, ct);\n\t\t}\n\n\t\tvar sx = 1;\n\t\tvar sy = 1;\n\t\tvar dx = 0;\n\t\tvar dy = 0;\n\t\t\n\t\t// LATER: Add flipping support for image shapes\n\t\tif (this.getModel().isVertex(terminalState.cell))\n\t\t{\n\t\t\tvar flipH = terminalState.style[mxConstants.STYLE_FLIPH];\n\t\t\tvar flipV = terminalState.style[mxConstants.STYLE_FLIPV];\n\t\t\t\n\t\t\t// Legacy support for stencilFlipH/V\n\t\t\tif (terminalState.shape != null && terminalState.shape.stencil != null)\n\t\t\t{\n\t\t\t\tflipH = mxUtils.getValue(terminalState.style, 'stencilFlipH', 0) == 1 || flipH;\n\t\t\t\tflipV = mxUtils.getValue(terminalState.style, 'stencilFlipV', 0) == 1 || flipV;\n\t\t\t}\n\t\t\t\n\t\t\tif (direction == mxConstants.DIRECTION_NORTH || direction == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tvar tmp = flipH;\n\t\t\t\tflipH = flipV;\n\t\t\t\tflipV = tmp;\n\t\t\t}\n\t\t\t\n\t\t\tif (flipH)\n\t\t\t{\n\t\t\t\tsx = -1;\n\t\t\t\tdx = -bounds.width;\n\t\t\t}\n\t\t\t\n\t\t\tif (flipV)\n\t\t\t{\n\t\t\t\tsy = -1;\n\t\t\t\tdy = -bounds.height ;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpoint = new mxPoint((point.x - bounds.x) * sx - dx + bounds.x, (point.y - bounds.y) * sy - dy + bounds.y);\n\t\t\n\t\tvar x = (bounds.width == 0) ? 0 : Math.round((point.x - bounds.x) * 1000 / bounds.width) / 1000;\n\t\tvar y = (bounds.height == 0) ? 0 : Math.round((point.y - bounds.y) * 1000 / bounds.height) / 1000;\n\t\t\n\t\treturn new mxConnectionConstraint(new mxPoint(x, y), false);\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getAllConnectionConstraints\n * \n * Returns an array of all <mxConnectionConstraints> for the given terminal. If\n * the shape of the given terminal is a <mxStencilShape> then the constraints\n * of the corresponding <mxStencil> are returned.\n * \n * Parameters:\n * \n * terminal - <mxCellState> that represents the terminal.\n * source - Boolean that specifies if the terminal is the source or target.\n */\nmxGraph.prototype.getAllConnectionConstraints = function(terminal, source)\n{\n\tif (terminal != null && terminal.shape != null && terminal.shape.stencil != null)\n\t{\n\t\treturn terminal.shape.stencil.constraints;\n\t}\n\n\treturn null;\n};\n\n/**\n * Function: getConnectionConstraint\n * \n * Returns an <mxConnectionConstraint> that describes the given connection\n * point. This result can then be passed to <getConnectionPoint>.\n * \n * Parameters:\n * \n * edge - <mxCellState> that represents the edge.\n * terminal - <mxCellState> that represents the terminal.\n * source - Boolean indicating if the terminal is the source or target.\n */\nmxGraph.prototype.getConnectionConstraint = function(edge, terminal, source)\n{\n\tvar point = null;\n\tvar x = edge.style[(source) ? mxConstants.STYLE_EXIT_X : mxConstants.STYLE_ENTRY_X];\n\n\tif (x != null)\n\t{\n\t\tvar y = edge.style[(source) ? mxConstants.STYLE_EXIT_Y : mxConstants.STYLE_ENTRY_Y];\n\t\t\n\t\tif (y != null)\n\t\t{\n\t\t\tpoint = new mxPoint(parseFloat(x), parseFloat(y));\n\t\t}\n\t}\n\t\n\tvar perimeter = false;\n\tvar dx = 0, dy = 0;\n\t\n\tif (point != null)\n\t{\n\t\tperimeter = mxUtils.getValue(edge.style, (source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, true);\n\n\t\t//Add entry/exit offset\n\t\tdx = parseFloat(edge.style[(source) ? mxConstants.STYLE_EXIT_DX : mxConstants.STYLE_ENTRY_DX]);\n\t\tdy = parseFloat(edge.style[(source) ? mxConstants.STYLE_EXIT_DY : mxConstants.STYLE_ENTRY_DY]);\n\t\t\n\t\tdx = isFinite(dx)? dx : 0;\n\t\tdy = isFinite(dy)? dy : 0;\n\t}\n\n\treturn new mxConnectionConstraint(point, perimeter, null, dx, dy);\n};\n\n/**\n * Function: setConnectionConstraint\n * \n * Sets the <mxConnectionConstraint> that describes the given connection point.\n * If no constraint is given then nothing is changed. To remove an existing\n * constraint from the given edge, use an empty constraint instead.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge.\n * terminal - <mxCell> that represents the terminal.\n * source - Boolean indicating if the terminal is the source or target.\n * constraint - Optional <mxConnectionConstraint> to be used for this\n * connection.\n */\nmxGraph.prototype.setConnectionConstraint = function(edge, terminal, source, constraint)\n{\n\tif (constraint != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\t\n\t\ttry\n\t\t{\n\t\t\tif (constraint == null || constraint.point == null)\n\t\t\t{\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_X :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_X, null, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_Y :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_Y, null, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_DX :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_DX, null, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_DY :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_DY, null, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, null, [edge]);\n\t\t\t}\n\t\t\telse if (constraint.point != null)\n\t\t\t{\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_X :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_X, constraint.point.x, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_Y :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_Y, constraint.point.y, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_DX :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_DX, constraint.dx, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_DY :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_DY, constraint.dy, [edge]);\n\t\t\t\t\n\t\t\t\t// Only writes 0 since 1 is default\n\t\t\t\tif (!constraint.perimeter)\n\t\t\t\t{\n\t\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\t\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, '0', [edge]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\t\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, null, [edge]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: getConnectionPoint\n *\n * Returns the nearest point in the list of absolute points or the center\n * of the opposite terminal.\n * \n * Parameters:\n * \n * vertex - <mxCellState> that represents the vertex.\n * constraint - <mxConnectionConstraint> that represents the connection point\n * constraint as returned by <getConnectionConstraint>.\n */\nmxGraph.prototype.getConnectionPoint = function(vertex, constraint, round)\n{\n\tround = (round != null) ? round : true;\n\tvar point = null;\n\t\n\tif (vertex != null && constraint.point != null)\n\t{\n\t\tvar bounds = this.view.getPerimeterBounds(vertex);\n        var cx = new mxPoint(bounds.getCenterX(), bounds.getCenterY());\n\t\tvar direction = vertex.style[mxConstants.STYLE_DIRECTION];\n\t\tvar r1 = 0;\n\t\t\n\t\t// Bounds need to be rotated by 90 degrees for further computation\n\t\tif (direction != null && mxUtils.getValue(vertex.style,\n\t\t\tmxConstants.STYLE_ANCHOR_POINT_DIRECTION, 1) == 1)\n\t\t{\n\t\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t\t{\n\t\t\t\tr1 += 270;\n\t\t\t}\n\t\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t\t{\n\t\t\t\tr1 += 180;\n\t\t\t}\n\t\t\telse if (direction == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tr1 += 90;\n\t\t\t}\n\n\t\t\t// Bounds need to be rotated by 90 degrees for further computation\n\t\t\tif (direction == mxConstants.DIRECTION_NORTH ||\n\t\t\t\tdirection == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tbounds.rotate90();\n\t\t\t}\n\t\t}\n\n\t\tvar scale = this.view.scale;\n\t\tpoint = new mxPoint(bounds.x + constraint.point.x * bounds.width + constraint.dx * scale,\n\t\t\t\tbounds.y + constraint.point.y * bounds.height + constraint.dy * scale);\n\t\t\n\t\t// Rotation for direction before projection on perimeter\n\t\tvar r2 = vertex.style[mxConstants.STYLE_ROTATION] || 0;\n\t\t\n\t\tif (constraint.perimeter)\n\t\t{\n\t\t\tif (r1 != 0)\n\t\t\t{\n\t\t\t\t// Only 90 degrees steps possible here so no trig needed\n\t\t\t\tvar cos = 0;\n\t\t\t\tvar sin = 0;\n\t\t\t\t\n\t\t\t\tif (r1 == 90)\n\t\t\t\t{\n\t\t\t\t\tsin = 1;\n\t\t\t\t}\n\t\t\t\telse if (r1 == 180)\n\t\t\t\t{\n\t\t\t\t\tcos = -1;\n\t\t\t\t}\n\t\t\t\telse if (r1 == 270)\n\t\t\t\t{\n\t\t\t\t\tsin = -1;\n\t\t\t\t}\n\t\t\t\t\n\t\t        point = mxUtils.getRotatedPoint(point, cos, sin, cx);\n\t\t\t}\n\t\n\t\t\tpoint = this.view.getPerimeterPoint(vertex, point, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tr2 += r1;\n\t\t\t\n\t\t\tif (this.getModel().isVertex(vertex.cell))\n\t\t\t{\n\t\t\t\tvar flipH = vertex.style[mxConstants.STYLE_FLIPH] == 1;\n\t\t\t\tvar flipV = vertex.style[mxConstants.STYLE_FLIPV] == 1;\n\t\t\t\t\n\t\t\t\t// Legacy support for stencilFlipH/V\n\t\t\t\tif (vertex.shape != null && vertex.shape.stencil != null)\n\t\t\t\t{\n\t\t\t\t\tflipH = (mxUtils.getValue(vertex.style, 'stencilFlipH', 0) == 1) || flipH;\n\t\t\t\t\tflipV = (mxUtils.getValue(vertex.style, 'stencilFlipV', 0) == 1) || flipV;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (direction == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\tdirection == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tvar temp = flipH;\n\t\t\t\t\tflipH = flipV\n\t\t\t\t\tflipV = temp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (flipH)\n\t\t\t\t{\n\t\t\t\t\tpoint.x = 2 * bounds.getCenterX() - point.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (flipV)\n\t\t\t\t{\n\t\t\t\t\tpoint.y = 2 * bounds.getCenterY() - point.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Generic rotation after projection on perimeter\n\t\tif (r2 != 0 && point != null)\n\t\t{\n\t        var rad = mxUtils.toRadians(r2);\n\t        var cos = Math.cos(rad);\n\t        var sin = Math.sin(rad);\n\t        \n\t        point = mxUtils.getRotatedPoint(point, cos, sin, cx);\n\t\t}\n\t}\n\t\n\tif (round && point != null)\n\t{\n\t\tpoint.x = Math.round(point.x);\n\t\tpoint.y = Math.round(point.y);\n\t}\n\n\treturn point;\n};\n\n/**\n * Function: connectCell\n * \n * Connects the specified end of the given edge to the given terminal\n * using <cellConnected> and fires <mxEvent.CONNECT_CELL> while the\n * transaction is in progress. Returns the updated edge.\n * \n * Parameters:\n * \n * edge - <mxCell> whose terminal should be updated.\n * terminal - <mxCell> that represents the new terminal to be used.\n * source - Boolean indicating if the new terminal is the source or target.\n * constraint - Optional <mxConnectionConstraint> to be used for this\n * connection.\n */\nmxGraph.prototype.connectCell = function(edge, terminal, source, constraint)\n{\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tvar previous = this.model.getTerminal(edge, source);\n\t\tthis.cellConnected(edge, terminal, source, constraint);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.CONNECT_CELL,\n\t\t\t'edge', edge, 'terminal', terminal, 'source', source,\n\t\t\t'previous', previous));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn edge;\n};\n\n/**\n * Function: cellConnected\n * \n * Sets the new terminal for the given edge and resets the edge points if\n * <resetEdgesOnConnect> is true. This method fires\n * <mxEvent.CELL_CONNECTED> while the transaction is in progress.\n * \n * Parameters:\n * \n * edge - <mxCell> whose terminal should be updated.\n * terminal - <mxCell> that represents the new terminal to be used.\n * source - Boolean indicating if the new terminal is the source or target.\n * constraint - <mxConnectionConstraint> to be used for this connection.\n */\nmxGraph.prototype.cellConnected = function(edge, terminal, source, constraint)\n{\n\tif (edge != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar previous = this.model.getTerminal(edge, source);\n\n\t\t\t// Updates the constraint\n\t\t\tthis.setConnectionConstraint(edge, terminal, source, constraint);\n\t\t\t\n\t\t\t// Checks if the new terminal is a port, uses the ID of the port in the\n\t\t\t// style and the parent of the port as the actual terminal of the edge.\n\t\t\tif (this.isPortsEnabled())\n\t\t\t{\n\t\t\t\tvar id = null;\n\t\n\t\t\t\tif (this.isPort(terminal))\n\t\t\t\t{\n\t\t\t\t\tid = terminal.getId();\n\t\t\t\t\tterminal = this.getTerminalForPort(terminal, source);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Sets or resets all previous information for connecting to a child port\n\t\t\t\tvar key = (source) ? mxConstants.STYLE_SOURCE_PORT :\n\t\t\t\t\tmxConstants.STYLE_TARGET_PORT;\n\t\t\t\tthis.setCellStyles(key, id, [edge]);\n\t\t\t}\n\t\t\t\n\t\t\tthis.model.setTerminal(edge, terminal, source);\n\t\t\t\n\t\t\tif (this.resetEdgesOnConnect)\n\t\t\t{\n\t\t\t\tthis.resetEdge(edge);\n\t\t\t}\n\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELL_CONNECTED,\n\t\t\t\t'edge', edge, 'terminal', terminal, 'source', source,\n\t\t\t\t'previous', previous));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: disconnectGraph\n * \n * Disconnects the given edges from the terminals which are not in the\n * given array.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be disconnected.\n */\nmxGraph.prototype.disconnectGraph = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\t\t\t\t\t\t\t\n\t\t\tvar scale = this.view.scale;\n\t\t\tvar tr = this.view.translate;\n\t\t\t\n\t\t\t// Fast lookup for finding cells in array\n\t\t\tvar dict = new mxDictionary();\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tdict.put(cells[i], true);\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (this.model.isEdge(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tvar geo = this.model.getGeometry(cells[i]);\n\t\t\t\t\t\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\t\tvar pstate = this.view.getState(\n\t\t\t\t\t\t\tthis.model.getParent(cells[i]));\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (state != null &&\n\t\t\t\t\t\t\tpstate != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar dx = -pstate.origin.x;\n\t\t\t\t\t\t\tvar dy = -pstate.origin.y;\n\t\t\t\t\t\t\tvar pts = state.absolutePoints;\n\n\t\t\t\t\t\t\tvar src = this.model.getTerminal(cells[i], true);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (src != null && this.isCellDisconnectable(cells[i], src, true))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\twhile (src != null && !dict.get(src))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsrc = this.model.getParent(src);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (src == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgeo.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[0].x / scale - tr.x + dx,\n\t\t\t\t\t\t\t\t\t\t\tpts[0].y / scale - tr.y + dy), true);\n\t\t\t\t\t\t\t\t\tthis.model.setTerminal(cells[i], null, true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar trg = this.model.getTerminal(cells[i], false);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (trg != null && this.isCellDisconnectable(cells[i], trg, false))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\twhile (trg != null && !dict.get(trg))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttrg = this.model.getParent(trg);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (trg == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvar n = pts.length - 1;\n\t\t\t\t\t\t\t\t\tgeo.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[n].x / scale - tr.x + dx,\n\t\t\t\t\t\t\t\t\t\t\tpts[n].y / scale - tr.y + dy), false);\n\t\t\t\t\t\t\t\t\tthis.model.setTerminal(cells[i], null, false);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.model.setGeometry(cells[i], geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Group: Drilldown\n */\n\n/**\n * Function: getCurrentRoot\n * \n * Returns the current root of the displayed cell hierarchy. This is a\n * shortcut to <mxGraphView.currentRoot> in <view>.\n */\nmxGraph.prototype.getCurrentRoot = function()\n{\n\treturn this.view.currentRoot;\n};\n \n/**\n * Function: getTranslateForRoot\n * \n * Returns the translation to be used if the given cell is the root cell as\n * an <mxPoint>. This implementation returns null.\n * \n * Example:\n * \n * To keep the children at their absolute position while stepping into groups,\n * this function can be overridden as follows.\n * \n * (code)\n * var offset = new mxPoint(0, 0);\n * \n * while (cell != null)\n * {\n *   var geo = this.model.getGeometry(cell);\n * \n *   if (geo != null)\n *   {\n *     offset.x -= geo.x;\n *     offset.y -= geo.y;\n *   }\n * \n *   cell = this.model.getParent(cell);\n * }\n * \n * return offset;\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the root.\n */\nmxGraph.prototype.getTranslateForRoot = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: isPort\n * \n * Returns true if the given cell is a \"port\", that is, when connecting to\n * it, the cell returned by getTerminalForPort should be used as the\n * terminal and the port should be referenced by the ID in either the\n * mxConstants.STYLE_SOURCE_PORT or the or the\n * mxConstants.STYLE_TARGET_PORT. Note that a port should not be movable.\n * This implementation always returns false.\n * \n * A typical implementation is the following:\n * \n * (code)\n * graph.isPort = function(cell)\n * {\n *   var geo = this.getCellGeometry(cell);\n *   \n *   return (geo != null) ? geo.relative : false;\n * };\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n */\nmxGraph.prototype.isPort = function(cell)\n{\n\treturn false;\n};\n\n/**\n * Function: getTerminalForPort\n * \n * Returns the terminal to be used for a given port. This implementation\n * always returns the parent cell.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n * source - If the cell is the source or target port.\n */\nmxGraph.prototype.getTerminalForPort = function(cell, source)\n{\n\treturn this.model.getParent(cell);\n};\n\n/**\n * Function: getChildOffsetForCell\n * \n * Returns the offset to be used for the cells inside the given cell. The\n * root and layer cells may be identified using <mxGraphModel.isRoot> and\n * <mxGraphModel.isLayer>. For all other current roots, the\n * <mxGraphView.currentRoot> field points to the respective cell, so that\n * the following holds: cell == this.view.currentRoot. This implementation\n * returns null.\n * \n * Parameters:\n * \n * cell - <mxCell> whose offset should be returned.\n */\nmxGraph.prototype.getChildOffsetForCell = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: enterGroup\n * \n * Uses the given cell as the root of the displayed cell hierarchy. If no\n * cell is specified then the selection cell is used. The cell is only used\n * if <isValidRoot> returns true.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> to be used as the new root. Default is the\n * selection cell.\n */\nmxGraph.prototype.enterGroup = function(cell)\n{\n\tcell = cell || this.getSelectionCell();\n\t\n\tif (cell != null && this.isValidRoot(cell))\n\t{\n\t\tthis.view.setCurrentRoot(cell);\n\t\tthis.clearSelection();\n\t}\n};\n\n/**\n * Function: exitGroup\n * \n * Changes the current root to the next valid root in the displayed cell\n * hierarchy.\n */\nmxGraph.prototype.exitGroup = function()\n{\n\tvar root = this.model.getRoot();\n\tvar current = this.getCurrentRoot();\n\t\n\tif (current != null)\n\t{\n\t\tvar next = this.model.getParent(current);\n\t\t\n\t\t// Finds the next valid root in the hierarchy\n\t\twhile (next != root && !this.isValidRoot(next) &&\n\t\t\t\tthis.model.getParent(next) != root)\n\t\t{\n\t\t\tnext = this.model.getParent(next);\n\t\t}\n\t\t\n\t\t// Clears the current root if the new root is\n\t\t// the model's root or one of the layers.\n\t\tif (next == root || this.model.getParent(next) == root)\n\t\t{\n\t\t\tthis.view.setCurrentRoot(null);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.view.setCurrentRoot(next);\n\t\t}\n\t\t\n\t\tvar state = this.view.getState(current);\n\t\t\n\t\t// Selects the previous root in the graph\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.setSelectionCell(current);\n\t\t}\n\t}\n};\n\n/**\n * Function: home\n * \n * Uses the root of the model as the root of the displayed cell hierarchy\n * and selects the previous root.\n */\nmxGraph.prototype.home = function()\n{\n\tvar current = this.getCurrentRoot();\n\t\n\tif (current != null)\n\t{\n\t\tthis.view.setCurrentRoot(null);\n\t\tvar state = this.view.getState(current);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.setSelectionCell(current);\n\t\t}\n\t}\n};\n\n/**\n * Function: isValidRoot\n * \n * Returns true if the given cell is a valid root for the cell display\n * hierarchy. This implementation returns true for all non-null values.\n * \n * Parameters:\n * \n * cell - <mxCell> which should be checked as a possible root.\n */\nmxGraph.prototype.isValidRoot = function(cell)\n{\n\treturn (cell != null);\n};\n\n/**\n * Group: Graph display\n */\n \n/**\n * Function: getGraphBounds\n * \n * Returns the bounds of the visible graph. Shortcut to\n * <mxGraphView.getGraphBounds>. See also: <getBoundingBoxFromGeometry>.\n */\n mxGraph.prototype.getGraphBounds = function()\n {\n \treturn this.view.getGraphBounds();\n };\n\n/**\n * Function: getCellBounds\n * \n * Returns the scaled, translated bounds for the given cell. See\n * <mxGraphView.getBounds> for arrays.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bounds should be returned.\n * includeEdge - Optional boolean that specifies if the bounds of\n * the connected edges should be included. Default is false.\n * includeDescendants - Optional boolean that specifies if the bounds\n * of all descendants should be included. Default is false.\n */\nmxGraph.prototype.getCellBounds = function(cell, includeEdges, includeDescendants)\n{\n\tvar cells = [cell];\n\t\n\t// Includes all connected edges\n\tif (includeEdges)\n\t{\n\t\tcells = cells.concat(this.model.getEdges(cell));\n\t}\n\t\n\tvar result = this.view.getBounds(cells);\n\t\n\t// Recursively includes the bounds of the children\n\tif (includeDescendants)\n\t{\n\t\tvar childCount = this.model.getChildCount(cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar tmp = this.getCellBounds(this.model.getChildAt(cell, i),\n\t\t\t\tincludeEdges, true);\n\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\tresult.add(tmp);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = tmp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getBoundingBoxFromGeometry\n * \n * Returns the bounding box for the geometries of the vertices in the\n * given array of cells. This can be used to find the graph bounds during\n * a layout operation (ie. before the last endUpdate) as follows:\n * \n * (code)\n * var cells = graph.getChildCells(graph.getDefaultParent(), true, true);\n * var bounds = graph.getBoundingBoxFromGeometry(cells, true);\n * (end)\n * \n * This can then be used to move cells to the origin:\n * \n * (code)\n * if (bounds.x < 0 || bounds.y < 0)\n * {\n *   graph.moveCells(cells, -Math.min(bounds.x, 0), -Math.min(bounds.y, 0))\n * }\n * (end)\n * \n * Or to translate the graph view:\n * \n * (code)\n * if (bounds.x < 0 || bounds.y < 0)\n * {\n *   graph.view.setTranslate(-Math.min(bounds.x, 0), -Math.min(bounds.y, 0));\n * }\n * (end)\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose bounds should be returned.\n * includeEdges - Specifies if edge bounds should be included by computing\n * the bounding box for all points in geometry. Default is false.\n */\nmxGraph.prototype.getBoundingBoxFromGeometry = function(cells, includeEdges)\n{\n\tincludeEdges = (includeEdges != null) ? includeEdges : false;\n\tvar result = null;\n\t\n\tif (cells != null)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (includeEdges || this.model.isVertex(cells[i]))\n\t\t\t{\n\t\t\t\t// Computes the bounding box for the points in the geometry\n\t\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\t\n\t\t\t\tif (geo != null)\n\t\t\t\t{\n\t\t\t\t\tvar bbox = null;\n\t\t\t\t\t\n\t\t\t\t\tif (this.model.isEdge(cells[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar addPoint = function(pt)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (pt != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (tmp == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmp = new mxRectangle(pt.x, pt.y, 0, 0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmp.add(new mxRectangle(pt.x, pt.y, 0, 0));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.model.getTerminal(cells[i], true) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddPoint(geo.getTerminalPoint(true));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.model.getTerminal(cells[i], false) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddPoint(geo.getTerminalPoint(false));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tvar pts = geo.points;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (pts != null && pts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar tmp = new mxRectangle(pts[0].x, pts[0].y, 0, 0);\n\n\t\t\t\t\t\t\tfor (var j = 1; j < pts.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\taddPoint(pts[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tbbox = tmp;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (geo.relative)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (this.model.isVertex(parent) && parent != this.view.currentRoot)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar tmp = this.getBoundingBoxFromGeometry([parent], false);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbbox = new mxRectangle(geo.x * tmp.width, geo.y * tmp.height, geo.width, geo.height);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (mxUtils.indexOf(cells, parent) >= 0)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tbbox.x += tmp.x;\n\t\t\t\t\t\t\t\t\t\tbbox.y += tmp.y;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbbox = mxRectangle.fromRectangle(geo);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (this.model.isVertex(parent) && mxUtils.indexOf(cells, parent) >= 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar tmp = this.getBoundingBoxFromGeometry([parent], false);\n\n\t\t\t\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbbox.x += tmp.x;\n\t\t\t\t\t\t\t\t\tbbox.y += tmp.y;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (bbox != null && geo.offset != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbbox.x += geo.offset.x;\n\t\t\t\t\t\t\tbbox.y += geo.offset.y;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar style = this.getCurrentCellStyle(cells[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (bbox != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar angle = mxUtils.getValue(style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (angle != 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tbbox = mxUtils.getBoundingBox(bbox, angle);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (result == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresult = mxRectangle.fromRectangle(bbox);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresult.add(bbox);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: refresh\n * \n * Clears all cell states or the states for the hierarchy starting at the\n * given cell and validates the graph. This fires a refresh event as the\n * last step.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> for which the cell states should be cleared.\n */\nmxGraph.prototype.refresh = function(cell)\n{\n\tthis.view.clear(cell, cell == null);\n\tthis.view.validate();\n\tthis.sizeDidChange();\n\tthis.fireEvent(new mxEventObject(mxEvent.REFRESH));\n};\n\n/**\n * Function: snap\n * \n * Snaps the given numeric value to the grid if <gridEnabled> is true.\n * \n * Parameters:\n * \n * value - Numeric value to be snapped to the grid.\n */\nmxGraph.prototype.snap = function(value)\n{\n\tif (this.gridEnabled)\n\t{\n\t\tvalue = Math.round(value / this.gridSize ) * this.gridSize;\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: snapDelta\n * \n * Snaps the given delta with the given scaled bounds.\n */\nmxGraph.prototype.snapDelta = function(delta, bounds, ignoreGrid, ignoreHorizontal, ignoreVertical)\n{\n\tvar t = this.view.translate;\n\tvar s = this.view.scale;\n\t\n\tif (!ignoreGrid && this.gridEnabled)\n\t{\n\t\tvar tol = this.gridSize * s * 0.5;\n\t\t\n\t\tif (!ignoreHorizontal)\n\t\t{\n\t\t\tvar tx = bounds.x - (this.snap(bounds.x / s - t.x) + t.x) * s;\n\t\t\t\n\t\t\tif (Math.abs(delta.x- tx) < tol)\n\t\t\t{\n\t\t\t\tdelta.x = 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdelta.x = this.snap(delta.x / s) * s - tx;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!ignoreVertical)\n\t\t{\n\t\t\tvar ty = bounds.y - (this.snap(bounds.y / s - t.y) + t.y) * s;\n\t\t\t\t\n\t\t\tif (Math.abs(delta.y - ty) < tol)\n\t\t\t{\n\t\t\t\tdelta.y = 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdelta.y = this.snap(delta.y / s) * s - ty;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tvar tol = 0.5 * s;\n\t\t\n\t\tif (!ignoreHorizontal)\n\t\t{\n\t\t\tvar tx = bounds.x - (Math.round(bounds.x / s - t.x) + t.x) * s;\n\t\t\t\n\t\t\tif (Math.abs(delta.x - tx) < tol)\n\t\t\t{\n\t\t\t\tdelta.x = 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdelta.x = Math.round(delta.x / s) * s - tx;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!ignoreVertical)\n\t\t{\t\t\n\t\t\tvar ty = bounds.y - (Math.round(bounds.y / s - t.y) + t.y) * s;\n\t\t\t\n\t\t\tif (Math.abs(delta.y - ty) < tol)\n\t\t\t{\n\t\t\t\tdelta.y = 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdelta.y = Math.round(delta.y / s) * s - ty;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn delta;\n};\n\n/**\n * Function: panGraph\n * \n * Shifts the graph display by the given amount. This is used to preview\n * panning operations, use <mxGraphView.setTranslate> to set a persistent\n * translation of the view. Fires <mxEvent.PAN>.\n * \n * Parameters:\n * \n * dx - Amount to shift the graph along the x-axis.\n * dy - Amount to shift the graph along the y-axis.\n */\nmxGraph.prototype.panGraph = function(dx, dy)\n{\n\tif (this.useScrollbarsForPanning && mxUtils.hasScrollbars(this.container))\n\t{\n\t\tthis.container.scrollLeft = -dx;\n\t\tthis.container.scrollTop = -dy;\n\t}\n\telse\n\t{\n\t\tvar canvas = this.view.getCanvas();\n\t\t\n\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\t// Puts everything inside the container in a DIV so that it\n\t\t\t// can be moved without changing the state of the container\n\t\t\tif (dx == 0 && dy == 0)\n\t\t\t{\n\t\t\t\t// Workaround for ignored removeAttribute on SVG element in IE9 standards\n\t\t\t\tif (mxClient.IS_IE)\n\t\t\t\t{\n\t\t\t\t\tcanvas.setAttribute('transform', 'translate(' + dx + ',' + dy + ')');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcanvas.removeAttribute('transform');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.shiftPreview1 != null)\n\t\t\t\t{\n\t\t\t\t\tvar child = this.shiftPreview1.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (child != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\t\tthis.container.appendChild(child);\n\t\t\t\t\t\tchild = next;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.shiftPreview1.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.shiftPreview1.parentNode.removeChild(this.shiftPreview1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.shiftPreview1 = null;\n\t\t\t\t\t\n\t\t\t\t\tthis.container.appendChild(canvas.parentNode);\n\t\t\t\t\t\n\t\t\t\t\tchild = this.shiftPreview2.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (child != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\t\tthis.container.appendChild(child);\n\t\t\t\t\t\tchild = next;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.shiftPreview2.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.shiftPreview2.parentNode.removeChild(this.shiftPreview2);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.shiftPreview2 = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcanvas.setAttribute('transform', 'translate(' + dx + ',' + dy + ')');\n\t\t\t\t\n\t\t\t\tif (this.shiftPreview1 == null)\n\t\t\t\t{\n\t\t\t\t\t// Needs two divs for stuff before and after the SVG element\n\t\t\t\t\tthis.shiftPreview1 = document.createElement('div');\n\t\t\t\t\tthis.shiftPreview1.style.position = 'absolute';\n\t\t\t\t\tthis.shiftPreview1.style.overflow = 'visible';\n\t\t\t\t\t\n\t\t\t\t\tthis.shiftPreview2 = document.createElement('div');\n\t\t\t\t\tthis.shiftPreview2.style.position = 'absolute';\n\t\t\t\t\tthis.shiftPreview2.style.overflow = 'visible';\n\n\t\t\t\t\tvar current = this.shiftPreview1;\n\t\t\t\t\tvar child = this.container.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (child != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// SVG element is moved via transform attribute\n\t\t\t\t\t\tif (child != canvas.parentNode)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrent.appendChild(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrent = this.shiftPreview2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tchild = next;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Inserts elements only if not empty\n\t\t\t\t\tif (this.shiftPreview1.firstChild != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.container.insertBefore(this.shiftPreview1, canvas.parentNode);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.shiftPreview2.firstChild != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.container.appendChild(this.shiftPreview2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.shiftPreview1.style.left = dx + 'px';\n\t\t\t\tthis.shiftPreview1.style.top = dy + 'px';\n\t\t\t\tthis.shiftPreview2.style.left = dx + 'px';\n\t\t\t\tthis.shiftPreview2.style.top = dy + 'px';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcanvas.style.left = dx + 'px';\n\t\t\tcanvas.style.top = dy + 'px';\n\t\t}\n\t\t\n\t\tthis.panDx = dx;\n\t\tthis.panDy = dy;\n\n\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN));\n\t}\n};\n\n/**\n * Function: zoomIn\n * \n * Zooms into the graph by <zoomFactor>.\n */\nmxGraph.prototype.zoomIn = function()\n{\n\tthis.zoom(this.zoomFactor);\n};\n\n/**\n * Function: zoomOut\n * \n * Zooms out of the graph by <zoomFactor>.\n */\nmxGraph.prototype.zoomOut = function()\n{\n\tthis.zoom(1 / this.zoomFactor);\n};\n\n/**\n * Function: zoomActual\n * \n * Resets the zoom and panning in the view.\n */\nmxGraph.prototype.zoomActual = function()\n{\n\tif (this.view.scale == 1)\n\t{\n\t\tthis.view.setTranslate(0, 0);\n\t}\n\telse\n\t{\n\t\tthis.view.translate.x = 0;\n\t\tthis.view.translate.y = 0;\n\n\t\tthis.view.setScale(1);\n\t}\n};\n\n/**\n * Function: zoomTo\n * \n * Zooms the graph to the given scale with an optional boolean center\n * argument, which is passd to <zoom>.\n */\nmxGraph.prototype.zoomTo = function(scale, center)\n{\n\tthis.zoom(scale / this.view.scale, center);\n};\n\n/**\n * Function: center\n * \n * Centers the graph in the container.\n * \n * Parameters:\n * \n * horizontal - Optional boolean that specifies if the graph should be centered\n * horizontally. Default is true.\n * vertical - Optional boolean that specifies if the graph should be centered\n * vertically. Default is true.\n * cx - Optional float that specifies the horizontal center. Default is 0.5.\n * cy - Optional float that specifies the vertical center. Default is 0.5.\n */\nmxGraph.prototype.center = function(horizontal, vertical, cx, cy)\n{\n\thorizontal = (horizontal != null) ? horizontal : true;\n\tvertical = (vertical != null) ? vertical : true;\n\tcx = (cx != null) ? cx : 0.5;\n\tcy = (cy != null) ? cy : 0.5;\n\t\n\tvar hasScrollbars = mxUtils.hasScrollbars(this.container);\n\tvar padding = 2 * this.getBorder();\n\tvar cw = this.container.clientWidth - padding;\n\tvar ch = this.container.clientHeight - padding;\n\tvar bounds = this.getGraphBounds();\n\n\tvar t = this.view.translate;\n\tvar s = this.view.scale;\n\n\tvar dx = (horizontal) ? cw - bounds.width : 0;\n\tvar dy = (vertical) ? ch - bounds.height : 0;\n\t\n\tif (!hasScrollbars)\n\t{\n\t\tthis.view.setTranslate((horizontal) ? Math.floor(t.x - bounds.x * s + dx * cx / s) : t.x,\n\t\t\t(vertical) ? Math.floor(t.y - bounds.y * s + dy * cy / s) : t.y);\n\t}\n\telse\n\t{\n\t\tbounds.x -= t.x;\n\t\tbounds.y -= t.y;\n\t\n\t\tvar sw = this.container.scrollWidth;\n\t\tvar sh = this.container.scrollHeight;\n\t\t\n\t\tif (sw > cw)\n\t\t{\n\t\t\tdx = 0;\n\t\t}\n\t\t\n\t\tif (sh > ch)\n\t\t{\n\t\t\tdy = 0;\n\t\t}\n\n\t\tthis.view.setTranslate(Math.floor(dx / 2 - bounds.x), Math.floor(dy / 2 - bounds.y));\n\t\tthis.container.scrollLeft = (sw - cw) / 2;\n\t\tthis.container.scrollTop = (sh - ch) / 2;\n\t}\n};\n\n/**\n * Function: zoom\n * \n * Zooms the graph using the given factor. Center is an optional boolean\n * argument that keeps the graph scrolled to the center. If the center argument\n * is omitted, then <centerZoom> will be used as its value.\n */\nmxGraph.prototype.zoom = function(factor, center)\n{\n\tcenter = (center != null) ? center : this.centerZoom;\n\tvar scale = Math.round(this.view.scale * factor * 100) / 100;\n\tvar state = this.view.getState(this.getSelectionCell());\n\tfactor = scale / this.view.scale;\n\t\n\tif (this.keepSelectionVisibleOnZoom && state != null)\n\t{\n\t\tvar rect = new mxRectangle(state.x * factor, state.y * factor,\n\t\t\tstate.width * factor, state.height * factor);\n\t\t\n\t\t// Refreshes the display only once if a scroll is carried out\n\t\tthis.view.scale = scale;\n\t\t\n\t\tif (!this.scrollRectToVisible(rect))\n\t\t{\n\t\t\tthis.view.revalidate();\n\t\t\t\n\t\t\t// Forces an event to be fired but does not revalidate again\n\t\t\tthis.view.setScale(scale);\n\t\t}\n\t}\n\telse\n\t{\n\t\tvar hasScrollbars = mxUtils.hasScrollbars(this.container);\n\t\t\n\t\tif (center && !hasScrollbars)\n\t\t{\n\t\t\tvar dx = this.container.offsetWidth;\n\t\t\tvar dy = this.container.offsetHeight;\n\t\t\t\n\t\t\tif (factor > 1)\n\t\t\t{\n\t\t\t\tvar f = (factor - 1) / (scale * 2);\n\t\t\t\tdx *= -f;\n\t\t\t\tdy *= -f;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar f = (1 / factor - 1) / (this.view.scale * 2);\n\t\t\t\tdx *= f;\n\t\t\t\tdy *= f;\n\t\t\t}\n\n\t\t\tthis.view.scaleAndTranslate(scale,\n\t\t\t\tthis.view.translate.x + dx,\n\t\t\t\tthis.view.translate.y + dy);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Allows for changes of translate and scrollbars during setscale\n\t\t\tvar tx = this.view.translate.x;\n\t\t\tvar ty = this.view.translate.y;\n\t\t\tvar sl = this.container.scrollLeft;\n\t\t\tvar st = this.container.scrollTop;\n\t\t\t\n\t\t\tthis.view.setScale(scale);\n\t\t\t\n\t\t\tif (hasScrollbars)\n\t\t\t{\n\t\t\t\tvar dx = 0;\n\t\t\t\tvar dy = 0;\n\t\t\t\t\n\t\t\t\tif (center)\n\t\t\t\t{\n\t\t\t\t\tdx = this.container.offsetWidth * (factor - 1) / 2;\n\t\t\t\t\tdy = this.container.offsetHeight * (factor - 1) / 2;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.container.scrollLeft = (this.view.translate.x - tx) * this.view.scale + Math.round(sl * factor + dx);\n\t\t\t\tthis.container.scrollTop = (this.view.translate.y - ty) * this.view.scale + Math.round(st * factor + dy);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: zoomToRect\n * \n * Zooms the graph to the specified rectangle. If the rectangle does not have same aspect\n * ratio as the display container, it is increased in the smaller relative dimension only\n * until the aspect match. The original rectangle is centralised within this expanded one.\n * \n * Note that the input rectangular must be un-scaled and un-translated.\n * \n * Parameters:\n * \n * rect - The un-scaled and un-translated rectangluar region that should be just visible \n * after the operation\n */\nmxGraph.prototype.zoomToRect = function(rect)\n{\n\tvar scaleX = this.container.clientWidth / rect.width;\n\tvar scaleY = this.container.clientHeight / rect.height;\n\tvar aspectFactor = scaleX / scaleY;\n\n\t// Remove any overlap of the rect outside the client area\n\trect.x = Math.max(0, rect.x);\n\trect.y = Math.max(0, rect.y);\n\tvar rectRight = Math.min(this.container.scrollWidth, rect.x + rect.width);\n\tvar rectBottom = Math.min(this.container.scrollHeight, rect.y + rect.height);\n\trect.width = rectRight - rect.x;\n\trect.height = rectBottom - rect.y;\n\n\t// The selection area has to be increased to the same aspect\n\t// ratio as the container, centred around the centre point of the \n\t// original rect passed in.\n\tif (aspectFactor < 1.0)\n\t{\n\t\t// Height needs increasing\n\t\tvar newHeight = rect.height / aspectFactor;\n\t\tvar deltaHeightBuffer = (newHeight - rect.height) / 2.0;\n\t\trect.height = newHeight;\n\t\t\n\t\t// Assign up to half the buffer to the upper part of the rect, not crossing 0\n\t\t// put the rest on the bottom\n\t\tvar upperBuffer = Math.min(rect.y , deltaHeightBuffer);\n\t\trect.y = rect.y - upperBuffer;\n\t\t\n\t\t// Check if the bottom has extended too far\n\t\trectBottom = Math.min(this.container.scrollHeight, rect.y + rect.height);\n\t\trect.height = rectBottom - rect.y;\n\t}\n\telse\n\t{\n\t\t// Width needs increasing\n\t\tvar newWidth = rect.width * aspectFactor;\n\t\tvar deltaWidthBuffer = (newWidth - rect.width) / 2.0;\n\t\trect.width = newWidth;\n\t\t\n\t\t// Assign up to half the buffer to the upper part of the rect, not crossing 0\n\t\t// put the rest on the bottom\n\t\tvar leftBuffer = Math.min(rect.x , deltaWidthBuffer);\n\t\trect.x = rect.x - leftBuffer;\n\t\t\n\t\t// Check if the right hand side has extended too far\n\t\trectRight = Math.min(this.container.scrollWidth, rect.x + rect.width);\n\t\trect.width = rectRight - rect.x;\n\t}\n\n\tvar scale = this.container.clientWidth / rect.width;\n\tvar newScale = this.view.scale * scale;\n\n\tif (!mxUtils.hasScrollbars(this.container))\n\t{\n\t\tthis.view.scaleAndTranslate(newScale, (this.view.translate.x - rect.x / this.view.scale), (this.view.translate.y - rect.y / this.view.scale));\n\t}\n\telse\n\t{\n\t\tthis.view.setScale(newScale);\n\t\tthis.container.scrollLeft = Math.round(rect.x * scale);\n\t\tthis.container.scrollTop = Math.round(rect.y * scale);\n\t}\n};\n\n/**\n * Function: scrollCellToVisible\n * \n * Pans the graph so that it shows the given cell. Optionally the cell may\n * be centered in the container.\n * \n * To center a given graph if the <container> has no scrollbars, use the following code.\n * \n * [code]\n * var bounds = graph.getGraphBounds();\n * graph.view.setTranslate(-bounds.x - (bounds.width - container.clientWidth) / 2,\n * \t\t\t\t\t\t   -bounds.y - (bounds.height - container.clientHeight) / 2);\n * [/code]\n * \n * Parameters:\n * \n * cell - <mxCell> to be made visible.\n * center - Optional boolean flag. Default is false.\n */\nmxGraph.prototype.scrollCellToVisible = function(cell, center)\n{\n\tvar x = -this.view.translate.x;\n\tvar y = -this.view.translate.y;\n\n\tvar state = this.view.getState(cell);\n\n\tif (state != null)\n\t{\n\t\tvar bounds = new mxRectangle(x + state.x, y + state.y, state.width,\n\t\t\tstate.height);\n\n\t\tif (center && this.container != null)\n\t\t{\n\t\t\tvar w = this.container.clientWidth;\n\t\t\tvar h = this.container.clientHeight;\n\n\t\t\tbounds.x = bounds.getCenterX() - w / 2;\n\t\t\tbounds.width = w;\n\t\t\tbounds.y = bounds.getCenterY() - h / 2;\n\t\t\tbounds.height = h;\n\t\t}\n\t\t\n\t\tvar tr = new mxPoint(this.view.translate.x, this.view.translate.y);\n\n\t\tif (this.scrollRectToVisible(bounds))\n\t\t{\n\t\t\t// Triggers an update via the view's event source\n\t\t\tvar tr2 = new mxPoint(this.view.translate.x, this.view.translate.y);\n\t\t\tthis.view.translate.x = tr.x;\n\t\t\tthis.view.translate.y = tr.y;\n\t\t\tthis.view.setTranslate(tr2.x, tr2.y);\n\t\t}\n\t}\n};\n\n/**\n * Function: scrollRectToVisible\n * \n * Pans the graph so that it shows the given rectangle.\n * \n * Parameters:\n * \n * rect - <mxRectangle> to be made visible.\n */\nmxGraph.prototype.scrollRectToVisible = function(rect)\n{\n\tvar isChanged = false;\n\t\n\tif (rect != null)\n\t{\n\t\tvar w = this.container.offsetWidth;\n\t\tvar h = this.container.offsetHeight;\n\n        var widthLimit = Math.min(w, rect.width);\n        var heightLimit = Math.min(h, rect.height);\n\n\t\tif (mxUtils.hasScrollbars(this.container))\n\t\t{\n\t\t\tvar c = this.container;\n\t\t\trect.x += this.view.translate.x;\n\t\t\trect.y += this.view.translate.y;\n\t\t\tvar dx = c.scrollLeft - rect.x;\n\t\t\tvar ddx = Math.max(dx - c.scrollLeft, 0);\n\n\t\t\tif (dx > 0)\n\t\t\t{\n\t\t\t\tc.scrollLeft -= dx + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdx = rect.x + widthLimit - c.scrollLeft - c.clientWidth;\n\n\t\t\t\tif (dx > 0)\n\t\t\t\t{\n\t\t\t\t\tc.scrollLeft += dx + 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar dy = c.scrollTop - rect.y;\n\t\t\tvar ddy = Math.max(0, dy - c.scrollTop);\n\n\t\t\tif (dy > 0)\n\t\t\t{\n\t\t\t\tc.scrollTop -= dy + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdy = rect.y + heightLimit - c.scrollTop - c.clientHeight;\n\n\t\t\t\tif (dy > 0)\n\t\t\t\t{\n\t\t\t\t\tc.scrollTop += dy + 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.useScrollbarsForPanning && (ddx != 0 || ddy != 0))\n\t\t\t{\n\t\t\t\tthis.view.setTranslate(ddx, ddy);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar x = -this.view.translate.x;\n\t\t\tvar y = -this.view.translate.y;\n\n\t\t\tvar s = this.view.scale;\n\n\t\t\tif (rect.x + widthLimit > x + w)\n\t\t\t{\n\t\t\t\tthis.view.translate.x -= (rect.x + widthLimit - w - x) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (rect.y + heightLimit > y + h)\n\t\t\t{\n\t\t\t\tthis.view.translate.y -= (rect.y + heightLimit - h - y) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (rect.x < x)\n\t\t\t{\n\t\t\t\tthis.view.translate.x += (x - rect.x) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (rect.y  < y)\n\t\t\t{\n\t\t\t\tthis.view.translate.y += (y - rect.y) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (isChanged)\n\t\t\t{\n\t\t\t\tthis.view.refresh();\n\t\t\t\t\n\t\t\t\t// Repaints selection marker (ticket 18)\n\t\t\t\tif (this.selectionCellsHandler != null)\n\t\t\t\t{\n\t\t\t\t\tthis.selectionCellsHandler.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn isChanged;\n};\n\n/**\n * Function: getCellGeometry\n * \n * Returns the <mxGeometry> for the given cell. This implementation uses\n * <mxGraphModel.getGeometry>. Subclasses can override this to implement\n * specific geometries for cells in only one graph, that is, it can return\n * geometries that depend on the current state of the view.\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry should be returned.\n */\nmxGraph.prototype.getCellGeometry = function(cell)\n{\n\treturn this.model.getGeometry(cell);\n};\n\n/**\n * Function: isCellVisible\n * \n * Returns true if the given cell is visible in this graph. This\n * implementation uses <mxGraphModel.isVisible>. Subclassers can override\n * this to implement specific visibility for cells in only one graph, that\n * is, without affecting the visible state of the cell.\n * \n * When using dynamic filter expressions for cell visibility, then the\n * graph should be revalidated after the filter expression has changed.\n * \n * Parameters:\n * \n * cell - <mxCell> whose visible state should be returned.\n */\nmxGraph.prototype.isCellVisible = function(cell)\n{\n\treturn this.model.isVisible(cell);\n};\n\n/**\n * Function: isCellCollapsed\n * \n * Returns true if the given cell is collapsed in this graph. This\n * implementation uses <mxGraphModel.isCollapsed>. Subclassers can override\n * this to implement specific collapsed states for cells in only one graph,\n * that is, without affecting the collapsed state of the cell.\n * \n * When using dynamic filter expressions for the collapsed state, then the\n * graph should be revalidated after the filter expression has changed.\n * \n * Parameters:\n * \n * cell - <mxCell> whose collapsed state should be returned.\n */\nmxGraph.prototype.isCellCollapsed = function(cell)\n{\n\treturn this.model.isCollapsed(cell);\n};\n\n/**\n * Function: isCellConnectable\n * \n * Returns true if the given cell is connectable in this graph. This\n * implementation uses <mxGraphModel.isConnectable>. Subclassers can override\n * this to implement specific connectable states for cells in only one graph,\n * that is, without affecting the connectable state of the cell in the model.\n * \n * Parameters:\n * \n * cell - <mxCell> whose connectable state should be returned.\n */\nmxGraph.prototype.isCellConnectable = function(cell)\n{\n\treturn this.model.isConnectable(cell);\n};\n\n/**\n * Function: isOrthogonal\n * \n * Returns true if perimeter points should be computed such that the\n * resulting edge has only horizontal or vertical segments.\n * \n * Parameters:\n * \n * edge - <mxCellState> that represents the edge.\n */\nmxGraph.prototype.isOrthogonal = function(edge)\n{\n\tvar orthogonal = edge.style[mxConstants.STYLE_ORTHOGONAL];\n\t\n\tif (orthogonal != null)\n\t{\n\t\treturn orthogonal;\n\t}\n\t\n\tvar tmp = this.view.getEdgeStyle(edge);\n\t\n\treturn tmp == mxEdgeStyle.SegmentConnector ||\n\t\ttmp == mxEdgeStyle.ElbowConnector ||\n\t\ttmp == mxEdgeStyle.SideToSide ||\n\t\ttmp == mxEdgeStyle.TopToBottom ||\n\t\ttmp == mxEdgeStyle.EntityRelation ||\n\t\ttmp == mxEdgeStyle.OrthConnector;\n};\n\n/**\n * Function: isLoop\n * \n * Returns true if the given cell state is a loop.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents a potential loop.\n */\nmxGraph.prototype.isLoop = function(state)\n{\n\tvar src = state.getVisibleTerminalState(true);\n\tvar trg = state.getVisibleTerminalState(false);\n\t\n\treturn (src != null && src == trg);\n};\n\n/**\n * Function: isCloneEvent\n * \n * Returns true if the given event is a clone event. This implementation\n * returns true if control is pressed.\n */\nmxGraph.prototype.isCloneEvent = function(evt)\n{\n\treturn mxEvent.isControlDown(evt);\n};\n\n/**\n * Function: isTransparentClickEvent\n * \n * Hook for implementing click-through behaviour on selected cells. If this\n * returns true the cell behind the selected cell will be selected. This\n * implementation returns false;\n */\nmxGraph.prototype.isTransparentClickEvent = function(evt)\n{\n\treturn false;\n};\n\n/**\n * Function: isToggleEvent\n * \n * Returns true if the given event is a toggle event. This implementation\n * returns true if the meta key (Cmd) is pressed on Macs or if control is\n * pressed on any other platform.\n */\nmxGraph.prototype.isToggleEvent = function(evt)\n{\n\treturn (mxClient.IS_MAC) ? mxEvent.isMetaDown(evt) : mxEvent.isControlDown(evt);\n};\n\n/**\n * Function: isGridEnabledEvent\n * \n * Returns true if the given mouse event should be aligned to the grid.\n */\nmxGraph.prototype.isGridEnabledEvent = function(evt)\n{\n\treturn evt != null && !mxEvent.isAltDown(evt);\n};\n\n/**\n * Function: isConstrainedEvent\n * \n * Returns true if the given mouse event should be aligned to the grid.\n */\nmxGraph.prototype.isConstrainedEvent = function(evt)\n{\n\treturn mxEvent.isShiftDown(evt);\n};\n\n/**\n * Function: isIgnoreTerminalEvent\n * \n * Returns true if the given mouse event should not allow any connections to be\n * made. This implementation returns false.\n */\nmxGraph.prototype.isIgnoreTerminalEvent = function(evt)\n{\n\treturn false;\n};\n\n/**\n * Group: Validation\n */\n\n/**\n * Function: validationAlert\n * \n * Displays the given validation error in a dialog. This implementation uses\n * mxUtils.alert.\n */\nmxGraph.prototype.validationAlert = function(message)\n{\n\tmxUtils.alert(message);\n};\n\n/**\n * Function: isEdgeValid\n * \n * Checks if the return value of <getEdgeValidationError> for the given\n * arguments is null.\n *  \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.isEdgeValid = function(edge, source, target)\n{\n\treturn this.getEdgeValidationError(edge, source, target) == null;\n};\n\n/**\n * Function: getEdgeValidationError\n * \n * Returns the validation error message to be displayed when inserting or\n * changing an edges' connectivity. A return value of null means the edge\n * is valid, a return value of '' means it's not valid, but do not display\n * an error message. Any other (non-empty) string returned from this method\n * is displayed as an error message when trying to connect an edge to a\n * source and target. This implementation uses the <multiplicities>, and\n * checks <multigraph>, <allowDanglingEdges> and <allowLoops> to generate\n * validation errors.\n * \n * For extending this method with specific checks for source/target cells,\n * the method can be extended as follows. Returning an empty string means\n * the edge is invalid with no error message, a non-null string specifies\n * the error message, and null means the edge is valid.\n * \n * (code)\n * graph.getEdgeValidationError = function(edge, source, target)\n * {\n *   if (source != null && target != null &&\n *     this.model.getValue(source) != null &&\n *     this.model.getValue(target) != null)\n *   {\n *     if (target is not valid for source)\n *     {\n *       return 'Invalid Target';\n *     }\n *   }\n *   \n *   // \"Supercall\"\n *   return mxGraph.prototype.getEdgeValidationError.apply(this, arguments);\n * }\n * (end)\n *  \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.getEdgeValidationError = function(edge, source, target)\n{\n\tif (edge != null && !this.isAllowDanglingEdges() && (source == null || target == null))\n\t{\n\t\treturn '';\n\t}\n\t\n\tif (edge != null && this.model.getTerminal(edge, true) == null &&\n\t\tthis.model.getTerminal(edge, false) == null)\t\n\t{\n\t\treturn null;\n\t}\n\t\n\t// Checks if we're dealing with a loop\n\tif (!this.allowLoops && source == target && source != null)\n\t{\n\t\treturn '';\n\t}\n\t\n\t// Checks if the connection is generally allowed\n\tif (!this.isValidConnection(source, target))\n\t{\n\t\treturn '';\n\t}\n\n\tif (source != null && target != null)\n\t{\n\t\tvar error = '';\n\n\t\t// Checks if the cells are already connected\n\t\t// and adds an error message if required\t\t\t\n\t\tif (!this.multigraph)\n\t\t{\n\t\t\tvar tmp = this.model.getEdgesBetween(source, target, true);\n\t\t\t\n\t\t\t// Checks if the source and target are not connected by another edge\n\t\t\tif (tmp.length > 1 || (tmp.length == 1 && tmp[0] != edge))\n\t\t\t{\n\t\t\t\terror += (mxResources.get(this.alreadyConnectedResource) ||\n\t\t\t\t\tthis.alreadyConnectedResource)+'\\n';\n\t\t\t}\n\t\t}\n\n\t\t// Gets the number of outgoing edges from the source\n\t\t// and the number of incoming edges from the target\n\t\t// without counting the edge being currently changed.\n\t\tvar sourceOut = this.model.getDirectedEdgeCount(source, true, edge);\n\t\tvar targetIn = this.model.getDirectedEdgeCount(target, false, edge);\n\n\t\t// Checks the change against each multiplicity rule\n\t\tif (this.multiplicities != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.multiplicities.length; i++)\n\t\t\t{\n\t\t\t\tvar err = this.multiplicities[i].check(this, edge, source,\n\t\t\t\t\ttarget, sourceOut, targetIn);\n\t\t\t\t\n\t\t\t\tif (err != null)\n\t\t\t\t{\n\t\t\t\t\terror += err;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Validates the source and target terminals independently\n\t\tvar err = this.validateEdge(edge, source, target);\n\t\t\n\t\tif (err != null)\n\t\t{\n\t\t\terror += err;\n\t\t}\n\t\t\n\t\treturn (error.length > 0) ? error : null;\n\t}\n\t\n\treturn (this.allowDanglingEdges) ? null : '';\n};\n\n/**\n * Function: validateEdge\n * \n * Hook method for subclassers to return an error message for the given\n * edge and terminals. This implementation returns null.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.validateEdge = function(edge, source, target)\n{\n\treturn null;\n};\n\n/**\n * Function: validateGraph\n * \n * Validates the graph by validating each descendant of the given cell or\n * the root of the model. Context is an object that contains the validation\n * state for the complete validation run. The validation errors are\n * attached to their cells using <setCellWarning>. Returns null in the case of\n * successful validation or an array of strings (warnings) in the case of\n * failed validations.\n * \n * Paramters:\n * \n * cell - Optional <mxCell> to start the validation recursion. Default is\n * the graph root.\n * context - Object that represents the global validation state.\n */\nmxGraph.prototype.validateGraph = function(cell, context)\n{\n\tcell = (cell != null) ? cell : this.model.getRoot();\n\tcontext = (context != null) ? context : new Object();\n\t\n\tvar isValid = true;\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar tmp = this.model.getChildAt(cell, i);\n\t\tvar ctx = context;\n\t\t\n\t\tif (this.isValidRoot(tmp))\n\t\t{\n\t\t\tctx = new Object();\n\t\t}\n\t\t\n\t\tvar warn = this.validateGraph(tmp, ctx);\n\t\t\n\t\tif (warn != null)\n\t\t{\n\t\t\tthis.setCellWarning(tmp, warn.replace(/\\n/g, '<br>'));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.setCellWarning(tmp, null);\n\t\t}\n\t\t\n\t\tisValid = isValid && warn == null;\n\t}\n\t\n\tvar warning = '';\n\t\n\t// Adds error for invalid children if collapsed (children invisible)\n\tif (this.isCellCollapsed(cell) && !isValid)\n\t{\n\t\twarning += (mxResources.get(this.containsValidationErrorsResource) ||\n\t\t\tthis.containsValidationErrorsResource) + '\\n';\n\t}\n\t\n\t// Checks edges and cells using the defined multiplicities\n\tif (this.model.isEdge(cell))\n\t{\n\t\twarning += this.getEdgeValidationError(cell,\n\t\tthis.model.getTerminal(cell, true),\n\t\tthis.model.getTerminal(cell, false)) || '';\n\t}\n\telse\n\t{\n\t\twarning += this.getCellValidationError(cell) || '';\n\t}\n\t\n\t// Checks custom validation rules\n\tvar err = this.validateCell(cell, context);\n\t\n\tif (err != null)\n\t{\n\t\twarning += err;\n\t}\n\t\n\t// Updates the display with the warning icons\n\t// before any potential alerts are displayed.\n\t// LATER: Move this into addCellOverlay. Redraw\n\t// should check if overlay was added or removed.\n\tif (this.model.getParent(cell) == null)\n\t{\n\t\tthis.view.validate();\n\t}\n\n\treturn (warning.length > 0 || !isValid) ? warning : null;\n};\n\n/**\n * Function: getCellValidationError\n * \n * Checks all <multiplicities> that cannot be enforced while the graph is\n * being modified, namely, all multiplicities that require a minimum of\n * 1 edge.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the multiplicities should be checked.\n */\nmxGraph.prototype.getCellValidationError = function(cell)\n{\n\tvar outCount = this.model.getDirectedEdgeCount(cell, true);\n\tvar inCount = this.model.getDirectedEdgeCount(cell, false);\n\tvar value = this.model.getValue(cell);\n\tvar error = '';\n\n\tif (this.multiplicities != null)\n\t{\n\t\tfor (var i = 0; i < this.multiplicities.length; i++)\n\t\t{\n\t\t\tvar rule = this.multiplicities[i];\n\t\t\t\n\t\t\tif (rule.source && mxUtils.isNode(value, rule.type,\n\t\t\t\trule.attr, rule.value) && (outCount > rule.max ||\n\t\t\t\toutCount < rule.min))\n\t\t\t{\n\t\t\t\terror += rule.countError + '\\n';\n\t\t\t}\n\t\t\telse if (!rule.source && mxUtils.isNode(value, rule.type,\n\t\t\t\t\trule.attr, rule.value) && (inCount > rule.max ||\n\t\t\t\t\tinCount < rule.min))\n\t\t\t{\n\t\t\t\terror += rule.countError + '\\n';\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (error.length > 0) ? error : null;\n};\n\n/**\n * Function: validateCell\n * \n * Hook method for subclassers to return an error message for the given\n * cell and validation context. This implementation returns null. Any HTML\n * breaks will be converted to linefeeds in the calling method.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the cell to validate.\n * context - Object that represents the global validation state.\n */\nmxGraph.prototype.validateCell = function(cell, context)\n{\n\treturn null;\n};\n\n/**\n * Group: Graph appearance\n */\n\n/**\n * Function: getBackgroundImage\n * \n * Returns the <backgroundImage> as an <mxImage>.\n */\nmxGraph.prototype.getBackgroundImage = function()\n{\n\treturn this.backgroundImage;\n};\n\n/**\n * Function: setBackgroundImage\n * \n * Sets the new <backgroundImage>.\n * \n * Parameters:\n * \n * image - New <mxImage> to be used for the background.\n */\nmxGraph.prototype.setBackgroundImage = function(image)\n{\n\tthis.backgroundImage = image;\n};\n\n/**\n * Function: getFoldingImage\n * \n * Returns the <mxImage> used to display the collapsed state of\n * the specified cell state. This returns null for all edges.\n */\nmxGraph.prototype.getFoldingImage = function(state)\n{\n\tif (state != null && this.foldingEnabled && !this.getModel().isEdge(state.cell))\n\t{\n\t\tvar tmp = this.isCellCollapsed(state.cell);\n\t\t\n\t\tif (this.isCellFoldable(state.cell, !tmp))\n\t\t{\n\t\t\treturn (tmp) ? this.collapsedImage : this.expandedImage;\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: convertValueToString\n * \n * Returns the textual representation for the given cell. This\n * implementation returns the nodename or string-representation of the user\n * object.\n *\n * Example:\n * \n * The following returns the label attribute from the cells user\n * object if it is an XML node.\n * \n * (code)\n * graph.convertValueToString = function(cell)\n * {\n * \treturn cell.getAttribute('label');\n * }\n * (end)\n * \n * See also: <cellLabelChanged>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose textual representation should be returned.\n */\nmxGraph.prototype.convertValueToString = function(cell)\n{\n\tvar value = this.model.getValue(cell);\n\t\n\tif (value != null)\n\t{\n\t\tif (mxUtils.isNode(value))\n\t\t{\n\t\t\treturn value.nodeName;\n\t\t}\n\t\telse if (typeof(value.toString) == 'function')\n\t\t{\n\t\t\treturn value.toString();\n\t\t}\n\t}\n\t\n\treturn '';\n};\n\n/**\n * Function: getLabel\n * \n * Returns a string or DOM node that represents the label for the given\n * cell. This implementation uses <convertValueToString> if <labelsVisible>\n * is true. Otherwise it returns an empty string.\n * \n * To truncate a label to match the size of the cell, the following code\n * can be used.\n * \n * (code)\n * graph.getLabel = function(cell)\n * {\n *   var label = mxGraph.prototype.getLabel.apply(this, arguments);\n * \n *   if (label != null && this.model.isVertex(cell))\n *   {\n *     var geo = this.getCellGeometry(cell);\n * \n *     if (geo != null)\n *     {\n *       var max = parseInt(geo.width / 8);\n * \n *       if (label.length > max)\n *       {\n *         label = label.substring(0, max)+'...';\n *       }\n *     }\n *   } \n *   return mxUtils.htmlEntities(label);\n * }\n * (end)\n * \n * A resize listener is needed in the graph to force a repaint of the label\n * after a resize.\n * \n * (code)\n * graph.addListener(mxEvent.RESIZE_CELLS, function(sender, evt)\n * {\n *   var cells = evt.getProperty('cells');\n * \n *   for (var i = 0; i < cells.length; i++)\n *   {\n *     this.view.removeState(cells[i]);\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be returned.\n */\nmxGraph.prototype.getLabel = function(cell)\n{\n\tvar result = '';\n\t\n\tif (this.labelsVisible && cell != null)\n\t{\n\t\tvar style = this.getCurrentCellStyle(cell);\n\t\t\n\t\tif (!mxUtils.getValue(style, mxConstants.STYLE_NOLABEL, false))\n\t\t{\n\t\t\tresult = this.convertValueToString(cell);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: isHtmlLabel\n * \n * Returns true if the label must be rendered as HTML markup. The default\n * implementation returns <htmlLabels>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be displayed as HTML markup.\n */\nmxGraph.prototype.isHtmlLabel = function(cell)\n{\n\treturn this.isHtmlLabels();\n};\n \n/**\n * Function: isHtmlLabels\n * \n * Returns <htmlLabels>.\n */\nmxGraph.prototype.isHtmlLabels = function()\n{\n\treturn this.htmlLabels;\n};\n \n/**\n * Function: setHtmlLabels\n * \n * Sets <htmlLabels>.\n */\nmxGraph.prototype.setHtmlLabels = function(value)\n{\n\tthis.htmlLabels = value;\n};\n\n/**\n * Function: isWrapping\n * \n * This enables wrapping for HTML labels.\n * \n * Returns true if no white-space CSS style directive should be used for\n * displaying the given cells label. This implementation returns true if\n * <mxConstants.STYLE_WHITE_SPACE> in the style of the given cell is 'wrap'.\n * \n * This is used as a workaround for IE ignoring the white-space directive\n * of child elements if the directive appears in a parent element. It\n * should be overridden to return true if a white-space directive is used\n * in the HTML markup that represents the given cells label. In order for\n * HTML markup to work in labels, <isHtmlLabel> must also return true\n * for the given cell.\n * \n * Example:\n * \n * (code)\n * graph.getLabel = function(cell)\n * {\n *   var tmp = mxGraph.prototype.getLabel.apply(this, arguments); // \"supercall\"\n *   \n *   if (this.model.isEdge(cell))\n *   {\n *     tmp = '<div style=\"width: 150px; white-space:normal;\">'+tmp+'</div>';\n *   }\n *   \n *   return tmp;\n * }\n * \n * graph.isWrapping = function(state)\n * {\n * \t return this.model.isEdge(state.cell);\n * }\n * (end)\n * \n * Makes sure no edge label is wider than 150 pixels, otherwise the content\n * is wrapped. Note: No width must be specified for wrapped vertex labels as\n * the vertex defines the width in its geometry.\n * \n * Parameters:\n * \n * state - <mxCell> whose label should be wrapped.\n */\nmxGraph.prototype.isWrapping = function(cell)\n{\n\treturn this.getCurrentCellStyle(cell)[mxConstants.STYLE_WHITE_SPACE] == 'wrap';\n};\n\n/**\n * Function: isLabelClipped\n * \n * Returns true if the overflow portion of labels should be hidden. If this\n * returns true then vertex labels will be clipped to the size of the vertices.\n * This implementation returns true if <mxConstants.STYLE_OVERFLOW> in the\n * style of the given cell is 'hidden'.\n * \n * Parameters:\n * \n * state - <mxCell> whose label should be clipped.\n */\nmxGraph.prototype.isLabelClipped = function(cell)\n{\n\treturn this.getCurrentCellStyle(cell)[mxConstants.STYLE_OVERFLOW] == 'hidden';\n};\n\n/**\n * Function: getTooltip\n * \n * Returns the string or DOM node that represents the tooltip for the given\n * state, node and coordinate pair. This implementation checks if the given\n * node is a folding icon or overlay and returns the respective tooltip. If\n * this does not result in a tooltip, the handler for the cell is retrieved\n * from <selectionCellsHandler> and the optional getTooltipForNode method is\n * called. If no special tooltip exists here then <getTooltipForCell> is used\n * with the cell in the given state as the argument to return a tooltip for the\n * given state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose tooltip should be returned.\n * node - DOM node that is currently under the mouse.\n * x - X-coordinate of the mouse.\n * y - Y-coordinate of the mouse.\n */\nmxGraph.prototype.getTooltip = function(state, node, x, y)\n{\n\tvar tip = null;\n\t\n\tif (state != null)\n\t{\n\t\t// Checks if the mouse is over the folding icon\n\t\tif (state.control != null && (node == state.control.node ||\n\t\t\tnode.parentNode == state.control.node))\n\t\t{\n\t\t\ttip = this.collapseExpandResource;\n\t\t\ttip = mxUtils.htmlEntities(mxResources.get(tip) || tip).replace(/\\\\n/g, '<br>');\n\t\t}\n\n\t\tif (tip == null && state.overlays != null)\n\t\t{\n\t\t\tstate.overlays.visit(function(id, shape)\n\t\t\t{\n\t\t\t\t// LATER: Exit loop if tip is not null\n\t\t\t\tif (tip == null && (node == shape.node || node.parentNode == shape.node))\n\t\t\t\t{\n\t\t\t\t\ttip = shape.overlay.toString();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\tif (tip == null)\n\t\t{\n\t\t\tvar handler = this.selectionCellsHandler.getHandler(state.cell);\n\t\t\t\n\t\t\tif (handler != null && typeof(handler.getTooltipForNode) == 'function')\n\t\t\t{\n\t\t\t\ttip = handler.getTooltipForNode(node);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (tip == null)\n\t\t{\n\t\t\ttip = this.getTooltipForCell(state.cell);\n\t\t}\n\t}\n\t\n\treturn tip;\n};\n\n/**\n * Function: getTooltipForCell\n * \n * Returns the string or DOM node to be used as the tooltip for the given\n * cell. This implementation uses the cells getTooltip function if it\n * exists, or else it returns <convertValueToString> for the cell.\n * \n * Example:\n * \n * (code)\n * graph.getTooltipForCell = function(cell)\n * {\n *   return 'Hello, World!';\n * }\n * (end)\n * \n * Replaces all tooltips with the string Hello, World!\n * \n * Parameters:\n * \n * cell - <mxCell> whose tooltip should be returned.\n */\nmxGraph.prototype.getTooltipForCell = function(cell)\n{\n\tvar tip = null;\n\t\n\tif (cell != null && cell.getTooltip != null)\n\t{\n\t\ttip = cell.getTooltip();\n\t}\n\telse\n\t{\n\t\ttip = this.convertValueToString(cell);\n\t}\n\t\n\treturn tip;\n};\n\n/**\n * Function: getLinkForCell\n * \n * Returns the string to be used as the link for the given cell. This\n * implementation returns null.\n * \n * Parameters:\n * \n * cell - <mxCell> whose tooltip should be returned.\n */\nmxGraph.prototype.getLinkForCell = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: getCursorForMouseEvent\n * \n * Returns the cursor value to be used for the CSS of the shape for the\n * given event. This implementation calls <getCursorForCell>.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> whose cursor should be returned.\n */\nmxGraph.prototype.getCursorForMouseEvent = function(me)\n{\n\treturn this.getCursorForCell(me.getCell());\n};\n\n/**\n * Function: getCursorForCell\n * \n * Returns the cursor value to be used for the CSS of the shape for the\n * given cell. This implementation returns null.\n * \n * Parameters:\n * \n * cell - <mxCell> whose cursor should be returned.\n */\nmxGraph.prototype.getCursorForCell = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: getStartSize\n * \n * Returns the start size of the given swimlane, that is, the width or\n * height of the part that contains the title, depending on the\n * horizontal style. The return value is an <mxRectangle> with either\n * width or height set as appropriate.\n * \n * Parameters:\n * \n * swimlane - <mxCell> whose start size should be returned.\n * ignoreState - Optional boolean that specifies if cell state should be ignored.\n */\nmxGraph.prototype.getStartSize = function(swimlane, ignoreState)\n{\n\tvar result = new mxRectangle();\n\tvar style = this.getCurrentCellStyle(swimlane, ignoreState);\n\tvar size = parseInt(mxUtils.getValue(style,\n\t\tmxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_STARTSIZE));\n\t\n\tif (mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true))\n\t{\n\t\tresult.height = size;\n\t}\n\telse\n\t{\n\t\tresult.width = size;\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getSwimlaneDirection\n * \n * Returns the direction for the given swimlane style.\n */\nmxGraph.prototype.getSwimlaneDirection = function(style)\n{\n\tvar dir = mxUtils.getValue(style, mxConstants.STYLE_DIRECTION, mxConstants.DIRECTION_EAST);\n\tvar flipH = mxUtils.getValue(style, mxConstants.STYLE_FLIPH, 0) == 1;\n\tvar flipV = mxUtils.getValue(style, mxConstants.STYLE_FLIPV, 0) == 1;\n\tvar h = mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true);\n\tvar n = (h) ? 0 : 3;\n\t\n\tif (dir == mxConstants.DIRECTION_NORTH)\n\t{\n\t\tn--;\n\t}\n\telse if (dir == mxConstants.DIRECTION_WEST)\n\t{\n\t\tn += 2;\n\t}\n\telse if (dir == mxConstants.DIRECTION_SOUTH)\n\t{\n\t\tn += 1;\n\t}\n\t\n\tvar mod = mxUtils.mod(n, 2);\n\t\n\tif (flipH && mod == 1)\n\t{\n\t\tn += 2;\n\t}\n\t\n\tif (flipV && mod == 0)\n\t{\n\t\tn += 2;\n\t}\n\t\n\treturn [mxConstants.DIRECTION_NORTH, mxConstants.DIRECTION_EAST,\n\t\tmxConstants.DIRECTION_SOUTH, mxConstants.DIRECTION_WEST]\n\t\t[mxUtils.mod(n, 4)];\n};\n\n/**\n * Function: getActualStartSize\n * \n * Returns the actual start size of the given swimlane taking into account\n * direction and horizontal and vertial flip styles. The start size is\n * returned as an <mxRectangle> where top, left, bottom, right start sizes\n * are returned as x, y, height and width, respectively.\n * \n * Parameters:\n * \n * swimlane - <mxCell> whose start size should be returned.\n * ignoreState - Optional boolean that specifies if cell state should be ignored.\n */\nmxGraph.prototype.getActualStartSize = function(swimlane, ignoreState)\n{\n\tvar result = new mxRectangle();\n\t\n\tif (this.isSwimlane(swimlane, ignoreState))\n\t{\n\t\tvar style = this.getCurrentCellStyle(swimlane, ignoreState);\n\t\tvar size = parseInt(mxUtils.getValue(style, mxConstants.STYLE_STARTSIZE,\n\t\t\tmxConstants.DEFAULT_STARTSIZE));\n\t\tvar dir = this.getSwimlaneDirection(style);\n\t\t\n\t\tif (dir == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tresult.y = size;\n\t\t}\n\t\telse if (dir == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tresult.x = size;\n\t\t}\n\t\telse if (dir == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tresult.height = size;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.width = size;\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getImage\n * \n * Returns the image URL for the given cell state. This implementation\n * returns the value stored under <mxConstants.STYLE_IMAGE> in the cell\n * style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose image URL should be returned.\n */\nmxGraph.prototype.getImage = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_IMAGE] : null;\n};\n\n/**\n * Function: isTransparentState\n * \n * Returns true if the given state has no stroke- or fillcolor and no image.\n * \n * Parameters:\n * \n * state - <mxCellState> to check.\n */\nmxGraph.prototype.isTransparentState = function(state)\n{\n\tvar result = false;\n\t\n\tif (state != null)\n\t{\n\t\tvar stroke = mxUtils.getValue(state.style, mxConstants.STYLE_STROKECOLOR, mxConstants.NONE);\n\t\tvar fill = mxUtils.getValue(state.style, mxConstants.STYLE_FILLCOLOR, mxConstants.NONE);\n\t\t\n\t\tresult = stroke == mxConstants.NONE && fill == mxConstants.NONE && this.getImage(state) == null;\n\t\t\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getVerticalAlign\n * \n * Returns the vertical alignment for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_VERTICAL_ALIGN> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose vertical alignment should be\n * returned.\n */\nmxGraph.prototype.getVerticalAlign = function(state)\n{\n\treturn (state != null && state.style != null) ?\n\t\t(state.style[mxConstants.STYLE_VERTICAL_ALIGN] ||\n\t\tmxConstants.ALIGN_MIDDLE) : null;\n};\n\n/**\n * Function: getIndicatorColor\n * \n * Returns the indicator color for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_COLOR> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator color should be\n * returned.\n */\nmxGraph.prototype.getIndicatorColor = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_COLOR] : null;\n};\n\n/**\n * Function: getIndicatorGradientColor\n * \n * Returns the indicator gradient color for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_GRADIENTCOLOR> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator gradient color should be\n * returned.\n */\nmxGraph.prototype.getIndicatorGradientColor = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_GRADIENTCOLOR] : null;\n};\n\n/**\n * Function: getIndicatorShape\n * \n * Returns the indicator shape for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_SHAPE> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator shape should be returned.\n */\nmxGraph.prototype.getIndicatorShape = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_SHAPE] : null;\n};\n\n/**\n * Function: getIndicatorImage\n * \n * Returns the indicator image for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_IMAGE> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator image should be returned.\n */\nmxGraph.prototype.getIndicatorImage = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_IMAGE] : null;\n};\n\n/**\n * Function: getBorder\n * \n * Returns the value of <border>.\n */\nmxGraph.prototype.getBorder = function()\n{\n\treturn this.border;\n};\n\n/**\n * Function: setBorder\n * \n * Sets the value of <border>.\n * \n * Parameters:\n * \n * value - Positive integer that represents the border to be used.\n */\nmxGraph.prototype.setBorder = function(value)\n{\n\tthis.border = value;\n};\n\n/**\n * Function: isSwimlane\n * \n * Returns true if the given cell is a swimlane in the graph. A swimlane is\n * a container cell with some specific behaviour. This implementation\n * checks if the shape associated with the given cell is a <mxSwimlane>.\n * \n * Parameters:\n * \n * cell - <mxCell> to be checked.\n * ignoreState - Optional boolean that specifies if the cell state should be ignored.\n */\nmxGraph.prototype.isSwimlane = function(cell, ignoreState)\n{\n\tif (cell != null && this.model.getParent(cell) != this.model.getRoot() &&\n\t\t!this.model.isEdge(cell))\n\t{\n\t\treturn this.getCurrentCellStyle(cell, ignoreState)\n\t\t\t[mxConstants.STYLE_SHAPE] == mxConstants.SHAPE_SWIMLANE;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Group: Graph behaviour\n */\n\n/**\n * Function: isResizeContainer\n * \n * Returns <resizeContainer>.\n */\nmxGraph.prototype.isResizeContainer = function()\n{\n\treturn this.resizeContainer;\n};\n\n/**\n * Function: setResizeContainer\n * \n * Sets <resizeContainer>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the container should be resized.\n */\nmxGraph.prototype.setResizeContainer = function(value)\n{\n\tthis.resizeContainer = value;\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if the graph is <enabled>.\n */\nmxGraph.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Specifies if the graph should allow any interactions. This\n * implementation updates <enabled>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should be enabled.\n */\nmxGraph.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isEscapeEnabled\n * \n * Returns <escapeEnabled>.\n */\nmxGraph.prototype.isEscapeEnabled = function()\n{\n\treturn this.escapeEnabled;\n};\n\n/**\n * Function: setEscapeEnabled\n * \n * Sets <escapeEnabled>.\n * \n * Parameters:\n * \n * enabled - Boolean indicating if escape should be enabled.\n */\nmxGraph.prototype.setEscapeEnabled = function(value)\n{\n\tthis.escapeEnabled = value;\n};\n\n/**\n * Function: isInvokesStopCellEditing\n * \n * Returns <invokesStopCellEditing>.\n */\nmxGraph.prototype.isInvokesStopCellEditing = function()\n{\n\treturn this.invokesStopCellEditing;\n};\n\n/**\n * Function: setInvokesStopCellEditing\n * \n * Sets <invokesStopCellEditing>.\n */\nmxGraph.prototype.setInvokesStopCellEditing = function(value)\n{\n\tthis.invokesStopCellEditing = value;\n};\n\n/**\n * Function: isEnterStopsCellEditing\n * \n * Returns <enterStopsCellEditing>.\n */\nmxGraph.prototype.isEnterStopsCellEditing = function()\n{\n\treturn this.enterStopsCellEditing;\n};\n\n/**\n * Function: setEnterStopsCellEditing\n * \n * Sets <enterStopsCellEditing>.\n */\nmxGraph.prototype.setEnterStopsCellEditing = function(value)\n{\n\tthis.enterStopsCellEditing = value;\n};\n\n/**\n * Function: isCellLocked\n * \n * Returns true if the given cell may not be moved, sized, bended,\n * disconnected, edited or selected. This implementation returns true for\n * all vertices with a relative geometry if <locked> is false.\n * \n * Parameters:\n * \n * cell - <mxCell> whose locked state should be returned.\n */\nmxGraph.prototype.isCellLocked = function(cell)\n{\n\tvar geometry = this.model.getGeometry(cell);\n\t\n\treturn this.isCellsLocked() || (geometry != null && this.model.isVertex(cell) && geometry.relative);\n};\n\n/**\n * Function: isCellsLocked\n * \n * Returns true if the given cell may not be moved, sized, bended,\n * disconnected, edited or selected. This implementation returns true for\n * all vertices with a relative geometry if <locked> is false.\n * \n * Parameters:\n * \n * cell - <mxCell> whose locked state should be returned.\n */\nmxGraph.prototype.isCellsLocked = function()\n{\n\treturn this.cellsLocked;\n};\n\n/**\n * Function: setCellsLocked\n * \n * Sets if any cell may be moved, sized, bended, disconnected, edited or\n * selected.\n * \n * Parameters:\n * \n * value - Boolean that defines the new value for <cellsLocked>.\n */\nmxGraph.prototype.setCellsLocked = function(value)\n{\n\tthis.cellsLocked = value;\n};\n\n/**\n * Function: getCloneableCells\n * \n * Returns the cells which may be exported in the given array of cells.\n */\nmxGraph.prototype.getCloneableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellCloneable(cell);\n\t}));\n};\n\n/**\n * Function: isCellCloneable\n * \n * Returns true if the given cell is cloneable. This implementation returns\n * <isCellsCloneable> for all cells unless a cell style specifies\n * <mxConstants.STYLE_CLONEABLE> to be 0. \n * \n * Parameters:\n * \n * cell - Optional <mxCell> whose cloneable state should be returned.\n */\nmxGraph.prototype.isCellCloneable = function(cell)\n{\n\tvar style = this.getCurrentCellStyle(cell);\n\n\treturn this.isCellsCloneable() && style[mxConstants.STYLE_CLONEABLE] != 0;\n};\n\n/**\n * Function: isCellsCloneable\n * \n * Returns <cellsCloneable>, that is, if the graph allows cloning of cells\n * by using control-drag.\n */\nmxGraph.prototype.isCellsCloneable = function()\n{\n\treturn this.cellsCloneable;\n};\n\n/**\n * Function: setCellsCloneable\n * \n * Specifies if the graph should allow cloning of cells by holding down the\n * control key while cells are being moved. This implementation updates\n * <cellsCloneable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should be cloneable.\n */\nmxGraph.prototype.setCellsCloneable = function(value)\n{\n\tthis.cellsCloneable = value;\n};\n\n/**\n * Function: getExportableCells\n * \n * Returns the cells which may be exported in the given array of cells.\n */\nmxGraph.prototype.getExportableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.canExportCell(cell);\n\t}));\n};\n\n/**\n * Function: canExportCell\n * \n * Returns true if the given cell may be exported to the clipboard. This\n * implementation returns <exportEnabled> for all cells.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the cell to be exported.\n */\nmxGraph.prototype.canExportCell = function(cell)\n{\n\treturn this.exportEnabled;\n};\n\n/**\n * Function: getImportableCells\n * \n * Returns the cells which may be imported in the given array of cells.\n */\nmxGraph.prototype.getImportableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.canImportCell(cell);\n\t}));\n};\n\n/**\n * Function: canImportCell\n * \n * Returns true if the given cell may be imported from the clipboard.\n * This implementation returns <importEnabled> for all cells.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the cell to be imported.\n */\nmxGraph.prototype.canImportCell = function(cell)\n{\n\treturn this.importEnabled;\n};\n\n/**\n * Function: isCellSelectable\n *\n * Returns true if the given cell is selectable. This implementation\n * returns <cellsSelectable>.\n * \n * To add a new style for making cells (un)selectable, use the following code.\n * \n * (code)\n * mxGraph.prototype.isCellSelectable = function(cell)\n * {\n *   var style = this.getCurrentCellStyle(cell);\n *   \n *   return this.isCellsSelectable() && !this.isCellLocked(cell) && style['selectable'] != 0;\n * };\n * (end)\n * \n * You can then use the new style as shown in this example.\n * \n * (code)\n * graph.insertVertex(parent, null, 'Hello,', 20, 20, 80, 30, 'selectable=0');\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> whose selectable state should be returned.\n */\nmxGraph.prototype.isCellSelectable = function(cell)\n{\n\treturn this.isCellsSelectable();\n};\n\n/**\n * Function: isCellsSelectable\n *\n * Returns <cellsSelectable>.\n */\nmxGraph.prototype.isCellsSelectable = function()\n{\n\treturn this.cellsSelectable;\n};\n\n/**\n * Function: setCellsSelectable\n *\n * Sets <cellsSelectable>.\n */\nmxGraph.prototype.setCellsSelectable = function(value)\n{\n\tthis.cellsSelectable = value;\n};\n\n/**\n * Function: getDeletableCells\n * \n * Returns the cells which may be exported in the given array of cells.\n */\nmxGraph.prototype.getDeletableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellDeletable(cell);\n\t}));\n};\n\n/**\n * Function: isCellDeletable\n *\n * Returns true if the given cell is moveable. This returns\n * <cellsDeletable> for all given cells if a cells style does not specify\n * <mxConstants.STYLE_DELETABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose deletable state should be returned.\n */\nmxGraph.prototype.isCellDeletable = function(cell)\n{\n\tvar style = this.getCurrentCellStyle(cell);\n\t\n\treturn this.isCellsDeletable() && style[mxConstants.STYLE_DELETABLE] != 0;\n};\n\n/**\n * Function: isCellsDeletable\n *\n * Returns <cellsDeletable>.\n */\nmxGraph.prototype.isCellsDeletable = function()\n{\n\treturn this.cellsDeletable;\n};\n\n/**\n * Function: setCellsDeletable\n * \n * Sets <cellsDeletable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow deletion of cells.\n */\nmxGraph.prototype.setCellsDeletable = function(value)\n{\n\tthis.cellsDeletable = value;\n};\n\n/**\n * Function: isLabelMovable\n *\n * Returns true if the given edges's label is moveable. This returns\n * <movable> for all given cells if <isLocked> does not return true\n * for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be moved.\n */\nmxGraph.prototype.isLabelMovable = function(cell)\n{\n\treturn !this.isCellLocked(cell) &&\n\t\t((this.model.isEdge(cell) && this.edgeLabelsMovable) ||\n\t\t(this.model.isVertex(cell) && this.vertexLabelsMovable));\n};\n\n/**\n * Function: isCellRotatable\n *\n * Returns true if the given cell is rotatable. This returns true for the given\n * cell if its style does not specify <mxConstants.STYLE_ROTATABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose rotatable state should be returned.\n */\nmxGraph.prototype.isCellRotatable = function(cell)\n{\n\tvar style = this.getCurrentCellStyle(cell);\n\t\n\treturn style[mxConstants.STYLE_ROTATABLE] != 0;\n};\n\n/**\n * Function: getMovableCells\n * \n * Returns the cells which are movable in the given array of cells.\n */\nmxGraph.prototype.getMovableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellMovable(cell);\n\t}));\n};\n\n/**\n * Function: isCellMovable\n *\n * Returns true if the given cell is moveable. This returns <cellsMovable>\n * for all given cells if <isCellLocked> does not return true for the given\n * cell and its style does not specify <mxConstants.STYLE_MOVABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose movable state should be returned.\n */\nmxGraph.prototype.isCellMovable = function(cell)\n{\n\tvar style = this.getCurrentCellStyle(cell);\n\t\n\treturn this.isCellsMovable() && !this.isCellLocked(cell) && style[mxConstants.STYLE_MOVABLE] != 0;\n};\n\n/**\n * Function: isCellsMovable\n *\n * Returns <cellsMovable>.\n */\nmxGraph.prototype.isCellsMovable = function()\n{\n\treturn this.cellsMovable;\n};\n\n/**\n * Function: setCellsMovable\n * \n * Specifies if the graph should allow moving of cells. This implementation\n * updates <cellsMsovable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow moving of cells.\n */\nmxGraph.prototype.setCellsMovable = function(value)\n{\n\tthis.cellsMovable = value;\n};\n\n/**\n * Function: isGridEnabled\n *\n * Returns <gridEnabled> as a boolean.\n */\nmxGraph.prototype.isGridEnabled = function()\n{\n\treturn this.gridEnabled;\n};\n\n/**\n * Function: setGridEnabled\n * \n * Specifies if the grid should be enabled.\n * \n * Parameters:\n * \n * value - Boolean indicating if the grid should be enabled.\n */\nmxGraph.prototype.setGridEnabled = function(value)\n{\n\tthis.gridEnabled = value;\n};\n\n/**\n * Function: isPortsEnabled\n *\n * Returns <portsEnabled> as a boolean.\n */\nmxGraph.prototype.isPortsEnabled = function()\n{\n\treturn this.portsEnabled;\n};\n\n/**\n * Function: setPortsEnabled\n * \n * Specifies if the ports should be enabled.\n * \n * Parameters:\n * \n * value - Boolean indicating if the ports should be enabled.\n */\nmxGraph.prototype.setPortsEnabled = function(value)\n{\n\tthis.portsEnabled = value;\n};\n\n/**\n * Function: getGridSize\n *\n * Returns <gridSize>.\n */\nmxGraph.prototype.getGridSize = function()\n{\n\treturn this.gridSize;\n};\n\n/**\n * Function: setGridSize\n * \n * Sets <gridSize>.\n */\nmxGraph.prototype.setGridSize = function(value)\n{\n\tthis.gridSize = value;\n};\n\n/**\n * Function: getTolerance\n *\n * Returns <tolerance>.\n */\nmxGraph.prototype.getTolerance = function()\n{\n\treturn this.tolerance;\n};\n\n/**\n * Function: setTolerance\n * \n * Sets <tolerance>.\n */\nmxGraph.prototype.setTolerance = function(value)\n{\n\tthis.tolerance = value;\n};\n\n/**\n * Function: isVertexLabelsMovable\n *\n * Returns <vertexLabelsMovable>.\n */\nmxGraph.prototype.isVertexLabelsMovable = function()\n{\n\treturn this.vertexLabelsMovable;\n};\n\n/**\n * Function: setVertexLabelsMovable\n * \n * Sets <vertexLabelsMovable>.\n */\nmxGraph.prototype.setVertexLabelsMovable = function(value)\n{\n\tthis.vertexLabelsMovable = value;\n};\n\n/**\n * Function: isEdgeLabelsMovable\n *\n * Returns <edgeLabelsMovable>.\n */\nmxGraph.prototype.isEdgeLabelsMovable = function()\n{\n\treturn this.edgeLabelsMovable;\n};\n\n/**\n * Function: isEdgeLabelsMovable\n * \n * Sets <edgeLabelsMovable>.\n */\nmxGraph.prototype.setEdgeLabelsMovable = function(value)\n{\n\tthis.edgeLabelsMovable = value;\n};\n\n/**\n * Function: isSwimlaneNesting\n *\n * Returns <swimlaneNesting> as a boolean.\n */\nmxGraph.prototype.isSwimlaneNesting = function()\n{\n\treturn this.swimlaneNesting;\n};\n\n/**\n * Function: setSwimlaneNesting\n * \n * Specifies if swimlanes can be nested by drag and drop. This is only\n * taken into account if dropEnabled is true.\n * \n * Parameters:\n * \n * value - Boolean indicating if swimlanes can be nested.\n */\nmxGraph.prototype.setSwimlaneNesting = function(value)\n{\n\tthis.swimlaneNesting = value;\n};\n\n/**\n * Function: isSwimlaneSelectionEnabled\n *\n * Returns <swimlaneSelectionEnabled> as a boolean.\n */\nmxGraph.prototype.isSwimlaneSelectionEnabled = function()\n{\n\treturn this.swimlaneSelectionEnabled;\n};\n\n/**\n * Function: setSwimlaneSelectionEnabled\n * \n * Specifies if swimlanes should be selected if the mouse is released\n * over their content area.\n * \n * Parameters:\n * \n * value - Boolean indicating if swimlanes content areas\n * should be selected when the mouse is released over them.\n */\nmxGraph.prototype.setSwimlaneSelectionEnabled = function(value)\n{\n\tthis.swimlaneSelectionEnabled = value;\n};\n\n/**\n * Function: isMultigraph\n *\n * Returns <multigraph> as a boolean.\n */\nmxGraph.prototype.isMultigraph = function()\n{\n\treturn this.multigraph;\n};\n\n/**\n * Function: setMultigraph\n * \n * Specifies if the graph should allow multiple connections between the\n * same pair of vertices.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph allows multiple connections\n * between the same pair of vertices.\n */\nmxGraph.prototype.setMultigraph = function(value)\n{\n\tthis.multigraph = value;\n};\n\n/**\n * Function: isAllowLoops\n *\n * Returns <allowLoops> as a boolean.\n */\nmxGraph.prototype.isAllowLoops = function()\n{\n\treturn this.allowLoops;\n};\n\n/**\n * Function: setAllowDanglingEdges\n * \n * Specifies if dangling edges are allowed, that is, if edges are allowed\n * that do not have a source and/or target terminal defined.\n * \n * Parameters:\n * \n * value - Boolean indicating if dangling edges are allowed.\n */\nmxGraph.prototype.setAllowDanglingEdges = function(value)\n{\n\tthis.allowDanglingEdges = value;\n};\n\n/**\n * Function: isAllowDanglingEdges\n *\n * Returns <allowDanglingEdges> as a boolean.\n */\nmxGraph.prototype.isAllowDanglingEdges = function()\n{\n\treturn this.allowDanglingEdges;\n};\n\n/**\n * Function: setConnectableEdges\n * \n * Specifies if edges should be connectable.\n * \n * Parameters:\n * \n * value - Boolean indicating if edges should be connectable.\n */\nmxGraph.prototype.setConnectableEdges = function(value)\n{\n\tthis.connectableEdges = value;\n};\n\n/**\n * Function: isConnectableEdges\n *\n * Returns <connectableEdges> as a boolean.\n */\nmxGraph.prototype.isConnectableEdges = function()\n{\n\treturn this.connectableEdges;\n};\n\n/**\n * Function: setCloneInvalidEdges\n * \n * Specifies if edges should be inserted when cloned but not valid wrt.\n * <getEdgeValidationError>. If false such edges will be silently ignored.\n * \n * Parameters:\n * \n * value - Boolean indicating if cloned invalid edges should be\n * inserted into the graph or ignored.\n */\nmxGraph.prototype.setCloneInvalidEdges = function(value)\n{\n\tthis.cloneInvalidEdges = value;\n};\n\n/**\n * Function: isCloneInvalidEdges\n *\n * Returns <cloneInvalidEdges> as a boolean.\n */\nmxGraph.prototype.isCloneInvalidEdges = function()\n{\n\treturn this.cloneInvalidEdges;\n};\n\n/**\n * Function: setAllowLoops\n * \n * Specifies if loops are allowed.\n * \n * Parameters:\n * \n * value - Boolean indicating if loops are allowed.\n */\nmxGraph.prototype.setAllowLoops = function(value)\n{\n\tthis.allowLoops = value;\n};\n\n/**\n * Function: isDisconnectOnMove\n *\n * Returns <disconnectOnMove> as a boolean.\n */\nmxGraph.prototype.isDisconnectOnMove = function()\n{\n\treturn this.disconnectOnMove;\n};\n\n/**\n * Function: setDisconnectOnMove\n * \n * Specifies if edges should be disconnected when moved. (Note: Cloned\n * edges are always disconnected.)\n * \n * Parameters:\n * \n * value - Boolean indicating if edges should be disconnected\n * when moved.\n */\nmxGraph.prototype.setDisconnectOnMove = function(value)\n{\n\tthis.disconnectOnMove = value;\n};\n\n/**\n * Function: isDropEnabled\n *\n * Returns <dropEnabled> as a boolean.\n */\nmxGraph.prototype.isDropEnabled = function()\n{\n\treturn this.dropEnabled;\n};\n\n/**\n * Function: setDropEnabled\n * \n * Specifies if the graph should allow dropping of cells onto or into other\n * cells.\n * \n * Parameters:\n * \n * dropEnabled - Boolean indicating if the graph should allow dropping\n * of cells into other cells.\n */\nmxGraph.prototype.setDropEnabled = function(value)\n{\n\tthis.dropEnabled = value;\n};\n\n/**\n * Function: isSplitEnabled\n *\n * Returns <splitEnabled> as a boolean.\n */\nmxGraph.prototype.isSplitEnabled = function()\n{\n\treturn this.splitEnabled;\n};\n\n/**\n * Function: setSplitEnabled\n * \n * Specifies if the graph should allow dropping of cells onto or into other\n * cells.\n * \n * Parameters:\n * \n * dropEnabled - Boolean indicating if the graph should allow dropping\n * of cells into other cells.\n */\nmxGraph.prototype.setSplitEnabled = function(value)\n{\n\tthis.splitEnabled = value;\n};\n\n/**\n * Function: isCellResizable\n *\n * Returns true if the given cell is resizable. This returns\n * <cellsResizable> for all given cells if <isCellLocked> does not return\n * true for the given cell and its style does not specify\n * <mxConstants.STYLE_RESIZABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose resizable state should be returned.\n */\nmxGraph.prototype.isCellResizable = function(cell)\n{\n\tvar style = this.getCurrentCellStyle(cell);\n\n\treturn this.isCellsResizable() && !this.isCellLocked(cell) &&\n\t\tmxUtils.getValue(style, mxConstants.STYLE_RESIZABLE, '1') != '0';\n};\n\n/**\n * Function: isCellsResizable\n *\n * Returns <cellsResizable>.\n */\nmxGraph.prototype.isCellsResizable = function()\n{\n\treturn this.cellsResizable;\n};\n\n/**\n * Function: setCellsResizable\n * \n * Specifies if the graph should allow resizing of cells. This\n * implementation updates <cellsResizable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow resizing of\n * cells.\n */\nmxGraph.prototype.setCellsResizable = function(value)\n{\n\tthis.cellsResizable = value;\n};\n\n/**\n * Function: isTerminalPointMovable\n *\n * Returns true if the given terminal point is movable. This is independent\n * from <isCellConnectable> and <isCellDisconnectable> and controls if terminal\n * points can be moved in the graph if the edge is not connected. Note that it\n * is required for this to return true to connect unconnected edges. This\n * implementation returns true.\n * \n * Parameters:\n * \n * cell - <mxCell> whose terminal point should be moved.\n * source - Boolean indicating if the source or target terminal should be moved.\n */\nmxGraph.prototype.isTerminalPointMovable = function(cell, source)\n{\n\treturn true;\n};\n\n/**\n * Function: isCellBendable\n *\n * Returns true if the given cell is bendable. This returns <cellsBendable>\n * for all given cells if <isLocked> does not return true for the given\n * cell and its style does not specify <mxConstants.STYLE_BENDABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bendable state should be returned.\n */\nmxGraph.prototype.isCellBendable = function(cell)\n{\n\tvar style = this.getCurrentCellStyle(cell);\n\t\n\treturn this.isCellsBendable() && !this.isCellLocked(cell) && style[mxConstants.STYLE_BENDABLE] != 0;\n};\n\n/**\n * Function: isCellsBendable\n *\n * Returns <cellsBenadable>.\n */\nmxGraph.prototype.isCellsBendable = function()\n{\n\treturn this.cellsBendable;\n};\n\n/**\n * Function: setCellsBendable\n * \n * Specifies if the graph should allow bending of edges. This\n * implementation updates <bendable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow bending of\n * edges.\n */\nmxGraph.prototype.setCellsBendable = function(value)\n{\n\tthis.cellsBendable = value;\n};\n\n/**\n * Function: isCellEditable\n *\n * Returns true if the given cell is editable. This returns <cellsEditable> for\n * all given cells if <isCellLocked> does not return true for the given cell\n * and its style does not specify <mxConstants.STYLE_EDITABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose editable state should be returned.\n */\nmxGraph.prototype.isCellEditable = function(cell)\n{\n\tvar style = this.getCurrentCellStyle(cell);\n\t\n\treturn this.isCellsEditable() && !this.isCellLocked(cell) && style[mxConstants.STYLE_EDITABLE] != 0;\n};\n\n/**\n * Function: isCellsEditable\n *\n * Returns <cellsEditable>.\n */\nmxGraph.prototype.isCellsEditable = function()\n{\n\treturn this.cellsEditable;\n};\n\n/**\n * Function: setCellsEditable\n * \n * Specifies if the graph should allow in-place editing for cell labels.\n * This implementation updates <cellsEditable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow in-place\n * editing.\n */\nmxGraph.prototype.setCellsEditable = function(value)\n{\n\tthis.cellsEditable = value;\n};\n\n/**\n * Function: isCellDisconnectable\n *\n * Returns true if the given cell is disconnectable from the source or\n * target terminal. This returns <isCellsDisconnectable> for all given\n * cells if <isCellLocked> does not return true for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose disconnectable state should be returned.\n * terminal - <mxCell> that represents the source or target terminal.\n * source - Boolean indicating if the source or target terminal is to be\n * disconnected.\n */\nmxGraph.prototype.isCellDisconnectable = function(cell, terminal, source)\n{\n\treturn this.isCellsDisconnectable() && !this.isCellLocked(cell);\n};\n\n/**\n * Function: isCellsDisconnectable\n *\n * Returns <cellsDisconnectable>.\n */\nmxGraph.prototype.isCellsDisconnectable = function()\n{\n\treturn this.cellsDisconnectable;\n};\n\n/**\n * Function: setCellsDisconnectable\n *\n * Sets <cellsDisconnectable>.\n */\nmxGraph.prototype.setCellsDisconnectable = function(value)\n{\n\tthis.cellsDisconnectable = value;\n};\n\n/**\n * Function: isValidSource\n * \n * Returns true if the given cell is a valid source for new connections.\n * This implementation returns true for all non-null values and is\n * called by is called by <isValidConnection>.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents a possible source or null.\n */\nmxGraph.prototype.isValidSource = function(cell)\n{\n\treturn (cell == null && this.allowDanglingEdges) ||\n\t\t(cell != null && (!this.model.isEdge(cell) ||\n\t\tthis.connectableEdges) && this.isCellConnectable(cell));\n};\n\t\n/**\n * Function: isValidTarget\n * \n * Returns <isValidSource> for the given cell. This is called by\n * <isValidConnection>.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents a possible target or null.\n */\nmxGraph.prototype.isValidTarget = function(cell)\n{\n\treturn this.isValidSource(cell);\n};\n\n/**\n * Function: isValidConnection\n * \n * Returns true if the given target cell is a valid target for source.\n * This is a boolean implementation for not allowing connections between\n * certain pairs of vertices and is called by <getEdgeValidationError>.\n * This implementation returns true if <isValidSource> returns true for\n * the source and <isValidTarget> returns true for the target.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source cell.\n * target - <mxCell> that represents the target cell.\n */\nmxGraph.prototype.isValidConnection = function(source, target)\n{\n\treturn this.isValidSource(source) && this.isValidTarget(target);\n};\n\n/**\n * Function: setConnectable\n * \n * Specifies if the graph should allow new connections. This implementation\n * updates <mxConnectionHandler.enabled> in <connectionHandler>.\n * \n * Parameters:\n * \n * connectable - Boolean indicating if new connections should be allowed.\n */\nmxGraph.prototype.setConnectable = function(connectable)\n{\n\tthis.connectionHandler.setEnabled(connectable);\n};\n\t\n/**\n * Function: isConnectable\n * \n * Returns true if the <connectionHandler> is enabled.\n */\nmxGraph.prototype.isConnectable = function()\n{\n\treturn this.connectionHandler.isEnabled();\n};\n\n/**\n * Function: setTooltips\n * \n * Specifies if tooltips should be enabled. This implementation updates\n * <mxTooltipHandler.enabled> in <tooltipHandler>.\n * \n * Parameters:\n * \n * enabled - Boolean indicating if tooltips should be enabled.\n */\nmxGraph.prototype.setTooltips = function (enabled)\n{\n\tthis.tooltipHandler.setEnabled(enabled);\n};\n\n/**\n * Function: setPanning\n * \n * Specifies if panning should be enabled. This implementation updates\n * <mxPanningHandler.panningEnabled> in <panningHandler>.\n * \n * Parameters:\n * \n * enabled - Boolean indicating if panning should be enabled.\n */\nmxGraph.prototype.setPanning = function(enabled)\n{\n\tthis.panningHandler.panningEnabled = enabled;\n};\n\n/**\n * Function: isEditing\n * \n * Returns true if the given cell is currently being edited.\n * If no cell is specified then this returns true if any\n * cell is currently being edited.\n *\n * Parameters:\n * \n * cell - <mxCell> that should be checked.\n */\nmxGraph.prototype.isEditing = function(cell)\n{\n\tif (this.cellEditor != null)\n\t{\n\t\tvar editingCell = this.cellEditor.getEditingCell();\n\t\t\n\t\treturn (cell == null) ? editingCell != null : cell == editingCell;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: isAutoSizeCell\n * \n * Returns true if the size of the given cell should automatically be\n * updated after a change of the label. This implementation returns\n * <autoSizeCells> or checks if the cell style does specify\n * <mxConstants.STYLE_AUTOSIZE> to be 1.\n * \n * Parameters:\n * \n * cell - <mxCell> that should be resized.\n */\nmxGraph.prototype.isAutoSizeCell = function(cell)\n{\n\tvar style = this.getCurrentCellStyle(cell);\n\t\n\treturn this.isAutoSizeCells() || style[mxConstants.STYLE_AUTOSIZE] == 1;\n};\n\n/**\n * Function: isAutoSizeCells\n * \n * Returns <autoSizeCells>.\n */\nmxGraph.prototype.isAutoSizeCells = function()\n{\n\treturn this.autoSizeCells;\n};\n\n/**\n * Function: setAutoSizeCells\n * \n * Specifies if cell sizes should be automatically updated after a label\n * change. This implementation sets <autoSizeCells> to the given parameter.\n * To update the size of cells when the cells are added, set\n * <autoSizeCellsOnAdd> to true.\n * \n * Parameters:\n * \n * value - Boolean indicating if cells should be resized\n * automatically.\n */\nmxGraph.prototype.setAutoSizeCells = function(value)\n{\n\tthis.autoSizeCells = value;\n};\n\n/**\n * Function: isExtendParent\n * \n * Returns true if the parent of the given cell should be extended if the\n * child has been resized so that it overlaps the parent. This\n * implementation returns <isExtendParents> if the cell is not an edge.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n */\nmxGraph.prototype.isExtendParent = function(cell)\n{\n\treturn !this.getModel().isEdge(cell) && this.isExtendParents();\n};\n\n/**\n * Function: isExtendParents\n * \n * Returns <extendParents>.\n */\nmxGraph.prototype.isExtendParents = function()\n{\n\treturn this.extendParents;\n};\n\n/**\n * Function: setExtendParents\n * \n * Sets <extendParents>.\n * \n * Parameters:\n * \n * value - New boolean value for <extendParents>.\n */\nmxGraph.prototype.setExtendParents = function(value)\n{\n\tthis.extendParents = value;\n};\n\n/**\n * Function: isExtendParentsOnAdd\n * \n * Returns <extendParentsOnAdd>.\n */\nmxGraph.prototype.isExtendParentsOnAdd = function(cell)\n{\n\treturn this.extendParentsOnAdd;\n};\n\n/**\n * Function: setExtendParentsOnAdd\n * \n * Sets <extendParentsOnAdd>.\n * \n * Parameters:\n * \n * value - New boolean value for <extendParentsOnAdd>.\n */\nmxGraph.prototype.setExtendParentsOnAdd = function(value)\n{\n\tthis.extendParentsOnAdd = value;\n};\n\n/**\n * Function: isExtendParentsOnMove\n * \n * Returns <extendParentsOnMove>.\n */\nmxGraph.prototype.isExtendParentsOnMove = function()\n{\n\treturn this.extendParentsOnMove;\n};\n\n/**\n * Function: setExtendParentsOnMove\n * \n * Sets <extendParentsOnMove>.\n * \n * Parameters:\n * \n * value - New boolean value for <extendParentsOnAdd>.\n */\nmxGraph.prototype.setExtendParentsOnMove = function(value)\n{\n\tthis.extendParentsOnMove = value;\n};\n\n/**\n * Function: isRecursiveResize\n * \n * Returns <recursiveResize>.\n * \n * Parameters:\n * \n * state - <mxCellState> that is being resized.\n */\nmxGraph.prototype.isRecursiveResize = function(state)\n{\n\treturn this.recursiveResize;\n};\n\n/**\n * Function: setRecursiveResize\n * \n * Sets <recursiveResize>.\n * \n * Parameters:\n * \n * value - New boolean value for <recursiveResize>.\n */\nmxGraph.prototype.setRecursiveResize = function(value)\n{\n\tthis.recursiveResize = value;\n};\n\n/**\n * Function: isConstrainChild\n * \n * Returns true if the given cell should be kept inside the bounds of its\n * parent according to the rules defined by <getOverlap> and\n * <isAllowOverlapParent>. This implementation returns false for all children\n * of edges and <isConstrainChildren> otherwise.\n * \n * Parameters:\n * \n * cell - <mxCell> that should be constrained.\n */\nmxGraph.prototype.isConstrainChild = function(cell)\n{\n\treturn this.isConstrainChildren() && !this.getModel().isEdge(this.getModel().getParent(cell));\n};\n\n/**\n * Function: isConstrainChildren\n * \n * Returns <constrainChildren>.\n */\nmxGraph.prototype.isConstrainChildren = function()\n{\n\treturn this.constrainChildren;\n};\n\n/**\n * Function: setConstrainChildren\n * \n * Sets <constrainChildren>.\n */\nmxGraph.prototype.setConstrainChildren = function(value)\n{\n\tthis.constrainChildren = value;\n};\n\n/**\n * Function: isConstrainRelativeChildren\n * \n * Returns <constrainRelativeChildren>.\n */\nmxGraph.prototype.isConstrainRelativeChildren = function()\n{\n\treturn this.constrainRelativeChildren;\n};\n\n/**\n * Function: setConstrainRelativeChildren\n * \n * Sets <constrainRelativeChildren>.\n */\nmxGraph.prototype.setConstrainRelativeChildren = function(value)\n{\n\tthis.constrainRelativeChildren = value;\n};\n\n/**\n * Function: isConstrainChildren\n * \n * Returns <allowNegativeCoordinates>.\n */\nmxGraph.prototype.isAllowNegativeCoordinates = function()\n{\n\treturn this.allowNegativeCoordinates;\n};\n\n/**\n * Function: setConstrainChildren\n * \n * Sets <allowNegativeCoordinates>.\n */\nmxGraph.prototype.setAllowNegativeCoordinates = function(value)\n{\n\tthis.allowNegativeCoordinates = value;\n};\n\n/**\n * Function: getOverlap\n * \n * Returns a decimal number representing the amount of the width and height\n * of the given cell that is allowed to overlap its parent. A value of 0\n * means all children must stay inside the parent, 1 means the child is\n * allowed to be placed outside of the parent such that it touches one of\n * the parents sides. If <isAllowOverlapParent> returns false for the given\n * cell, then this method returns 0.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the overlap ratio should be returned.\n */\nmxGraph.prototype.getOverlap = function(cell)\n{\n\treturn (this.isAllowOverlapParent(cell)) ? this.defaultOverlap : 0;\n};\n\t\n/**\n * Function: isAllowOverlapParent\n * \n * Returns true if the given cell is allowed to be placed outside of the\n * parents area.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the child to be checked.\n */\nmxGraph.prototype.isAllowOverlapParent = function(cell)\n{\n\treturn false;\n};\n\n/**\n * Function: getFoldableCells\n * \n * Returns the cells which are movable in the given array of cells.\n */\nmxGraph.prototype.getFoldableCells = function(cells, collapse)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellFoldable(cell, collapse);\n\t}));\n};\n\n/**\n * Function: isCellFoldable\n * \n * Returns true if the given cell is foldable. This implementation\n * returns true if the cell has at least one child and its style\n * does not specify <mxConstants.STYLE_FOLDABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose foldable state should be returned.\n */\nmxGraph.prototype.isCellFoldable = function(cell, collapse)\n{\n\tvar style = this.getCurrentCellStyle(cell);\n\t\n\treturn this.model.getChildCount(cell) > 0 && style[mxConstants.STYLE_FOLDABLE] != 0;\n};\n\n/**\n * Function: isValidDropTarget\n *\n * Returns true if the given cell is a valid drop target for the specified\n * cells. If <splitEnabled> is true then this returns <isSplitTarget> for\n * the given arguments else it returns true if the cell is not collapsed\n * and its child count is greater than 0.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the possible drop target.\n * cells - <mxCells> that should be dropped into the target.\n * evt - Mouseevent that triggered the invocation.\n */\nmxGraph.prototype.isValidDropTarget = function(cell, cells, evt)\n{\n\treturn cell != null && ((this.isSplitEnabled() &&\n\t\tthis.isSplitTarget(cell, cells, evt)) || (!this.model.isEdge(cell) &&\n\t\t(this.isSwimlane(cell) || (this.model.getChildCount(cell) > 0 &&\n\t\t!this.isCellCollapsed(cell)))));\n};\n\n/**\n * Function: isSplitTarget\n *\n * Returns true if the given edge may be splitted into two edges with the\n * given cell as a new terminal between the two.\n * \n * Parameters:\n * \n * target - <mxCell> that represents the edge to be splitted.\n * cells - <mxCells> that should split the edge.\n * evt - Mouseevent that triggered the invocation.\n */\nmxGraph.prototype.isSplitTarget = function(target, cells, evt)\n{\n\tif (this.model.isEdge(target) && cells != null && cells.length == 1 &&\n\t\tthis.isCellConnectable(cells[0]) && this.getEdgeValidationError(target,\n\t\t\tthis.model.getTerminal(target, true), cells[0]) == null)\n\t{\n\t\tvar src = this.model.getTerminal(target, true);\n\t\tvar trg = this.model.getTerminal(target, false);\n\n\t\treturn (!this.model.isAncestor(cells[0], src) &&\n\t\t\t\t!this.model.isAncestor(cells[0], trg));\n\t}\n\n\treturn false;\n};\n\n/**\n * Function: getDropTarget\n * \n * Returns the given cell if it is a drop target for the given cells or the\n * nearest ancestor that may be used as a drop target for the given cells.\n * If the given array contains a swimlane and <swimlaneNesting> is false\n * then this always returns null. If no cell is given, then the bottommost\n * swimlane at the location of the given event is returned.\n * \n * This function should only be used if <isDropEnabled> returns true.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> which are to be dropped onto the target.\n * evt - Mouseevent for the drag and drop.\n * cell - <mxCell> that is under the mousepointer.\n * clone - Optional boolean to indicate of cells will be cloned.\n */\nmxGraph.prototype.getDropTarget = function(cells, evt, cell, clone)\n{\n\tif (!this.isSwimlaneNesting())\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.isSwimlane(cells[i]))\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar pt = mxUtils.convertPoint(this.container,\n\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\tpt.x -= this.panDx;\n\tpt.y -= this.panDy;\n\tvar swimlane = this.getSwimlaneAt(pt.x, pt.y);\n\t\n\tif (cell == null)\n\t{\n\t\tcell = swimlane;\n\t}\n\telse if (swimlane != null)\n\t{\n\t\t// Checks if the cell is an ancestor of the swimlane\n\t\t// under the mouse and uses the swimlane in that case\n\t\tvar tmp = this.model.getParent(swimlane);\n\t\t\n\t\twhile (tmp != null && this.isSwimlane(tmp) && tmp != cell)\n\t\t{\n\t\t\ttmp = this.model.getParent(tmp);\n\t\t}\n\t\t\n\t\tif (tmp == cell)\n\t\t{\n\t\t\tcell = swimlane;\n\t\t}\n\t}\n\t\n\twhile (cell != null && !this.isValidDropTarget(cell, cells, evt) &&\n\t\t!this.model.isLayer(cell))\n\t{\n\t\tcell = this.model.getParent(cell);\n\t}\n\t\n\t// Checks if parent is dropped into child if not cloning\n\tif (clone == null || !clone)\n\t{\n\t\tvar parent = cell;\n\t\t\n\t\twhile (parent != null && mxUtils.indexOf(cells, parent) < 0)\n\t\t{\n\t\t\tparent = this.model.getParent(parent);\n\t\t}\n\t}\n\n\treturn (!this.model.isLayer(cell) && parent == null) ? cell : null;\n};\n\n/**\n * Group: Cell retrieval\n */\n\n/**\n * Function: getDefaultParent\n * \n * Returns <defaultParent> or <mxGraphView.currentRoot> or the first child\n * child of <mxGraphModel.root> if both are null. The value returned by\n * this function should be used as the parent for new cells (aka default\n * layer).\n */\nmxGraph.prototype.getDefaultParent = function()\n{\n\tvar parent = this.getCurrentRoot();\n\t\n\tif (parent == null)\n\t{\n\t\tparent = this.defaultParent;\n\t\t\n\t\tif (parent == null)\n\t\t{\n\t\t\tvar root = this.model.getRoot();\n\t\t\tparent = this.model.getChildAt(root, 0);\n\t\t}\n\t}\n\t\n\treturn parent;\n};\n\n/**\n * Function: setDefaultParent\n * \n * Sets the <defaultParent> to the given cell. Set this to null to return\n * the first child of the root in getDefaultParent.\n */\nmxGraph.prototype.setDefaultParent = function(cell)\n{\n\tthis.defaultParent = cell;\n};\n\n/**\n * Function: getSwimlane\n * \n * Returns the nearest ancestor of the given cell which is a swimlane, or\n * the given cell, if it is itself a swimlane.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the ancestor swimlane should be returned.\n */\nmxGraph.prototype.getSwimlane = function(cell)\n{\n\twhile (cell != null && !this.isSwimlane(cell))\n\t{\n\t\tcell = this.model.getParent(cell);\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: getSwimlaneAt\n * \n * Returns the bottom-most swimlane that intersects the given point (x, y)\n * in the cell hierarchy that starts at the given parent.\n * \n * Parameters:\n * \n * x - X-coordinate of the location to be checked.\n * y - Y-coordinate of the location to be checked.\n * parent - <mxCell> that should be used as the root of the recursion.\n * Default is <defaultParent>.\n */\nmxGraph.prototype.getSwimlaneAt = function (x, y, parent)\n{\n\tif (parent == null)\n\t{\n\t\tparent = this.getCurrentRoot();\n\t\t\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.model.getRoot();\n\t\t}\n\t}\n\t\n\tif (parent != null)\n\t{\n\t\tvar childCount = this.model.getChildCount(parent);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = this.model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (child != null)\n\t\t\t{\n\t\t\t\tvar result = this.getSwimlaneAt(x, y, child);\n\t\t\t\t\n\t\t\t\tif (result != null)\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\telse if (this.isCellVisible(child) && this.isSwimlane(child))\n\t\t\t\t{\n\t\t\t\t\tvar state = this.view.getState(child);\n\t\t\t\t\t\n\t\t\t\t\tif (this.intersects(state, x, y))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn child;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getCellAt\n * \n * Returns the bottom-most cell that intersects the given point (x, y) in\n * the cell hierarchy starting at the given parent. This will also return\n * swimlanes if the given location intersects the content area of the\n * swimlane. If this is not desired, then the <hitsSwimlaneContent> may be\n * used if the returned cell is a swimlane to determine if the location\n * is inside the content area or on the actual title of the swimlane.\n * \n * Parameters:\n * \n * x - X-coordinate of the location to be checked.\n * y - Y-coordinate of the location to be checked.\n * parent - <mxCell> that should be used as the root of the recursion.\n * Default is current root of the view or the root of the model.\n * vertices - Optional boolean indicating if vertices should be returned.\n * Default is true.\n * edges - Optional boolean indicating if edges should be returned. Default\n * is true.\n * ignoreFn - Optional function that returns true if cell should be ignored.\n * The function is passed the cell state and the x and y parameter.\n */\nmxGraph.prototype.getCellAt = function(x, y, parent, vertices, edges, ignoreFn)\n{\n\tvertices = (vertices != null) ? vertices : true;\n\tedges = (edges != null) ? edges : true;\n\n\tif (parent == null)\n\t{\n\t\tparent = this.getCurrentRoot();\n\t\t\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.getModel().getRoot();\n\t\t}\n\t}\n\n\tif (parent != null)\n\t{\n\t\tvar childCount = this.model.getChildCount(parent);\n\t\t\n\t\tfor (var i = childCount - 1; i >= 0; i--)\n\t\t{\n\t\t\tvar cell = this.model.getChildAt(parent, i);\n\t\t\tvar result = this.getCellAt(x, y, cell, vertices, edges, ignoreFn);\n\t\t\t\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\telse if (this.isCellVisible(cell) && (edges && this.model.isEdge(cell) ||\n\t\t\t\tvertices && this.model.isVertex(cell)))\n\t\t\t{\n\t\t\t\tvar state = this.view.getState(cell);\n\n\t\t\t\tif (state != null && (ignoreFn == null || !ignoreFn(state, x, y)) &&\n\t\t\t\t\tthis.intersects(state, x, y))\n\t\t\t\t{\n\t\t\t\t\treturn cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: intersects\n * \n * Returns the bottom-most cell that intersects the given point (x, y) in\n * the cell hierarchy that starts at the given parent.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the cell state.\n * x - X-coordinate of the location to be checked.\n * y - Y-coordinate of the location to be checked.\n */\nmxGraph.prototype.intersects = function(state, x, y)\n{\n\tif (state != null)\n\t{\n\t\tvar pts = state.absolutePoints;\n\n\t\tif (pts != null)\n\t\t{\n\t\t\tvar t2 = this.tolerance * this.tolerance;\n\t\t\tvar pt = pts[0];\n\t\t\t\n\t\t\tfor (var i = 1; i < pts.length; i++)\n\t\t\t{\n\t\t\t\tvar next = pts[i];\n\t\t\t\tvar dist = mxUtils.ptSegDistSq(pt.x, pt.y, next.x, next.y, x, y);\n\t\t\t\t\n\t\t\t\tif (dist <= t2)\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpt = next;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\tvar cx = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(x, y), cos, sin, cx);\n\t\t\t\tx = pt.x;\n\t\t\t\ty = pt.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (mxUtils.contains(state, x, y))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: hitsSwimlaneContent\n * \n * Returns true if the given coordinate pair is inside the content\n * are of the given swimlane.\n * \n * Parameters:\n * \n * swimlane - <mxCell> that specifies the swimlane.\n * x - X-coordinate of the mouse event.\n * y - Y-coordinate of the mouse event.\n */\nmxGraph.prototype.hitsSwimlaneContent = function(swimlane, x, y)\n{\n\tvar state = this.getView().getState(swimlane);\n\tvar size = this.getStartSize(swimlane);\n\t\n\tif (state != null)\n\t{\n\t\tvar scale = this.getView().getScale();\n\t\tx -= state.x;\n\t\ty -= state.y;\n\t\t\n\t\tif (size.width > 0 && x > 0 && x > size.width * scale)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse if (size.height > 0 && y > 0 && y > size.height * scale)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getChildVertices\n * \n * Returns the visible child vertices of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be returned.\n */\nmxGraph.prototype.getChildVertices = function(parent)\n{\n\treturn this.getChildCells(parent, true, false);\n};\n\t\n/**\n * Function: getChildEdges\n * \n * Returns the visible child edges of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose child vertices should be returned.\n */\nmxGraph.prototype.getChildEdges = function(parent)\n{\n\treturn this.getChildCells(parent, false, true);\n};\n\n/**\n * Function: getChildCells\n * \n * Returns the visible child vertices or edges in the given parent. If\n * vertices and edges is false, then all children are returned.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be returned.\n * vertices - Optional boolean that specifies if child vertices should\n * be returned. Default is false.\n * edges - Optional boolean that specifies if child edges should\n * be returned. Default is false.\n */\nmxGraph.prototype.getChildCells = function(parent, vertices, edges)\n{\n\tparent = (parent != null) ? parent : this.getDefaultParent();\n\tvertices = (vertices != null) ? vertices : false;\n\tedges = (edges != null) ? edges : false;\n\n\tvar cells = this.model.getChildCells(parent, vertices, edges);\n\tvar result = [];\n\n\t// Filters out the non-visible child cells\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tif (this.isCellVisible(cells[i]))\n\t\t{\n\t\t\tresult.push(cells[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\t\n/**\n * Function: getConnections\n * \n * Returns all visible edges connected to the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose connections should be returned.\n * parent - Optional parent of the opposite end for a connection to be\n * returned.\n */\nmxGraph.prototype.getConnections = function(cell, parent)\n{\n\treturn this.getEdges(cell, parent, true, true, false);\n};\n\t\n/**\n * Function: getIncomingEdges\n * \n * Returns the visible incoming edges for the given cell. If the optional\n * parent argument is specified, then only child edges of the given parent\n * are returned.\n * \n * Parameters:\n * \n * cell - <mxCell> whose incoming edges should be returned.\n * parent - Optional parent of the opposite end for an edge to be\n * returned.\n */\nmxGraph.prototype.getIncomingEdges = function(cell, parent)\n{\n\treturn this.getEdges(cell, parent, true, false, false);\n};\n\t\n/**\n * Function: getOutgoingEdges\n * \n * Returns the visible outgoing edges for the given cell. If the optional\n * parent argument is specified, then only child edges of the given parent\n * are returned.\n * \n * Parameters:\n * \n * cell - <mxCell> whose outgoing edges should be returned.\n * parent - Optional parent of the opposite end for an edge to be\n * returned.\n */\nmxGraph.prototype.getOutgoingEdges = function(cell, parent)\n{\n\treturn this.getEdges(cell, parent, false, true, false);\n};\n\t\n/**\n * Function: getEdges\n * \n * Returns the incoming and/or outgoing edges for the given cell.\n * If the optional parent argument is specified, then only edges are returned\n * where the opposite is in the given parent cell. If at least one of incoming\n * or outgoing is true, then loops are ignored, if both are false, then all\n * edges connected to the given cell are returned including loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n * parent - Optional parent of the opposite end for an edge to be\n * returned.\n * incoming - Optional boolean that specifies if incoming edges should\n * be included in the result. Default is true.\n * outgoing - Optional boolean that specifies if outgoing edges should\n * be included in the result. Default is true.\n * includeLoops - Optional boolean that specifies if loops should be\n * included in the result. Default is true.\n * recurse - Optional boolean the specifies if the parent specified only \n * need be an ancestral parent, true, or the direct parent, false.\n * Default is false\n */\nmxGraph.prototype.getEdges = function(cell, parent, incoming, outgoing, includeLoops, recurse)\n{\n\tincoming = (incoming != null) ? incoming : true;\n\toutgoing = (outgoing != null) ? outgoing : true;\n\tincludeLoops = (includeLoops != null) ? includeLoops : true;\n\trecurse = (recurse != null) ? recurse : false;\n\t\n\tvar edges = [];\n\tvar isCollapsed = this.isCellCollapsed(cell);\n\tvar childCount = this.model.getChildCount(cell);\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.model.getChildAt(cell, i);\n\n\t\tif (isCollapsed || !this.isCellVisible(child))\n\t\t{\n\t\t\tedges = edges.concat(this.model.getEdges(child, incoming, outgoing));\n\t\t}\n\t}\n\n\tedges = edges.concat(this.model.getEdges(cell, incoming, outgoing));\n\tvar result = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar state = this.view.getState(edges[i]);\n\t\t\n\t\tvar source = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[i], true);\n\t\tvar target = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[i], false);\n\n\t\tif ((includeLoops && source == target) || ((source != target) && ((incoming &&\n\t\t\ttarget == cell && (parent == null || this.isValidAncestor(source, parent, recurse))) ||\n\t\t\t(outgoing && source == cell && (parent == null ||\n\t\t\t\t\tthis.isValidAncestor(target, parent, recurse))))))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: isValidAncestor\n * \n * Returns whether or not the specified parent is a valid\n * ancestor of the specified cell, either direct or indirectly\n * based on whether ancestor recursion is enabled.\n * \n * Parameters:\n * \n * cell - <mxCell> the possible child cell\n * parent - <mxCell> the possible parent cell\n * recurse - boolean whether or not to recurse the child ancestors\n */\nmxGraph.prototype.isValidAncestor = function(cell, parent, recurse)\n{\n\treturn (recurse ? this.model.isAncestor(parent, cell) : this.model\n\t\t\t.getParent(cell) == parent);\n};\n\n/**\n * Function: getOpposites\n * \n * Returns all distinct visible opposite cells for the specified terminal\n * on the given edges.\n * \n * Parameters:\n * \n * edges - Array of <mxCells> that contains the edges whose opposite\n * terminals should be returned.\n * terminal - Terminal that specifies the end whose opposite should be\n * returned.\n * sources - Optional boolean that specifies if source terminals should be\n * included in the result. Default is true.\n * targets - Optional boolean that specifies if targer terminals should be\n * included in the result. Default is true.\n */\nmxGraph.prototype.getOpposites = function(edges, terminal, sources, targets)\n{\n\tsources = (sources != null) ? sources : true;\n\ttargets = (targets != null) ? targets : true;\n\t\n\tvar terminals = [];\n\t\n\t// Fast lookup to avoid duplicates in terminals array\n\tvar dict = new mxDictionary();\n\t\n\tif (edges != null)\n\t{\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tvar state = this.view.getState(edges[i]);\n\t\t\t\n\t\t\tvar source = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[i], true);\n\t\t\tvar target = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[i], false);\n\t\t\t\n\t\t\t// Checks if the terminal is the source of the edge and if the\n\t\t\t// target should be stored in the result\n\t\t\tif (source == terminal && target != null && target != terminal && targets)\n\t\t\t{\n\t\t\t\tif (!dict.get(target))\n\t\t\t\t{\n\t\t\t\t\tdict.put(target, true);\n\t\t\t\t\tterminals.push(target);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Checks if the terminal is the taget of the edge and if the\n\t\t\t// source should be stored in the result\n\t\t\telse if (target == terminal && source != null && source != terminal && sources)\n\t\t\t{\n\t\t\t\tif (!dict.get(source))\n\t\t\t\t{\n\t\t\t\t\tdict.put(source, true);\n\t\t\t\t\tterminals.push(source);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn terminals;\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns the edges between the given source and target. This takes into\n * account collapsed and invisible cells and returns the connected edges\n * as displayed on the screen.\n * \n * Parameters:\n * \n * source -\n * target -\n * directed -\n */\nmxGraph.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\tvar edges = this.getEdges(source);\n\tvar result = [];\n\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar state = this.view.getState(edges[i]);\n\t\t\n\t\tvar src = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[i], true);\n\t\tvar trg = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[i], false);\n\n\t\tif ((src == source && trg == target) || (!directed && src == target && trg == source))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getPointForEvent\n * \n * Returns an <mxPoint> representing the given event in the unscaled,\n * non-translated coordinate space of <container> and applies the grid.\n * \n * Parameters:\n * \n * evt - Mousevent that contains the mouse pointer location.\n * addOffset - Optional boolean that specifies if the position should be\n * offset by half of the <gridSize>. Default is true.\n */\n mxGraph.prototype.getPointForEvent = function(evt, addOffset)\n {\n\tvar p = mxUtils.convertPoint(this.container,\n\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\n\tvar s = this.view.scale;\n\tvar tr = this.view.translate;\n\tvar off = (addOffset != false) ? this.gridSize / 2 : 0;\n\t\n\tp.x = this.snap(p.x / s - tr.x - off);\n\tp.y = this.snap(p.y / s - tr.y - off);\n\t\n\treturn p;\n};\n\n/**\n * Function: getCells\n * \n * Returns the child vertices and edges of the given parent that are contained\n * in the given rectangle. The result is added to the optional result array,\n * which is returned. If no result array is specified then a new array is\n * created and returned.\n * \n * Parameters:\n * \n * x - X-coordinate of the rectangle.\n * y - Y-coordinate of the rectangle.\n * width - Width of the rectangle.\n * height - Height of the rectangle.\n * parent - <mxCell> that should be used as the root of the recursion.\n * Default is current root of the view or the root of the model.\n * result - Optional array to store the result in.\n * intersection - Optional <mxRectangle> to check vertices for intersection.\n * ignoreFn - Optional function to check if a cell state is ignored.\n * includeDescendants - Optional boolean flag to add descendants to the result.\n * Default is false.\n */\nmxGraph.prototype.getCells = function(x, y, width, height, parent, result, intersection, ignoreFn, includeDescendants)\n{\n\tresult = (result != null) ? result : [];\n\t\n\tif (width > 0 || height > 0 || intersection != null)\n\t{\n\t\tvar model = this.getModel();\n\t\tvar right = x + width;\n\t\tvar bottom = y + height;\n\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.getCurrentRoot();\n\t\t\t\n\t\t\tif (parent == null)\n\t\t\t{\n\t\t\t\tparent = model.getRoot();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tvar childCount = model.getChildCount(parent);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar cell = model.getChildAt(parent, i);\n\t\t\t\tvar state = this.view.getState(cell);\n\t\t\t\t\n\t\t\t\tif (state != null && this.isCellVisible(cell) &&\n\t\t\t\t\t(ignoreFn == null || !ignoreFn(state)))\n\t\t\t\t{\n\t\t\t\t\tvar deg = mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0;\n\t\t\t\t\tvar box = state;\n\t\t\t\t\t\n\t\t\t\t\tif (deg != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tbox = mxUtils.getBoundingBox(box, deg);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar hit = (intersection != null && model.isVertex(cell) && mxUtils.intersects(intersection, box)) ||\n\t\t\t\t\t\t(intersection == null && (model.isEdge(cell) || model.isVertex(cell)) &&\n\t\t\t\t\t\tbox.x >= x && box.y + box.height <= bottom &&\n\t\t\t\t\t\tbox.y >= y && box.x + box.width <= right);\n\t\t\t\t\t\n\t\t\t\t\tif (hit)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(cell);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!hit || includeDescendants)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.getCells(x, y, width, height, cell, result, intersection, ignoreFn, includeDescendants);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getCellsBeyond\n * \n * Returns the children of the given parent that are contained in the\n * halfpane from the given point (x0, y0) rightwards or downwards\n * depending on rightHalfpane and bottomHalfpane.\n * \n * Parameters:\n * \n * x0 - X-coordinate of the origin.\n * y0 - Y-coordinate of the origin.\n * parent - Optional <mxCell> whose children should be checked. Default is\n * <defaultParent>.\n * rightHalfpane - Boolean indicating if the cells in the right halfpane\n * from the origin should be returned.\n * bottomHalfpane - Boolean indicating if the cells in the bottom halfpane\n * from the origin should be returned.\n */\nmxGraph.prototype.getCellsBeyond = function(x0, y0, parent, rightHalfpane, bottomHalfpane)\n{\n\tvar result = [];\n\t\n\tif (rightHalfpane || bottomHalfpane)\n\t{\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.getDefaultParent();\n\t\t}\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tvar childCount = this.model.getChildCount(parent);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar child = this.model.getChildAt(parent, i);\n\t\t\t\tvar state = this.view.getState(child);\n\t\t\t\t\n\t\t\t\tif (this.isCellVisible(child) && state != null)\n\t\t\t\t{\n\t\t\t\t\tif ((!rightHalfpane || state.x >= x0) &&\n\t\t\t\t\t\t(!bottomHalfpane || state.y >= y0))\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: findTreeRoots\n * \n * Returns all children in the given parent which do not have incoming\n * edges. If the result is empty then the with the greatest difference\n * between incoming and outgoing edges is returned.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be checked.\n * isolate - Optional boolean that specifies if edges should be ignored if\n * the opposite end is not a child of the given parent cell. Default is\n * false.\n * invert - Optional boolean that specifies if outgoing or incoming edges\n * should be counted for a tree root. If false then outgoing edges will be\n * counted. Default is false.\n */\nmxGraph.prototype.findTreeRoots = function(parent, isolate, invert)\n{\n\tisolate = (isolate != null) ? isolate : false;\n\tinvert = (invert != null) ? invert : false;\n\tvar roots = [];\n\t\n\tif (parent != null)\n\t{\n\t\tvar model = this.getModel();\n\t\tvar childCount = model.getChildCount(parent);\n\t\tvar best = null;\n\t\tvar maxDiff = 0;\n\t\t\n\t\tfor (var i=0; i<childCount; i++)\n\t\t{\n\t\t\tvar cell = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (this.model.isVertex(cell) && this.isCellVisible(cell))\n\t\t\t{\n\t\t\t\tvar conns = this.getConnections(cell, (isolate) ? parent : null);\n\t\t\t\tvar fanOut = 0;\n\t\t\t\tvar fanIn = 0;\n\t\t\t\t\n\t\t\t\tfor (var j = 0; j < conns.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar src = this.view.getVisibleTerminal(conns[j], true);\n\n                    if (src == cell)\n                    {\n                        fanOut++;\n                    }\n                    else\n                    {\n                        fanIn++;\n                    }\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ((invert && fanOut == 0 && fanIn > 0) ||\n\t\t\t\t\t(!invert && fanIn == 0 && fanOut > 0))\n\t\t\t\t{\n\t\t\t\t\troots.push(cell);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar diff = (invert) ? fanIn - fanOut : fanOut - fanIn;\n\t\t\t\t\n\t\t\t\tif (diff > maxDiff)\n\t\t\t\t{\n\t\t\t\t\tmaxDiff = diff;\n\t\t\t\t\tbest = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (roots.length == 0 && best != null)\n\t\t{\n\t\t\troots.push(best);\n\t\t}\n\t}\n\t\n\treturn roots;\n};\n\n/**\n * Function: traverse\n * \n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Example:\n * \n * (code)\n * mxLog.show();\n * var cell = graph.getSelectionCell();\n * graph.traverse(cell, false, function(vertex, edge)\n * {\n *   mxLog.debug(graph.getLabel(vertex));\n * });\n * (end)\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - Optional boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * func - Visitor function that takes the current vertex and the incoming\n * edge as arguments. The traversal stops if the function returns false.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * visited - Optional <mxDictionary> from cells to true for the visited cells.\n * inverse - Optional boolean to traverse in inverse direction. Default is false.\n * This is ignored if directed is false.\n */\nmxGraph.prototype.traverse = function(vertex, directed, func, edge, visited, inverse)\n{\n\tif (func != null && vertex != null)\n\t{\n\t\tdirected = (directed != null) ? directed : true;\n\t\tinverse = (inverse != null) ? inverse : false;\n\t\tvisited = visited || new mxDictionary();\n\t\t\n\t\tif (!visited.get(vertex))\n\t\t{\n\t\t\tvisited.put(vertex, true);\n\t\t\tvar result = func(vertex, edge);\n\t\t\t\n\t\t\tif (result == null || result)\n\t\t\t{\n\t\t\t\tvar edgeCount = this.model.getEdgeCount(vertex);\n\t\t\t\t\n\t\t\t\tif (edgeCount > 0)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < edgeCount; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar e = this.model.getEdgeAt(vertex, i);\n\t\t\t\t\t\tvar isSource = this.model.getTerminal(e, true) == vertex;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!directed || (!inverse == isSource))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar next = this.model.getTerminal(e, !isSource);\n\t\t\t\t\t\t\tthis.traverse(next, directed, func, e, visited, inverse);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Group: Selection\n */\n\n/**\n * Function: isCellSelected\n * \n * Returns true if the given cell is selected.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the selection state should be returned.\n */\nmxGraph.prototype.isCellSelected = function(cell)\n{\n\treturn this.getSelectionModel().isSelected(cell);\n};\n\n/**\n * Function: isSelectionEmpty\n * \n * Returns true if the selection is empty.\n */\nmxGraph.prototype.isSelectionEmpty = function()\n{\n\treturn this.getSelectionModel().isEmpty();\n};\n\n/**\n * Function: clearSelection\n * \n * Clears the selection using <mxGraphSelectionModel.clear>.\n */\nmxGraph.prototype.clearSelection = function()\n{\n\treturn this.getSelectionModel().clear();\n};\n\n/**\n * Function: getSelectionCount\n * \n * Returns the number of selected cells.\n */\nmxGraph.prototype.getSelectionCount = function()\n{\n\treturn this.getSelectionModel().cells.length;\n};\n\t\n/**\n * Function: getSelectionCell\n * \n * Returns the first cell from the array of selected <mxCells>.\n */\nmxGraph.prototype.getSelectionCell = function()\n{\n\treturn this.getSelectionModel().cells[0];\n};\n\n/**\n * Function: getSelectionCells\n * \n * Returns the array of selected <mxCells>.\n */\nmxGraph.prototype.getSelectionCells = function()\n{\n\treturn this.getSelectionModel().cells.slice();\n};\n\n/**\n * Function: setSelectionCell\n * \n * Sets the selection cell.\n * \n * Parameters:\n * \n * cell - <mxCell> to be selected.\n */\nmxGraph.prototype.setSelectionCell = function(cell)\n{\n\tthis.getSelectionModel().setCell(cell);\n};\n\n/**\n * Function: setSelectionCells\n * \n * Sets the selection cell.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be selected.\n */\nmxGraph.prototype.setSelectionCells = function(cells)\n{\n\tthis.getSelectionModel().setCells(cells);\n};\n\n/**\n * Function: addSelectionCell\n * \n * Adds the given cell to the selection.\n * \n * Parameters:\n * \n * cell - <mxCell> to be add to the selection.\n */\nmxGraph.prototype.addSelectionCell = function(cell)\n{\n\tthis.getSelectionModel().addCell(cell);\n};\n\n/**\n * Function: addSelectionCells\n * \n * Adds the given cells to the selection.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be added to the selection.\n */\nmxGraph.prototype.addSelectionCells = function(cells)\n{\n\tthis.getSelectionModel().addCells(cells);\n};\n\n/**\n * Function: removeSelectionCell\n * \n * Removes the given cell from the selection.\n * \n * Parameters:\n * \n * cell - <mxCell> to be removed from the selection.\n */\nmxGraph.prototype.removeSelectionCell = function(cell)\n{\n\tthis.getSelectionModel().removeCell(cell);\n};\n\n/**\n * Function: removeSelectionCells\n * \n * Removes the given cells from the selection.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be removed from the selection.\n */\nmxGraph.prototype.removeSelectionCells = function(cells)\n{\n\tthis.getSelectionModel().removeCells(cells);\n};\n\n/**\n * Function: selectRegion\n * \n * Selects and returns the cells inside the given rectangle for the\n * specified event.\n * \n * Parameters:\n * \n * rect - <mxRectangle> that represents the region to be selected.\n * evt - Mouseevent that triggered the selection.\n */\nmxGraph.prototype.selectRegion = function(rect, evt)\n{\n\tvar cells = this.getCells(rect.x, rect.y, rect.width, rect.height);\n\tthis.selectCellsForEvent(cells, evt);\n\t\n\treturn cells;\n};\n\n/**\n * Function: selectNextCell\n * \n * Selects the next cell.\n */\nmxGraph.prototype.selectNextCell = function()\n{\n\tthis.selectCell(true);\n};\n\n/**\n * Function: selectPreviousCell\n * \n * Selects the previous cell.\n */\nmxGraph.prototype.selectPreviousCell = function()\n{\n\tthis.selectCell();\n};\n\n/**\n * Function: selectParentCell\n * \n * Selects the parent cell.\n */\nmxGraph.prototype.selectParentCell = function()\n{\n\tthis.selectCell(false, true);\n};\n\n/**\n * Function: selectChildCell\n * \n * Selects the first child cell.\n */\nmxGraph.prototype.selectChildCell = function()\n{\n\tthis.selectCell(false, false, true);\n};\n\n/**\n * Function: selectCell\n * \n * Selects the next, parent, first child or previous cell, if all arguments\n * are false.\n * \n * Parameters:\n * \n * isNext - Boolean indicating if the next cell should be selected.\n * isParent - Boolean indicating if the parent cell should be selected.\n * isChild - Boolean indicating if the first child cell should be selected.\n */\nmxGraph.prototype.selectCell = function(isNext, isParent, isChild)\n{\n\tvar sel = this.selectionModel;\n\tvar cell = (sel.cells.length > 0) ? sel.cells[0] : null;\n\t\n\tif (sel.cells.length > 1)\n\t{\n\t\tsel.clear();\n\t}\n\t\n\tvar parent = (cell != null) ?\n\t\tthis.model.getParent(cell) :\n\t\tthis.getDefaultParent();\n\t\n\tvar childCount = this.model.getChildCount(parent);\n\t\n\tif (cell == null && childCount > 0)\n\t{\n\t\tvar child = this.model.getChildAt(parent, 0);\n\t\tthis.setSelectionCell(child);\n\t}\n\telse if ((cell == null || isParent) &&\n\t\tthis.view.getState(parent) != null &&\n\t\tthis.model.getGeometry(parent) != null)\n\t{\n\t\tif (this.getCurrentRoot() != parent)\n\t\t{\n\t\t\tthis.setSelectionCell(parent);\n\t\t}\n\t}\n\telse if (cell != null && isChild)\n\t{\n\t\tvar tmp = this.model.getChildCount(cell);\n\t\t\n\t\tif (tmp > 0)\n\t\t{\n\t\t\tvar child = this.model.getChildAt(cell, 0);\n\t\t\tthis.setSelectionCell(child);\n\t\t}\n\t}\n\telse if (childCount > 0)\n\t{\n\t\tvar i = parent.getIndex(cell);\n\t\t\n\t\tif (isNext)\n\t\t{\n\t\t\ti++;\n\t\t\tvar child = this.model.getChildAt(parent, i % childCount);\n\t\t\tthis.setSelectionCell(child);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti--;\n\t\t\tvar index =  (i < 0) ? childCount - 1 : i;\n\t\t\tvar child = this.model.getChildAt(parent, index);\n\t\t\tthis.setSelectionCell(child);\n\t\t}\n\t}\n};\n\n/**\n * Function: selectAll\n * \n * Selects all children of the given parent cell or the children of the\n * default parent if no parent is specified. To select leaf vertices and/or\n * edges use <selectCells>.\n * \n * Parameters:\n * \n * parent - Optional <mxCell> whose children should be selected.\n * Default is <defaultParent>.\n * descendants - Optional boolean specifying whether all descendants should be\n * selected. Default is false.\n */\nmxGraph.prototype.selectAll = function(parent, descendants)\n{\n\tparent = parent || this.getDefaultParent();\n\t\n\tvar cells = (descendants) ? this.model.filterDescendants(mxUtils.bind(this, function(cell)\n\t{\n\t\treturn cell != parent && this.view.getState(cell) != null;\n\t}), parent) : this.model.getChildren(parent);\n\t\n\tif (cells != null)\n\t{\n\t\tthis.setSelectionCells(cells);\n\t}\n};\n\n/**\n * Function: selectVertices\n * \n * Select all vertices inside the given parent or the default parent.\n */\nmxGraph.prototype.selectVertices = function(parent, selectGroups)\n{\n\tthis.selectCells(true, false, parent, selectGroups);\n};\n\n/**\n * Function: selectVertices\n * \n * Select all vertices inside the given parent or the default parent.\n */\nmxGraph.prototype.selectEdges = function(parent)\n{\n\tthis.selectCells(false, true, parent);\n};\n\n/**\n * Function: selectCells\n * \n * Selects all vertices and/or edges depending on the given boolean\n * arguments recursively, starting at the given parent or the default\n * parent if no parent is specified. Use <selectAll> to select all cells.\n * For vertices, only cells with no children are selected.\n * \n * Parameters:\n * \n * vertices - Boolean indicating if vertices should be selected.\n * edges - Boolean indicating if edges should be selected.\n * parent - Optional <mxCell> that acts as the root of the recursion.\n * Default is <defaultParent>.\n * selectGroups - Optional boolean that specifies if groups should be\n * selected. Default is false.\n */\nmxGraph.prototype.selectCells = function(vertices, edges, parent, selectGroups)\n{\n\tparent = parent || this.getDefaultParent();\n\t\n\tvar filter = mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.view.getState(cell) != null &&\n\t\t\t(((selectGroups || this.model.getChildCount(cell) == 0) &&\n\t\t\tthis.model.isVertex(cell) && vertices\n\t\t\t&& !this.model.isEdge(this.model.getParent(cell))) ||\n\t\t\t(this.model.isEdge(cell) && edges));\n\t});\n\t\n\tvar cells = this.model.filterDescendants(filter, parent);\n\t\n\tif (cells != null)\n\t{\n\t\tthis.setSelectionCells(cells);\n\t}\n};\n\n/**\n * Function: selectCellForEvent\n * \n * Selects the given cell by either adding it to the selection or\n * replacing the selection depending on whether the given mouse event is a\n * toggle event.\n * \n * Parameters:\n * \n * cell - <mxCell> to be selected.\n * evt - Optional mouseevent that triggered the selection.\n */\nmxGraph.prototype.selectCellForEvent = function(cell, evt)\n{\n\tvar isSelected = this.isCellSelected(cell);\n\t\n\tif (this.isToggleEvent(evt))\n\t{\n\t\tif (isSelected)\n\t\t{\n\t\t\tthis.removeSelectionCell(cell);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.addSelectionCell(cell);\n\t\t}\n\t}\n\telse if (!isSelected || this.getSelectionCount() != 1)\n\t{\n\t\tthis.setSelectionCell(cell);\n\t}\n};\n\n/**\n * Function: selectCellsForEvent\n * \n * Selects the given cells by either adding them to the selection or\n * replacing the selection depending on whether the given mouse event is a\n * toggle event.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be selected.\n * evt - Optional mouseevent that triggered the selection.\n */\nmxGraph.prototype.selectCellsForEvent = function(cells, evt)\n{\n\tif (this.isToggleEvent(evt))\n\t{\n\t\tthis.addSelectionCells(cells);\n\t}\n\telse\n\t{\n\t\tthis.setSelectionCells(cells);\n\t}\n};\n\n/**\n * Group: Selection state\n */\n\n/**\n * Function: createHandler\n * \n * Creates a new handler for the given cell state. This implementation\n * returns a new <mxEdgeHandler> of the corresponding cell is an edge,\n * otherwise it returns an <mxVertexHandler>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose handler should be created.\n */\nmxGraph.prototype.createHandler = function(state)\n{\n\tvar result = null;\n\t\n\tif (state != null)\n\t{\n\t\tif (this.model.isEdge(state.cell))\n\t\t{\n\t\t\tvar source = state.getVisibleTerminalState(true);\n\t\t\tvar target = state.getVisibleTerminalState(false);\n\t\t\tvar geo = this.getCellGeometry(state.cell);\n\t\t\t\n\t\t\tvar edgeStyle = this.view.getEdgeStyle(state, (geo != null) ? geo.points : null, source, target);\n\t\t\tresult = this.createEdgeHandler(state, edgeStyle);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = this.createVertexHandler(state);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createVertexHandler\n * \n * Hooks to create a new <mxVertexHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createVertexHandler = function(state)\n{\n\treturn new mxVertexHandler(state);\n};\n\n/**\n * Function: createEdgeHandler\n * \n * Hooks to create a new <mxEdgeHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createEdgeHandler = function(state, edgeStyle)\n{\n\tvar result = null;\n\t\n\tif (edgeStyle == mxEdgeStyle.Loop ||\n\t\tedgeStyle == mxEdgeStyle.ElbowConnector ||\n\t\tedgeStyle == mxEdgeStyle.SideToSide ||\n\t\tedgeStyle == mxEdgeStyle.TopToBottom)\n\t{\n\t\tresult = this.createElbowEdgeHandler(state);\n\t}\n\telse if (edgeStyle == mxEdgeStyle.SegmentConnector || \n\t\t\tedgeStyle == mxEdgeStyle.OrthConnector)\n\t{\n\t\tresult = this.createEdgeSegmentHandler(state);\n\t}\n\telse\n\t{\n\t\tresult = new mxEdgeHandler(state);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createEdgeSegmentHandler\n * \n * Hooks to create a new <mxEdgeSegmentHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createEdgeSegmentHandler = function(state)\n{\n\treturn new mxEdgeSegmentHandler(state);\n};\n\n/**\n * Function: createElbowEdgeHandler\n * \n * Hooks to create a new <mxElbowEdgeHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createElbowEdgeHandler = function(state)\n{\n\treturn new mxElbowEdgeHandler(state);\n};\n\n/**\n * Group: Graph events\n */\n\n/**\n * Function: addMouseListener\n * \n * Adds a listener to the graph event dispatch loop. The listener\n * must implement the mouseDown, mouseMove and mouseUp methods\n * as shown in the <mxMouseEvent> class.\n * \n * Parameters:\n * \n * listener - Listener to be added to the graph event listeners.\n */\nmxGraph.prototype.addMouseListener = function(listener)\n{\n\tif (this.mouseListeners == null)\n\t{\n\t\tthis.mouseListeners = [];\n\t}\n\t\n\tthis.mouseListeners.push(listener);\n};\n\n/**\n * Function: removeMouseListener\n * \n * Removes the specified graph listener.\n * \n * Parameters:\n * \n * listener - Listener to be removed from the graph event listeners.\n */\nmxGraph.prototype.removeMouseListener = function(listener)\n{\n\tif (this.mouseListeners != null)\n\t{\n\t\tfor (var i = 0; i < this.mouseListeners.length; i++)\n\t\t{\n\t\t\tif (this.mouseListeners[i] == listener)\n\t\t\t{\n\t\t\t\tthis.mouseListeners.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: updateMouseEvent\n * \n * Sets the graphX and graphY properties if the given <mxMouseEvent> if\n * required and returned the event.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> to be updated.\n * evtName - Name of the mouse event.\n */\nmxGraph.prototype.updateMouseEvent = function(me, evtName)\n{\n\tif (me.graphX == null || me.graphY == null)\n\t{\n\t\tvar pt = mxUtils.convertPoint(this.container, me.getX(), me.getY());\n\t\t\n\t\tme.graphX = pt.x - this.panDx;\n\t\tme.graphY = pt.y - this.panDy;\n\t\t\n\t\t// Searches for rectangles using method if native hit detection is disabled on shape\n\t\tif (me.getCell() == null && this.isMouseDown && evtName == mxEvent.MOUSE_MOVE)\n\t\t{\n\t\t\tme.state = this.view.getState(this.getCellAt(pt.x, pt.y, null, null, null, function(state)\n\t\t\t{\n\t\t\t\treturn state.shape == null || state.shape.paintBackground != mxRectangleShape.prototype.paintBackground ||\n\t\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_POINTER_EVENTS, '1') == '1' ||\n\t\t\t\t\t(state.shape.fill != null && state.shape.fill != mxConstants.NONE);\n\t\t\t}));\n\t\t}\n\t}\n\t\n\treturn me;\n};\n\n/**\n * Function: getStateForEvent\n * \n * Returns the state for the given touch event.\n */\nmxGraph.prototype.getStateForTouchEvent = function(evt)\n{\n\tvar x = mxEvent.getClientX(evt);\n\tvar y = mxEvent.getClientY(evt);\n\t\n\t// Dispatches the drop event to the graph which\n\t// consumes and executes the source function\n\tvar pt = mxUtils.convertPoint(this.container, x, y);\n\n\treturn this.view.getState(this.getCellAt(pt.x, pt.y));\n};\n\n/**\n * Function: isEventIgnored\n * \n * Returns true if the event should be ignored in <fireMouseEvent>.\n */\nmxGraph.prototype.isEventIgnored = function(evtName, me, sender)\n{\n\tvar mouseEvent = mxEvent.isMouseEvent(me.getEvent());\n\tvar result = false;\n\n\t// Drops events that are fired more than once\n\tif (me.getEvent() == this.lastEvent)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\t{\n\t\tthis.lastEvent = me.getEvent();\n\t}\n\n\t// Installs event listeners to capture the complete gesture from the event source\n\t// for non-MS touch events as a workaround for all events for the same geture being\n\t// fired from the event source even if that was removed from the DOM.\n\tif (this.eventSource != null && evtName != mxEvent.MOUSE_MOVE)\n\t{\n\t\tmxEvent.removeGestureListeners(this.eventSource, null, this.mouseMoveRedirect, this.mouseUpRedirect);\n\t\tthis.mouseMoveRedirect = null;\n\t\tthis.mouseUpRedirect = null;\n\t\tthis.eventSource = null;\n\t}\n\telse if (!mxClient.IS_GC && this.eventSource != null && me.getSource() != this.eventSource)\n\t{\n\t\tresult = true;\n\t}\n\telse if (mxClient.IS_TOUCH && evtName == mxEvent.MOUSE_DOWN &&\n\t\t\t!mouseEvent && !mxEvent.isPenEvent(me.getEvent()))\n\t{\n\t\tthis.eventSource = me.getSource();\n\n\t\tthis.mouseMoveRedirect = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, this.getStateForTouchEvent(evt)));\n\t\t});\n\t\tthis.mouseUpRedirect = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, this.getStateForTouchEvent(evt)));\n\t\t});\n\t\t\n\t\tmxEvent.addGestureListeners(this.eventSource, null, this.mouseMoveRedirect, this.mouseUpRedirect);\n\t}\n\n\t// Factored out the workarounds for FF to make it easier to override/remove\n\t// Note this method has side-effects!\n\tif (this.isSyntheticEventIgnored(evtName, me, sender))\n\t{\n\t\tresult = true;\n\t}\n\n\t// Never fires mouseUp/-Down for double clicks\n\tif (!mxEvent.isPopupTrigger(this.lastEvent) && evtName != mxEvent.MOUSE_MOVE && this.lastEvent.detail == 2)\n\t{\n\t\treturn true;\n\t}\n\t\n\t// Filters out of sequence events or mixed event types during a gesture\n\tif (evtName == mxEvent.MOUSE_UP && this.isMouseDown)\n\t{\n\t\tthis.isMouseDown = false;\n\t}\n\telse if (evtName == mxEvent.MOUSE_DOWN && !this.isMouseDown)\n\t{\n\t\tthis.isMouseDown = true;\n\t\tthis.isMouseTrigger = mouseEvent;\n\t}\n\t// Drops mouse events that are fired during touch gestures as a workaround for Webkit\n\t// and mouse events that are not in sync with the current internal button state\n\telse if (!result && (((!mxClient.IS_FF || evtName != mxEvent.MOUSE_MOVE) &&\n\t\tthis.isMouseDown && this.isMouseTrigger != mouseEvent) ||\n\t\t(evtName == mxEvent.MOUSE_DOWN && this.isMouseDown) ||\n\t\t(evtName == mxEvent.MOUSE_UP && !this.isMouseDown)))\n\t{\n\t\tresult = true;\n\t}\n\t\n\tif (!result && evtName == mxEvent.MOUSE_DOWN)\n\t{\n\t\tthis.lastMouseX = me.getX();\n\t\tthis.lastMouseY = me.getY();\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: isSyntheticEventIgnored\n * \n * Hook for ignoring synthetic mouse events after touchend in Firefox.\n */\nmxGraph.prototype.isSyntheticEventIgnored = function(evtName, me, sender)\n{\n\tvar result = false;\n\tvar mouseEvent = mxEvent.isMouseEvent(me.getEvent());\n\t\n\t// LATER: This does not cover all possible cases that can go wrong in FF\n\tif (this.ignoreMouseEvents && mouseEvent && evtName != mxEvent.MOUSE_MOVE)\n\t{\n\t\tthis.ignoreMouseEvents = evtName != mxEvent.MOUSE_UP;\n\t\tresult = true;\n\t}\n\telse if (mxClient.IS_FF && !mouseEvent && evtName == mxEvent.MOUSE_UP)\n\t{\n\t\tthis.ignoreMouseEvents = true;\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: isEventSourceIgnored\n * \n * Returns true if the event should be ignored in <fireMouseEvent>. This\n * implementation returns true for select, option and input (if not of type\n * checkbox, radio, button, submit or file) event sources if the event is not\n * a mouse event or a left mouse button press event.\n * \n * Parameters:\n * \n * evtName - The name of the event.\n * me - <mxMouseEvent> that should be ignored.\n */\nmxGraph.prototype.isEventSourceIgnored = function(evtName, me)\n{\n\tvar source = me.getSource();\n\tvar name = (source.nodeName != null) ? source.nodeName.toLowerCase() : '';\n\tvar candidate = !mxEvent.isMouseEvent(me.getEvent()) || mxEvent.isLeftMouseButton(me.getEvent());\n\t\n\treturn evtName == mxEvent.MOUSE_DOWN && candidate && (name == 'select' || name == 'option' ||\n\t\t(name == 'input' && source.type != 'checkbox' && source.type != 'radio' &&\n\t\tsource.type != 'button' && source.type != 'submit' && source.type != 'file'));\n};\n\n/**\n * Function: getEventState\n * \n * Returns the <mxCellState> to be used when firing the mouse event for the\n * given state. This implementation returns the given state.\n * \n * Parameters:\n * \n * <mxCellState> - State whose event source should be returned.\n */\nmxGraph.prototype.getEventState = function(state)\n{\n\treturn state;\n};\n\n/**\n * Function: fireMouseEvent\n * \n * Dispatches the given event in the graph event dispatch loop. Possible\n * event names are <mxEvent.MOUSE_DOWN>, <mxEvent.MOUSE_MOVE> and\n * <mxEvent.MOUSE_UP>. All listeners are invoked for all events regardless\n * of the consumed state of the event.\n * \n * Parameters:\n * \n * evtName - String that specifies the type of event to be dispatched.\n * me - <mxMouseEvent> to be fired.\n * sender - Optional sender argument. Default is this.\n */\nmxGraph.prototype.fireMouseEvent = function(evtName, me, sender)\n{\n\tif (this.isEventSourceIgnored(evtName, me))\n\t{\n\t\tif (this.tooltipHandler != null)\n\t\t{\n\t\t\tthis.tooltipHandler.hide();\n\t\t}\n\t\t\n\t\treturn;\n\t}\n\t\n\tif (sender == null)\n\t{\n\t\tsender = this;\n\t}\n\n\t// Updates the graph coordinates in the event\n\tme = this.updateMouseEvent(me, evtName);\n\n\t// Detects and processes double taps for touch-based devices which do not have native double click events\n\t// or where detection of double click is not always possible (quirks, IE10+). Note that this can only handle\n\t// double clicks on cells because the sequence of events in IE prevents detection on the background, it fires\n\t// two mouse ups, one of which without a cell but no mousedown for the second click which means we cannot\n\t// detect which mouseup(s) are part of the first click, ie we do not know when the first click ends.\n\tif ((!this.nativeDblClickEnabled && !mxEvent.isPopupTrigger(me.getEvent())) || (this.doubleTapEnabled &&\n\t\tmxClient.IS_TOUCH && (mxEvent.isTouchEvent(me.getEvent()) || mxEvent.isPenEvent(me.getEvent()))))\n\t{\n\t\tvar currentTime = new Date().getTime();\n\t\t\n\t\t// NOTE: Second mouseDown for double click missing in quirks mode\n\t\tif ((!mxClient.IS_QUIRKS && evtName == mxEvent.MOUSE_DOWN) || (mxClient.IS_QUIRKS && evtName == mxEvent.MOUSE_UP && !this.fireDoubleClick))\n\t\t{\n\t\t\tif (this.lastTouchEvent != null && this.lastTouchEvent != me.getEvent() &&\n\t\t\t\tcurrentTime - this.lastTouchTime < this.doubleTapTimeout &&\n\t\t\t\tMath.abs(this.lastTouchX - me.getX()) < this.doubleTapTolerance &&\n\t\t\t\tMath.abs(this.lastTouchY - me.getY()) < this.doubleTapTolerance &&\n\t\t\t\tthis.doubleClickCounter < 2)\n\t\t\t{\n\t\t\t\tthis.doubleClickCounter++;\n\t\t\t\tvar doubleClickFired = false;\n\t\t\t\t\n\t\t\t\tif (evtName == mxEvent.MOUSE_UP)\n\t\t\t\t{\n\t\t\t\t\tif (me.getCell() == this.lastTouchCell && this.lastTouchCell != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.lastTouchTime = 0;\n\t\t\t\t\t\tvar cell = this.lastTouchCell;\n\t\t\t\t\t\tthis.lastTouchCell = null;\n\n\t\t\t\t\t\t// Fires native dblclick event via event source\n\t\t\t\t\t\t// NOTE: This fires two double click events on edges in quirks mode. While\n\t\t\t\t\t\t// trying to fix this, we realized that nativeDoubleClick can be disabled for\n\t\t\t\t\t\t// quirks and IE10+ (or we didn't find the case mentioned above where it\n\t\t\t\t\t\t// would not work), ie. all double clicks seem to be working without this.\n\t\t\t\t\t\tif (mxClient.IS_QUIRKS)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tme.getSource().fireEvent('ondblclick');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.dblClick(me.getEvent(), cell);\n\t\t\t\t\t\tdoubleClickFired = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.fireDoubleClick = true;\n\t\t\t\t\tthis.lastTouchTime = 0;\n\t\t\t\t}\n\n\t\t\t\t// Do not ignore mouse up in quirks in this case\n\t\t\t\tif (!mxClient.IS_QUIRKS || doubleClickFired)\n\t\t\t\t{\n\t\t\t\t\tmxEvent.consume(me.getEvent());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.lastTouchEvent == null || this.lastTouchEvent != me.getEvent())\n\t\t\t{\n\t\t\t\tthis.lastTouchCell = me.getCell();\n\t\t\t\tthis.lastTouchX = me.getX();\n\t\t\t\tthis.lastTouchY = me.getY();\n\t\t\t\tthis.lastTouchTime = currentTime;\n\t\t\t\tthis.lastTouchEvent = me.getEvent();\n\t\t\t\tthis.doubleClickCounter = 0;\n\t\t\t}\n\t\t}\n\t\telse if ((this.isMouseDown || evtName == mxEvent.MOUSE_UP) && this.fireDoubleClick)\n\t\t{\n\t\t\tthis.fireDoubleClick = false;\n\t\t\tvar cell = this.lastTouchCell;\n\t\t\tthis.lastTouchCell = null;\n\t\t\tthis.isMouseDown = false;\n\t\t\t\n\t\t\t// Workaround for Chrome/Safari not firing native double click events for double touch on background\n\t\t\tvar valid = (cell != null) || ((mxEvent.isTouchEvent(me.getEvent()) || mxEvent.isPenEvent(me.getEvent())) &&\n\t\t\t\t(mxClient.IS_GC || mxClient.IS_SF));\n\t\t\t\n\t\t\tif (valid && Math.abs(this.lastTouchX - me.getX()) < this.doubleTapTolerance &&\n\t\t\t\tMath.abs(this.lastTouchY - me.getY()) < this.doubleTapTolerance)\n\t\t\t{\n\t\t\t\tthis.dblClick(me.getEvent(), cell);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxEvent.consume(me.getEvent());\n\t\t\t}\n\t\t\t\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (!this.isEventIgnored(evtName, me, sender))\n\t{\n\t\t// Updates the event state via getEventState\n\t\tme.state = this.getEventState(me.getState());\n\t\tthis.fireEvent(new mxEventObject(mxEvent.FIRE_MOUSE_EVENT, 'eventName', evtName, 'event', me));\n\t\t\n\t\tif ((mxClient.IS_OP || mxClient.IS_SF || mxClient.IS_GC || mxClient.IS_IE11 ||\n\t\t\t(mxClient.IS_IE && mxClient.IS_SVG) || me.getEvent().target != this.container))\n\t\t{\n\t\t\tif (evtName == mxEvent.MOUSE_MOVE && this.isMouseDown && this.autoScroll && !mxEvent.isMultiTouchEvent(me.getEvent))\n\t\t\t{\n\t\t\t\tthis.scrollPointToVisible(me.getGraphX(), me.getGraphY(), this.autoExtend);\n\t\t\t}\n\t\t\telse if (evtName == mxEvent.MOUSE_UP && this.ignoreScrollbars && this.translateToScrollPosition &&\n\t\t\t\t\t(this.container.scrollLeft != 0 || this.container.scrollTop != 0))\n\t\t\t{\n\t\t\t\tvar s = this.view.scale;\n\t\t\t\tvar tr = this.view.translate;\n\t\t\t\tthis.view.setTranslate(tr.x - this.container.scrollLeft / s, tr.y - this.container.scrollTop / s);\n\t\t\t\tthis.container.scrollLeft = 0;\n\t\t\t\tthis.container.scrollTop = 0;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.mouseListeners != null)\n\t\t\t{\n\t\t\t\tvar args = [sender, me];\n\t\n\t\t\t\t// Does not change returnValue in Opera\n\t\t\t\tif (!me.getEvent().preventDefault)\n\t\t\t\t{\n\t\t\t\t\tme.getEvent().returnValue = true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < this.mouseListeners.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar l = this.mouseListeners[i];\n\t\t\t\t\t\n\t\t\t\t\tif (evtName == mxEvent.MOUSE_DOWN)\n\t\t\t\t\t{\n\t\t\t\t\t\tl.mouseDown.apply(l, args);\n\t\t\t\t\t}\n\t\t\t\t\telse if (evtName == mxEvent.MOUSE_MOVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tl.mouseMove.apply(l, args);\n\t\t\t\t\t}\n\t\t\t\t\telse if (evtName == mxEvent.MOUSE_UP)\n\t\t\t\t\t{\n\t\t\t\t\t\tl.mouseUp.apply(l, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Invokes the click handler\n\t\t\tif (evtName == mxEvent.MOUSE_UP)\n\t\t\t{\n\t\t\t\tthis.click(me);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Detects tapAndHold events using a timer\n\t\tif ((mxEvent.isTouchEvent(me.getEvent()) || mxEvent.isPenEvent(me.getEvent())) &&\n\t\t\tevtName == mxEvent.MOUSE_DOWN && this.tapAndHoldEnabled && !this.tapAndHoldInProgress)\n\t\t{\n\t\t\tthis.tapAndHoldInProgress = true;\n\t\t\tthis.initialTouchX = me.getGraphX();\n\t\t\tthis.initialTouchY = me.getGraphY();\n\t\t\t\n\t\t\tvar handler = function()\n\t\t\t{\n\t\t\t\tif (this.tapAndHoldValid)\n\t\t\t\t{\n\t\t\t\t\tthis.tapAndHold(me);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.tapAndHoldInProgress = false;\n\t\t\t\tthis.tapAndHoldValid = false;\n\t\t\t};\n\t\t\t\n\t\t\tif (this.tapAndHoldThread)\n\t\t\t{\n\t\t\t\twindow.clearTimeout(this.tapAndHoldThread);\n\t\t\t}\n\t\n\t\t\tthis.tapAndHoldThread = window.setTimeout(mxUtils.bind(this, handler), this.tapAndHoldDelay);\n\t\t\tthis.tapAndHoldValid = true;\n\t\t}\n\t\telse if (evtName == mxEvent.MOUSE_UP)\n\t\t{\n\t\t\tthis.tapAndHoldInProgress = false;\n\t\t\tthis.tapAndHoldValid = false;\n\t\t}\n\t\telse if (this.tapAndHoldValid)\n\t\t{\n\t\t\tthis.tapAndHoldValid =\n\t\t\t\tMath.abs(this.initialTouchX - me.getGraphX()) < this.tolerance &&\n\t\t\t\tMath.abs(this.initialTouchY - me.getGraphY()) < this.tolerance;\n\t\t}\n\n\t\t// Stops editing for all events other than from cellEditor\n\t\tif (evtName == mxEvent.MOUSE_DOWN && this.isEditing() && !this.cellEditor.isEventSource(me.getEvent()))\n\t\t{\n\t\t\tthis.stopEditing(!this.isInvokesStopCellEditing());\n\t\t}\n\n\t\tthis.consumeMouseEvent(evtName, me, sender);\n\t}\n};\n\n/**\n * Function: consumeMouseEvent\n * \n * Consumes the given <mxMouseEvent> if it's a touchStart event.\n */\nmxGraph.prototype.consumeMouseEvent = function(evtName, me, sender)\n{\n\t// Workaround for duplicate click in Windows 8 with Chrome/FF/Opera with touch\n\tif (evtName == mxEvent.MOUSE_DOWN && mxEvent.isTouchEvent(me.getEvent()))\n\t{\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: fireGestureEvent\n * \n * Dispatches a <mxEvent.GESTURE> event. The following example will resize the\n * cell under the mouse based on the scale property of the native touch event.\n * \n * (code)\n * graph.addListener(mxEvent.GESTURE, function(sender, eo)\n * {\n *   var evt = eo.getProperty('event');\n *   var state = graph.view.getState(eo.getProperty('cell'));\n *   \n *   if (graph.isEnabled() && graph.isCellResizable(state.cell) && Math.abs(1 - evt.scale) > 0.2)\n *   {\n *     var scale = graph.view.scale;\n *     var tr = graph.view.translate;\n *     \n *     var w = state.width * evt.scale;\n *     var h = state.height * evt.scale;\n *     var x = state.x - (w - state.width) / 2;\n *     var y = state.y - (h - state.height) / 2;\n *     \n *     var bounds = new mxRectangle(graph.snap(x / scale) - tr.x,\n *     \t\tgraph.snap(y / scale) - tr.y, graph.snap(w / scale), graph.snap(h / scale));\n *     graph.resizeCell(state.cell, bounds);\n *     eo.consume();\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * evt - Gestureend event that represents the gesture.\n * cell - Optional <mxCell> associated with the gesture.\n */\nmxGraph.prototype.fireGestureEvent = function(evt, cell)\n{\n\t// Resets double tap event handling when gestures take place\n\tthis.lastTouchTime = 0;\n\tthis.fireEvent(new mxEventObject(mxEvent.GESTURE, 'event', evt, 'cell', cell));\n};\n\n/**\n * Function: destroy\n * \n * Destroys the graph and all its resources.\n */\nmxGraph.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\t\t\n\t\tif (this.tooltipHandler != null)\n\t\t{\n\t\t\tthis.tooltipHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.selectionCellsHandler != null)\n\t\t{\n\t\t\tthis.selectionCellsHandler.destroy();\n\t\t}\n\n\t\tif (this.panningHandler != null)\n\t\t{\n\t\t\tthis.panningHandler.destroy();\n\t\t}\n\n\t\tif (this.popupMenuHandler != null)\n\t\t{\n\t\t\tthis.popupMenuHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.connectionHandler != null)\n\t\t{\n\t\t\tthis.connectionHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.graphHandler != null)\n\t\t{\n\t\t\tthis.graphHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.cellEditor != null)\n\t\t{\n\t\t\tthis.cellEditor.destroy();\n\t\t}\n\t\t\n\t\tif (this.view != null)\n\t\t{\n\t\t\tthis.view.destroy();\n\t\t}\n\n\t\tif (this.model != null && this.graphModelChangeListener != null)\n\t\t{\n\t\t\tthis.model.removeListener(this.graphModelChangeListener);\n\t\t\tthis.graphModelChangeListener = null;\n\t\t}\n\n\t\tthis.container = null;\n\t}\n};\n\n__mxOutput.mxGraph = typeof mxGraph !== 'undefined' ? mxGraph : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellOverlay\n *\n * Extends <mxEventSource> to implement a graph overlay, represented by an icon\n * and a tooltip. Overlays can handle and fire <click> events and are added to\n * the graph using <mxGraph.addCellOverlay>, and removed using\n * <mxGraph.removeCellOverlay>, or <mxGraph.removeCellOverlays> to remove all overlays.\n * The <mxGraph.getCellOverlays> function returns the array of overlays for a given\n * cell in a graph. If multiple overlays exist for the same cell, then\n * <getBounds> should be overridden in at least one of the overlays.\n * \n * Overlays appear on top of all cells in a special layer. If this is not\n * desirable, then the image must be rendered as part of the shape or label of\n * the cell instead.\n *\n * Example:\n * \n * The following adds a new overlays for a given vertex and selects the cell\n * if the overlay is clicked.\n *\n * (code)\n * var overlay = new mxCellOverlay(img, html);\n * graph.addCellOverlay(vertex, overlay);\n * overlay.addListener(mxEvent.CLICK, function(sender, evt)\n * {\n *   var cell = evt.getProperty('cell');\n *   graph.setSelectionCell(cell);\n * });\n * (end)\n * \n * For cell overlays to be printed use <mxPrintPreview.printOverlays>.\n *\n * Event: mxEvent.CLICK\n *\n * Fires when the user clicks on the overlay. The <code>event</code> property\n * contains the corresponding mouse event and the <code>cell</code> property\n * contains the cell. For touch devices this is fired if the element receives\n * a touchend event.\n * \n * Constructor: mxCellOverlay\n *\n * Constructs a new overlay using the given image and tooltip.\n * \n * Parameters:\n * \n * image - <mxImage> that represents the icon to be displayed.\n * tooltip - Optional string that specifies the tooltip.\n * align - Optional horizontal alignment for the overlay. Possible\n * values are <ALIGN_LEFT>, <ALIGN_CENTER> and <ALIGN_RIGHT>\n * (default).\n * verticalAlign - Vertical alignment for the overlay. Possible\n * values are <ALIGN_TOP>, <ALIGN_MIDDLE> and <ALIGN_BOTTOM>\n * (default).\n */\nfunction mxCellOverlay(image, tooltip, align, verticalAlign, offset, cursor)\n{\n\tthis.image = image;\n\tthis.tooltip = tooltip;\n\tthis.align = (align != null) ? align : this.align;\n\tthis.verticalAlign = (verticalAlign != null) ? verticalAlign : this.verticalAlign;\n\tthis.offset = (offset != null) ? offset : new mxPoint();\n\tthis.cursor = (cursor != null) ? cursor : 'help';\n};\n\n/**\n * Extends mxEventSource.\n */\nmxCellOverlay.prototype = new mxEventSource();\nmxCellOverlay.prototype.constructor = mxCellOverlay;\n\n/**\n * Variable: image\n *\n * Holds the <mxImage> to be used as the icon.\n */\nmxCellOverlay.prototype.image = null;\n\n/**\n * Variable: tooltip\n * \n * Holds the optional string to be used as the tooltip.\n */\nmxCellOverlay.prototype.tooltip = null;\n\n/**\n * Variable: align\n * \n * Holds the horizontal alignment for the overlay. Default is\n * <mxConstants.ALIGN_RIGHT>. For edges, the overlay always appears in the\n * center of the edge.\n */\nmxCellOverlay.prototype.align = mxConstants.ALIGN_RIGHT;\n\n/**\n * Variable: verticalAlign\n * \n * Holds the vertical alignment for the overlay. Default is\n * <mxConstants.ALIGN_BOTTOM>. For edges, the overlay always appears in the\n * center of the edge.\n */\nmxCellOverlay.prototype.verticalAlign = mxConstants.ALIGN_BOTTOM;\n\n/**\n * Variable: offset\n * \n * Holds the offset as an <mxPoint>. The offset will be scaled according to the\n * current scale.\n */\nmxCellOverlay.prototype.offset = null;\n\n/**\n * Variable: cursor\n * \n * Holds the cursor for the overlay. Default is 'help'.\n */\nmxCellOverlay.prototype.cursor = null;\n\n/**\n * Variable: defaultOverlap\n * \n * Defines the overlapping for the overlay, that is, the proportional distance\n * from the origin to the point defined by the alignment. Default is 0.5.\n */\nmxCellOverlay.prototype.defaultOverlap = 0.5;\n\n/**\n * Function: getBounds\n * \n * Returns the bounds of the overlay for the given <mxCellState> as an\n * <mxRectangle>. This should be overridden when using multiple overlays\n * per cell so that the overlays do not overlap.\n * \n * The following example will place the overlay along an edge (where\n * x=[-1..1] from the start to the end of the edge and y is the\n * orthogonal offset in px).\n * \n * (code)\n * overlay.getBounds = function(state)\n * {\n *   var bounds = mxCellOverlay.prototype.getBounds.apply(this, arguments);\n *   \n *   if (state.view.graph.getModel().isEdge(state.cell))\n *   {\n *     var pt = state.view.getPoint(state, {x: 0, y: 0, relative: true});\n *     \n *     bounds.x = pt.x - bounds.width / 2;\n *     bounds.y = pt.y - bounds.height / 2;\n *   }\n *   \n *   return bounds;\n * };\n * (end)\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the current state of the\n * associated cell.\n */\nmxCellOverlay.prototype.getBounds = function(state)\n{\n\tvar isEdge = state.view.graph.getModel().isEdge(state.cell);\n\tvar s = state.view.scale;\n\tvar pt = null;\n\n\tvar w = this.image.width;\n\tvar h = this.image.height;\n\t\n\tif (isEdge)\n\t{\n\t\tvar pts = state.absolutePoints;\n\t\t\n\t\tif (pts.length % 2 == 1)\n\t\t{\n\t\t\tpt = pts[Math.floor(pts.length / 2)];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar idx = pts.length / 2;\n\t\t\tvar p0 = pts[idx-1];\n\t\t\tvar p1 = pts[idx];\n\t\t\tpt = new mxPoint(p0.x + (p1.x - p0.x) / 2,\n\t\t\t\tp0.y + (p1.y - p0.y) / 2);\n\t\t}\n\t}\n\telse\n\t{\n\t\tpt = new mxPoint();\n\t\t\n\t\tif (this.align == mxConstants.ALIGN_LEFT)\n\t\t{\n\t\t\tpt.x = state.x;\n\t\t}\n\t\telse if (this.align == mxConstants.ALIGN_CENTER)\n\t\t{\n\t\t\tpt.x = state.x + state.width / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpt.x = state.x + state.width;\n\t\t}\n\t\t\n\t\tif (this.verticalAlign == mxConstants.ALIGN_TOP)\n\t\t{\n\t\t\tpt.y = state.y;\n\t\t}\n\t\telse if (this.verticalAlign == mxConstants.ALIGN_MIDDLE)\n\t\t{\n\t\t\tpt.y = state.y + state.height / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpt.y = state.y + state.height;\n\t\t}\n\t}\n\n\treturn new mxRectangle(Math.round(pt.x - (w * this.defaultOverlap - this.offset.x) * s),\n\t\tMath.round(pt.y - (h * this.defaultOverlap - this.offset.y) * s), w * s, h * s);\n};\n\n/**\n * Function: toString\n * \n * Returns the textual representation of the overlay to be used as the\n * tooltip. This implementation returns <tooltip>.\n */\nmxCellOverlay.prototype.toString = function()\n{\n\treturn this.tooltip;\n};\n\n__mxOutput.mxCellOverlay = typeof mxCellOverlay !== 'undefined' ? mxCellOverlay : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxOutline\n *\n * Implements an outline (aka overview) for a graph. Set <updateOnPan> to true\n * to enable updates while the source graph is panning.\n * \n * Example:\n * \n * (code)\n * var outline = new mxOutline(graph, div);\n * (end)\n * \n * If an outline is used in an <mxWindow> in IE8 standards mode, the following\n * code makes sure that the shadow filter is not inherited and that any\n * transparent elements in the graph do not show the page background, but the\n * background of the graph container.\n * \n * (code)\n * if (document.documentMode == 8)\n * {\n *   container.style.filter = 'progid:DXImageTransform.Microsoft.alpha(opacity=100)';\n * }\n * (end)\n * \n * To move the graph to the top, left corner the following code can be used.\n * \n * (code)\n * var scale = graph.view.scale;\n * var bounds = graph.getGraphBounds();\n * graph.view.setTranslate(-bounds.x / scale, -bounds.y / scale);\n * (end)\n * \n * To toggle the suspended mode, the following can be used.\n * \n * (code)\n * outline.suspended = !outln.suspended;\n * if (!outline.suspended)\n * {\n *   outline.update(true);\n * }\n * (end)\n * \n * Constructor: mxOutline\n *\n * Constructs a new outline for the specified graph inside the given\n * container.\n * \n * Parameters:\n * \n * source - <mxGraph> to create the outline for.\n * container - DOM node that will contain the outline.\n */\nfunction mxOutline(source, container)\n{\n\tthis.source = source;\n\n\tif (container != null)\n\t{\n\t\tthis.init(container);\n\t}\n};\n\n/**\n * Function: source\n * \n * Reference to the source <mxGraph>.\n */\nmxOutline.prototype.source = null;\n\n/**\n * Function: outline\n * \n * Reference to the <mxGraph> that renders the outline.\n */\nmxOutline.prototype.outline = null;\n\n/**\n * Function: graphRenderHint\n * \n * Renderhint to be used for the outline graph. Default is faster.\n */\nmxOutline.prototype.graphRenderHint = mxConstants.RENDERING_HINT_FASTER;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxOutline.prototype.enabled = true;\n\n/**\n * Variable: showViewport\n * \n * Specifies a viewport rectangle should be shown. Default is true.\n */\nmxOutline.prototype.showViewport = true;\n\n/**\n * Variable: border\n * \n * Border to be added at the bottom and right. Default is 10.\n */\nmxOutline.prototype.border = 10;\n\n/**\n * Variable: enabled\n * \n * Specifies the size of the sizer handler. Default is 8.\n */\nmxOutline.prototype.sizerSize = 8;\n\n/**\n * Variable: labelsVisible\n * \n * Specifies if labels should be visible in the outline. Default is false.\n */\nmxOutline.prototype.labelsVisible = false;\n\n/**\n * Variable: updateOnPan\n * \n * Specifies if <update> should be called for <mxEvent.PAN> in the source\n * graph. Default is false.\n */\nmxOutline.prototype.updateOnPan = false;\n\n/**\n * Variable: sizerImage\n * \n * Optional <mxImage> to be used for the sizer. Default is null.\n */\nmxOutline.prototype.sizerImage = null;\n\n/**\n * Variable: minScale\n * \n * Minimum scale to be used. Default is 0.0001.\n */\nmxOutline.prototype.minScale = 0.0001;\n\n/**\n * Variable: suspended\n * \n * Optional boolean flag to suspend updates. Default is false. This flag will\n * also suspend repaints of the outline. To toggle this switch, use the\n * following code.\n * \n * (code)\n * nav.suspended = !nav.suspended;\n * \n * if (!nav.suspended)\n * {\n *   nav.update(true);\n * }\n * (end)\n */\nmxOutline.prototype.suspended = false;\n\n/**\n * Variable: forceVmlHandles\n * \n * Specifies if VML should be used to render the handles in this control. This\n * is true for IE8 standards mode and false for all other browsers and modes.\n * This is a workaround for rendering issues of HTML elements over elements\n * with filters in IE 8 standards mode.\n */\nmxOutline.prototype.forceVmlHandles = document.documentMode == 8;\n\n/**\n * Function: createGraph\n * \n * Creates the <mxGraph> used in the outline.\n */\nmxOutline.prototype.createGraph = function(container)\n{\n\tvar graph = new mxGraph(container, this.source.getModel(), this.graphRenderHint, this.source.getStylesheet());\n\tgraph.foldingEnabled = false;\n\tgraph.autoScroll = false;\n\t\n\treturn graph;\n};\n\n/**\n * Function: init\n * \n * Initializes the outline inside the given container.\n */\nmxOutline.prototype.init = function(container)\n{\n\tthis.outline = this.createGraph(container);\n\t\n\t// Do not repaint when suspended\n\tvar outlineGraphModelChanged = this.outline.graphModelChanged;\n\tthis.outline.graphModelChanged = mxUtils.bind(this, function(changes)\n\t{\n\t\tif (!this.suspended && this.outline != null)\n\t\t{\n\t\t\toutlineGraphModelChanged.apply(this.outline, arguments);\n\t\t}\n\t});\n\n\t// Enables faster painting in SVG\n\tif (mxClient.IS_SVG)\n\t{\n\t\tvar node = this.outline.getView().getCanvas().parentNode;\n\t\tnode.setAttribute('shape-rendering', 'optimizeSpeed');\n\t\tnode.setAttribute('image-rendering', 'optimizeSpeed');\n\t}\n\t\n\t// Hides cursors and labels\n\tthis.outline.labelsVisible = this.labelsVisible;\n\tthis.outline.setEnabled(false);\n\t\n\tthis.updateHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (!this.suspended && !this.active)\n\t\t{\n\t\t\tthis.update();\n\t\t}\n\t});\n\t\n\t// Updates the scale of the outline after a change of the main graph\n\tthis.source.getModel().addListener(mxEvent.CHANGE, this.updateHandler);\n\tthis.outline.addMouseListener(this);\n\t\n\t// Adds listeners to keep the outline in sync with the source graph\n\tvar view = this.source.getView();\n\tview.addListener(mxEvent.SCALE, this.updateHandler);\n\tview.addListener(mxEvent.TRANSLATE, this.updateHandler);\n\tview.addListener(mxEvent.SCALE_AND_TRANSLATE, this.updateHandler);\n\tview.addListener(mxEvent.DOWN, this.updateHandler);\n\tview.addListener(mxEvent.UP, this.updateHandler);\n\n\t// Updates blue rectangle on scroll\n\tmxEvent.addListener(this.source.container, 'scroll', this.updateHandler);\n\t\n\tthis.panHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tif (this.updateOnPan)\n\t\t{\n\t\t\tthis.updateHandler.apply(this, arguments);\n\t\t}\n\t});\n\tthis.source.addListener(mxEvent.PAN, this.panHandler);\n\t\n\t// Refreshes the graph in the outline after a refresh of the main graph\n\tthis.refreshHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tthis.outline.setStylesheet(this.source.getStylesheet());\n\t\tthis.outline.refresh();\n\t});\n\tthis.source.addListener(mxEvent.REFRESH, this.refreshHandler);\n\n\t// Creates the blue rectangle for the viewport\n\tthis.bounds = new mxRectangle(0, 0, 0, 0);\n\tthis.selectionBorder = new mxRectangleShape(this.bounds, null,\n\t\tmxConstants.OUTLINE_COLOR, mxConstants.OUTLINE_STROKEWIDTH);\n\tthis.selectionBorder.dialect = this.outline.dialect;\n\n\tif (this.forceVmlHandles)\n\t{\n\t\tthis.selectionBorder.isHtmlAllowed = function()\n\t\t{\n\t\t\treturn false;\n\t\t};\n\t}\n\t\n\tthis.selectionBorder.init(this.outline.getView().getOverlayPane());\n\n\t// Handles event by catching the initial pointer start and then listening to the\n\t// complete gesture on the event target. This is needed because all the events\n\t// are routed via the initial element even if that element is removed from the\n\t// DOM, which happens when we repaint the selection border and zoom handles.\n\tvar handler = mxUtils.bind(this, function(evt)\n\t{\n\t\tvar t = mxEvent.getSource(evt);\n\t\t\n\t\tvar redirect = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.outline.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t});\n\t\t\n\t\tvar redirect2 = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tmxEvent.removeGestureListeners(t, null, redirect, redirect2);\n\t\t\tthis.outline.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t});\n\t\t\n\t\tmxEvent.addGestureListeners(t, null, redirect, redirect2);\n\t\tthis.outline.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t});\n\t\n\tmxEvent.addGestureListeners(this.selectionBorder.node, handler);\n\n\t// Creates a small blue rectangle for sizing (sizer handle)\n\tthis.sizer = this.createSizer();\n\t\n\tif (this.forceVmlHandles)\n\t{\n\t\tthis.sizer.isHtmlAllowed = function()\n\t\t{\n\t\t\treturn false;\n\t\t};\n\t}\n\t\n\tthis.sizer.init(this.outline.getView().getOverlayPane());\n\t\n\tif (this.enabled)\n\t{\n\t\tthis.sizer.node.style.cursor = 'nwse-resize';\n\t}\n\t\n\tmxEvent.addGestureListeners(this.sizer.node, handler);\n\n\tthis.selectionBorder.node.style.display = (this.showViewport) ? '' : 'none';\n\tthis.sizer.node.style.display = this.selectionBorder.node.style.display;\n\tthis.selectionBorder.node.style.cursor = 'move';\n\n\tthis.update(false);\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxOutline.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * value - Boolean that specifies the new enabled state.\n */\nmxOutline.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: setZoomEnabled\n * \n * Enables or disables the zoom handling by showing or hiding the respective\n * handle.\n * \n * Parameters:\n * \n * value - Boolean that specifies the new enabled state.\n */\nmxOutline.prototype.setZoomEnabled = function(value)\n{\n\tthis.sizer.node.style.visibility = (value) ? 'visible' : 'hidden';\n};\n\n/**\n * Function: refresh\n * \n * Invokes <update> and revalidate the outline. This method is deprecated.\n */\nmxOutline.prototype.refresh = function()\n{\n\tthis.update(true);\n};\n\n/**\n * Function: createSizer\n * \n * Creates the shape used as the sizer.\n */\nmxOutline.prototype.createSizer = function()\n{\n\tif (this.sizerImage != null)\n\t{\n\t\tvar sizer = new mxImageShape(new mxRectangle(0, 0, this.sizerImage.width, this.sizerImage.height), this.sizerImage.src);\n\t\tsizer.dialect = this.outline.dialect;\n\t\t\n\t\treturn sizer;\n\t}\n\telse\n\t{\n\t\tvar sizer = new mxRectangleShape(new mxRectangle(0, 0, this.sizerSize, this.sizerSize),\n\t\t\tmxConstants.OUTLINE_HANDLE_FILLCOLOR, mxConstants.OUTLINE_HANDLE_STROKECOLOR);\n\t\tsizer.dialect = this.outline.dialect;\n\t\n\t\treturn sizer;\n\t}\n};\n\n/**\n * Function: getSourceContainerSize\n * \n * Returns the size of the source container.\n */\nmxOutline.prototype.getSourceContainerSize = function()\n{\n\treturn new mxRectangle(0, 0, this.source.container.scrollWidth, this.source.container.scrollHeight);\n};\n\n/**\n * Function: getOutlineOffset\n * \n * Returns the offset for drawing the outline graph.\n */\nmxOutline.prototype.getOutlineOffset = function(scale)\n{\n\treturn null;\n};\n\n/**\n * Function: getSourceGraphBounds\n * \n * Returns the graph bound boxing of the source.\n */\nmxOutline.prototype.getSourceGraphBounds = function()\n{\n\treturn this.source.getGraphBounds();\n};\n\n/**\n * Function: update\n * \n * Updates the outline.\n */\nmxOutline.prototype.update = function(revalidate)\n{\n\tif (this.source != null && this.source.container != null &&\n\t\tthis.outline != null && this.outline.container != null)\n\t{\n\t\tvar sourceScale = this.source.view.scale;\n\t\tvar scaledGraphBounds = this.getSourceGraphBounds();\n\t\tvar unscaledGraphBounds = new mxRectangle(scaledGraphBounds.x / sourceScale + this.source.panDx,\n\t\t\t\tscaledGraphBounds.y / sourceScale + this.source.panDy, scaledGraphBounds.width / sourceScale,\n\t\t\t\tscaledGraphBounds.height / sourceScale);\n\n\t\tvar unscaledFinderBounds = new mxRectangle(0, 0,\n\t\t\tthis.source.container.clientWidth / sourceScale,\n\t\t\tthis.source.container.clientHeight / sourceScale);\n\t\t\n\t\tvar union = unscaledGraphBounds.clone();\n\t\tunion.add(unscaledFinderBounds);\n\t\n\t\t// Zooms to the scrollable area if that is bigger than the graph\n\t\tvar size = this.getSourceContainerSize();\n\t\tvar completeWidth = Math.max(size.width / sourceScale, union.width);\n\t\tvar completeHeight = Math.max(size.height / sourceScale, union.height);\n\t\n\t\tvar availableWidth = Math.max(0, this.outline.container.clientWidth - this.border);\n\t\tvar availableHeight = Math.max(0, this.outline.container.clientHeight - this.border);\n\t\t\n\t\tvar outlineScale = Math.min(availableWidth / completeWidth, availableHeight / completeHeight);\n\t\tvar scale = (isNaN(outlineScale)) ? this.minScale : Math.max(this.minScale, outlineScale);\n\n\t\tif (scale > 0)\n\t\t{\n\t\t\tif (this.outline.getView().scale != scale)\n\t\t\t{\n\t\t\t\tthis.outline.getView().scale = scale;\n\t\t\t\trevalidate = true;\n\t\t\t}\n\t\t\n\t\t\tvar navView = this.outline.getView();\n\t\t\t\n\t\t\tif (navView.currentRoot != this.source.getView().currentRoot)\n\t\t\t{\n\t\t\t\tnavView.setCurrentRoot(this.source.getView().currentRoot);\n\t\t\t}\n\n\t\t\tvar t = this.source.view.translate;\n\t\t\tvar tx = t.x + this.source.panDx;\n\t\t\tvar ty = t.y + this.source.panDy;\n\t\t\t\n\t\t\tvar off = this.getOutlineOffset(scale);\n\t\t\t\n\t\t\tif (off != null)\n\t\t\t{\n\t\t\t\ttx += off.x;\n\t\t\t\tty += off.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (unscaledGraphBounds.x < 0)\n\t\t\t{\n\t\t\t\ttx = tx - unscaledGraphBounds.x;\n\t\t\t}\n\t\t\tif (unscaledGraphBounds.y < 0)\n\t\t\t{\n\t\t\t\tty = ty - unscaledGraphBounds.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (navView.translate.x != tx || navView.translate.y != ty)\n\t\t\t{\n\t\t\t\tnavView.translate.x = tx;\n\t\t\t\tnavView.translate.y = ty;\n\t\t\t\trevalidate = true;\n\t\t\t}\n\t\t\n\t\t\t// Prepares local variables for computations\n\t\t\tvar t2 = navView.translate;\n\t\t\tscale = this.source.getView().scale;\n\t\t\tvar scale2 = scale / navView.scale;\n\t\t\tvar scale3 = 1.0 / navView.scale;\n\t\t\tvar container = this.source.container;\n\t\t\t\n\t\t\t// Updates the bounds of the viewrect in the navigation\n\t\t\tthis.bounds = new mxRectangle(\n\t\t\t\t(t2.x - t.x - this.source.panDx) / scale3,\n\t\t\t\t(t2.y - t.y - this.source.panDy) / scale3,\n\t\t\t\t(container.clientWidth / scale2),\n\t\t\t\t(container.clientHeight / scale2));\n\t\t\t\n\t\t\t// Adds the scrollbar offset to the finder\n\t\t\tthis.bounds.x += this.source.container.scrollLeft * navView.scale / scale;\n\t\t\tthis.bounds.y += this.source.container.scrollTop * navView.scale / scale;\n\t\t\t\n\t\t\tvar b = this.selectionBorder.bounds;\n\t\t\t\n\t\t\tif (b.x != this.bounds.x || b.y != this.bounds.y || b.width != this.bounds.width || b.height != this.bounds.height)\n\t\t\t{\n\t\t\t\tthis.selectionBorder.bounds = this.bounds;\n\t\t\t\tthis.selectionBorder.redraw();\n\t\t\t}\n\t\t\n\t\t\t// Updates the bounds of the zoom handle at the bottom right\n\t\t\tvar b = this.sizer.bounds;\n\t\t\tvar b2 = new mxRectangle(this.bounds.x + this.bounds.width - b.width / 2,\n\t\t\t\t\tthis.bounds.y + this.bounds.height - b.height / 2, b.width, b.height);\n\n\t\t\tif (b.x != b2.x || b.y != b2.y || b.width != b2.width || b.height != b2.height)\n\t\t\t{\n\t\t\t\tthis.sizer.bounds = b2;\n\t\t\t\t\n\t\t\t\t// Avoids update of visibility in redraw for VML\n\t\t\t\tif (this.sizer.node.style.visibility != 'hidden')\n\t\t\t\t{\n\t\t\t\t\tthis.sizer.redraw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (revalidate)\n\t\t\t{\n\t\t\t\tthis.outline.view.revalidate();\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by starting a translation or zoom.\n */\nmxOutline.prototype.mouseDown = function(sender, me)\n{\n\tif (this.enabled && this.showViewport)\n\t{\n\t\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.source.tolerance : 0;\n\t\tvar hit = (this.source.allowHandleBoundsCheck && (mxClient.IS_IE || tol > 0)) ?\n\t\t\t\tnew mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol) : null;\n\t\tthis.zoom = me.isSource(this.sizer) || (hit != null && mxUtils.intersects(shape.bounds, hit));\n\t\tthis.startX = me.getX();\n\t\tthis.startY = me.getY();\n\t\tthis.active = true;\n\n\t\tif (this.source.useScrollbarsForPanning && mxUtils.hasScrollbars(this.source.container))\n\t\t{\n\t\t\tthis.dx0 = this.source.container.scrollLeft;\n\t\t\tthis.dy0 = this.source.container.scrollTop;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.dx0 = 0;\n\t\t\tthis.dy0 = 0;\n\t\t}\n\t}\n\n\tme.consume();\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by previewing the viewrect in <graph> and updating the\n * rectangle that represents the viewrect in the outline.\n */\nmxOutline.prototype.mouseMove = function(sender, me)\n{\n\tif (this.active)\n\t{\n\t\tthis.selectionBorder.node.style.display = (this.showViewport) ? '' : 'none';\n\t\tthis.sizer.node.style.display = this.selectionBorder.node.style.display; \n\n\t\tvar delta = this.getTranslateForEvent(me);\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\tvar bounds = null;\n\t\t\n\t\tif (!this.zoom)\n\t\t{\n\t\t\t// Previews the panning on the source graph\n\t\t\tvar scale = this.outline.getView().scale;\n\t\t\tbounds = new mxRectangle(this.bounds.x + dx,\n\t\t\t\tthis.bounds.y + dy, this.bounds.width, this.bounds.height);\n\t\t\tthis.selectionBorder.bounds = bounds;\n\t\t\tthis.selectionBorder.redraw();\n\t\t\tdx /= scale;\n\t\t\tdx *= this.source.getView().scale;\n\t\t\tdy /= scale;\n\t\t\tdy *= this.source.getView().scale;\n\t\t\tthis.source.panGraph(-dx - this.dx0, -dy - this.dy0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Does *not* preview zooming on the source graph\n\t\t\tvar container = this.source.container;\n\t\t\tvar viewRatio = container.clientWidth / container.clientHeight;\n\t\t\tdy = dx / viewRatio;\n\t\t\tbounds = new mxRectangle(this.bounds.x,\n\t\t\t\tthis.bounds.y,\n\t\t\t\tMath.max(1, this.bounds.width + dx),\n\t\t\t\tMath.max(1, this.bounds.height + dy));\n\t\t\tthis.selectionBorder.bounds = bounds;\n\t\t\tthis.selectionBorder.redraw();\n\t\t}\n\t\t\n\t\t// Updates the zoom handle\n\t\tvar b = this.sizer.bounds;\n\t\tthis.sizer.bounds = new mxRectangle(\n\t\t\tbounds.x + bounds.width - b.width / 2,\n\t\t\tbounds.y + bounds.height - b.height / 2,\n\t\t\tb.width, b.height);\n\t\t\n\t\t// Avoids update of visibility in redraw for VML\n\t\tif (this.sizer.node.style.visibility != 'hidden')\n\t\t{\n\t\t\tthis.sizer.redraw();\n\t\t}\n\t\t\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: getTranslateForEvent\n * \n * Gets the translate for the given mouse event. Here is an example to limit\n * the outline to stay within positive coordinates:\n * \n * (code)\n * outline.getTranslateForEvent = function(me)\n * {\n *   var pt = new mxPoint(me.getX() - this.startX, me.getY() - this.startY);\n *   \n *   if (!this.zoom)\n *   {\n *     var tr = this.source.view.translate;\n *     pt.x = Math.max(tr.x * this.outline.view.scale, pt.x);\n *     pt.y = Math.max(tr.y * this.outline.view.scale, pt.y);\n *   }\n *   \n *   return pt;\n * };\n * (end)\n */\nmxOutline.prototype.getTranslateForEvent = function(me)\n{\n\treturn new mxPoint(me.getX() - this.startX, me.getY() - this.startY);\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by applying the translation or zoom to <graph>.\n */\nmxOutline.prototype.mouseUp = function(sender, me)\n{\n\tif (this.active)\n\t{\n\t\tvar delta = this.getTranslateForEvent(me);\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\t\n\t\tif (Math.abs(dx) > 0 || Math.abs(dy) > 0)\n\t\t{\n\t\t\tif (!this.zoom)\n\t\t\t{\n\t\t\t\t// Applies the new translation if the source\n\t\t\t\t// has no scrollbars\n\t\t\t\tif (!this.source.useScrollbarsForPanning ||\n\t\t\t\t\t!mxUtils.hasScrollbars(this.source.container))\n\t\t\t\t{\n\t\t\t\t\tthis.source.panGraph(0, 0);\n\t\t\t\t\tdx /= this.outline.getView().scale;\n\t\t\t\t\tdy /= this.outline.getView().scale;\n\t\t\t\t\tvar t = this.source.getView().translate;\n\t\t\t\t\tthis.source.getView().setTranslate(t.x - dx, t.y - dy);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Applies the new zoom\n\t\t\t\tvar w = this.selectionBorder.bounds.width;\n\t\t\t\tvar scale = this.source.getView().scale;\n\t\t\t\tthis.source.zoomTo(Math.max(this.minScale, scale - (dx * scale) / w), false);\n\t\t\t}\n\n\t\t\tthis.update();\n\t\t\tme.consume();\n\t\t}\n\t\t\t\n\t\t// Resets the state of the handler\n\t\tthis.index = null;\n\t\tthis.active = false;\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroy this outline and removes all listeners from <source>.\n */\nmxOutline.prototype.destroy = function()\n{\n\tif (this.source != null)\n\t{\n\t\tthis.source.removeListener(this.panHandler);\n\t\tthis.source.removeListener(this.refreshHandler);\n\t\tthis.source.getModel().removeListener(this.updateHandler);\n\t\tthis.source.getView().removeListener(this.updateHandler);\n\t\tmxEvent.removeListener(this.source.container, 'scroll', this.updateHandler);\n\t\tthis.source = null;\n\t}\n\t\n\tif (this.outline != null)\n\t{\n\t\tthis.outline.removeMouseListener(this);\n\t\tthis.outline.destroy();\n\t\tthis.outline = null;\n\t}\n\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.destroy();\n\t\tthis.selectionBorder = null;\n\t}\n\t\n\tif (this.sizer != null)\n\t{\n\t\tthis.sizer.destroy();\n\t\tthis.sizer = null;\n\t}\n};\n\n__mxOutput.mxOutline = typeof mxOutline !== 'undefined' ? mxOutline : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMultiplicity\n * \n * Defines invalid connections along with the error messages that they produce.\n * To add or remove rules on a graph, you must add/remove instances of this\n * class to <mxGraph.multiplicities>.\n * \n * Example:\n * \n * (code)\n * graph.multiplicities.push(new mxMultiplicity(\n *   true, 'rectangle', null, null, 0, 2, ['circle'],\n *   'Only 2 targets allowed',\n *   'Only circle targets allowed'));\n * (end)\n * \n * Defines a rule where each rectangle must be connected to no more than 2\n * circles and no other types of targets are allowed.\n * \n * Constructor: mxMultiplicity\n * \n * Instantiate class mxMultiplicity in order to describe allowed\n * connections in a graph. Not all constraints can be enforced while\n * editing, some must be checked at validation time. The <countError> and\n * <typeError> are treated as resource keys in <mxResources>.\n * \n * Parameters:\n * \n * source - Boolean indicating if this rule applies to the source or target\n * terminal.\n * type - Type of the source or target terminal that this rule applies to.\n * See <type> for more information.\n * attr - Optional attribute name to match the source or target terminal.\n * value - Optional attribute value to match the source or target terminal.\n * min - Minimum number of edges for this rule. Default is 1.\n * max - Maximum number of edges for this rule. n means infinite. Default\n * is n.\n * validNeighbors - Array of types of the opposite terminal for which this\n * rule applies.\n * countError - Error to be displayed for invalid number of edges.\n * typeError - Error to be displayed for invalid opposite terminals.\n * validNeighborsAllowed - Optional boolean indicating if the array of\n * opposite types should be valid or invalid.\n */\nfunction mxMultiplicity(source, type, attr, value, min, max,\n\tvalidNeighbors, countError, typeError, validNeighborsAllowed)\n{\n\tthis.source = source;\n\tthis.type = type;\n\tthis.attr = attr;\n\tthis.value = value;\n\tthis.min = (min != null) ? min : 0;\n\tthis.max = (max != null) ? max : 'n';\n\tthis.validNeighbors = validNeighbors;\n\tthis.countError = mxResources.get(countError) || countError;\n\tthis.typeError = mxResources.get(typeError) || typeError;\n\tthis.validNeighborsAllowed = (validNeighborsAllowed != null) ?\n\t\tvalidNeighborsAllowed : true;\n};\n\n/**\n * Variable: type\n * \n * Defines the type of the source or target terminal. The type is a string\n * passed to <mxUtils.isNode> together with the source or target vertex\n * value as the first argument.\n */\nmxMultiplicity.prototype.type = null;\n\n/**\n * Variable: attr\n * \n * Optional string that specifies the attributename to be passed to\n * <mxUtils.isNode> to check if the rule applies to a cell.\n */\nmxMultiplicity.prototype.attr = null;\n\n/**\n * Variable: value\n * \n * Optional string that specifies the value of the attribute to be passed\n * to <mxUtils.isNode> to check if the rule applies to a cell.\n */\nmxMultiplicity.prototype.value = null;\n\n/**\n * Variable: source\n * \n * Boolean that specifies if the rule is applied to the source or target\n * terminal of an edge.\n */\nmxMultiplicity.prototype.source = null;\n\n/**\n * Variable: min\n * \n * Defines the minimum number of connections for which this rule applies.\n * Default is 0.\n */\nmxMultiplicity.prototype.min = null;\n\n/**\n * Variable: max\n * \n * Defines the maximum number of connections for which this rule applies.\n * A value of 'n' means unlimited times. Default is 'n'. \n */\nmxMultiplicity.prototype.max = null;\n\n/**\n * Variable: validNeighbors\n * \n * Holds an array of strings that specify the type of neighbor for which\n * this rule applies. The strings are used in <mxCell.is> on the opposite\n * terminal to check if the rule applies to the connection.\n */\nmxMultiplicity.prototype.validNeighbors = null;\n\n/**\n * Variable: validNeighborsAllowed\n * \n * Boolean indicating if the list of validNeighbors are those that are allowed\n * for this rule or those that are not allowed for this rule.\n */\nmxMultiplicity.prototype.validNeighborsAllowed = true;\n\n/**\n * Variable: countError\n * \n * Holds the localized error message to be displayed if the number of\n * connections for which the rule applies is smaller than <min> or greater\n * than <max>.\n */\nmxMultiplicity.prototype.countError = null;\n\n/**\n * Variable: typeError\n * \n * Holds the localized error message to be displayed if the type of the\n * neighbor for a connection does not match the rule.\n */\nmxMultiplicity.prototype.typeError = null;\n\n/**\n * Function: check\n * \n * Checks the multiplicity for the given arguments and returns the error\n * for the given connection or null if the multiplicity does not apply.\n *  \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph> instance.\n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * sourceOut - Number of outgoing edges from the source terminal.\n * targetIn - Number of incoming edges for the target terminal.\n */\nmxMultiplicity.prototype.check = function(graph, edge, source, target, sourceOut, targetIn)\n{\n\tvar error = '';\n\n\tif ((this.source && this.checkTerminal(graph, source, edge)) ||\n\t\t(!this.source && this.checkTerminal(graph, target, edge)))\n\t{\n\t\tif (this.countError != null && \n\t\t\t((this.source && (this.max == 0 || (sourceOut >= this.max))) ||\n\t\t\t(!this.source && (this.max == 0 || (targetIn >= this.max)))))\n\t\t{\n\t\t\terror += this.countError + '\\n';\n\t\t}\n\n\t\tif (this.validNeighbors != null && this.typeError != null && this.validNeighbors.length > 0)\n\t\t{\n\t\t\tvar isValid = this.checkNeighbors(graph, edge, source, target);\n\n\t\t\tif (!isValid)\n\t\t\t{\n\t\t\t\terror += this.typeError + '\\n';\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn (error.length > 0) ? error : null;\n};\n\n/**\n * Function: checkNeighbors\n * \n * Checks if there are any valid neighbours in <validNeighbors>. This is only\n * called if <validNeighbors> is a non-empty array.\n */\nmxMultiplicity.prototype.checkNeighbors = function(graph, edge, source, target)\n{\n\tvar sourceValue = graph.model.getValue(source);\n\tvar targetValue = graph.model.getValue(target);\n\tvar isValid = !this.validNeighborsAllowed;\n\tvar valid = this.validNeighbors;\n\t\n\tfor (var j = 0; j < valid.length; j++)\n\t{\n\t\tif (this.source &&\n\t\t\tthis.checkType(graph, targetValue, valid[j]))\n\t\t{\n\t\t\tisValid = this.validNeighborsAllowed;\n\t\t\tbreak;\n\t\t}\n\t\telse if (!this.source && \n\t\t\tthis.checkType(graph, sourceValue, valid[j]))\n\t\t{\n\t\t\tisValid = this.validNeighborsAllowed;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn isValid;\n};\n\n/**\n * Function: checkTerminal\n * \n * Checks the given terminal cell and returns true if this rule applies. The\n * given cell is the source or target of the given edge, depending on\n * <source>. This implementation uses <checkType> on the terminal's value.\n */\nmxMultiplicity.prototype.checkTerminal = function(graph, terminal, edge)\n{\n\tvar value = graph.model.getValue(terminal);\n\t\n\treturn this.checkType(graph, value, this.type, this.attr, this.value);\n};\n\n/**\n * Function: checkType\n * \n * Checks the type of the given value.\n */\nmxMultiplicity.prototype.checkType = function(graph, value, type, attr, attrValue)\n{\n\tif (value != null)\n\t{\n\t\tif (!isNaN(value.nodeType)) // Checks if value is a DOM node\n\t\t{\n\t\t\treturn mxUtils.isNode(value, type, attr, attrValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn value == type;\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n__mxOutput.mxMultiplicity = typeof mxMultiplicity !== 'undefined' ? mxMultiplicity : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxLayoutManager\n * \n * Implements a layout manager that runs a given layout after any changes to the graph:\n * \n * Example:\n * \n * (code)\n * var layoutMgr = new mxLayoutManager(graph);\n * layoutMgr.getLayout = function(cell, eventName)\n * {\n *   return layout;\n * };\n * (end)\n * \n * See <getLayout> for a description of the possible eventNames.\n * \n * Event: mxEvent.LAYOUT_CELLS\n * \n * Fires between begin- and endUpdate after all cells have been layouted in\n * <layoutCells>. The <code>cells</code> property contains all cells that have\n * been passed to <layoutCells>.\n * \n * Constructor: mxLayoutManager\n *\n * Constructs a new automatic layout for the given graph.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing graph. \n */\nfunction mxLayoutManager(graph)\n{\n\t// Executes the layout before the changes are dispatched\n\tthis.undoHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.beforeUndo(evt.getProperty('edit'));\n\t\t}\n\t});\n\t\n\t// Notifies the layout of a move operation inside a parent\n\tthis.moveHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.cellsMoved(evt.getProperty('cells'), evt.getProperty('event'));\n\t\t}\n\t});\n\t\t\n\t// Notifies the layout of a move operation inside a parent\n\tthis.resizeHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.cellsResized(evt.getProperty('cells'), evt.getProperty('bounds'),\n\t\t\t\tevt.getProperty('previous'));\n\t\t}\n\t});\n\t\n\tthis.setGraph(graph);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxLayoutManager.prototype = new mxEventSource();\nmxLayoutManager.prototype.constructor = mxLayoutManager;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxLayoutManager.prototype.graph = null;\n\n/**\n * Variable: bubbling\n * \n * Specifies if the layout should bubble along\n * the cell hierarchy. Default is true.\n */\nmxLayoutManager.prototype.bubbling = true;\n\n/**\n * Variable: enabled\n * \n * Specifies if event handling is enabled. Default is true.\n */\nmxLayoutManager.prototype.enabled = true;\n\n/**\n * Variable: undoHandler\n * \n * Holds the function that handles the endUpdate event.\n */\nmxLayoutManager.prototype.undoHandler = null;\n\n/**\n * Variable: moveHandler\n * \n * Holds the function that handles the move event.\n */\nmxLayoutManager.prototype.moveHandler = null;\n\n/**\n * Variable: resizeHandler\n * \n * Holds the function that handles the resize event.\n */\nmxLayoutManager.prototype.resizeHandler = null;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxLayoutManager.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxLayoutManager.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isBubbling\n * \n * Returns true if a layout should bubble, that is, if the parent layout\n * should be executed whenever a cell layout (layout of the children of\n * a cell) has been executed. This implementation returns <bubbling>.\n */\nmxLayoutManager.prototype.isBubbling = function()\n{\n\treturn this.bubbling;\n};\n\n/**\n * Function: setBubbling\n * \n * Sets <bubbling>.\n */\nmxLayoutManager.prototype.setBubbling = function(value)\n{\n\tthis.bubbling = value;\n};\n\n/**\n * Function: getGraph\n * \n * Returns the graph that this layout operates on.\n */\nmxLayoutManager.prototype.getGraph = function()\n{\n\treturn this.graph;\n};\n\n/**\n * Function: setGraph\n * \n * Sets the graph that the layouts operate on.\n */\nmxLayoutManager.prototype.setGraph = function(graph)\n{\n\tif (this.graph != null)\n\t{\n\t\tvar model = this.graph.getModel();\t\t\n\t\tmodel.removeListener(this.undoHandler);\n\t\tthis.graph.removeListener(this.moveHandler);\n\t\tthis.graph.removeListener(this.resizeHandler);\n\t}\n\t\n\tthis.graph = graph;\n\t\n\tif (this.graph != null)\n\t{\n\t\tvar model = this.graph.getModel();\t\n\t\tmodel.addListener(mxEvent.BEFORE_UNDO, this.undoHandler);\n\t\tthis.graph.addListener(mxEvent.MOVE_CELLS, this.moveHandler);\n\t\tthis.graph.addListener(mxEvent.RESIZE_CELLS, this.resizeHandler);\n\t}\n};\n\n/**\n * Function: hasLayout\n * \n * Returns true if the given cell has a layout. This implementation invokes\n * <getLayout> with <mxEvent.LAYOUT_CELLS> as the eventName. Override this\n * if creating layouts in <getLayout> is expensive and return true if\n * <getLayout> will return a layout for the given cell for\n * <mxEvent.BEGIN_UPDATE> or <mxEvent.END_UPDATE>.\n */\nmxLayoutManager.prototype.hasLayout = function(cell)\n{\n\treturn this.getLayout(cell, mxEvent.LAYOUT_CELLS);\n};\n\n/**\n * Function: getLayout\n * \n * Returns the layout for the given cell and eventName. Possible\n * event names are <mxEvent.MOVE_CELLS> and <mxEvent.RESIZE_CELLS>\n * when cells are moved or resized and <mxEvent.BEGIN_UPDATE> or\n * <mxEvent.END_UPDATE> for the bottom up and top down phases after\n * changes to the graph model. <mxEvent.LAYOUT_CELLS> is used to\n * check if a layout exists for the given cell. This is called\n * from <hasLayout>.\n */\nmxLayoutManager.prototype.getLayout = function(cell, eventName)\n{\n\treturn null;\n};\n\n/**\n * Function: beforeUndo\n * \n * Called from <undoHandler>.\n *\n * Parameters:\n * \n * cell - Array of <mxCells> that have been moved.\n * evt - Mouse event that represents the mousedown.\n */\nmxLayoutManager.prototype.beforeUndo = function(undoableEdit)\n{\n\tthis.executeLayoutForCells(this.getCellsForChanges(undoableEdit.changes));\n};\n\n/**\n * Function: cellsMoved\n * \n * Called from <moveHandler>.\n *\n * Parameters:\n * \n * cell - Array of <mxCells> that have been moved.\n * evt - Mouse event that represents the mousedown.\n */\nmxLayoutManager.prototype.cellsMoved = function(cells, evt)\n{\n\tif (cells != null && evt != null)\n\t{\n\t\tvar point = mxUtils.convertPoint(this.getGraph().container,\n\t\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\tvar model = this.getGraph().getModel();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar layout = this.getLayout(model.getParent(cells[i]), mxEvent.MOVE_CELLS);\n\n\t\t\tif (layout != null)\n\t\t\t{\n\t\t\t\tlayout.moveCell(cells[i], point.x, point.y);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: cellsResized\n * \n * Called from <resizeHandler>.\n *\n * Parameters:\n * \n * cell - Array of <mxCells> that have been resized.\n * bounds - <mxRectangle> taht represents the new bounds.\n */\nmxLayoutManager.prototype.cellsResized = function(cells, bounds, prev)\n{\n\tif (cells != null && bounds != null)\n\t{\n\t\tvar model = this.getGraph().getModel();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar layout = this.getLayout(model.getParent(cells[i]), mxEvent.RESIZE_CELLS);\n\n\t\t\tif (layout != null)\n\t\t\t{\n\t\t\t\tlayout.resizeCell(cells[i], bounds[i], prev[i]);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getCellsForChanges\n * \n * Returns the cells for which a layout should be executed.\n */\nmxLayoutManager.prototype.getCellsForChanges = function(changes)\n{\n\tvar result = [];\n\t\n\tfor (var i = 0; i < changes.length; i++)\n\t{\n\t\tvar change = changes[i];\n\t\t\n\t\tif (change instanceof mxRootChange)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = result.concat(this.getCellsForChange(change));\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getCellsForChange\n * \n * Executes all layouts which have been scheduled during the\n * changes.\n */\nmxLayoutManager.prototype.getCellsForChange = function(change)\n{\n\tif (change instanceof mxChildChange)\n\t{\n\t\treturn this.addCellsWithLayout(change.child,\n\t\t\tthis.addCellsWithLayout(change.previous));\n\t}\n\telse if (change instanceof mxTerminalChange ||\n\t\tchange instanceof mxGeometryChange)\n\t{\n\t\treturn this.addCellsWithLayout(change.cell);\n\t}\n\telse if (change instanceof mxVisibleChange ||\n\t\tchange instanceof mxStyleChange)\n\t{\n\t\treturn this.addCellsWithLayout(change.cell);\n\t}\n\t\n\treturn [];\n};\n\n/**\n * Function: addCellsWithLayout\n * \n * Adds all ancestors of the given cell that have a layout.\n */\nmxLayoutManager.prototype.addCellsWithLayout = function(cell, result)\n{\n\treturn this.addDescendantsWithLayout(cell,\n\t\tthis.addAncestorsWithLayout(cell, result));\n};\n\n/**\n * Function: addAncestorsWithLayout\n * \n * Adds all ancestors of the given cell that have a layout.\n */\nmxLayoutManager.prototype.addAncestorsWithLayout = function(cell, result)\n{\n\tresult = (result != null) ? result : [];\n\t\n\tif (cell != null)\n\t{\n\t\tvar layout = this.hasLayout(cell);\n\t\t\n\t\tif (layout != null)\n\t\t{\n\t\t\tresult.push(cell);\n\t\t}\n\t\t\n\t\tif (this.isBubbling())\n\t\t{\n\t\t\tvar model = this.getGraph().getModel();\n\t\t\tthis.addAncestorsWithLayout(\n\t\t\t\tmodel.getParent(cell), result);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: addDescendantsWithLayout\n * \n * Adds all descendants of the given cell that have a layout.\n */\nmxLayoutManager.prototype.addDescendantsWithLayout = function(cell, result)\n{\n\tresult = (result != null) ? result : [];\n\t\n\tif (cell != null && this.hasLayout(cell))\n\t{\n\t\tvar model = this.getGraph().getModel();\n\t\t\n\t\tfor (var i = 0; i < model.getChildCount(cell); i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(cell, i);\n\t\t\t\n\t\t\tif (this.hasLayout(child))\n\t\t\t{\n\t\t\t\tresult.push(child);\n\t\t\t\tthis.addDescendantsWithLayout(child, result);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: executeLayoutForCells\n * \n * Executes all layouts for the given cells in two phases: In the first phase\n * layouts for child cells are executed before layouts for parent cells with\n * <mxEvent.BEGIN_UPDATE>, in the second phase layouts for parent cells are\n * executed before layouts for child cells with <mxEvent.END_UPDATE>.\n */\nmxLayoutManager.prototype.executeLayoutForCells = function(cells)\n{\n\tvar sorted = mxUtils.sortCells(cells, false);\n\tthis.layoutCells(sorted, true);\n\tthis.layoutCells(sorted.reverse(), false);\n};\n\n/**\n * Function: layoutCells\n * \n * Executes all layouts which have been scheduled during the changes.\n */\nmxLayoutManager.prototype.layoutCells = function(cells, bubble)\n{\n\tif (cells.length > 0)\n\t{\n\t\t// Invokes the layouts while removing duplicates\n\t\tvar model = this.getGraph().getModel();\n\t\t\n\t\tmodel.beginUpdate();\n\t\ttry \n\t\t{\n\t\t\tvar last = null;\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (cells[i] != model.getRoot() && cells[i] != last)\n\t\t\t\t{\n\t\t\t\t\tthis.executeLayout(cells[i], bubble);\n\t\t\t\t\tlast = cells[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.LAYOUT_CELLS, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: executeLayout\n * \n * Executes the given layout on the given parent.\n */\nmxLayoutManager.prototype.executeLayout = function(cell, bubble)\n{\n\tvar layout = this.getLayout(cell, (bubble) ?\n\t\tmxEvent.BEGIN_UPDATE : mxEvent.END_UPDATE);\n\n\tif (layout != null)\n\t{\n\t\tlayout.execute(cell);\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Removes all handlers from the <graph> and deletes the reference to it.\n */\nmxLayoutManager.prototype.destroy = function()\n{\n\tthis.setGraph(null);\n};\n\n__mxOutput.mxLayoutManager = typeof mxLayoutManager !== 'undefined' ? mxLayoutManager : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneManager\n * \n * Manager for swimlanes and nested swimlanes that sets the size of newly added\n * swimlanes to that of their siblings, and propagates changes to the size of a\n * swimlane to its siblings, if <siblings> is true, and its ancestors, if\n * <bubbling> is true.\n * \n * Constructor: mxSwimlaneManager\n *\n * Constructs a new swimlane manager for the given graph.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing graph. \n */\nfunction mxSwimlaneManager(graph, horizontal, addEnabled, resizeEnabled)\n{\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.addEnabled = (addEnabled != null) ? addEnabled : true;\n\tthis.resizeEnabled = (resizeEnabled != null) ? resizeEnabled : true;\n\n\tthis.addHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled() && this.isAddEnabled())\n\t\t{\n\t\t\tthis.cellsAdded(evt.getProperty('cells'));\n\t\t}\n\t});\n\t\n\tthis.resizeHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled() && this.isResizeEnabled())\n\t\t{\n\t\t\tthis.cellsResized(evt.getProperty('cells'));\n\t\t}\n\t});\n\t\n\tthis.setGraph(graph);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxSwimlaneManager.prototype = new mxEventSource();\nmxSwimlaneManager.prototype.constructor = mxSwimlaneManager;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxSwimlaneManager.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if event handling is enabled. Default is true.\n */\nmxSwimlaneManager.prototype.enabled = true;\n\n/**\n * Variable: horizontal\n * \n * Specifies the orientation of the swimlanes. Default is true.\n */\nmxSwimlaneManager.prototype.horizontal = true;\n\n/**\n * Variable: addEnabled\n * \n * Specifies if newly added cells should be resized to match the size of their\n * existing siblings. Default is true.\n */\nmxSwimlaneManager.prototype.addEnabled = true;\n\n/**\n * Variable: resizeEnabled\n * \n * Specifies if resizing of swimlanes should be handled. Default is true.\n */\nmxSwimlaneManager.prototype.resizeEnabled = true;\n\n/**\n * Variable: moveHandler\n * \n * Holds the function that handles the move event.\n */\nmxSwimlaneManager.prototype.addHandler = null;\n\n/**\n * Variable: moveHandler\n * \n * Holds the function that handles the move event.\n */\nmxSwimlaneManager.prototype.resizeHandler = null;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxSwimlaneManager.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxSwimlaneManager.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxSwimlaneManager.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: setHorizontal\n * \n * Sets <horizontal>.\n */\nmxSwimlaneManager.prototype.setHorizontal = function(value)\n{\n\tthis.horizontal = value;\n};\n\n/**\n * Function: isAddEnabled\n * \n * Returns <addEnabled>.\n */\nmxSwimlaneManager.prototype.isAddEnabled = function()\n{\n\treturn this.addEnabled;\n};\n\n/**\n * Function: setAddEnabled\n * \n * Sets <addEnabled>.\n */\nmxSwimlaneManager.prototype.setAddEnabled = function(value)\n{\n\tthis.addEnabled = value;\n};\n\n/**\n * Function: isResizeEnabled\n * \n * Returns <resizeEnabled>.\n */\nmxSwimlaneManager.prototype.isResizeEnabled = function()\n{\n\treturn this.resizeEnabled;\n};\n\n/**\n * Function: setResizeEnabled\n * \n * Sets <resizeEnabled>.\n */\nmxSwimlaneManager.prototype.setResizeEnabled = function(value)\n{\n\tthis.resizeEnabled = value;\n};\n\n/**\n * Function: getGraph\n * \n * Returns the graph that this manager operates on.\n */\nmxSwimlaneManager.prototype.getGraph = function()\n{\n\treturn this.graph;\n};\n\n/**\n * Function: setGraph\n * \n * Sets the graph that the manager operates on.\n */\nmxSwimlaneManager.prototype.setGraph = function(graph)\n{\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.removeListener(this.addHandler);\n\t\tthis.graph.removeListener(this.resizeHandler);\n\t}\n\t\n\tthis.graph = graph;\n\t\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.addListener(mxEvent.ADD_CELLS, this.addHandler);\n\t\tthis.graph.addListener(mxEvent.CELLS_RESIZED, this.resizeHandler);\n\t}\n};\n\n/**\n * Function: isSwimlaneIgnored\n * \n * Returns true if the given swimlane should be ignored.\n */\nmxSwimlaneManager.prototype.isSwimlaneIgnored = function(swimlane)\n{\n\treturn !this.getGraph().isSwimlane(swimlane);\n};\n\n/**\n * Function: isCellHorizontal\n * \n * Returns true if the given cell is horizontal. If the given cell is not a\n * swimlane, then the global orientation is returned.\n */\nmxSwimlaneManager.prototype.isCellHorizontal = function(cell)\n{\n\tif (this.graph.isSwimlane(cell))\n\t{\n\t\tvar style = this.graph.getCellStyle(cell);\n\t\t\n\t\treturn mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, 1) == 1;\n\t}\n\t\n\treturn !this.isHorizontal();\n};\n\n/**\n * Function: cellsAdded\n * \n * Called if any cells have been added.\n * \n * Parameters:\n * \n * cell - Array of <mxCells> that have been added.\n */\nmxSwimlaneManager.prototype.cellsAdded = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar model = this.getGraph().getModel();\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (!this.isSwimlaneIgnored(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.swimlaneAdded(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: swimlaneAdded\n * \n * Updates the size of the given swimlane to match that of any existing\n * siblings swimlanes.\n * \n * Parameters:\n * \n * swimlane - <mxCell> that represents the new swimlane.\n */\nmxSwimlaneManager.prototype.swimlaneAdded = function(swimlane)\n{\n\tvar model = this.getGraph().getModel();\n\tvar parent = model.getParent(swimlane);\n\tvar childCount = model.getChildCount(parent);\n\tvar geo = null;\n\t\n\t// Finds the first valid sibling swimlane as reference\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(parent, i);\n\t\t\n\t\tif (child != swimlane && !this.isSwimlaneIgnored(child))\n\t\t{\n\t\t\tgeo = model.getGeometry(child);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Applies the size of the refernece to the newly added swimlane\n\tif (geo != null)\n\t{\n\t\tvar parentHorizontal = (parent != null) ? this.isCellHorizontal(parent) : this.horizontal;\n\t\tthis.resizeSwimlane(swimlane, geo.width, geo.height, parentHorizontal);\n\t}\n};\n\n/**\n * Function: cellsResized\n * \n * Called if any cells have been resizes. Calls <swimlaneResized> for all\n * swimlanes where <isSwimlaneIgnored> returns false.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose size was changed.\n */\nmxSwimlaneManager.prototype.cellsResized = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar model = this.getGraph().getModel();\n\t\t\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Finds the top-level swimlanes and adds offsets\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (!this.isSwimlaneIgnored(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tvar geo = model.getGeometry(cells[i]);\n\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar size = new mxRectangle(0, 0, geo.width, geo.height);\n\t\t\t\t\t\tvar top = cells[i];\n\t\t\t\t\t\tvar current = top;\n\t\t\t\t\t\t\n\t\t\t\t\t\twhile (current != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttop = current;\n\t\t\t\t\t\t\tcurrent = model.getParent(current);\n\t\t\t\t\t\t\tvar tmp = (this.graph.isSwimlane(current)) ?\n\t\t\t\t\t\t\t\t\tthis.graph.getStartSize(current) :\n\t\t\t\t\t\t\t\t\tnew mxRectangle();\n\t\t\t\t\t\t\tsize.width += tmp.width;\n\t\t\t\t\t\t\tsize.height += tmp.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar parentHorizontal = (current != null) ? this.isCellHorizontal(current) : this.horizontal;\n\t\t\t\t\t\tthis.resizeSwimlane(top, size.width, size.height, parentHorizontal);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: resizeSwimlane\n * \n * Called from <cellsResized> for all swimlanes that are not ignored to update\n * the size of the siblings and the size of the parent swimlanes, recursively,\n * if <bubbling> is true.\n * \n * Parameters:\n * \n * swimlane - <mxCell> whose size has changed.\n */\nmxSwimlaneManager.prototype.resizeSwimlane = function(swimlane, w, h, parentHorizontal)\n{\n\tvar model = this.getGraph().getModel();\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tvar horizontal = this.isCellHorizontal(swimlane);\n\t\t\n\t\tif (!this.isSwimlaneIgnored(swimlane))\n\t\t{\n\t\t\tvar geo = model.getGeometry(swimlane);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tif ((parentHorizontal && geo.height != h) || (!parentHorizontal && geo.width != w))\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\n\t\t\t\t\tif (parentHorizontal)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.height = h;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.width = w;\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel.setGeometry(swimlane, geo);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar tmp = (this.graph.isSwimlane(swimlane)) ?\n\t\t\t\tthis.graph.getStartSize(swimlane) :\n\t\t\t\tnew mxRectangle();\n\t\tw -= tmp.width;\n\t\th -= tmp.height;\n\t\t\n\t\tvar childCount = model.getChildCount(swimlane);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(swimlane, i);\n\t\t\tthis.resizeSwimlane(child, w, h, horizontal);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Removes all handlers from the <graph> and deletes the reference to it.\n */\nmxSwimlaneManager.prototype.destroy = function()\n{\n\tthis.setGraph(null);\n};\n\n__mxOutput.mxSwimlaneManager = typeof mxSwimlaneManager !== 'undefined' ? mxSwimlaneManager : undefined;\n\n/**\n * Copyright (c) 2006-2017, JGraph Ltd\n * Copyright (c) 2006-2017, Gaudenz Alder\n */\n/**\n * Class: mxTemporaryCellStates\n * \n * Creates a temporary set of cell states.\n */\nfunction mxTemporaryCellStates(view, scale, cells, isCellVisibleFn, getLinkForCellState)\n{\n\tscale = (scale != null) ? scale : 1;\n\tthis.view = view;\n\t\n\t// Stores the previous state\n\tthis.oldValidateCellState = view.validateCellState;\n\tthis.oldBounds = view.getGraphBounds();\n\tthis.oldStates = view.getStates();\n\tthis.oldScale = view.getScale();\n\tthis.oldDoRedrawShape = view.graph.cellRenderer.doRedrawShape;\n\n\tvar self = this;\n\n\t// Overrides doRedrawShape and paint shape to add links on shapes\n\tif (getLinkForCellState != null)\n\t{\n\t\tview.graph.cellRenderer.doRedrawShape = function(state)\n\t\t{\n\t\t\tvar oldPaint = state.shape.paint;\n\t\t\t\n\t\t\tstate.shape.paint = function(c)\n\t\t\t{\n\t\t\t\tvar link = getLinkForCellState(state);\n\t\t\t\t\n\t\t\t\tif (link != null)\n\t\t\t\t{\n\t\t\t\t\tc.setLink(link);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\toldPaint.apply(this, arguments);\n\t\t\t\t\n\t\t\t\tif (link != null)\n\t\t\t\t{\n\t\t\t\t\tc.setLink(null);\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\tself.oldDoRedrawShape.apply(view.graph.cellRenderer, arguments);\n\t\t\tstate.shape.paint = oldPaint;\n\t\t};\n\t}\n\n\t// Overrides validateCellState to ignore invisible cells\n\tview.validateCellState = function(cell, resurse)\n\t{\n\t\tif (cell == null || isCellVisibleFn == null || isCellVisibleFn(cell))\n\t\t{\n\t\t\treturn self.oldValidateCellState.apply(view, arguments);\n\t\t}\n\t\t\n\t\treturn null;\n\t};\n\t\n\t// Creates space for new states\n\tview.setStates(new mxDictionary());\n\tview.setScale(scale);\n\t\n\tif (cells != null)\n\t{\n\t\tview.resetValidationState();\n\t\tvar bbox = null;\n\n\t\t// Validates the vertices and edges without adding them to\n\t\t// the model so that the original cells are not modified\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar bounds = view.getBoundingBox(view.validateCellState(view.validateCell(cells[i])));\n\t\t\t\n\t\t\tif (bbox == null)\n\t\t\t{\n\t\t\t\tbbox = bounds;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbbox.add(bounds);\n\t\t\t}\n\t\t}\n\n\t\tview.setGraphBounds(bbox || new mxRectangle());\n\t}\n};\n\n/**\n * Variable: view\n *\n * Holds the width of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.view = null;\n\n/**\n * Variable: oldStates\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.oldStates = null;\n\n/**\n * Variable: oldBounds\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.oldBounds = null;\n\n/**\n * Variable: oldScale\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.oldScale = null;\n\n/**\n * Function: destroy\n * \n * Returns the top, left corner as a new <mxPoint>.\n */\nmxTemporaryCellStates.prototype.destroy = function()\n{\n\tthis.view.setScale(this.oldScale);\n\tthis.view.setStates(this.oldStates);\n\tthis.view.setGraphBounds(this.oldBounds);\n\tthis.view.validateCellState = this.oldValidateCellState;\n\tthis.view.graph.cellRenderer.doRedrawShape = this.oldDoRedrawShape;\n};\n\n__mxOutput.mxTemporaryCellStates = typeof mxTemporaryCellStates !== 'undefined' ? mxTemporaryCellStates : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxCellStatePreview\n * \n * Implements a live preview for moving cells.\n * \n * Constructor: mxCellStatePreview\n * \n * Constructs a move preview for the given graph.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxCellStatePreview(graph)\n{\n\tthis.deltas = new mxDictionary();\n\tthis.graph = graph;\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellStatePreview.prototype.graph = null;\n\n/**\n * Variable: deltas\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellStatePreview.prototype.deltas = null;\n\n/**\n * Variable: count\n * \n * Contains the number of entries in the map.\n */\nmxCellStatePreview.prototype.count = 0;\n\n/**\n * Function: isEmpty\n * \n * Returns true if this contains no entries.\n */\nmxCellStatePreview.prototype.isEmpty = function()\n{\n\treturn this.count == 0;\n};\n\n/**\n * Function: moveState\n */\nmxCellStatePreview.prototype.moveState = function(state, dx, dy, add, includeEdges)\n{\n\tadd = (add != null) ? add : true;\n\tincludeEdges = (includeEdges != null) ? includeEdges : true;\n\t\n\tvar delta = this.deltas.get(state.cell);\n\n\tif (delta == null)\n\t{\n\t\t// Note: Deltas stores the point and the state since the key is a string.\n\t\tdelta = {point: new mxPoint(dx, dy), state: state};\n\t\tthis.deltas.put(state.cell, delta);\n\t\tthis.count++;\n\t}\n\telse if (add)\n\t{\n\t\tdelta.point.x += dx;\n\t\tdelta.point.y += dy;\n\t}\n\telse\n\t{\n\t\tdelta.point.x = dx;\n\t\tdelta.point.y = dy;\n\t}\n\t\n\tif (includeEdges)\n\t{\n\t\tthis.addEdges(state);\n\t}\n\t\n\treturn delta.point;\n};\n\n/**\n * Function: show\n */\nmxCellStatePreview.prototype.show = function(visitor)\n{\n\tthis.deltas.visit(mxUtils.bind(this, function(key, delta)\n\t{\n\t\tthis.translateState(delta.state, delta.point.x, delta.point.y);\n\t}));\n\t\n\tthis.deltas.visit(mxUtils.bind(this, function(key, delta)\n\t{\n\t\tthis.revalidateState(delta.state, delta.point.x, delta.point.y, visitor);\n\t}));\n};\n\n/**\n * Function: translateState\n */\nmxCellStatePreview.prototype.translateState = function(state, dx, dy)\n{\n\tif (state != null)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\tif (model.isVertex(state.cell))\n\t\t{\n\t\t\tstate.view.updateCellState(state);\n\t\t\tvar geo = model.getGeometry(state.cell);\n\t\t\t\n\t\t\t// Moves selection cells and non-relative vertices in\n\t\t\t// the first phase so that edge terminal points will\n\t\t\t// be updated in the second phase\n\t\t\tif ((dx != 0 || dy != 0) && geo != null && (!geo.relative || this.deltas.get(state.cell) != null))\n\t\t\t{\n\t\t\t\tstate.x += dx;\n\t\t\t\tstate.y += dy;\n\t\t\t}\n\t\t}\n\t    \n\t    var childCount = model.getChildCount(state.cell);\n\t    \n\t    for (var i = 0; i < childCount; i++)\n\t    {\n\t    \tthis.translateState(state.view.getState(model.getChildAt(state.cell, i)), dx, dy);\n\t    }\n\t}\n};\n\n/**\n * Function: revalidateState\n */\nmxCellStatePreview.prototype.revalidateState = function(state, dx, dy, visitor)\n{\n\tif (state != null)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\t// Updates the edge terminal points and restores the\n\t\t// (relative) positions of any (relative) children\n\t\tif (model.isEdge(state.cell))\n\t\t{\n\t\t\tstate.view.updateCellState(state);\n\t\t}\n\n\t\tvar geo = this.graph.getCellGeometry(state.cell);\n\t\tvar pState = state.view.getState(model.getParent(state.cell));\n\t\t\n\t\t// Moves selection vertices which are relative\n\t\tif ((dx != 0 || dy != 0) && geo != null && geo.relative &&\n\t\t\tmodel.isVertex(state.cell) && (pState == null ||\n\t\t\tmodel.isVertex(pState.cell) || this.deltas.get(state.cell) != null))\n\t\t{\n\t\t\tstate.x += dx;\n\t\t\tstate.y += dy;\n\t\t}\n\t\t\n\t\tthis.graph.cellRenderer.redraw(state);\n\t\n\t\t// Invokes the visitor on the given state\n\t\tif (visitor != null)\n\t\t{\n\t\t\tvisitor(state);\n\t\t}\n\t\t\t\t\t\t\n\t    var childCount = model.getChildCount(state.cell);\n\t    \n\t    for (var i = 0; i < childCount; i++)\n\t    {\n\t    \tthis.revalidateState(this.graph.view.getState(model.getChildAt(state.cell, i)), dx, dy, visitor);\n\t    }\n\t}\n};\n\n/**\n * Function: addEdges\n */\nmxCellStatePreview.prototype.addEdges = function(state)\n{\n\tvar model = this.graph.getModel();\n\tvar edgeCount = model.getEdgeCount(state.cell);\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar s = state.view.getState(model.getEdgeAt(state.cell, i));\n\n\t\tif (s != null)\n\t\t{\n\t\t\tthis.moveState(s, 0, 0);\n\t\t}\n\t}\n};\n\n__mxOutput.mxCellStatePreview = typeof mxCellStatePreview !== 'undefined' ? mxCellStatePreview : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxConnectionConstraint\n * \n * Defines an object that contains the constraints about how to connect one\n * side of an edge to its terminal.\n * \n * Constructor: mxConnectionConstraint\n * \n * Constructs a new connection constraint for the given point and boolean\n * arguments.\n * \n * Parameters:\n * \n * point - Optional <mxPoint> that specifies the fixed location of the point\n * in relative coordinates. Default is null.\n * perimeter - Optional boolean that specifies if the fixed point should be\n * projected onto the perimeter of the terminal. Default is true.\n */\nfunction mxConnectionConstraint(point, perimeter, name, dx, dy)\n{\n\tthis.point = point;\n\tthis.perimeter = (perimeter != null) ? perimeter : true;\n\tthis.name = name;\n\tthis.dx = dx? dx : 0;\n\tthis.dy = dy? dy : 0;\n};\n\n/**\n * Variable: point\n * \n * <mxPoint> that specifies the fixed location of the connection point.\n */\nmxConnectionConstraint.prototype.point = null;\n\n/**\n * Variable: perimeter\n * \n * Boolean that specifies if the point should be projected onto the perimeter\n * of the terminal.\n */\nmxConnectionConstraint.prototype.perimeter = null;\n\n/**\n * Variable: name\n * \n * Optional string that specifies the name of the constraint.\n */\nmxConnectionConstraint.prototype.name = null;\n\n/**\n * Variable: dx\n * \n * Optional float that specifies the horizontal offset of the constraint.\n */\nmxConnectionConstraint.prototype.dx = null;\n\n/**\n * Variable: dy\n * \n * Optional float that specifies the vertical offset of the constraint.\n */\nmxConnectionConstraint.prototype.dy = null;\n\n\n__mxOutput.mxConnectionConstraint = typeof mxConnectionConstraint !== 'undefined' ? mxConnectionConstraint : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHandler\n * \n * Graph event handler that handles selection. Individual cells are handled\n * separately using <mxVertexHandler> or one of the edge handlers. These\n * handlers are created using <mxGraph.createHandler> in\n * <mxGraphSelectionModel.cellAdded>.\n * \n * To avoid the container to scroll a moved cell into view, set\n * <scrollAfterMove> to false.\n * \n * Constructor: mxGraphHandler\n * \n * Constructs an event handler that creates handles for the\n * selection cells.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxGraphHandler(graph)\n{\n\tthis.graph = graph;\n\tthis.graph.addMouseListener(this);\n\t\n\t// Repaints the handler after autoscroll\n\tthis.panHandler = mxUtils.bind(this, function()\n\t{\n\t\tif (!this.suspended)\n\t\t{\n\t\t\tthis.updatePreview();\n\t\t\tthis.updateHint();\n\t\t}\n\t});\n\t\n\tthis.graph.addListener(mxEvent.PAN, this.panHandler);\n\t\n\t// Handles escape keystrokes\n\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tthis.reset();\n\t});\n\t\n\tthis.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t\n\t// Updates the preview box for remote changes\n\tthis.refreshHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\t// Merges multiple pending calls\n\t\tif (this.refreshThread)\n\t\t{\n\t\t\twindow.clearTimeout(this.refreshThread);\n\t\t}\n\n\t\t// Waits for the states and handlers to be updated\n\t\tthis.refreshThread = window.setTimeout(mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.refreshThread = null;\n\t\t\t\n\t\t\tif (this.first != null && !this.suspended)\n\t\t\t{\n\t\t\t\t// Updates preview with no translate to compute bounding box\n\t\t\t\tvar dx = this.currentDx;\n\t\t\t\tvar dy = this.currentDy;\n\t\t\t\tthis.currentDx = 0;\n\t\t\t\tthis.currentDy = 0;\n\t\t\t\tthis.updatePreview();\n\t\t\t\tthis.bounds = this.graph.getView().getBounds(this.cells);\n\t\t\t\tthis.pBounds = this.getPreviewBounds(this.cells);\n\n\t\t\t\tif (this.pBounds == null && !this.livePreviewUsed)\n\t\t\t\t{\n\t\t\t\t\tthis.reset();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Restores translate and updates preview\n\t\t\t\t\tthis.currentDx = dx;\n\t\t\t\t\tthis.currentDy = dy;\n\t\t\t\t\tthis.updatePreview();\n\t\t\t\t\tthis.updateHint();\n\n\t\t\t\t\tif (this.livePreviewUsed)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Forces update to ignore last visible state\n\t\t\t\t\t\tthis.setHandlesVisibleForCells(\n\t\t\t\t\t\t\tthis.graph.selectionCellsHandler.\n\t\t\t\t\t\t\tgetHandledSelectionCells(), false, true);\n\t\t\t\t\t\tthis.updatePreview();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}), 0);\n\t});\n\t\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.refreshHandler);\n\tthis.graph.addListener(mxEvent.REFRESH, this.refreshHandler);\n\t\n\tthis.keyHandler = mxUtils.bind(this, function(e)\n\t{\n\t\tif (this.graph.container != null && this.graph.container.style.visibility != 'hidden' &&\n\t\t\tthis.first != null && !this.suspended)\n\t\t{\n\t\t\tvar clone = this.graph.isCloneEvent(e) &&\n\t\t\t\tthis.graph.isCellsCloneable() &&\n\t\t\t\tthis.isCloneEnabled();\n\t\t\t\n\t\t\tif (clone != this.cloning)\n\t\t\t{\n\t\t\t\tthis.cloning = clone;\n\t\t\t\tthis.checkPreview();\n\t\t\t\tthis.updatePreview();\n\t\t\t}\n\t\t}\n\t});\n\t\n\tmxEvent.addListener(document, 'keydown', this.keyHandler);\n\tmxEvent.addListener(document, 'keyup', this.keyHandler);\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxGraphHandler.prototype.graph = null;\n\n/**\n * Variable: maxCells\n * \n * Defines the maximum number of cells to paint subhandles\n * for. Default is 50 for Firefox and 20 for IE. Set this\n * to 0 if you want an unlimited number of handles to be\n * displayed. This is only recommended if the number of\n * cells in the graph is limited to a small number, eg.\n * 500.\n */\nmxGraphHandler.prototype.maxCells = (mxClient.IS_IE) ? 20 : 50;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxGraphHandler.prototype.enabled = true;\n\n/**\n * Variable: highlightEnabled\n * \n * Specifies if drop targets under the mouse should be enabled. Default is\n * true.\n */\nmxGraphHandler.prototype.highlightEnabled = true;\n\n/**\n * Variable: cloneEnabled\n * \n * Specifies if cloning by control-drag is enabled. Default is true.\n */\nmxGraphHandler.prototype.cloneEnabled = true;\n\n/**\n * Variable: moveEnabled\n * \n * Specifies if moving is enabled. Default is true.\n */\nmxGraphHandler.prototype.moveEnabled = true;\n\n/**\n * Variable: guidesEnabled\n * \n * Specifies if other cells should be used for snapping the right, center or\n * left side of the current selection. Default is false.\n */\nmxGraphHandler.prototype.guidesEnabled = false;\n\n/**\n * Variable: handlesVisible\n * \n * Whether the handles of the selection are currently visible.\n */\nmxGraphHandler.prototype.handlesVisible = true;\n\n/**\n * Variable: guide\n * \n * Holds the <mxGuide> instance that is used for alignment.\n */\nmxGraphHandler.prototype.guide = null;\n\n/**\n * Variable: currentDx\n * \n * Stores the x-coordinate of the current mouse move.\n */\nmxGraphHandler.prototype.currentDx = null;\n\n/**\n * Variable: currentDy\n * \n * Stores the y-coordinate of the current mouse move.\n */\nmxGraphHandler.prototype.currentDy = null;\n\n/**\n * Variable: updateCursor\n * \n * Specifies if a move cursor should be shown if the mouse is over a movable\n * cell. Default is true.\n */\nmxGraphHandler.prototype.updateCursor = true;\n\n/**\n * Variable: selectEnabled\n * \n * Specifies if selecting is enabled. Default is true.\n */\nmxGraphHandler.prototype.selectEnabled = true;\n\n/**\n * Variable: removeCellsFromParent\n * \n * Specifies if cells may be moved out of their parents. Default is true.\n */\nmxGraphHandler.prototype.removeCellsFromParent = true;\n\n/**\n * Variable: removeEmptyParents\n * \n * If empty parents should be removed from the model after all child cells\n * have been moved out. Default is true.\n */\nmxGraphHandler.prototype.removeEmptyParents = false;\n\n/**\n * Variable: connectOnDrop\n * \n * Specifies if drop events are interpreted as new connections if no other\n * drop action is defined. Default is false.\n */\nmxGraphHandler.prototype.connectOnDrop = false;\n\n/**\n * Variable: scrollOnMove\n * \n * Specifies if the view should be scrolled so that a moved cell is\n * visible. Default is true.\n */\nmxGraphHandler.prototype.scrollOnMove = true;\n\n/**\n * Variable: minimumSize\n * \n * Specifies the minimum number of pixels for the width and height of a\n * selection border. Default is 6.\n */\nmxGraphHandler.prototype.minimumSize = 6;\n\n/**\n * Variable: previewColor\n * \n * Specifies the color of the preview shape. Default is black.\n */\nmxGraphHandler.prototype.previewColor = 'black';\n\n/**\n * Variable: htmlPreview\n * \n * Specifies if the graph container should be used for preview. If this is used\n * then drop target detection relies entirely on <mxGraph.getCellAt> because\n * the HTML preview does not \"let events through\". Default is false.\n */\nmxGraphHandler.prototype.htmlPreview = false;\n\n/**\n * Variable: shape\n * \n * Reference to the <mxShape> that represents the preview.\n */\nmxGraphHandler.prototype.shape = null;\n\n/**\n * Variable: scaleGrid\n * \n * Specifies if the grid should be scaled. Default is false.\n */\nmxGraphHandler.prototype.scaleGrid = false;\n\n/**\n * Variable: rotationEnabled\n * \n * Specifies if the bounding box should allow for rotation. Default is true.\n */\nmxGraphHandler.prototype.rotationEnabled = true;\n\n/**\n * Variable: maxLivePreview\n * \n * Maximum number of cells for which live preview should be used. Default is 0\n * which means no live preview.\n */\nmxGraphHandler.prototype.maxLivePreview = 0;\n\n/**\n * Variable: allowLivePreview\n * \n * If live preview is allowed on this system. Default is true for systems with\n * SVG support.\n */\nmxGraphHandler.prototype.allowLivePreview = mxClient.IS_SVG;\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxGraphHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxGraphHandler.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isCloneEnabled\n * \n * Returns <cloneEnabled>.\n */\nmxGraphHandler.prototype.isCloneEnabled = function()\n{\n\treturn this.cloneEnabled;\n};\n\n/**\n * Function: setCloneEnabled\n * \n * Sets <cloneEnabled>.\n * \n * Parameters:\n * \n * value - Boolean that specifies the new clone enabled state.\n */\nmxGraphHandler.prototype.setCloneEnabled = function(value)\n{\n\tthis.cloneEnabled = value;\n};\n\n/**\n * Function: isMoveEnabled\n * \n * Returns <moveEnabled>.\n */\nmxGraphHandler.prototype.isMoveEnabled = function()\n{\n\treturn this.moveEnabled;\n};\n\n/**\n * Function: setMoveEnabled\n * \n * Sets <moveEnabled>.\n */\nmxGraphHandler.prototype.setMoveEnabled = function(value)\n{\n\tthis.moveEnabled = value;\n};\n\n/**\n * Function: isSelectEnabled\n * \n * Returns <selectEnabled>.\n */\nmxGraphHandler.prototype.isSelectEnabled = function()\n{\n\treturn this.selectEnabled;\n};\n\n/**\n * Function: setSelectEnabled\n * \n * Sets <selectEnabled>.\n */\nmxGraphHandler.prototype.setSelectEnabled = function(value)\n{\n\tthis.selectEnabled = value;\n};\n\n/**\n * Function: isRemoveCellsFromParent\n * \n * Returns <removeCellsFromParent>.\n */\nmxGraphHandler.prototype.isRemoveCellsFromParent = function()\n{\n\treturn this.removeCellsFromParent;\n};\n\n/**\n * Function: setRemoveCellsFromParent\n * \n * Sets <removeCellsFromParent>.\n */\nmxGraphHandler.prototype.setRemoveCellsFromParent = function(value)\n{\n\tthis.removeCellsFromParent = value;\n};\n\n/**\n * Function: isPropagateSelectionCell\n * \n * Returns true if the given cell and parent should propagate\n * selection state to the parent.\n */\nmxGraphHandler.prototype.isPropagateSelectionCell = function(cell, immediate, me)\n{\n\tvar parent = this.graph.model.getParent(cell);\n\n\tif (immediate)\n\t{\n\t\tvar geo = (this.graph.model.isEdge(cell)) ? null :\n\t\t\tthis.graph.getCellGeometry(cell);\n\t\t\n\t\treturn !this.graph.isSiblingSelected(cell) &&\n\t\t\t((geo != null && geo.relative) ||\n\t\t\t!this.graph.isSwimlane(parent));\n\t}\n\telse\n\t{\n\t\treturn (!this.graph.isToggleEvent(me.getEvent()) ||\n\t\t\t(!this.graph.isSiblingSelected(cell) &&\n\t\t\t!this.graph.isCellSelected(cell) &&\n\t\t\t(!this.graph.isSwimlane(parent)) ||\n\t\t\tthis.graph.isCellSelected(parent))) &&\n\t\t\t(this.graph.isToggleEvent(me.getEvent()) ||\n\t\t\t!this.graph.isCellSelected(parent));\n\t}\n};\n\n/**\n * Function: getInitialCellForEvent\n * \n * Hook to return initial cell for the given event. This returns\n * the topmost cell that is not a swimlane or is selected.\n */\nmxGraphHandler.prototype.getInitialCellForEvent = function(me)\n{\n\tvar state = me.getState();\n\t\n\tif ((!this.graph.isToggleEvent(me.getEvent()) || !mxEvent.isAltDown(me.getEvent())) &&\n\t\tstate != null && !this.graph.isCellSelected(state.cell))\n\t{\n\t\tvar model = this.graph.model;\n\t\tvar next = this.graph.view.getState(model.getParent(state.cell));\n\n\t\twhile (next != null && !this.graph.isCellSelected(next.cell) &&\n\t\t\t(model.isVertex(next.cell) || model.isEdge(next.cell)) &&\n\t\t\tthis.isPropagateSelectionCell(state.cell, true, me))\n\t\t{\n\t\t\tstate = next;\n\t\t\tnext = this.graph.view.getState(this.graph.getModel().getParent(state.cell));\n\t\t}\n\t}\n\t\n\treturn (state != null) ? state.cell : null;\n};\n\n/**\n * Function: isDelayedSelection\n * \n * Returns true if the cell or one of its ancestors is selected.\n */\nmxGraphHandler.prototype.isDelayedSelection = function(cell, me)\n{\n\tif (!this.graph.isToggleEvent(me.getEvent()) || !mxEvent.isAltDown(me.getEvent()))\n\t{\n\t\twhile (cell != null)\n\t\t{\n\t\t\tif (this.graph.selectionCellsHandler.isHandled(cell))\n\t\t\t{\n\t\t\t\treturn this.graph.cellEditor.getEditingCell() != cell;\n\t\t\t}\n\t\t\t\n\t\t\tcell = this.graph.model.getParent(cell);\n\t\t}\n\t}\n\t\n\treturn this.graph.isToggleEvent(me.getEvent()) && !mxEvent.isAltDown(me.getEvent());\n};\n\n/**\n * Function: selectDelayed\n * \n * Implements the delayed selection for the given mouse event.\n */\nmxGraphHandler.prototype.selectDelayed = function(me)\n{\n\tif (!this.graph.popupMenuHandler.isPopupTrigger(me))\n\t{\n\t\tvar cell = me.getCell();\n\t\t\n\t\tif (cell == null)\n\t\t{\n\t\t\tcell = this.cell;\n\t\t}\n\t\t\n\t\tthis.selectCellForEvent(cell, me);\n\t}\n};\n\n/**\n * Function: selectCellForEvent\n * \n * Selects the given cell for the given <mxMouseEvent>.\n */\nmxGraphHandler.prototype.selectCellForEvent = function(cell, me)\n{\n\tvar state = this.graph.view.getState(cell);\n\t\n\tif (state != null)\n\t{\n\t\tif (me.isSource(state.control))\n\t\t{\n\t\t\tthis.graph.selectCellForEvent(cell, me.getEvent());\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (!this.graph.isToggleEvent(me.getEvent()) ||\n\t\t\t\t!mxEvent.isAltDown(me.getEvent()))\n\t\t\t{\n\t\t\t\tvar model = this.graph.getModel();\n\t\t\t\tvar parent = model.getParent(cell);\n\t\t\t\t\n\t\t\t\twhile (this.graph.view.getState(parent) != null &&\n\t\t\t\t\t(model.isVertex(parent) || model.isEdge(parent)) &&\n\t\t\t\t\tthis.isPropagateSelectionCell(cell, false, me))\n\t\t\t\t{\n\t\t\t\t\tcell = parent;\n\t\t\t\t\tparent = model.getParent(cell);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.graph.selectCellForEvent(cell, me.getEvent());\n\t\t}\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: consumeMouseEvent\n * \n * Consumes the given mouse event. NOTE: This may be used to enable click\n * events for links in labels on iOS as follows as consuming the initial\n * touchStart disables firing the subsequent click event on the link.\n * \n * <code>\n * mxGraphHandler.prototype.consumeMouseEvent = function(evtName, me)\n * {\n *   var source = mxEvent.getSource(me.getEvent());\n *   \n *   if (!mxEvent.isTouchEvent(me.getEvent()) || source.nodeName != 'A')\n *   {\n *     me.consume();\n *   }\n * }\n * </code>\n */\nmxGraphHandler.prototype.consumeMouseEvent = function(evtName, me)\n{\n\tme.consume();\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by selecing the given cell and creating a handle for\n * it. By consuming the event all subsequent events of the gesture are\n * redirected to this handler.\n */\nmxGraphHandler.prototype.mouseDown = function(sender, me)\n{\n\tif (!me.isConsumed() && this.isEnabled() && this.graph.isEnabled() &&\n\t\tme.getState() != null && !mxEvent.isMultiTouchEvent(me.getEvent()))\n\t{\n\t\tvar cell = this.getInitialCellForEvent(me);\n\t\tthis.delayedSelection = this.isDelayedSelection(cell, me);\n\t\tthis.cell = null;\n\t\t\n\t\tif (this.isSelectEnabled() && !this.delayedSelection)\n\t\t{\n\t\t\tthis.graph.selectCellForEvent(cell, me.getEvent());\n\t\t}\n\n\t\tif (this.isMoveEnabled())\n\t\t{\n\t\t\tvar model = this.graph.model;\n\t\t\tvar geo = model.getGeometry(cell);\n\n\t\t\tif (this.graph.isCellMovable(cell) && ((!model.isEdge(cell) || this.graph.getSelectionCount() > 1 ||\n\t\t\t\t(geo.points != null && geo.points.length > 0) || model.getTerminal(cell, true) == null ||\n\t\t\t\tmodel.getTerminal(cell, false) == null) || this.graph.allowDanglingEdges || \n\t\t\t\t(this.graph.isCloneEvent(me.getEvent()) && this.graph.isCellsCloneable())))\n\t\t\t{\n\t\t\t\tthis.start(cell, me.getX(), me.getY());\n\t\t\t}\n\t\t\telse if (this.delayedSelection)\n\t\t\t{\n\t\t\t\tthis.cell = cell;\n\t\t\t}\n\n\t\t\tthis.cellWasClicked = true;\n\t\t\tthis.consumeMouseEvent(mxEvent.MOUSE_DOWN, me);\n\t\t}\n\t}\n};\n\n/**\n * Function: getGuideStates\n * \n * Creates an array of cell states which should be used as guides.\n */\nmxGraphHandler.prototype.getGuideStates = function()\n{\n\tvar parent = this.graph.getDefaultParent();\n\tvar model = this.graph.getModel();\n\t\n\tvar filter = mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.graph.view.getState(cell) != null &&\n\t\t\tmodel.isVertex(cell) &&\n\t\t\tmodel.getGeometry(cell) != null &&\n\t\t\t!model.getGeometry(cell).relative;\n\t});\n\t\n\treturn this.graph.view.getCellStates(model.filterDescendants(filter, parent));\n};\n\n/**\n * Function: getCells\n * \n * Returns the cells to be modified by this handler. This implementation\n * returns all selection cells that are movable, or the given initial cell if\n * the given cell is not selected and movable. This handles the case of moving\n * unselectable or unselected cells.\n * \n * Parameters:\n * \n * initialCell - <mxCell> that triggered this handler.\n */\nmxGraphHandler.prototype.getCells = function(initialCell)\n{\n\tif (!this.delayedSelection && this.graph.isCellMovable(initialCell))\n\t{\n\t\treturn [initialCell];\n\t}\n\telse\n\t{\n\t\treturn this.graph.getMovableCells(this.graph.getSelectionCells());\n\t}\n};\n\n/**\n * Function: getPreviewBounds\n * \n * Returns the <mxRectangle> used as the preview bounds for\n * moving the given cells.\n */\nmxGraphHandler.prototype.getPreviewBounds = function(cells)\n{\n\tvar bounds = this.getBoundingBox(cells);\n\t\n\tif (bounds != null)\n\t{\n\t\t// Corrects width and height\n\t\tbounds.width = Math.max(0, bounds.width - 1);\n\t\tbounds.height = Math.max(0, bounds.height - 1);\n\t\t\n\t\tif (bounds.width < this.minimumSize)\n\t\t{\n\t\t\tvar dx = this.minimumSize - bounds.width;\n\t\t\tbounds.x -= dx / 2;\n\t\t\tbounds.width = this.minimumSize;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbounds.x = Math.round(bounds.x);\n\t\t\tbounds.width = Math.ceil(bounds.width);\n\t\t}\n\t\t\n\t\tvar tr = this.graph.view.translate;\n\t\tvar s = this.graph.view.scale;\n\t\t\n\t\tif (bounds.height < this.minimumSize)\n\t\t{\n\t\t\tvar dy = this.minimumSize - bounds.height;\n\t\t\tbounds.y -= dy / 2;\n\t\t\tbounds.height = this.minimumSize;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbounds.y = Math.round(bounds.y);\n\t\t\tbounds.height = Math.ceil(bounds.height);\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: getBoundingBox\n * \n * Returns the union of the <mxCellStates> for the given array of <mxCells>.\n * For vertices, this method uses the bounding box of the corresponding shape\n * if one exists. The bounding box of the corresponding text label and all\n * controls and overlays are ignored. See also: <mxGraphView.getBounds> and\n * <mxGraph.getBoundingBox>.\n *\n * Parameters:\n *\n * cells - Array of <mxCells> whose bounding box should be returned.\n */\nmxGraphHandler.prototype.getBoundingBox = function(cells)\n{\n\tvar result = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (model.isVertex(cells[i]) || model.isEdge(cells[i]))\n\t\t\t{\n\t\t\t\tvar state = this.graph.view.getState(cells[i]);\n\t\t\t\n\t\t\t\tif (state != null)\n\t\t\t\t{\n\t\t\t\t\tvar bbox = state;\n\t\t\t\t\t\n\t\t\t\t\tif (model.isVertex(cells[i]) && state.shape != null && state.shape.boundingBox != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tbbox = state.shape.boundingBox;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (result == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = mxRectangle.fromRectangle(bbox);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.add(bbox);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createPreviewShape\n * \n * Creates the shape used to draw the preview for the given bounds.\n */\nmxGraphHandler.prototype.createPreviewShape = function(bounds)\n{\n\tvar shape = new mxRectangleShape(bounds, null, this.previewColor);\n\tshape.isDashed = true;\n\t\n\tif (this.htmlPreview)\n\t{\n\t\tshape.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tshape.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\t// Makes sure to use either VML or SVG shapes in order to implement\n\t\t// event-transparency on the background area of the rectangle since\n\t\t// HTML shapes do not let mouseevents through even when transparent\n\t\tshape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\tshape.init(this.graph.getView().getOverlayPane());\n\t\tshape.pointerEvents = false;\n\t\t\n\t\t// Workaround for artifacts on iOS\n\t\tif (mxClient.IS_IOS)\n\t\t{\n\t\t\tshape.getSvgScreenOffset = function()\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t}\n\t\n\treturn shape;\n};\n\n/**\n * Function: start\n * \n * Starts the handling of the mouse gesture.\n */\nmxGraphHandler.prototype.start = function(cell, x, y, cells)\n{\n\tthis.cell = cell;\n\tthis.first = mxUtils.convertPoint(this.graph.container, x, y);\n\tthis.cells = (cells != null) ? cells : this.getCells(this.cell);\n\tthis.bounds = this.graph.getView().getBounds(this.cells);\n\tthis.pBounds = this.getPreviewBounds(this.cells);\n\tthis.allCells = new mxDictionary();\n\tthis.cloning = false;\n\tthis.cellCount = 0;\n\t\n\tfor (var i = 0; i < this.cells.length; i++)\n\t{\n\t\tthis.cellCount += this.addStates(this.cells[i], this.allCells);\n\t}\n\t\n\tif (this.guidesEnabled)\n\t{\n\t\tthis.guide = new mxGuide(this.graph, this.getGuideStates());\n\t\tvar parent = this.graph.model.getParent(cell);\n\t\tvar ignore = this.graph.model.getChildCount(parent) < 2;\n\t\t\n\t\t// Uses connected states as guides\n\t\tvar connected = new mxDictionary();\n\t\tvar opps = this.graph.getOpposites(this.graph.getEdges(this.cell), this.cell);\n\t\t\n\t\tfor (var i = 0; i < opps.length; i++)\n\t\t{\n\t\t\tvar state = this.graph.view.getState(opps[i]);\n\t\t\t\n\t\t\tif (state != null && !connected.get(state))\n\t\t\t{\n\t\t\t\tconnected.put(state, true);\n\t\t\t}\n\t\t}\n\n\t\tthis.guide.isStateIgnored = mxUtils.bind(this, function(state)\n\t\t{\n\t\t\tvar p = this.graph.model.getParent(state.cell);\n\t\t\t\n\t\t\treturn state.cell != null && ((!this.cloning &&\n\t\t\t\tthis.isCellMoving(state.cell)) ||\n\t\t\t\t(state.cell != (this.target || parent) && !ignore &&\n\t\t\t\t!connected.get(state) &&\n\t\t\t\t(this.target == null || this.graph.model.getChildCount(\n\t\t\t\tthis.target) >= 2) && p != (this.target || parent)));  \n\t\t});\n\t}\n};\n\n/**\n * Function: addStates\n * \n * Adds the states for the given cell recursively to the given dictionary.\n */\nmxGraphHandler.prototype.addStates = function(cell, dict)\n{\n\tvar state = this.graph.view.getState(cell);\n\tvar count = 0;\n\t\n\tif (state != null && dict.get(cell) == null)\n\t{\n\t\tdict.put(cell, state);\n\t\tcount++;\n\t\t\n\t\tvar childCount = this.graph.model.getChildCount(cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tcount += this.addStates(this.graph.model.getChildAt(cell, i), dict);\n\t\t}\n\t}\n\t\n\treturn count;\n};\n\n/**\n * Function: isCellMoving\n * \n * Returns true if the given cell is currently being moved.\n */\nmxGraphHandler.prototype.isCellMoving = function(cell)\n{\n\treturn this.allCells.get(cell) != null;\n};\n\n/**\n * Function: useGuidesForEvent\n * \n * Returns true if the guides should be used for the given <mxMouseEvent>.\n * This implementation returns <mxGuide.isEnabledForEvent>.\n */\nmxGraphHandler.prototype.useGuidesForEvent = function(me)\n{\n\treturn (this.guide != null) ? this.guide.isEnabledForEvent(me.getEvent()) &&\n\t\t!this.graph.isConstrainedEvent(me.getEvent()) : true;\n};\n\n\n/**\n * Function: snap\n * \n * Snaps the given vector to the grid and returns the given mxPoint instance.\n */\nmxGraphHandler.prototype.snap = function(vector)\n{\n\tvar scale = (this.scaleGrid) ? this.graph.view.scale : 1;\n\t\n\tvector.x = this.graph.snap(vector.x / scale) * scale;\n\tvector.y = this.graph.snap(vector.y / scale) * scale;\n\t\n\treturn vector;\n};\n\n/**\n * Function: getDelta\n * \n * Returns an <mxPoint> that represents the vector for moving the cells\n * for the given <mxMouseEvent>.\n */\nmxGraphHandler.prototype.getDelta = function(me)\n{\n\tvar point = mxUtils.convertPoint(this.graph.container, me.getX(), me.getY());\n\t\n\treturn new mxPoint(point.x - this.first.x - this.graph.panDx,\n\t\tpoint.y - this.first.y - this.graph.panDy);\n};\n\n/**\n * Function: updateHint\n * \n * Hook for subclassers do show details while the handler is active.\n */\nmxGraphHandler.prototype.updateHint = function(me) { };\n\n/**\n * Function: removeHint\n * \n * Hooks for subclassers to hide details when the handler gets inactive.\n */\nmxGraphHandler.prototype.removeHint = function() { };\n\n/**\n * Function: roundLength\n * \n * Hook for rounding the unscaled vector. Allows for half steps in the raster so\n * numbers coming in should be rounded if no half steps are allowed (ie for non\n * aligned standard moving where pixel steps should be preferred).\n */\nmxGraphHandler.prototype.roundLength = function(length)\n{\n\treturn Math.round(length * 100) / 100;\n};\n\n/**\n * Function: isValidDropTarget\n * \n * Returns true if the given cell is a valid drop target.\n */\nmxGraphHandler.prototype.isValidDropTarget = function(target, me)\n{\n\treturn this.graph.model.getParent(this.cell) != target;\n};\n\n/**\n * Function: checkPreview\n * \n * Updates the preview if cloning state has changed.\n */\nmxGraphHandler.prototype.checkPreview = function()\n{\n\tif (this.livePreviewActive && this.cloning)\n\t{\n\t\tthis.resetLivePreview();\n\t\tthis.livePreviewActive = false;\n\t}\n\telse if (this.maxLivePreview >= this.cellCount && !this.livePreviewActive && this.allowLivePreview)\n\t{\n\t\tif (!this.cloning || !this.livePreviewActive)\n\t\t{\n\t\t\tthis.livePreviewActive = true;\n\t\t\tthis.livePreviewUsed = true;\n\t\t}\n\t}\n\telse if (!this.livePreviewUsed && this.shape == null)\n\t{\n\t\tthis.shape = this.createPreviewShape(this.bounds);\n\t}\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by highlighting possible drop targets and updating the\n * preview.\n */\nmxGraphHandler.prototype.mouseMove = function(sender, me)\n{\n\tvar graph = this.graph;\n\n\tif (!me.isConsumed() && graph.isMouseDown && this.cell != null &&\n\t\tthis.first != null && this.bounds != null && !this.suspended)\n\t{\n\t\t// Stops moving if a multi touch event is received\n\t\tif (mxEvent.isMultiTouchEvent(me.getEvent()))\n\t\t{\n\t\t\tthis.reset();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar delta = this.getDelta(me);\n\t\tvar tol = graph.tolerance;\n\n\t\tif (this.shape != null || this.livePreviewActive || Math.abs(delta.x) > tol || Math.abs(delta.y) > tol)\n\t\t{\n\t\t\t// Highlight is used for highlighting drop targets\n\t\t\tif (this.highlight == null)\n\t\t\t{\n\t\t\t\tthis.highlight = new mxCellHighlight(this.graph,\n\t\t\t\t\tmxConstants.DROP_TARGET_COLOR, 3);\n\t\t\t}\n\n\t\t\tvar clone = graph.isCloneEvent(me.getEvent()) && graph.isCellsCloneable() && this.isCloneEnabled();\n\t\t\tvar gridEnabled = graph.isGridEnabledEvent(me.getEvent());\n\t\t\tvar cell = me.getCell();\n\t\t\tvar hideGuide = true;\n\t\t\tvar target = null;\n\t\t\tthis.cloning = clone;\n\t\t\t\n\t\t\tif (graph.isDropEnabled() && this.highlightEnabled)\n\t\t\t{\n\t\t\t\t// Contains a call to getCellAt to find the cell under the mouse\n\t\t\t\ttarget = graph.getDropTarget(this.cells, me.getEvent(), cell, clone);\n\t\t\t}\n\n\t\t\tvar state = graph.getView().getState(target);\n\t\t\tvar highlight = false;\n\t\t\t\n\t\t\tif (state != null && (clone || this.isValidDropTarget(target, me)))\n\t\t\t{\n\t\t\t    if (this.target != target)\n\t\t\t    {\n\t\t\t\t    this.target = target;\n\t\t\t\t    this.setHighlightColor(mxConstants.DROP_TARGET_COLOR);\n\t\t\t\t}\n\t\t\t    \n\t\t\t    highlight = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.target = null;\n\n\t\t\t\tif (this.connectOnDrop && cell != null && this.cells.length == 1 &&\n\t\t\t\t\tgraph.getModel().isVertex(cell) && graph.isCellConnectable(cell))\n\t\t\t\t{\n\t\t\t\t\tstate = graph.getView().getState(cell);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar error = graph.getEdgeValidationError(null, this.cell, cell);\n\t\t\t\t\t\tvar color = (error == null) ?\n\t\t\t\t\t\t\tmxConstants.VALID_COLOR :\n\t\t\t\t\t\t\tmxConstants.INVALID_CONNECT_TARGET_COLOR;\n\t\t\t\t\t\tthis.setHighlightColor(color);\n\t\t\t\t\t\thighlight = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (state != null && highlight)\n\t\t\t{\n\t\t\t\tthis.highlight.highlight(state);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.highlight.hide();\n\t\t\t}\n\n\t\t\tif (this.guide != null && this.useGuidesForEvent(me))\n\t\t\t{\n\t\t\t\tdelta = this.guide.move(this.bounds, delta, gridEnabled, clone);\n\t\t\t\thideGuide = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdelta = this.graph.snapDelta(delta, this.bounds, !gridEnabled, false, false);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.guide != null && hideGuide)\n\t\t\t{\n\t\t\t\tthis.guide.hide();\n\t\t\t}\n\n\t\t\t// Constrained movement if shift key is pressed\n\t\t\tif (graph.isConstrainedEvent(me.getEvent()))\n\t\t\t{\n\t\t\t\tif (Math.abs(delta.x) > Math.abs(delta.y))\n\t\t\t\t{\n\t\t\t\t\tdelta.y = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelta.x = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.checkPreview();\n\t\t\t\n\t\t\tif (this.currentDx != delta.x || this.currentDy != delta.y)\n\t\t\t{\n\t\t\t\tthis.currentDx = delta.x;\n\t\t\t\tthis.currentDy = delta.y;\n\t\t\t\tthis.updatePreview();\n\t\t\t}\n\t\t}\n\n\t\tthis.updateHint(me);\n\t\tthis.consumeMouseEvent(mxEvent.MOUSE_MOVE, me);\n\t\t\n\t\t// Cancels the bubbling of events to the container so\n\t\t// that the droptarget is not reset due to an mouseMove\n\t\t// fired on the container with no associated state.\n\t\tmxEvent.consume(me.getEvent());\n\t}\n\telse if ((this.isMoveEnabled() || this.isCloneEnabled()) && this.updateCursor && !me.isConsumed() &&\n\t\t\t(me.getState() != null || me.sourceState != null) && !graph.isMouseDown)\n\t{\n\t\tvar cursor = graph.getCursorForMouseEvent(me);\n\t\t\n\t\tif (cursor == null && graph.isEnabled() && graph.isCellMovable(me.getCell()))\n\t\t{\n\t\t\tif (graph.getModel().isEdge(me.getCell()))\n\t\t\t{\n\t\t\t\tcursor = mxConstants.CURSOR_MOVABLE_EDGE;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcursor = mxConstants.CURSOR_MOVABLE_VERTEX;\n\t\t\t}\n\t\t}\n\n\t\t// Sets the cursor on the original source state under the mouse\n\t\t// instead of the event source state which can be the parent\n\t\tif (cursor != null && me.sourceState != null)\n\t\t{\n\t\t\tme.sourceState.setCursor(cursor);\n\t\t}\n\t}\n};\n\n/**\n * Function: updatePreview\n * \n * Updates the bounds of the preview shape.\n */\nmxGraphHandler.prototype.updatePreview = function(remote)\n{\n\tif (this.livePreviewUsed && !remote)\n\t{\n\t\tif (this.cells != null)\n\t\t{\n\t\t\tthis.setHandlesVisibleForCells(\n\t\t\t\tthis.graph.selectionCellsHandler.\n\t\t\t\tgetHandledSelectionCells(), false);\n\t\t\tthis.updateLivePreview(this.currentDx, this.currentDy);\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.updatePreviewShape();\n\t}\n};\n\n/**\n * Function: updatePreviewShape\n * \n * Updates the bounds of the preview shape.\n */\nmxGraphHandler.prototype.updatePreviewShape = function()\n{\n\tif (this.shape != null && this.pBounds != null)\n\t{\n\t\tthis.shape.bounds = new mxRectangle(Math.round(this.pBounds.x + this.currentDx),\n\t\t\t\tMath.round(this.pBounds.y + this.currentDy), this.pBounds.width, this.pBounds.height);\n\t\tthis.shape.redraw();\n\t}\n};\n\n/**\n * Function: updateLivePreview\n * \n * Updates the bounds of the preview shape.\n */\nmxGraphHandler.prototype.updateLivePreview = function(dx, dy)\n{\n\tif (!this.suspended)\n\t{\n\t\tvar states = [];\n\t\t\n\t\tif (this.allCells != null)\n\t\t{\n\t\t\tthis.allCells.visit(mxUtils.bind(this, function(key, state)\n\t\t\t{\n\t\t\t\tvar realState = this.graph.view.getState(state.cell);\n\t\t\t\t\n\t\t\t\t// Checks if cell was removed or replaced\n\t\t\t\tif (realState != state)\n\t\t\t\t{\n\t\t\t\t\tstate.destroy();\n\t\t\t\t\t\n\t\t\t\t\tif (realState != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.allCells.put(state.cell, realState);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.allCells.remove(state.cell);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tstate = realState;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (state != null)\n\t\t\t\t{\n\t\t\t\t\t// Saves current state\n\t\t\t\t\tvar tempState = state.clone();\n\t\t\t\t\tstates.push([state, tempState]);\n\t\t\n\t\t\t\t\t// Makes transparent for events to detect drop targets\n\t\t\t\t\tif (state.shape != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (state.shape.originalPointerEvents == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate.shape.originalPointerEvents = state.shape.pointerEvents;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tstate.shape.pointerEvents = false;\n\t\t\n\t\t\t\t\t\tif (state.text != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (state.text.originalPointerEvents == null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate.text.originalPointerEvents = state.text.pointerEvents;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tstate.text.pointerEvents = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\t// Temporarily changes position\n\t\t\t\t\tif (this.graph.model.isVertex(state.cell))\n\t\t\t\t\t{\n\t\t\t\t\t\tstate.x += dx;\n\t\t\t\t\t\tstate.y += dy;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Draws the live preview\n\t\t\t\t\t\tif (!this.cloning)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate.view.graph.cellRenderer.redraw(state, true);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Forces redraw of connected edges after all states\n\t\t\t\t\t\t\t// have been updated but avoids update of state\n\t\t\t\t\t\t\tstate.view.invalidate(state.cell);\n\t\t\t\t\t\t\tstate.invalid = false;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Hides folding icon\n\t\t\t\t\t\t\tif (state.control != null && state.control.node != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate.control.node.style.visibility = 'hidden';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Clone live preview may use text bounds\n\t\t\t\t\t\telse if (state.text != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate.text.updateBoundingBox();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Fixes preview box for edge labels\n\t\t\t\t\t\t\tif (state.text.boundingBox != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate.text.boundingBox.x += dx;\n\t\t\t\t\t\t\t\tstate.text.boundingBox.y += dy;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (state.text.unrotatedBoundingBox != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate.text.unrotatedBoundingBox.x += dx;\n\t\t\t\t\t\t\t\tstate.text.unrotatedBoundingBox.y += dy;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t\t\n\t\t// Resets the handler if everything was removed\n\t\tif (states.length == 0)\n\t\t{\n\t\t\tthis.reset();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Redraws connected edges\n\t\t\tvar s = this.graph.view.scale;\n\t\t\t\n\t\t\tfor (var i = 0; i < states.length; i++)\n\t\t\t{\n\t\t\t\tvar state = states[i][0];\n\t\t\t\t\n\t\t\t\tif (this.graph.model.isEdge(state.cell))\n\t\t\t\t{\n\t\t\t\t\tvar geometry = this.graph.getCellGeometry(state.cell);\n\t\t\t\t\tvar points = [];\n\t\t\t\t\t\n\t\t\t\t\tif (geometry != null && geometry.points != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var j = 0; j < geometry.points.length; j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (geometry.points[j] != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpoints.push(new mxPoint(\n\t\t\t\t\t\t\t\t\tgeometry.points[j].x + dx / s,\n\t\t\t\t\t\t\t\t\tgeometry.points[j].y + dy / s));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tvar source = state.visibleSourceState;\n\t\t\t\t\tvar target = state.visibleTargetState;\n\t\t\t\t\tvar pts = states[i][1].absolutePoints;\n\t\t\t\t\t\n\t\t\t\t\tif (source == null || !this.isCellMoving(source.cell))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar pt0 = pts[0];\n\t\t\t\t\t\tstate.setAbsoluteTerminalPoint(new mxPoint(pt0.x + dx, pt0.y + dy), true);\n\t\t\t\t\t\tsource = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstate.view.updateFixedTerminalPoint(state, source, true,\n\t\t\t\t\t\t\tthis.graph.getConnectionConstraint(state, source, true));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (target == null || !this.isCellMoving(target.cell))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar ptn = pts[pts.length - 1];\n\t\t\t\t\t\tstate.setAbsoluteTerminalPoint(new mxPoint(ptn.x + dx, ptn.y + dy), false);\n\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstate.view.updateFixedTerminalPoint(state, target, false,\n\t\t\t\t\t\t\tthis.graph.getConnectionConstraint(state, target, false));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tstate.view.updatePoints(state, points, source, target);\n\t\t\t\t\tstate.view.updateFloatingTerminalPoints(state, source, target);\n\t\t\t\t\tstate.view.updateEdgeLabelOffset(state);\n\t\t\t\t\tstate.invalid = false;\n\t\n\t\t\t\t\t// Draws the live preview but avoids update of state\n\t\t\t\t\tif (!this.cloning)\n\t\t\t\t\t{\n\t\t\t\t\t\tstate.view.graph.cellRenderer.redraw(state, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\tthis.graph.view.validate();\n\t\t\tthis.redrawHandles(states);\n\t\t\tthis.resetPreviewStates(states);\n\t\t}\n\t}\n};\n\n/**\n * Function: redrawHandles\n * \n * Redraws the preview shape for the given states array.\n */\nmxGraphHandler.prototype.redrawHandles = function(states)\n{\n\tfor (var i = 0; i < states.length; i++)\n\t{\n\t\tvar handler = this.graph.selectionCellsHandler.getHandler(states[i][0].cell);\n\t\t\n\t\tif (handler != null)\n\t\t{\n\t\t\thandler.redraw(true);\n\t\t}\n\t}\n};\n\n/**\n * Function: resetPreviewStates\n * \n * Resets the given preview states array.\n */\nmxGraphHandler.prototype.resetPreviewStates = function(states)\n{\n\tfor (var i = 0; i < states.length; i++)\n\t{\n\t\tstates[i][0].setState(states[i][1]);\n\t}\n};\n\n/**\n * Function: suspend\n * \n * Suspends the livew preview.\n */\nmxGraphHandler.prototype.suspend = function()\n{\n\tif (!this.suspended)\n\t{\n\t\tif (this.livePreviewUsed)\n\t\t{\n\t\t\tthis.updateLivePreview(0, 0);\n\t\t}\n\t\t\n\t\tif (this.shape != null)\n\t\t{\n\t\t\tthis.shape.node.style.visibility = 'hidden';\n\t\t} \n\t\n\t\tif (this.guide != null)\n\t\t{\n\t\t\tthis.guide.setVisible(false);\n\t\t}\n\t\t\n\t\tthis.suspended = true;\n\t}\n};\n\n/**\n * Function: resume\n * \n * Suspends the livew preview.\n */\nmxGraphHandler.prototype.resume = function()\n{\n\tif (this.suspended)\n\t{\n\t\tthis.suspended = null;\n\t\t\n\t\tif (this.livePreviewUsed)\n\t\t{\n\t\t\tthis.livePreviewActive = true;\n\t\t}\n\t\t\n\t\tif (this.shape != null)\n\t\t{\n\t\t\tthis.shape.node.style.visibility = 'visible';\n\t\t}\n\t\t\n\t\tif (this.guide != null)\n\t\t{\n\t\t\tthis.guide.setVisible(true);\n\t\t}\n\t}\n};\n\n/**\n * Function: resetLivePreview\n * \n * Resets the livew preview.\n */\nmxGraphHandler.prototype.resetLivePreview = function()\n{\n\tif (this.allCells != null)\n\t{\n\t\tthis.allCells.visit(mxUtils.bind(this, function(key, state)\n\t\t{\n\t\t\t// Restores event handling\n\t\t\tif (state.shape != null && state.shape.originalPointerEvents != null)\n\t\t\t{\n\t\t\t\tstate.shape.pointerEvents = state.shape.originalPointerEvents;\n\t\t\t\tstate.shape.originalPointerEvents = null;\n\t\t\t\t\n\t\t\t\t// Forces repaint even if not moved to update pointer events\n\t\t\t\tstate.shape.bounds = null;\n\t\t\t\t\n\t\t\t\tif (state.text != null)\n\t\t\t\t{\n\t\t\t\t\tstate.text.pointerEvents = state.text.originalPointerEvents;\n\t\t\t\t\tstate.text.originalPointerEvents = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Shows folding icon\n\t\t\tif (state.control != null && state.control.node != null &&\n\t\t\t\tstate.control.node.style.visibility == 'hidden')\n\t\t\t{\n\t\t\t\tstate.control.node.style.visibility = '';\n\t\t\t}\n\t\t\t\n\t\t\t// Fixes preview box for edge labels\n\t\t\tif (!this.cloning)\n\t\t\t{\n\t\t\t\tif (state.text != null)\n\t\t\t\t{\n\t\t\t\t\tstate.text.updateBoundingBox();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Forces repaint of connected edges\n\t\t\tstate.view.invalidate(state.cell);\n\t\t}));\n\n\t\t// Repaints all invalid states\n\t\tthis.graph.view.validate();\n\t}\n};\n\n/**\n * Function: setHandlesVisibleForCells\n * \n * Sets wether the handles attached to the given cells are visible.\n * \n * Parameters:\n * \n * cells - Array of <mxCells>.\n * visible - Boolean that specifies if the handles should be visible.\n * force - Forces an update of the handler regardless of the last used value.\n */\nmxGraphHandler.prototype.setHandlesVisibleForCells = function(cells, visible, force)\n{\n\tif (force || this.handlesVisible != visible)\n\t{\n\t\tthis.handlesVisible = visible;\n\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar handler = this.graph.selectionCellsHandler.getHandler(cells[i]);\n\t\t\t\n\t\t\tif (handler != null)\n\t\t\t{\n\t\t\t\thandler.setHandlesVisible(visible);\n\t\t\t\t\n\t\t\t\tif (visible)\n\t\t\t\t{\n\t\t\t\t\thandler.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: setHighlightColor\n * \n * Sets the color of the rectangle used to highlight drop targets.\n * \n * Parameters:\n * \n * color - String that represents the new highlight color.\n */\nmxGraphHandler.prototype.setHighlightColor = function(color)\n{\n\tif (this.highlight != null)\n\t{\n\t\tthis.highlight.setHighlightColor(color);\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by applying the changes to the selection cells.\n */\nmxGraphHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (!me.isConsumed())\n\t{\n\t\tif (this.livePreviewUsed)\n\t\t{\n\t\t\tthis.resetLivePreview();\n\t\t}\n\t\t\n\t\tif (this.cell != null && this.first != null && (this.shape != null || this.livePreviewUsed) &&\n\t\t\tthis.currentDx != null && this.currentDy != null)\n\t\t{\n\t\t\tvar graph = this.graph;\n\t\t\tvar cell = me.getCell();\n\t\t\t\n\t\t\tif (this.connectOnDrop && this.target == null && cell != null && graph.getModel().isVertex(cell) &&\n\t\t\t\tgraph.isCellConnectable(cell) && graph.isEdgeValid(null, this.cell, cell))\n\t\t\t{\n\t\t\t\tgraph.connectionHandler.connect(this.cell, cell, me.getEvent());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar clone = graph.isCloneEvent(me.getEvent()) && graph.isCellsCloneable() && this.isCloneEnabled();\n\t\t\t\tvar scale = graph.getView().scale;\n\t\t\t\tvar dx = this.roundLength(this.currentDx / scale);\n\t\t\t\tvar dy = this.roundLength(this.currentDy / scale);\n\t\t\t\tvar target = this.target;\n\t\t\t\t\n\t\t\t\tif (graph.isSplitEnabled() && graph.isSplitTarget(target, this.cells, me.getEvent()))\n\t\t\t\t{\n\t\t\t\t\tgraph.splitEdge(target, this.cells, null, dx, dy,\n\t\t\t\t\t\tme.getGraphX(), me.getGraphY());\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.moveCells(this.cells, dx, dy, clone, this.target, me.getEvent());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.isSelectEnabled() && this.delayedSelection && this.cell != null)\n\t\t{\n\t\t\tthis.selectDelayed(me);\n\t\t}\n\t}\n\n\t// Consumes the event if a cell was initially clicked\n\tif (this.cellWasClicked)\n\t{\n\t\tthis.consumeMouseEvent(mxEvent.MOUSE_UP, me);\n\t}\n\n\tthis.reset();\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxGraphHandler.prototype.reset = function()\n{\n\tif (this.livePreviewUsed)\n\t{\n\t\tthis.resetLivePreview();\n\t\tthis.setHandlesVisibleForCells(\n\t\t\tthis.graph.selectionCellsHandler.\n\t\t\tgetHandledSelectionCells(), true);\n\t}\n\t\n\tthis.destroyShapes();\n\tthis.removeHint();\n\n\tthis.delayedSelection = false;\n\tthis.livePreviewActive = null;\n\tthis.livePreviewUsed = null;\n\tthis.cellWasClicked = false;\n\tthis.suspended = null;\n\tthis.currentDx = null;\n\tthis.currentDy = null;\n\tthis.cellCount = null;\n\tthis.cloning = false;\n\tthis.allCells = null;\n\tthis.pBounds = null;\n\tthis.guides = null;\n\tthis.target = null;\n\tthis.first = null;\n\tthis.cells = null;\n\tthis.cell = null;\n};\n\n/**\n * Function: shouldRemoveCellsFromParent\n * \n * Returns true if the given cells should be removed from the parent for the specified\n * mousereleased event.\n */\nmxGraphHandler.prototype.shouldRemoveCellsFromParent = function(parent, cells, evt)\n{\n\tif (this.graph.getModel().isVertex(parent))\n\t{\n\t\tvar pState = this.graph.getView().getState(parent);\n\t\t\n\t\tif (pState != null)\n\t\t{\n\t\t\tvar pt = mxUtils.convertPoint(this.graph.container,\n\t\t\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(pState.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\tvar cx = new mxPoint(pState.getCenterX(), pState.getCenterY());\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, cx);\n\t\t\t}\n\t\t\n\t\t\treturn !mxUtils.contains(pState, pt.x, pt.y);\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: moveCells\n * \n * Moves the given cells by the specified amount.\n */\nmxGraphHandler.prototype.moveCells = function(cells, dx, dy, clone, target, evt)\n{\n\tif (clone)\n\t{\n\t\tcells = this.graph.getCloneableCells(cells);\n\t}\n\t\n\t// Removes cells from parent\n\tvar parent = this.graph.getModel().getParent(this.cell);\n\t\n\tif (target == null && this.isRemoveCellsFromParent() &&\n\t\tthis.shouldRemoveCellsFromParent(parent, cells, evt))\n\t{\n\t\ttarget = this.graph.getDefaultParent();\n\t}\n\t\n\t// Cloning into locked cells is not allowed\n\tclone = clone && !this.graph.isCellLocked(target || this.graph.getDefaultParent());\n\n\tthis.graph.getModel().beginUpdate();\n\ttry\n\t{\n\t\tvar parents = [];\n\t\t\n\t\t// Removes parent if all child cells are removed\n\t\tif (!clone && target != null && this.removeEmptyParents)\n\t\t{\n\t\t\t// Collects all non-selected parents\n\t\t\tvar dict = new mxDictionary();\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tdict.put(cells[i], true);\n\t\t\t}\n\t\t\t\n\t\t\t// LATER: Recurse up the cell hierarchy\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar par = this.graph.model.getParent(cells[i]);\n\n\t\t\t\tif (par != null && !dict.get(par))\n\t\t\t\t{\n\t\t\t\t\tdict.put(par, true);\n\t\t\t\t\tparents.push(par);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Passes all selected cells in order to correctly clone or move into\n\t\t// the target cell. The method checks for each cell if its movable.\n\t\tcells = this.graph.moveCells(cells, dx, dy, clone, target, evt);\n\n\t\t// Removes parent if all child cells are removed\n\t\tvar temp = [];\n\t\t\n\t\tfor (var i = 0; i < parents.length; i++)\n\t\t{\n\t\t\tif (this.shouldRemoveParent(parents[i]))\n\t\t\t{\n\t\t\t\ttemp.push(parents[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.graph.removeCells(temp, false);\n\t}\n\tfinally\n\t{\n\t\tthis.graph.getModel().endUpdate();\n\t}\n\n\t// Selects the new cells if cells have been cloned\n\tif (clone)\n\t{\n\t\tthis.graph.setSelectionCells(cells);\n\t}\n\n\tif (this.isSelectEnabled() && this.scrollOnMove)\n\t{\n\t\tthis.graph.scrollCellToVisible(cells[0]);\n\t}\n};\n\n/**\n * Function: shouldRemoveParent\n * \n * Returns true if the given parent should be removed after removal of child cells.\n */\nmxGraphHandler.prototype.shouldRemoveParent = function(parent)\n{\n\tvar state = this.graph.view.getState(parent);\n\t\n\treturn state != null && (this.graph.model.isEdge(state.cell) || this.graph.model.isVertex(state.cell)) &&\n\t\tthis.graph.isCellDeletable(state.cell) && this.graph.model.getChildCount(state.cell) == 0 &&\n\t\tthis.graph.isTransparentState(state);\n};\n\n/**\n * Function: destroyShapes\n * \n * Destroy the preview and highlight shapes.\n */\nmxGraphHandler.prototype.destroyShapes = function()\n{\n\t// Destroys the preview dashed rectangle\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\tif (this.guide != null)\n\t{\n\t\tthis.guide.destroy();\n\t\tthis.guide = null;\n\t}\n\t\n\t// Destroys the drop target highlight\n\tif (this.highlight != null)\n\t{\n\t\tthis.highlight.destroy();\n\t\tthis.highlight = null;\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxGraphHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\tthis.graph.removeListener(this.panHandler);\n\t\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n\t\n\tif (this.refreshHandler != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.refreshHandler);\n\t\tthis.graph.removeListener(this.refreshHandler);\n\t\tthis.refreshHandler = null;\n\t}\n\t\n\tmxEvent.removeListener(document, 'keydown', this.keyHandler);\n\tmxEvent.removeListener(document, 'keyup', this.keyHandler);\n\t\n\tthis.destroyShapes();\n\tthis.removeHint();\n};\n\n__mxOutput.mxGraphHandler = typeof mxGraphHandler !== 'undefined' ? mxGraphHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPanningHandler\n * \n * Event handler that pans and creates popupmenus. To use the left\n * mousebutton for panning without interfering with cell moving and\n * resizing, use <isUseLeftButton> and <isIgnoreCell>. For grid size\n * steps while panning, use <useGrid>. This handler is built-into\n * <mxGraph.panningHandler> and enabled using <mxGraph.setPanning>.\n * \n * Constructor: mxPanningHandler\n * \n * Constructs an event handler that creates a <mxPopupMenu>\n * and pans the graph.\n *\n * Event: mxEvent.PAN_START\n *\n * Fires when the panning handler changes its <active> state to true. The\n * <code>event</code> property contains the corresponding <mxMouseEvent>.\n *\n * Event: mxEvent.PAN\n *\n * Fires while handle is processing events. The <code>event</code> property contains\n * the corresponding <mxMouseEvent>.\n *\n * Event: mxEvent.PAN_END\n *\n * Fires when the panning handler changes its <active> state to false. The\n * <code>event</code> property contains the corresponding <mxMouseEvent>.\n */\nfunction mxPanningHandler(graph)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.graph.addMouseListener(this);\n\n\t\t// Handles force panning event\n\t\tthis.forcePanningHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar evtName = evt.getProperty('eventName');\n\t\t\tvar me = evt.getProperty('event');\n\t\t\t\n\t\t\tif (evtName == mxEvent.MOUSE_DOWN && this.isForcePanningEvent(me))\n\t\t\t{\n\t\t\t\tthis.start(me);\n\t\t\t\tthis.active = true;\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN_START, 'event', me));\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t});\n\n\t\tthis.graph.addListener(mxEvent.FIRE_MOUSE_EVENT, this.forcePanningHandler);\n\t\t\n\t\t// Handles pinch gestures\n\t\tthis.gestureHandler = mxUtils.bind(this, function(sender, eo)\n\t\t{\n\t\t\tif (this.isPinchEnabled())\n\t\t\t{\n\t\t\t\tvar evt = eo.getProperty('event');\n\t\t\t\t\n\t\t\t\tif (!mxEvent.isConsumed(evt) && evt.type == 'gesturestart')\n\t\t\t\t{\n\t\t\t\t\tthis.initialScale = this.graph.view.scale;\n\t\t\t\t\n\t\t\t\t\t// Forces start of panning when pinch gesture starts\n\t\t\t\t\tif (!this.active && this.mouseDownEvent != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.start(this.mouseDownEvent);\n\t\t\t\t\t\tthis.mouseDownEvent = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (evt.type == 'gestureend' && this.initialScale != null)\n\t\t\t\t{\n\t\t\t\t\tthis.initialScale = null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.initialScale != null)\n\t\t\t\t{\n\t\t\t\t\tthis.zoomGraph(evt);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.GESTURE, this.gestureHandler);\n\t\t\n\t\tthis.mouseUpListener = mxUtils.bind(this, function()\n\t\t{\n\t    \tif (this.active)\n\t    \t{\n\t    \t\tthis.reset();\n\t    \t}\n\t\t});\n\t\t\n\t\t// Stops scrolling on every mouseup anywhere in the document\n\t\tmxEvent.addListener(document, 'mouseup', this.mouseUpListener);\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxPanningHandler.prototype = new mxEventSource();\nmxPanningHandler.prototype.constructor = mxPanningHandler;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxPanningHandler.prototype.graph = null;\n\n/**\n * Variable: useLeftButtonForPanning\n * \n * Specifies if panning should be active for the left mouse button.\n * Setting this to true may conflict with <mxRubberband>. Default is false.\n */\nmxPanningHandler.prototype.useLeftButtonForPanning = false;\n\n/**\n * Variable: usePopupTrigger\n * \n * Specifies if <mxEvent.isPopupTrigger> should also be used for panning.\n */\nmxPanningHandler.prototype.usePopupTrigger = true;\n\n/**\n * Variable: ignoreCell\n * \n * Specifies if panning should be active even if there is a cell under the\n * mousepointer. Default is false.\n */\nmxPanningHandler.prototype.ignoreCell = false;\n\n/**\n * Variable: previewEnabled\n * \n * Specifies if the panning should be previewed. Default is true.\n */\nmxPanningHandler.prototype.previewEnabled = true;\n\n/**\n * Variable: useGrid\n * \n * Specifies if the panning steps should be aligned to the grid size.\n * Default is false.\n */\nmxPanningHandler.prototype.useGrid = false;\n\n/**\n * Variable: panningEnabled\n * \n * Specifies if panning should be enabled. Default is true.\n */\nmxPanningHandler.prototype.panningEnabled = true;\n\n/**\n * Variable: pinchEnabled\n * \n * Specifies if pinch gestures should be handled as zoom. Default is true.\n */\nmxPanningHandler.prototype.pinchEnabled = true;\n\n/**\n * Variable: maxScale\n * \n * Specifies the maximum scale. Default is 8.\n */\nmxPanningHandler.prototype.maxScale = 8;\n\n/**\n * Variable: minScale\n * \n * Specifies the minimum scale. Default is 0.01.\n */\nmxPanningHandler.prototype.minScale = 0.01;\n\n/**\n * Variable: dx\n * \n * Holds the current horizontal offset.\n */\nmxPanningHandler.prototype.dx = null;\n\n/**\n * Variable: dy\n * \n * Holds the current vertical offset.\n */\nmxPanningHandler.prototype.dy = null;\n\n/**\n * Variable: startX\n * \n * Holds the x-coordinate of the start point.\n */\nmxPanningHandler.prototype.startX = 0;\n\n/**\n * Variable: startY\n * \n * Holds the y-coordinate of the start point.\n */\nmxPanningHandler.prototype.startY = 0;\n\n/**\n * Function: isActive\n * \n * Returns true if the handler is currently active.\n */\nmxPanningHandler.prototype.isActive = function()\n{\n\treturn this.active || this.initialScale != null;\n};\n\n/**\n * Function: isPanningEnabled\n * \n * Returns <panningEnabled>.\n */\nmxPanningHandler.prototype.isPanningEnabled = function()\n{\n\treturn this.panningEnabled;\n};\n\n/**\n * Function: setPanningEnabled\n * \n * Sets <panningEnabled>.\n */\nmxPanningHandler.prototype.setPanningEnabled = function(value)\n{\n\tthis.panningEnabled = value;\n};\n\n/**\n * Function: isPinchEnabled\n * \n * Returns <pinchEnabled>.\n */\nmxPanningHandler.prototype.isPinchEnabled = function()\n{\n\treturn this.pinchEnabled;\n};\n\n/**\n * Function: setPinchEnabled\n * \n * Sets <pinchEnabled>.\n */\nmxPanningHandler.prototype.setPinchEnabled = function(value)\n{\n\tthis.pinchEnabled = value;\n};\n\n/**\n * Function: isPanningTrigger\n * \n * Returns true if the given event is a panning trigger for the optional\n * given cell. This returns true if control-shift is pressed or if\n * <usePopupTrigger> is true and the event is a popup trigger.\n */\nmxPanningHandler.prototype.isPanningTrigger = function(me)\n{\n\tvar evt = me.getEvent();\n\t\n\treturn (this.useLeftButtonForPanning && me.getState() == null &&\n\t\t\tmxEvent.isLeftMouseButton(evt)) || (mxEvent.isControlDown(evt) &&\n\t\t\tmxEvent.isShiftDown(evt)) || (this.usePopupTrigger && mxEvent.isPopupTrigger(evt));\n};\n\n/**\n * Function: isForcePanningEvent\n * \n * Returns true if the given <mxMouseEvent> should start panning. This\n * implementation always returns true if <ignoreCell> is true or for\n * multi touch events.\n */\nmxPanningHandler.prototype.isForcePanningEvent = function(me)\n{\n\treturn this.ignoreCell || mxEvent.isMultiTouchEvent(me.getEvent());\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating the panning. By consuming the event all\n * subsequent events of the gesture are redirected to this handler.\n */\nmxPanningHandler.prototype.mouseDown = function(sender, me)\n{\n\tthis.mouseDownEvent = me;\n\t\n\tif (!me.isConsumed() && this.isPanningEnabled() && !this.active && this.isPanningTrigger(me))\n\t{\n\t\tthis.start(me);\n\t\tthis.consumePanningTrigger(me);\n\t}\n};\n\n/**\n * Function: start\n * \n * Starts panning at the given event.\n */\nmxPanningHandler.prototype.start = function(me)\n{\n\tthis.dx0 = -this.graph.container.scrollLeft;\n\tthis.dy0 = -this.graph.container.scrollTop;\n\n\t// Stores the location of the trigger event\n\tthis.startX = me.getX();\n\tthis.startY = me.getY();\n\tthis.dx = null;\n\tthis.dy = null;\n\t\n\tthis.panningTrigger = true;\n};\n\n/**\n * Function: consumePanningTrigger\n * \n * Consumes the given <mxMouseEvent> if it was a panning trigger in\n * <mouseDown>. The default is to invoke <mxMouseEvent.consume>. Note that this\n * will block any further event processing. If you haven't disabled built-in\n * context menus and require immediate selection of the cell on mouseDown in\n * Safari and/or on the Mac, then use the following code:\n * \n * (code)\n * mxPanningHandler.prototype.consumePanningTrigger = function(me)\n * {\n *   if (me.evt.preventDefault)\n *   {\n *     me.evt.preventDefault();\n *   }\n *   \n *   // Stops event processing in IE\n *   me.evt.returnValue = false;\n *   \n *   // Sets local consumed state\n *   if (!mxClient.IS_SF && !mxClient.IS_MAC)\n *   {\n *     me.consumed = true;\n *   }\n * };\n * (end)\n */\nmxPanningHandler.prototype.consumePanningTrigger = function(me)\n{\n\tme.consume();\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the panning on the graph.\n */\nmxPanningHandler.prototype.mouseMove = function(sender, me)\n{\n\tthis.dx = me.getX() - this.startX;\n\tthis.dy = me.getY() - this.startY;\n\t\n\tif (this.active)\n\t{\n\t\tif (this.previewEnabled)\n\t\t{\n\t\t\t// Applies the grid to the panning steps\n\t\t\tif (this.useGrid)\n\t\t\t{\n\t\t\t\tthis.dx = this.graph.snap(this.dx);\n\t\t\t\tthis.dy = this.graph.snap(this.dy);\n\t\t\t}\n\t\t\t\n\t\t\tthis.graph.panGraph(this.dx + this.dx0, this.dy + this.dy0);\n\t\t}\n\n\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN, 'event', me));\n\t}\n\telse if (this.panningTrigger)\n\t{\n\t\tvar tmp = this.active;\n\n\t\t// Panning is activated only if the mouse is moved\n\t\t// beyond the graph tolerance\n\t\tthis.active = Math.abs(this.dx) > this.graph.tolerance || Math.abs(this.dy) > this.graph.tolerance;\n\n\t\tif (!tmp && this.active)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN_START, 'event', me));\n\t\t}\n\t}\n\t\n\tif (this.active || this.panningTrigger)\n\t{\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by setting the translation on the view or showing the\n * popupmenu.\n */\nmxPanningHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.active)\n\t{\n\t\tif (this.dx != null && this.dy != null)\n\t\t{\n\t\t\t// Ignores if scrollbars have been used for panning\n\t\t\tif (!this.graph.useScrollbarsForPanning || !mxUtils.hasScrollbars(this.graph.container))\n\t\t\t{\n\t\t\t\tvar scale = this.graph.getView().scale;\n\t\t\t\tvar t = this.graph.getView().translate;\n\t\t\t\tthis.graph.panGraph(0, 0);\n\t\t\t\tthis.panGraph(t.x + this.dx / scale, t.y + this.dy / scale);\n\t\t\t}\n\t\t\t\n\t\t\tme.consume();\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN_END, 'event', me));\n\t}\n\t\n\tthis.reset();\n};\n\n/**\n * Function: zoomGraph\n * \n * Zooms the graph to the given value and consumed the event if needed.\n */\nmxPanningHandler.prototype.zoomGraph = function(evt)\n{\n\tvar value = Math.round(this.initialScale * evt.scale * 100) / 100;\n\t\n\tif (this.minScale != null)\n\t{\n\t\tvalue = Math.max(this.minScale, value);\n\t}\n\t\n\tif (this.maxScale != null)\n\t{\n\t\tvalue = Math.min(this.maxScale, value);\n\t}\n\n\tif (this.graph.view.scale != value)\n\t{\n\t\tthis.graph.zoomTo(value);\n\t\tmxEvent.consume(evt);\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxPanningHandler.prototype.reset = function()\n{\n\tthis.panningTrigger = false;\n\tthis.mouseDownEvent = null;\n\tthis.active = false;\n\tthis.dx = null;\n\tthis.dy = null;\n};\n\n/**\n * Function: panGraph\n * \n * Pans <graph> by the given amount.\n */\nmxPanningHandler.prototype.panGraph = function(dx, dy)\n{\n\tthis.graph.getView().setTranslate(dx, dy);\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxPanningHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\tthis.graph.removeListener(this.forcePanningHandler);\n\tthis.graph.removeListener(this.gestureHandler);\n\tmxEvent.removeListener(document, 'mouseup', this.mouseUpListener);\n};\n\n__mxOutput.mxPanningHandler = typeof mxPanningHandler !== 'undefined' ? mxPanningHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPopupMenuHandler\n * \n * Event handler that creates popupmenus.\n * \n * Constructor: mxPopupMenuHandler\n * \n * Constructs an event handler that creates a <mxPopupMenu>.\n */\nfunction mxPopupMenuHandler(graph, factoryMethod)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.factoryMethod = factoryMethod;\n\t\tthis.graph.addMouseListener(this);\n\t\t\n\t\t// Does not show menu if any touch gestures take place after the trigger\n\t\tthis.gestureHandler = mxUtils.bind(this, function(sender, eo)\n\t\t{\n\t\t\tthis.inTolerance = false;\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.GESTURE, this.gestureHandler);\n\t\t\n\t\tthis.init();\n\t}\n};\n\n/**\n * Extends mxPopupMenu.\n */\nmxPopupMenuHandler.prototype = new mxPopupMenu();\nmxPopupMenuHandler.prototype.constructor = mxPopupMenuHandler;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxPopupMenuHandler.prototype.graph = null;\n\n/**\n * Variable: selectOnPopup\n * \n * Specifies if cells should be selected if a popupmenu is displayed for\n * them. Default is true.\n */\nmxPopupMenuHandler.prototype.selectOnPopup = true;\n\n/**\n * Variable: clearSelectionOnBackground\n * \n * Specifies if cells should be deselected if a popupmenu is displayed for\n * the diagram background. Default is true.\n */\nmxPopupMenuHandler.prototype.clearSelectionOnBackground = true;\n\n/**\n * Variable: triggerX\n * \n * X-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.triggerX = null;\n\n/**\n * Variable: triggerY\n * \n * Y-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.triggerY = null;\n\n/**\n * Variable: screenX\n * \n * Screen X-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.screenX = null;\n\n/**\n * Variable: screenY\n * \n * Screen Y-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.screenY = null;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxPopupMenuHandler.prototype.init = function()\n{\n\t// Supercall\n\tmxPopupMenu.prototype.init.apply(this);\n\n\t// Hides the tooltip if the mouse is over\n\t// the context menu\n\tmxEvent.addGestureListeners(this.div, mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.graph.tooltipHandler.hide();\n\t}));\n};\n\n/**\n * Function: isSelectOnPopup\n * \n * Hook for returning if a cell should be selected for a given <mxMouseEvent>.\n * This implementation returns <selectOnPopup>.\n */\nmxPopupMenuHandler.prototype.isSelectOnPopup = function(me)\n{\n\treturn this.selectOnPopup;\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating the panning. By consuming the event all\n * subsequent events of the gesture are redirected to this handler.\n */\nmxPopupMenuHandler.prototype.mouseDown = function(sender, me)\n{\n\tif (this.isEnabled() && !mxEvent.isMultiTouchEvent(me.getEvent()))\n\t{\n\t\t// Hides the popupmenu if is is being displayed\n\t\tthis.hideMenu();\n\t\tthis.triggerX = me.getGraphX();\n\t\tthis.triggerY = me.getGraphY();\n\t\tthis.screenX = mxEvent.getMainEvent(me.getEvent()).screenX;\n\t\tthis.screenY = mxEvent.getMainEvent(me.getEvent()).screenY;\n\t\tthis.popupTrigger = this.isPopupTrigger(me);\n\t\tthis.inTolerance = true;\n\t}\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the panning on the graph.\n */\nmxPopupMenuHandler.prototype.mouseMove = function(sender, me)\n{\n\t// Popup trigger may change on mouseUp so ignore it\n\tif (this.inTolerance && this.screenX != null && this.screenY != null)\n\t{\n\t\tif (Math.abs(mxEvent.getMainEvent(me.getEvent()).screenX - this.screenX) > this.graph.tolerance ||\n\t\t\tMath.abs(mxEvent.getMainEvent(me.getEvent()).screenY - this.screenY) > this.graph.tolerance)\n\t\t{\n\t\t\tthis.inTolerance = false;\n\t\t}\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by setting the translation on the view or showing the\n * popupmenu.\n */\nmxPopupMenuHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.popupTrigger && this.inTolerance && this.triggerX != null && this.triggerY != null)\n\t{\n\t\tvar cell = this.getCellForPopupEvent(me);\n\n\t\t// Selects the cell for which the context menu is being displayed\n\t\tif (this.graph.isEnabled() && this.isSelectOnPopup(me) &&\n\t\t\tcell != null && !this.graph.isCellSelected(cell))\n\t\t{\n\t\t\tthis.graph.setSelectionCell(cell);\n\t\t}\n\t\telse if (this.clearSelectionOnBackground && cell == null)\n\t\t{\n\t\t\tthis.graph.clearSelection();\n\t\t}\n\t\t\n\t\t// Hides the tooltip if there is one\n\t\tthis.graph.tooltipHandler.hide();\n\n\t\t// Menu is shifted by 1 pixel so that the mouse up event\n\t\t// is routed via the underlying shape instead of the DIV\n\t\tvar origin = mxUtils.getScrollOrigin();\n\t\tthis.popup(me.getX() + origin.x + 1, me.getY() + origin.y + 1, cell, me.getEvent());\n\t\tme.consume();\n\t}\n\t\n\tthis.popupTrigger = false;\n\tthis.inTolerance = false;\n};\n\n/**\n * Function: getCellForPopupEvent\n * \n * Hook to return the cell for the mouse up popup trigger handling.\n */\nmxPopupMenuHandler.prototype.getCellForPopupEvent = function(me)\n{\n\treturn me.getCell();\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxPopupMenuHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\tthis.graph.removeListener(this.gestureHandler);\n\t\n\t// Supercall\n\tmxPopupMenu.prototype.destroy.apply(this);\n};\n\n__mxOutput.mxPopupMenuHandler = typeof mxPopupMenuHandler !== 'undefined' ? mxPopupMenuHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellMarker\n * \n * A helper class to process mouse locations and highlight cells.\n * \n * Helper class to highlight cells. To add a cell marker to an existing graph\n * for highlighting all cells, the following code is used:\n * \n * (code)\n * var marker = new mxCellMarker(graph);\n * graph.addMouseListener({\n *   mouseDown: function() {},\n *   mouseMove: function(sender, me)\n *   {\n *     marker.process(me);\n *   },\n *   mouseUp: function() {}\n * });\n * (end)\n *\n * Event: mxEvent.MARK\n * \n * Fires after a cell has been marked or unmarked. The <code>state</code>\n * property contains the marked <mxCellState> or null if no state is marked.\n * \n * Constructor: mxCellMarker\n * \n * Constructs a new cell marker.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * validColor - Optional marker color for valid states. Default is\n * <mxConstants.DEFAULT_VALID_COLOR>.\n * invalidColor - Optional marker color for invalid states. Default is\n * <mxConstants.DEFAULT_INVALID_COLOR>.\n * hotspot - Portion of the width and hight where a state intersects a\n * given coordinate pair. A value of 0 means always highlight. Default is\n * <mxConstants.DEFAULT_HOTSPOT>.\n */\nfunction mxCellMarker(graph, validColor, invalidColor, hotspot)\n{\n\tmxEventSource.call(this);\n\t\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.validColor = (validColor != null) ? validColor : mxConstants.DEFAULT_VALID_COLOR;\n\t\tthis.invalidColor = (invalidColor != null) ? invalidColor : mxConstants.DEFAULT_INVALID_COLOR;\n\t\tthis.hotspot = (hotspot != null) ? hotspot : mxConstants.DEFAULT_HOTSPOT;\n\t\t\n\t\tthis.highlight = new mxCellHighlight(graph);\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUtils.extend(mxCellMarker, mxEventSource);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellMarker.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if the marker is enabled. Default is true.\n */\nmxCellMarker.prototype.enabled = true;\n\n/**\n * Variable: hotspot\n * \n * Specifies the portion of the width and height that should trigger\n * a highlight. The area around the center of the cell to be marked is used\n * as the hotspot. Possible values are between 0 and 1. Default is\n * mxConstants.DEFAULT_HOTSPOT.\n */\nmxCellMarker.prototype.hotspot = mxConstants.DEFAULT_HOTSPOT; \n\n/**\n * Variable: hotspotEnabled\n * \n * Specifies if the hotspot is enabled. Default is false.\n */\nmxCellMarker.prototype.hotspotEnabled = false;\n\n/**\n * Variable: validColor\n * \n * Holds the valid marker color.\n */\nmxCellMarker.prototype.validColor = null;\n\n/**\n * Variable: invalidColor\n * \n * Holds the invalid marker color.\n */\nmxCellMarker.prototype.invalidColor = null;\n\n/**\n * Variable: currentColor\n * \n * Holds the current marker color.\n */\nmxCellMarker.prototype.currentColor = null;\n\n/**\n * Variable: validState\n * \n * Holds the marked <mxCellState> if it is valid.\n */\nmxCellMarker.prototype.validState = null; \n\n/**\n * Variable: markedState\n * \n * Holds the marked <mxCellState>.\n */\nmxCellMarker.prototype.markedState = null;\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxCellMarker.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxCellMarker.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setHotspot\n * \n * Sets the <hotspot>.\n */\nmxCellMarker.prototype.setHotspot = function(hotspot)\n{\n\tthis.hotspot = hotspot;\n};\n\n/**\n * Function: getHotspot\n * \n * Returns the <hotspot>.\n */\nmxCellMarker.prototype.getHotspot = function()\n{\n\treturn this.hotspot;\n};\n\n/**\n * Function: setHotspotEnabled\n * \n * Specifies whether the hotspot should be used in <intersects>.\n */\nmxCellMarker.prototype.setHotspotEnabled = function(enabled)\n{\n\tthis.hotspotEnabled = enabled;\n};\n\n/**\n * Function: isHotspotEnabled\n * \n * Returns true if hotspot is used in <intersects>.\n */\nmxCellMarker.prototype.isHotspotEnabled = function()\n{\n\treturn this.hotspotEnabled;\n};\n\n/**\n * Function: hasValidState\n * \n * Returns true if <validState> is not null.\n */\nmxCellMarker.prototype.hasValidState = function()\n{\n\treturn this.validState != null;\n};\n\n/**\n * Function: getValidState\n * \n * Returns the <validState>.\n */\nmxCellMarker.prototype.getValidState = function()\n{\n\treturn this.validState;\n};\n\n/**\n * Function: getMarkedState\n * \n * Returns the <markedState>.\n */\nmxCellMarker.prototype.getMarkedState = function()\n{\n\treturn this.markedState;\n};\n\n/**\n * Function: reset\n * \n * Resets the state of the cell marker.\n */\nmxCellMarker.prototype.reset = function()\n{\n\tthis.validState = null;\n\t\n\tif (this.markedState != null)\n\t{\n\t\tthis.markedState = null;\n\t\tthis.unmark();\n\t}\n};\n\n/**\n * Function: process\n * \n * Processes the given event and cell and marks the state returned by\n * <getState> with the color returned by <getMarkerColor>. If the\n * markerColor is not null, then the state is stored in <markedState>. If\n * <isValidState> returns true, then the state is stored in <validState>\n * regardless of the marker color. The state is returned regardless of the\n * marker color and valid state. \n */\nmxCellMarker.prototype.process = function(me)\n{\n\tvar state = null;\n\t\n\tif (this.isEnabled())\n\t{\n\t\tstate = this.getState(me);\n\t\tthis.setCurrentState(state, me);\n\t}\n\t\n\treturn state;\n};\n\n/**\n * Function: setCurrentState\n * \n * Sets and marks the current valid state.\n */\nmxCellMarker.prototype.setCurrentState = function(state, me, color)\n{\n\tvar isValid = (state != null) ? this.isValidState(state) : false;\n\tcolor = (color != null) ? color : this.getMarkerColor(me.getEvent(), state, isValid);\n\t\n\tif (isValid)\n\t{\n\t\tthis.validState = state;\n\t}\n\telse\n\t{\n\t\tthis.validState = null;\n\t}\n\t\n\tif (state != this.markedState || color != this.currentColor)\n\t{\n\t\tthis.currentColor = color;\n\t\t\n\t\tif (state != null && this.currentColor != null)\n\t\t{\n\t\t\tthis.markedState = state;\n\t\t\tthis.mark();\t\t\n\t\t}\n\t\telse if (this.markedState != null)\n\t\t{\n\t\t\tthis.markedState = null;\n\t\t\tthis.unmark();\n\t\t}\n\t}\n};\n\n/**\n * Function: markCell\n * \n * Marks the given cell using the given color, or <validColor> if no color is specified.\n */\nmxCellMarker.prototype.markCell = function(cell, color)\n{\n\tvar state = this.graph.getView().getState(cell);\n\t\n\tif (state != null)\n\t{\n\t\tthis.currentColor = (color != null) ? color : this.validColor;\n\t\tthis.markedState = state;\n\t\tthis.mark();\n\t}\n};\n\n/**\n * Function: mark\n * \n * Marks the <markedState> and fires a <mark> event.\n */\nmxCellMarker.prototype.mark = function()\n{\n\tthis.highlight.setHighlightColor(this.currentColor);\n\tthis.highlight.highlight(this.markedState);\n\tthis.fireEvent(new mxEventObject(mxEvent.MARK, 'state', this.markedState));\n};\n\n/**\n * Function: unmark\n * \n * Hides the marker and fires a <mark> event.\n */\nmxCellMarker.prototype.unmark = function()\n{\n\tthis.mark();\n};\n\n/**\n * Function: isValidState\n * \n * Returns true if the given <mxCellState> is a valid state. If this\n * returns true, then the state is stored in <validState>. The return value\n * of this method is used as the argument for <getMarkerColor>.\n */\nmxCellMarker.prototype.isValidState = function(state)\n{\n\treturn true;\n};\n\n/**\n * Function: getMarkerColor\n * \n * Returns the valid- or invalidColor depending on the value of isValid.\n * The given <mxCellState> is ignored by this implementation.\n */\nmxCellMarker.prototype.getMarkerColor = function(evt, state, isValid)\n{\n\treturn (isValid) ? this.validColor : this.invalidColor;\n};\n\n/**\n * Function: getState\n * \n * Uses <getCell>, <getStateToMark> and <intersects> to return the\n * <mxCellState> for the given <mxMouseEvent>.\n */\nmxCellMarker.prototype.getState = function(me)\n{\n\tvar view = this.graph.getView();\n\tvar cell = this.getCell(me);\n\tvar state = this.getStateToMark(view.getState(cell));\n\n\treturn (state != null && this.intersects(state, me)) ? state : null;\n};\n\n/**\n * Function: getCell\n * \n * Returns the <mxCell> for the given event and cell. This returns the\n * given cell.\n */\nmxCellMarker.prototype.getCell = function(me)\n{\n\treturn me.getCell();\n};\n\n/**\n * Function: getStateToMark\n * \n * Returns the <mxCellState> to be marked for the given <mxCellState> under\n * the mouse. This returns the given state.\n */\nmxCellMarker.prototype.getStateToMark = function(state)\n{\n\treturn state;\n};\n\n/**\n * Function: intersects\n * \n * Returns true if the given coordinate pair intersects the given state.\n * This returns true if the <hotspot> is 0 or the coordinates are inside\n * the hotspot for the given cell state.\n */\nmxCellMarker.prototype.intersects = function(state, me)\n{\n\tif (this.hotspotEnabled)\n\t{\n\t\treturn mxUtils.intersectsHotspot(state, me.getGraphX(), me.getGraphY(),\n\t\t\tthis.hotspot, mxConstants.MIN_HOTSPOT_SIZE,\n\t\t\tmxConstants.MAX_HOTSPOT_SIZE);\n\t}\n\t\n\treturn true;\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxCellMarker.prototype.destroy = function()\n{\n\tthis.graph.getView().removeListener(this.resetHandler);\n\tthis.graph.getModel().removeListener(this.resetHandler);\n\tthis.highlight.destroy();\n};\n\n__mxOutput.mxCellMarker = typeof mxCellMarker !== 'undefined' ? mxCellMarker : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSelectionCellsHandler\n * \n * An event handler that manages cell handlers and invokes their mouse event\n * processing functions.\n * \n * Group: Events\n * \n * Event: mxEvent.ADD\n * \n * Fires if a cell has been added to the selection. The <code>state</code>\n * property contains the <mxCellState> that has been added.\n * \n * Event: mxEvent.REMOVE\n * \n * Fires if a cell has been remove from the selection. The <code>state</code>\n * property contains the <mxCellState> that has been removed.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxSelectionCellsHandler(graph)\n{\n\tmxEventSource.call(this);\n\t\n\tthis.graph = graph;\n\tthis.handlers = new mxDictionary();\n\tthis.graph.addMouseListener(this);\n\t\n\tthis.refreshHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.refresh();\n\t\t}\n\t});\n\t\n\tthis.graph.getSelectionModel().addListener(mxEvent.CHANGE, this.refreshHandler);\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.TRANSLATE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE_AND_TRANSLATE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.DOWN, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.UP, this.refreshHandler);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUtils.extend(mxSelectionCellsHandler, mxEventSource);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxSelectionCellsHandler.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxSelectionCellsHandler.prototype.enabled = true;\n\n/**\n * Variable: refreshHandler\n * \n * Keeps a reference to an event listener for later removal.\n */\nmxSelectionCellsHandler.prototype.refreshHandler = null;\n\n/**\n * Variable: maxHandlers\n * \n * Defines the maximum number of handlers to paint individually. Default is 100.\n */\nmxSelectionCellsHandler.prototype.maxHandlers = 100;\n\n/**\n * Variable: handlers\n * \n * <mxDictionary> that maps from cells to handlers.\n */\nmxSelectionCellsHandler.prototype.handlers = null;\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxSelectionCellsHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxSelectionCellsHandler.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: getHandler\n * \n * Returns the handler for the given cell.\n */\nmxSelectionCellsHandler.prototype.getHandler = function(cell)\n{\n\treturn this.handlers.get(cell);\n};\n\n/**\n * Function: isHandled\n * \n * Returns true if the given cell has a handler.\n */\nmxSelectionCellsHandler.prototype.isHandled = function(cell)\n{\n\treturn this.getHandler(cell) != null;\n};\n\n/**\n * Function: reset\n * \n * Resets all handlers.\n */\nmxSelectionCellsHandler.prototype.reset = function()\n{\n\tthis.handlers.visit(function(key, handler)\n\t{\n\t\thandler.reset.apply(handler);\n\t});\n};\n\n/**\n * Function: getHandledSelectionCells\n * \n * Reloads or updates all handlers.\n */\nmxSelectionCellsHandler.prototype.getHandledSelectionCells = function()\n{\n\treturn this.graph.getSelectionCells();\n};\n\n/**\n * Function: refresh\n * \n * Reloads or updates all handlers.\n */\nmxSelectionCellsHandler.prototype.refresh = function()\n{\n\t// Removes all existing handlers\n\tvar oldHandlers = this.handlers;\n\tthis.handlers = new mxDictionary();\n\t\n\t// Creates handles for all selection cells\n\tvar tmp = mxUtils.sortCells(this.getHandledSelectionCells(), false);\n\n\t// Destroys or updates old handlers\n\tfor (var i = 0; i < tmp.length; i++)\n\t{\n\t\tvar state = this.graph.view.getState(tmp[i]);\n\n\t\tif (state != null)\n\t\t{\n\t\t\tvar handler = oldHandlers.remove(tmp[i]);\n\n\t\t\tif (handler != null)\n\t\t\t{\n\t\t\t\tif (handler.state != state)\n\t\t\t\t{\n\t\t\t\t\thandler.destroy();\n\t\t\t\t\thandler = null;\n\t\t\t\t}\n\t\t\t\telse if (!this.isHandlerActive(handler))\n\t\t\t\t{\n\t\t\t\t\tif (handler.refresh != null)\n\t\t\t\t\t{\n\t\t\t\t\t\thandler.refresh();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\thandler.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (handler != null)\n\t\t\t{\n\t\t\t\tthis.handlers.put(tmp[i], handler);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Destroys unused handlers\n\toldHandlers.visit(mxUtils.bind(this, function(key, handler)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE, 'state', handler.state));\n\t\thandler.destroy();\n\t}));\n\t\n\t// Creates new handlers and updates parent highlight on existing handlers\n\tfor (var i = 0; i < tmp.length; i++)\n\t{\n\t\tvar state = this.graph.view.getState(tmp[i]);\n\n\t\tif (state != null)\n\t\t{\n\t\t\tvar handler = this.handlers.get(tmp[i]);\n\n\t\t\tif (handler == null)\n\t\t\t{\n\t\t\t\thandler = this.graph.createHandler(state);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ADD, 'state', state));\n\t\t\t\tthis.handlers.put(tmp[i], handler);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thandler.updateParentHighlight();\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isHandlerActive\n * \n * Returns true if the given handler is active and should not be redrawn.\n */\nmxSelectionCellsHandler.prototype.isHandlerActive = function(handler)\n{\n\treturn handler.index != null;\n};\n\n/**\n * Function: updateHandler\n * \n * Updates the handler for the given shape if one exists.\n */\nmxSelectionCellsHandler.prototype.updateHandler = function(state)\n{\n\tvar handler = this.handlers.remove(state.cell);\n\t\n\tif (handler != null)\n\t{\n\t\t// Transfers the current state to the new handler\n\t\tvar index = handler.index;\n\t\tvar x = handler.startX;\n\t\tvar y = handler.startY;\n\t\t\n\t\thandler.destroy();\n\t\thandler = this.graph.createHandler(state);\n\n\t\tif (handler != null)\n\t\t{\n\t\t\tthis.handlers.put(state.cell, handler);\n\t\t\t\n\t\t\tif (index != null && x != null && y != null)\n\t\t\t{\n\t\t\t\thandler.start(x, y, index);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: mouseDown\n * \n * Redirects the given event to the handlers.\n */\nmxSelectionCellsHandler.prototype.mouseDown = function(sender, me)\n{\n\tif (this.graph.isEnabled() && this.isEnabled())\n\t{\n\t\tvar args = [sender, me];\n\n\t\tthis.handlers.visit(function(key, handler)\n\t\t{\n\t\t\thandler.mouseDown.apply(handler, args);\n\t\t});\n\t}\n};\n\n/**\n * Function: mouseMove\n * \n * Redirects the given event to the handlers.\n */\nmxSelectionCellsHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (this.graph.isEnabled() && this.isEnabled())\n\t{\n\t\tvar args = [sender, me];\n\n\t\tthis.handlers.visit(function(key, handler)\n\t\t{\n\t\t\thandler.mouseMove.apply(handler, args);\n\t\t});\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Redirects the given event to the handlers.\n */\nmxSelectionCellsHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.graph.isEnabled() && this.isEnabled())\n\t{\n\t\tvar args = [sender, me];\n\n\t\tthis.handlers.visit(function(key, handler)\n\t\t{\n\t\t\thandler.mouseUp.apply(handler, args);\n\t\t});\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxSelectionCellsHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\t\n\tif (this.refreshHandler != null)\n\t{\n\t\tthis.graph.getSelectionModel().removeListener(this.refreshHandler);\n\t\tthis.graph.getModel().removeListener(this.refreshHandler);\n\t\tthis.graph.getView().removeListener(this.refreshHandler);\n\t\tthis.refreshHandler = null;\n\t}\n};\n\n__mxOutput.mxSelectionCellsHandler = typeof mxSelectionCellsHandler !== 'undefined' ? mxSelectionCellsHandler : undefined;\n\n/**\n * Copyright (c) 2006-2016, JGraph Ltd\n * Copyright (c) 2006-2016, Gaudenz Alder\n */\n/**\n * Class: mxConnectionHandler\n *\n * Graph event handler that creates new connections. Uses <mxTerminalMarker>\n * for finding and highlighting the source and target vertices and\n * <factoryMethod> to create the edge instance. This handler is built-into\n * <mxGraph.connectionHandler> and enabled using <mxGraph.setConnectable>.\n *\n * Example:\n * \n * (code)\n * new mxConnectionHandler(graph, function(source, target, style)\n * {\n *   edge = new mxCell('', new mxGeometry());\n *   edge.setEdge(true);\n *   edge.setStyle(style);\n *   edge.geometry.relative = true;\n *   return edge;\n * });\n * (end)\n * \n * Here is an alternative solution that just sets a specific user object for\n * new edges by overriding <insertEdge>.\n *\n * (code)\n * mxConnectionHandlerInsertEdge = mxConnectionHandler.prototype.insertEdge;\n * mxConnectionHandler.prototype.insertEdge = function(parent, id, value, source, target, style)\n * {\n *   value = 'Test';\n * \n *   return mxConnectionHandlerInsertEdge.apply(this, arguments);\n * };\n * (end)\n * \n * Using images to trigger connections:\n * \n * This handler uses mxTerminalMarker to find the source and target cell for\n * the new connection and creates a new edge using <connect>. The new edge is\n * created using <createEdge> which in turn uses <factoryMethod> or creates a\n * new default edge.\n * \n * The handler uses a \"highlight-paradigm\" for indicating if a cell is being\n * used as a source or target terminal, as seen in other diagramming products.\n * In order to allow both, moving and connecting cells at the same time,\n * <mxConstants.DEFAULT_HOTSPOT> is used in the handler to determine the hotspot\n * of a cell, that is, the region of the cell which is used to trigger a new\n * connection. The constant is a value between 0 and 1 that specifies the\n * amount of the width and height around the center to be used for the hotspot\n * of a cell and its default value is 0.5. In addition,\n * <mxConstants.MIN_HOTSPOT_SIZE> defines the minimum number of pixels for the\n * width and height of the hotspot.\n * \n * This solution, while standards compliant, may be somewhat confusing because\n * there is no visual indicator for the hotspot and the highlight is seen to\n * switch on and off while the mouse is being moved in and out. Furthermore,\n * this paradigm does not allow to create different connections depending on\n * the highlighted hotspot as there is only one hotspot per cell and it\n * normally does not allow cells to be moved and connected at the same time as\n * there is no clear indication of the connectable area of the cell.\n * \n * To come across these issues, the handle has an additional <createIcons> hook\n * with a default implementation that allows to create one icon to be used to\n * trigger new connections. If this icon is specified, then new connections can\n * only be created if the image is clicked while the cell is being highlighted.\n * The <createIcons> hook may be overridden to create more than one\n * <mxImageShape> for creating new connections, but the default implementation\n * supports one image and is used as follows:\n * \n * In order to display the \"connect image\" whenever the mouse is over the cell,\n * an DEFAULT_HOTSPOT of 1 should be used:\n * \n * (code)\n * mxConstants.DEFAULT_HOTSPOT = 1;\n * (end)\n * \n * In order to avoid confusion with the highlighting, the highlight color\n * should not be used with a connect image:\n * \n * (code)\n * mxConstants.HIGHLIGHT_COLOR = null;\n * (end)\n * \n * To install the image, the connectImage field of the mxConnectionHandler must\n * be assigned a new <mxImage> instance:\n * \n * (code)\n * mxConnectionHandler.prototype.connectImage = new mxImage('images/green-dot.gif', 14, 14);\n * (end)\n * \n * This will use the green-dot.gif with a width and height of 14 pixels as the\n * image to trigger new connections. In createIcons the icon field of the\n * handler will be set in order to remember the icon that has been clicked for\n * creating the new connection. This field will be available under selectedIcon\n * in the connect method, which may be overridden to take the icon that\n * triggered the new connection into account. This is useful if more than one\n * icon may be used to create a connection.\n *\n * Group: Events\n * \n * Event: mxEvent.START\n * \n * Fires when a new connection is being created by the user. The <code>state</code>\n * property contains the state of the source cell.\n * \n * Event: mxEvent.CONNECT\n * \n * Fires between begin- and endUpdate in <connect>. The <code>cell</code>\n * property contains the inserted edge, the <code>event</code> and <code>target</code> \n * properties contain the respective arguments that were passed to <connect> (where\n * target corresponds to the dropTarget argument). Finally, the <code>terminal</code>\n * property corresponds to the target argument in <connect> or the clone of the source\n * terminal if <createTarget> is enabled.\n * \n * Note that the target is the cell under the mouse where the mouse button was released.\n * Depending on the logic in the handler, this doesn't necessarily have to be the target\n * of the inserted edge. To print the source, target or any optional ports IDs that the\n * edge is connected to, the following code can be used. To get more details about the\n * actual connection point, <mxGraph.getConnectionConstraint> can be used. To resolve\n * the port IDs, use <mxGraphModel.getCell>.\n * \n * (code)\n * graph.connectionHandler.addListener(mxEvent.CONNECT, function(sender, evt)\n * {\n *   var edge = evt.getProperty('cell');\n *   var source = graph.getModel().getTerminal(edge, true);\n *   var target = graph.getModel().getTerminal(edge, false);\n *   \n *   var style = graph.getCellStyle(edge);\n *   var sourcePortId = style[mxConstants.STYLE_SOURCE_PORT];\n *   var targetPortId = style[mxConstants.STYLE_TARGET_PORT];\n *   \n *   mxLog.show();\n *   mxLog.debug('connect', edge, source.id, target.id, sourcePortId, targetPortId);\n * });\n * (end)\n *\n * Event: mxEvent.RESET\n * \n * Fires when the <reset> method is invoked.\n *\n * Constructor: mxConnectionHandler\n *\n * Constructs an event handler that connects vertices using the specified\n * factory method to create the new edges. Modify\n * <mxConstants.ACTIVE_REGION> to setup the region on a cell which triggers\n * the creation of a new connection or use connect icons as explained\n * above.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * factoryMethod - Optional function to create the edge. The function takes\n * the source and target <mxCell> as the first and second argument and an\n * optional cell style from the preview as the third argument. It returns\n * the <mxCell> that represents the new edge.\n */\nfunction mxConnectionHandler(graph, factoryMethod)\n{\n\tmxEventSource.call(this);\n\t\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.factoryMethod = factoryMethod;\n\t\tthis.init();\n\t\t\n\t\t// Handles escape keystrokes\n\t\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tthis.reset();\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUtils.extend(mxConnectionHandler, mxEventSource);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxConnectionHandler.prototype.graph = null;\n\n/**\n * Variable: factoryMethod\n * \n * Function that is used for creating new edges. The function takes the\n * source and target <mxCell> as the first and second argument and returns\n * a new <mxCell> that represents the edge. This is used in <createEdge>.\n */\nmxConnectionHandler.prototype.factoryMethod = true;\n\n/**\n * Variable: moveIconFront\n * \n * Specifies if icons should be displayed inside the graph container instead\n * of the overlay pane. This is used for HTML labels on vertices which hide\n * the connect icon. This has precendence over <moveIconBack> when set\n * to true. Default is false.\n */\nmxConnectionHandler.prototype.moveIconFront = false;\n\n/**\n * Variable: moveIconBack\n * \n * Specifies if icons should be moved to the back of the overlay pane. This can\n * be set to true if the icons of the connection handler conflict with other\n * handles, such as the vertex label move handle. Default is false.\n */\nmxConnectionHandler.prototype.moveIconBack = false;\n\n/**\n * Variable: connectImage\n * \n * <mxImage> that is used to trigger the creation of a new connection. This\n * is used in <createIcons>. Default is null.\n */\nmxConnectionHandler.prototype.connectImage = null;\n\n/**\n * Variable: targetConnectImage\n * \n * Specifies if the connect icon should be centered on the target state\n * while connections are being previewed. Default is false.\n */\nmxConnectionHandler.prototype.targetConnectImage = false;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxConnectionHandler.prototype.enabled = true;\n\n/**\n * Variable: select\n * \n * Specifies if new edges should be selected. Default is true.\n */\nmxConnectionHandler.prototype.select = true;\n\n/**\n * Variable: createTarget\n * \n * Specifies if <createTargetVertex> should be called if no target was under the\n * mouse for the new connection. Setting this to true means the connection\n * will be drawn as valid if no target is under the mouse, and\n * <createTargetVertex> will be called before the connection is created between\n * the source cell and the newly created vertex in <createTargetVertex>, which\n * can be overridden to create a new target. Default is false.\n */\nmxConnectionHandler.prototype.createTarget = false;\n\n/**\n * Variable: marker\n * \n * Holds the <mxTerminalMarker> used for finding source and target cells.\n */\nmxConnectionHandler.prototype.marker = null;\n\n/**\n * Variable: constraintHandler\n * \n * Holds the <mxConstraintHandler> used for drawing and highlighting\n * constraints.\n */\nmxConnectionHandler.prototype.constraintHandler = null;\n\n/**\n * Variable: error\n * \n * Holds the current validation error while connections are being created.\n */\nmxConnectionHandler.prototype.error = null;\n\n/**\n * Variable: waypointsEnabled\n * \n * Specifies if single clicks should add waypoints on the new edge. Default is\n * false.\n */\nmxConnectionHandler.prototype.waypointsEnabled = false;\n\n/**\n * Variable: ignoreMouseDown\n * \n * Specifies if the connection handler should ignore the state of the mouse\n * button when highlighting the source. Default is false, that is, the\n * handler only highlights the source if no button is being pressed.\n */\nmxConnectionHandler.prototype.ignoreMouseDown = false;\n\n/**\n * Variable: first\n * \n * Holds the <mxPoint> where the mouseDown took place while the handler is\n * active.\n */\nmxConnectionHandler.prototype.first = null;\n\n/**\n * Variable: connectIconOffset\n * \n * Holds the offset for connect icons during connection preview.\n * Default is mxPoint(0, <mxConstants.TOOLTIP_VERTICAL_OFFSET>).\n * Note that placing the icon under the mouse pointer with an\n * offset of (0,0) will affect hit detection.\n */\nmxConnectionHandler.prototype.connectIconOffset = new mxPoint(0, mxConstants.TOOLTIP_VERTICAL_OFFSET);\n\n/**\n * Variable: edgeState\n * \n * Optional <mxCellState> that represents the preview edge while the\n * handler is active. This is created in <createEdgeState>.\n */\nmxConnectionHandler.prototype.edgeState = null;\n\n/**\n * Variable: changeHandler\n * \n * Holds the change event listener for later removal.\n */\nmxConnectionHandler.prototype.changeHandler = null;\n\n/**\n * Variable: drillHandler\n * \n * Holds the drill event listener for later removal.\n */\nmxConnectionHandler.prototype.drillHandler = null;\n\n/**\n * Variable: mouseDownCounter\n * \n * Counts the number of mouseDown events since the start. The initial mouse\n * down event counts as 1.\n */\nmxConnectionHandler.prototype.mouseDownCounter = 0;\n\n/**\n * Variable: movePreviewAway\n * \n * Switch to enable moving the preview away from the mousepointer. This is required in browsers\n * where the preview cannot be made transparent to events and if the built-in hit detection on\n * the HTML elements in the page should be used. Default is the value of <mxClient.IS_VML>.\n */\nmxConnectionHandler.prototype.movePreviewAway = mxClient.IS_VML;\n\n/**\n * Variable: outlineConnect\n * \n * Specifies if connections to the outline of a highlighted target should be\n * enabled. This will allow to place the connection point along the outline of\n * the highlighted target. Default is false.\n */\nmxConnectionHandler.prototype.outlineConnect = false;\n\n/**\n * Variable: livePreview\n * \n * Specifies if the actual shape of the edge state should be used for the preview.\n * Default is false. (Ignored if no edge state is created in <createEdgeState>.)\n */\nmxConnectionHandler.prototype.livePreview = false;\n\n/**\n * Variable: cursor\n * \n * Specifies the cursor to be used while the handler is active. Default is null.\n */\nmxConnectionHandler.prototype.cursor = null;\n\n/**\n * Variable: insertBeforeSource\n * \n * Specifies if new edges should be inserted before the source vertex in the\n * cell hierarchy. Default is false for backwards compatibility.\n */\nmxConnectionHandler.prototype.insertBeforeSource = false;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxConnectionHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxConnectionHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isInsertBefore\n * \n * Returns <insertBeforeSource> for non-loops and false for loops.\n *\n * Parameters:\n * \n * edge - <mxCell> that represents the edge to be inserted.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * evt - Mousedown event of the connect gesture.\n * dropTarget - <mxCell> that represents the cell under the mouse when it was\n * released.\n */\nmxConnectionHandler.prototype.isInsertBefore = function(edge, source, target, evt, dropTarget)\n{\n\treturn this.insertBeforeSource && source != target;\n};\n\n/**\n * Function: isCreateTarget\n * \n * Returns <createTarget>.\n *\n * Parameters:\n *\n * evt - Current active native pointer event.\n */\nmxConnectionHandler.prototype.isCreateTarget = function(evt)\n{\n\treturn this.createTarget;\n};\n\n/**\n * Function: setCreateTarget\n * \n * Sets <createTarget>.\n */\nmxConnectionHandler.prototype.setCreateTarget = function(value)\n{\n\tthis.createTarget = value;\n};\n\n/**\n * Function: createShape\n * \n * Creates the preview shape for new connections.\n */\nmxConnectionHandler.prototype.createShape = function()\n{\n\t// Creates the edge preview\n\tvar shape = (this.livePreview && this.edgeState != null) ?\n\t\tthis.graph.cellRenderer.createShape(this.edgeState) :\n\t\tnew mxPolyline([], mxConstants.INVALID_COLOR);\n\tshape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\tshape.scale = this.graph.view.scale;\n\tshape.pointerEvents = false;\n\tshape.isDashed = true;\n\tshape.init(this.graph.getView().getOverlayPane());\n\tmxEvent.redirectMouseEvents(shape.node, this.graph, null);\n\n\treturn shape;\n};\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this connection handler. This should\n * be invoked if <mxGraph.container> is assigned after the connection\n * handler has been created.\n */\nmxConnectionHandler.prototype.init = function()\n{\n\tthis.graph.addMouseListener(this);\n\tthis.marker = this.createMarker();\n\tthis.constraintHandler = new mxConstraintHandler(this.graph);\n\n\t// Redraws the icons if the graph changes\n\tthis.changeHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tif (this.iconState != null)\n\t\t{\n\t\t\tthis.iconState = this.graph.getView().getState(this.iconState.cell);\n\t\t}\n\t\t\n\t\tif (this.iconState != null)\n\t\t{\n\t\t\tthis.redrawIcons(this.icons, this.iconState);\n\t\t\tthis.constraintHandler.reset();\n\t\t}\n\t\telse if (this.previous != null && this.graph.view.getState(this.previous.cell) == null)\n\t\t{\n\t\t\tthis.reset();\n\t\t}\n\t});\n\t\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.changeHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE, this.changeHandler);\n\tthis.graph.getView().addListener(mxEvent.TRANSLATE, this.changeHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE_AND_TRANSLATE, this.changeHandler);\n\t\n\t// Removes the icon if we step into/up or start editing\n\tthis.drillHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tthis.reset();\n\t});\n\t\n\tthis.graph.addListener(mxEvent.START_EDITING, this.drillHandler);\n\tthis.graph.getView().addListener(mxEvent.DOWN, this.drillHandler);\n\tthis.graph.getView().addListener(mxEvent.UP, this.drillHandler);\n};\n\n/**\n * Function: isConnectableCell\n * \n * Returns true if the given cell is connectable. This is a hook to\n * disable floating connections. This implementation returns true.\n */\nmxConnectionHandler.prototype.isConnectableCell = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: createMarker\n * \n * Creates and returns the <mxCellMarker> used in <marker>.\n */\nmxConnectionHandler.prototype.createMarker = function()\n{\n\tvar marker = new mxCellMarker(this.graph);\n\tmarker.hotspotEnabled = true;\n\n\t// Overrides to return cell at location only if valid (so that\n\t// there is no highlight for invalid cells)\n\tmarker.getCell = mxUtils.bind(this, function(me)\n\t{\n\t\tvar cell = mxCellMarker.prototype.getCell.apply(marker, arguments);\n\t\tthis.error = null;\n\t\t\n\t\t// Checks for cell at preview point (with grid)\n\t\tif (cell == null && this.currentPoint != null)\n\t\t{\n\t\t\tcell = this.graph.getCellAt(this.currentPoint.x, this.currentPoint.y);\n\t\t}\n\t\t\n\t\t// Uses connectable parent vertex if one exists\n\t\tif (cell != null && !this.graph.isCellConnectable(cell))\n\t\t{\n\t\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\t\t\n\t\t\tif (this.graph.getModel().isVertex(parent) && this.graph.isCellConnectable(parent))\n\t\t\t{\n\t\t\t\tcell = parent;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif ((this.graph.isSwimlane(cell) && this.currentPoint != null &&\n\t\t\tthis.graph.hitsSwimlaneContent(cell, this.currentPoint.x, this.currentPoint.y)) ||\n\t\t\t!this.isConnectableCell(cell))\n\t\t{\n\t\t\tcell = null;\n\t\t}\n\t\t\n\t\tif (cell != null)\n\t\t{\n\t\t\tif (this.isConnecting())\n\t\t\t{\n\t\t\t\tif (this.previous != null)\n\t\t\t\t{\n\t\t\t\t\tthis.error = this.validateConnection(this.previous.cell, cell);\n\t\t\t\t\t\n\t\t\t\t\tif (this.error != null && this.error.length == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcell = null;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Enables create target inside groups\n\t\t\t\t\t\tif (this.isCreateTarget(me.getEvent()))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.error = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!this.isValidSource(cell, me))\n\t\t\t{\n\t\t\t\tcell = null;\n\t\t\t}\n\t\t}\n\t\telse if (this.isConnecting() && !this.isCreateTarget(me.getEvent()) &&\n\t\t\t\t!this.graph.allowDanglingEdges)\n\t\t{\n\t\t\tthis.error = '';\n\t\t}\n\n\t\treturn cell;\n\t});\n\n\t// Sets the highlight color according to validateConnection\n\tmarker.isValidState = mxUtils.bind(this, function(state)\n\t{\n\t\tif (this.isConnecting())\n\t\t{\n\t\t\treturn this.error == null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn mxCellMarker.prototype.isValidState.apply(marker, arguments);\n\t\t}\n\t});\n\n\t// Overrides to use marker color only in highlight mode or for\n\t// target selection\n\tmarker.getMarkerColor = mxUtils.bind(this, function(evt, state, isValid)\n\t{\n\t\treturn (this.connectImage == null || this.isConnecting()) ?\n\t\t\tmxCellMarker.prototype.getMarkerColor.apply(marker, arguments) :\n\t\t\tnull;\n\t});\n\n\t// Overrides to use hotspot only for source selection otherwise\n\t// intersects always returns true when over a cell\n\tmarker.intersects = mxUtils.bind(this, function(state, evt)\n\t{\n\t\tif (this.connectImage != null || this.isConnecting())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn mxCellMarker.prototype.intersects.apply(marker, arguments);\n\t});\n\n\treturn marker;\n};\n\n/**\n * Function: start\n * \n * Starts a new connection for the given state and coordinates.\n */\nmxConnectionHandler.prototype.start = function(state, x, y, edgeState)\n{\n\tthis.previous = state;\n\tthis.first = new mxPoint(x, y);\n\tthis.edgeState = (edgeState != null) ? edgeState : this.createEdgeState(null);\n\t\n\t// Marks the source state\n\tthis.marker.currentColor = this.marker.validColor;\n\tthis.marker.markedState = state;\n\tthis.marker.mark();\n\n\tthis.fireEvent(new mxEventObject(mxEvent.START, 'state', this.previous));\n};\n\n/**\n * Function: isConnecting\n * \n * Returns true if the source terminal has been clicked and a new\n * connection is currently being previewed.\n */\nmxConnectionHandler.prototype.isConnecting = function()\n{\n\treturn this.first != null && this.shape != null;\n};\n\n/**\n * Function: isValidSource\n * \n * Returns <mxGraph.isValidSource> for the given source terminal.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the source terminal.\n * me - <mxMouseEvent> that is associated with this call.\n */\nmxConnectionHandler.prototype.isValidSource = function(cell, me)\n{\n\treturn this.graph.isValidSource(cell);\n};\n\n/**\n * Function: isValidTarget\n * \n * Returns true. The call to <mxGraph.isValidTarget> is implicit by calling\n * <mxGraph.getEdgeValidationError> in <validateConnection>. This is an\n * additional hook for disabling certain targets in this specific handler.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the target terminal.\n */\nmxConnectionHandler.prototype.isValidTarget = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: validateConnection\n * \n * Returns the error message or an empty string if the connection for the\n * given source target pair is not valid. Otherwise it returns null. This\n * implementation uses <mxGraph.getEdgeValidationError>.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxConnectionHandler.prototype.validateConnection = function(source, target)\n{\n\tif (!this.isValidTarget(target))\n\t{\n\t\treturn '';\n\t}\n\t\n\treturn this.graph.getEdgeValidationError(null, source, target);\n};\n\n/**\n * Function: getConnectImage\n * \n * Hook to return the <mxImage> used for the connection icon of the given\n * <mxCellState>. This implementation returns <connectImage>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose connect image should be returned.\n */\nmxConnectionHandler.prototype.getConnectImage = function(state)\n{\n\treturn this.connectImage;\n};\n\n/**\n * Function: isMoveIconToFrontForState\n * \n * Returns true if the state has a HTML label in the graph's container, otherwise\n * it returns <moveIconFront>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose connect icons should be returned.\n */\nmxConnectionHandler.prototype.isMoveIconToFrontForState = function(state)\n{\n\tif (state.text != null && state.text.node.parentNode == this.graph.container)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn this.moveIconFront;\n};\n\n/**\n * Function: createIcons\n * \n * Creates the array <mxImageShapes> that represent the connect icons for\n * the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose connect icons should be returned.\n */\nmxConnectionHandler.prototype.createIcons = function(state)\n{\n\tvar image = this.getConnectImage(state);\n\t\n\tif (image != null && state != null)\n\t{\n\t\tthis.iconState = state;\n\t\tvar icons = [];\n\n\t\t// Cannot use HTML for the connect icons because the icon receives all\n\t\t// mouse move events in IE, must use VML and SVG instead even if the\n\t\t// connect-icon appears behind the selection border and the selection\n\t\t// border consumes the events before the icon gets a chance\n\t\tvar bounds = new mxRectangle(0, 0, image.width, image.height);\n\t\tvar icon = new mxImageShape(bounds, image.src, null, null, 0);\n\t\ticon.preserveImageAspect = false;\n\t\t\n\t\tif (this.isMoveIconToFrontForState(state))\n\t\t{\n\t\t\ticon.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\t\ticon.init(this.graph.container);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ticon.dialect = (this.graph.dialect == mxConstants.DIALECT_SVG) ?\n\t\t\t\tmxConstants.DIALECT_SVG : mxConstants.DIALECT_VML;\n\t\t\ticon.init(this.graph.getView().getOverlayPane());\n\n\t\t\t// Move the icon back in the overlay pane\n\t\t\tif (this.moveIconBack && icon.node.previousSibling != null)\n\t\t\t{\n\t\t\t\ticon.node.parentNode.insertBefore(icon.node, icon.node.parentNode.firstChild);\n\t\t\t}\n\t\t}\n\n\t\ticon.node.style.cursor = mxConstants.CURSOR_CONNECT;\n\n\t\t// Events transparency\n\t\tvar getState = mxUtils.bind(this, function()\n\t\t{\n\t\t\treturn (this.currentState != null) ? this.currentState : state;\n\t\t});\n\t\t\n\t\t// Updates the local icon before firing the mouse down event.\n\t\tvar mouseDown = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tthis.icon = icon;\n\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_DOWN,\n\t\t\t\t\tnew mxMouseEvent(evt, getState()));\n\t\t\t}\n\t\t});\n\n\t\tmxEvent.redirectMouseEvents(icon.node, this.graph, getState, mouseDown);\n\t\t\n\t\ticons.push(icon);\n\t\tthis.redrawIcons(icons, this.iconState);\n\t\t\n\t\treturn icons;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: redrawIcons\n * \n * Redraws the given array of <mxImageShapes>.\n * \n * Parameters:\n * \n * icons - Optional array of <mxImageShapes> to be redrawn.\n */\nmxConnectionHandler.prototype.redrawIcons = function(icons, state)\n{\n\tif (icons != null && icons[0] != null && state != null)\n\t{\n\t\tvar pos = this.getIconPosition(icons[0], state);\n\t\ticons[0].bounds.x = pos.x;\n\t\ticons[0].bounds.y = pos.y;\n\t\ticons[0].redraw();\n\t}\n};\n\n/**\n * Function: getIconPosition\n * \n * Returns the center position of the given icon.\n * \n * Parameters:\n * \n * icon - The connect icon of <mxImageShape> with the mouse.\n * state - <mxCellState> under the mouse.\n */\nmxConnectionHandler.prototype.getIconPosition = function(icon, state)\n{\n\tvar scale = this.graph.getView().scale;\n\tvar cx = state.getCenterX();\n\tvar cy = state.getCenterY();\n\t\n\tif (this.graph.isSwimlane(state.cell))\n\t{\n\t\tvar size = this.graph.getStartSize(state.cell);\n\t\t\n\t\tcx = (size.width != 0) ? state.x + size.width * scale / 2 : cx;\n\t\tcy = (size.height != 0) ? state.y + size.height * scale / 2 : cy;\n\t\t\n\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\n\t\tif (alpha != 0)\n\t\t{\n\t\t\tvar cos = Math.cos(alpha);\n\t\t\tvar sin = Math.sin(alpha);\n\t\t\tvar ct = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(cx, cy), cos, sin, ct);\n\t\t\tcx = pt.x;\n\t\t\tcy = pt.y;\n\t\t}\n\t}\n\n\treturn new mxPoint(cx - icon.bounds.width / 2,\n\t\t\tcy - icon.bounds.height / 2);\n};\n\n/**\n * Function: destroyIcons\n * \n * Destroys the connect icons and resets the respective state.\n */\nmxConnectionHandler.prototype.destroyIcons = function()\n{\n\tif (this.icons != null)\n\t{\n\t\tfor (var i = 0; i < this.icons.length; i++)\n\t\t{\n\t\t\tthis.icons[i].destroy();\n\t\t}\n\t\t\n\t\tthis.icons = null;\n\t\tthis.icon = null;\n\t\tthis.selectedIcon = null;\n\t\tthis.iconState = null;\n\t}\n};\n\n/**\n * Function: isStartEvent\n * \n * Returns true if the given mouse down event should start this handler. The\n * This implementation returns true if the event does not force marquee\n * selection, and the currentConstraint and currentFocus of the\n * <constraintHandler> are not null, or <previous> and <error> are not null and\n * <icons> is null or <icons> and <icon> are not null.\n */\nmxConnectionHandler.prototype.isStartEvent = function(me)\n{\n\treturn ((this.constraintHandler.currentFocus != null && this.constraintHandler.currentConstraint != null) ||\n\t\t(this.previous != null && this.error == null && (this.icons == null || (this.icons != null &&\n\t\tthis.icon != null))));\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating a new connection.\n */\nmxConnectionHandler.prototype.mouseDown = function(sender, me)\n{\n\tthis.mouseDownCounter++;\n\t\n\tif (this.isEnabled() && this.graph.isEnabled() && !me.isConsumed() &&\n\t\t!this.isConnecting() && this.isStartEvent(me))\n\t{\n\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\tthis.constraintHandler.currentFocus != null &&\n\t\t\tthis.constraintHandler.currentPoint != null)\n\t\t{\n\t\t\tthis.sourceConstraint = this.constraintHandler.currentConstraint;\n\t\t\tthis.previous = this.constraintHandler.currentFocus;\n\t\t\tthis.first = this.constraintHandler.currentPoint.clone();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Stores the location of the initial mousedown\n\t\t\tthis.first = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t}\n\t\n\t\tthis.edgeState = this.createEdgeState(me);\n\t\tthis.mouseDownCounter = 1;\n\t\t\n\t\tif (this.waypointsEnabled && this.shape == null)\n\t\t{\n\t\t\tthis.waypoints = null;\n\t\t\tthis.shape = this.createShape();\n\t\t\t\n\t\t\tif (this.edgeState != null)\n\t\t\t{\n\t\t\t\tthis.shape.apply(this.edgeState);\n\t\t\t}\n\t\t}\n\n\t\t// Stores the starting point in the geometry of the preview\n\t\tif (this.previous == null && this.edgeState != null)\n\t\t{\n\t\t\tvar pt = this.graph.getPointForEvent(me.getEvent());\n\t\t\tthis.edgeState.cell.geometry.setTerminalPoint(pt, true);\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.START, 'state', this.previous));\n\n\t\tme.consume();\n\t}\n\n\tthis.selectedIcon = this.icon;\n\tthis.icon = null;\n};\n\n/**\n * Function: isImmediateConnectSource\n * \n * Returns true if a tap on the given source state should immediately start\n * connecting. This implementation returns true if the state is not movable\n * in the graph. \n */\nmxConnectionHandler.prototype.isImmediateConnectSource = function(state)\n{\n\treturn !this.graph.isCellMovable(state.cell);\n};\n\n/**\n * Function: createEdgeState\n * \n * Hook to return an <mxCellState> which may be used during the preview.\n * This implementation returns null.\n * \n * Use the following code to create a preview for an existing edge style:\n * \n * (code)\n * graph.connectionHandler.createEdgeState = function(me)\n * {\n *   var edge = graph.createEdge(null, null, null, null, null, 'edgeStyle=elbowEdgeStyle');\n *   \n *   return new mxCellState(this.graph.view, edge, this.graph.getCellStyle(edge));\n * };\n * (end)\n */\nmxConnectionHandler.prototype.createEdgeState = function(me)\n{\n\treturn null;\n};\n\n/**\n * Function: isOutlineConnectEvent\n * \n * Returns true if <outlineConnect> is true and the source of the event is the outline shape\n * or shift is pressed.\n */\nmxConnectionHandler.prototype.isOutlineConnectEvent = function(me)\n{\n\tvar offset = mxUtils.getOffset(this.graph.container);\n\tvar evt = me.getEvent();\n\t\n\tvar clientX = mxEvent.getClientX(evt);\n\tvar clientY = mxEvent.getClientY(evt);\n\t\n\tvar doc = document.documentElement;\n\tvar left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n\tvar top = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);\n\t\n\tvar gridX = this.currentPoint.x - this.graph.container.scrollLeft + offset.x - left;\n\tvar gridY = this.currentPoint.y - this.graph.container.scrollTop + offset.y - top;\n\n\treturn this.outlineConnect && !mxEvent.isShiftDown(me.getEvent()) &&\n\t\t(me.isSource(this.marker.highlight.shape) ||\n\t\t(mxEvent.isAltDown(me.getEvent()) && me.getState() != null) ||\n\t\tthis.marker.highlight.isHighlightAt(clientX, clientY) ||\n\t\t((gridX != clientX || gridY != clientY) && me.getState() == null &&\n\t\tthis.marker.highlight.isHighlightAt(gridX, gridY)));\n};\n\n/**\n * Function: updateCurrentState\n * \n * Updates the current state for a given mouse move event by using\n * the <marker>.\n */\nmxConnectionHandler.prototype.updateCurrentState = function(me, point)\n{\n\tthis.constraintHandler.update(me, this.first == null, false, (this.first == null ||\n\t\tme.isSource(this.marker.highlight.shape)) ? null : point);\n\t\n\tif (this.constraintHandler.currentFocus != null && this.constraintHandler.currentConstraint != null)\n\t{\n\t\t// Handles special case where grid is large and connection point is at actual point in which\n\t\t// case the outline is not followed as long as we're < gridSize / 2 away from that point\n\t\tif (this.marker.highlight != null && this.marker.highlight.state != null &&\n\t\t\tthis.marker.highlight.state.cell == this.constraintHandler.currentFocus.cell)\n\t\t{\n\t\t\t// Direct repaint needed if cell already highlighted\n\t\t\tif (this.marker.highlight.shape.stroke != 'transparent')\n\t\t\t{\n\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.marker.markCell(this.constraintHandler.currentFocus.cell, 'transparent');\n\t\t}\n\n\t\t// Updates validation state\n\t\tif (this.previous != null)\n\t\t{\n\t\t\tthis.error = this.validateConnection(this.previous.cell, this.constraintHandler.currentFocus.cell);\n\t\t\t\n\t\t\tif (this.error == null)\n\t\t\t{\n\t\t\t\tthis.currentState = this.constraintHandler.currentFocus;\n\t\t\t}\n\t\t\t\t\t\n\t\t\tif (this.error != null || (this.currentState != null &&\n\t\t\t\t!this.isCellEnabled(this.currentState.cell)))\n\t\t\t{\n\t\t\t\tthis.constraintHandler.reset();\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (this.graph.isIgnoreTerminalEvent(me.getEvent()))\n\t\t{\n\t\t\tthis.marker.reset();\n\t\t\tthis.currentState = null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.marker.process(me);\n\t\t\tthis.currentState = this.marker.getValidState();\n\t\t}\n\t\t\t\n\t\tif (this.currentState != null && !this.isCellEnabled(this.currentState.cell))\n\t\t{\n\t\t\tthis.constraintHandler.reset();\n\t\t\tthis.marker.reset();\n\t\t\tthis.currentState = null;\n\t\t}\n\n\t\tvar outline = this.isOutlineConnectEvent(me);\n\t\t\n\t\tif (this.currentState != null && outline)\n\t\t{\n\t\t\t// Handles special case where mouse is on outline away from actual end point\n\t\t\t// in which case the grid is ignored and mouse point is used instead\n\t\t\tif (me.isSource(this.marker.highlight.shape))\n\t\t\t{\n\t\t\t\tpoint = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t\t}\n\t\t\t\n\t\t\tvar constraint = this.graph.getOutlineConstraint(point, this.currentState, me);\n\t\t\tthis.constraintHandler.setFocus(me, this.currentState, false);\n\t\t\tthis.constraintHandler.currentConstraint = constraint;\n\t\t\tthis.constraintHandler.currentPoint = point;\n\t\t}\n\n\t\tif (this.outlineConnect)\n\t\t{\n\t\t\tif (this.marker.highlight != null && this.marker.highlight.shape != null)\n\t\t\t{\n\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\t\n\t\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t\t\t{\n\t\t\t\t\tthis.marker.highlight.shape.stroke = mxConstants.OUTLINE_HIGHLIGHT_COLOR;\n\t\t\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.OUTLINE_HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t\t} \n\t\t\t\telse if (this.marker.hasValidState())\n\t\t\t\t{\n\t\t\t\t\t// Handles special case where actual end point of edge and current mouse point\n\t\t\t\t\t// are not equal (due to grid snapping) and there is no hit on shape or highlight\n\t\t\t\t\t// but ignores cases where parent is used for non-connectable child cells\n\t\t\t\t\tif (this.graph.isCellConnectable(me.getCell()) &&\n\t\t\t\t\t\tthis.marker.getValidState() != me.getState())\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\t\t\tthis.currentState = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.marker.highlight.shape.stroke = mxConstants.DEFAULT_VALID_COLOR;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isCellEnabled\n * \n * Returns true if the given cell allows new connections to be created. This implementation\n * always returns true.\n */\nmxConnectionHandler.prototype.isCellEnabled = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: convertWaypoint\n * \n * Converts the given point from screen coordinates to model coordinates.\n */\nmxConnectionHandler.prototype.convertWaypoint = function(point)\n{\n\tvar scale = this.graph.getView().getScale();\n\tvar tr = this.graph.getView().getTranslate();\n\t\n\tpoint.x = point.x / scale - tr.x;\n\tpoint.y = point.y / scale - tr.y;\n};\n\n/**\n * Function: snapToPreview\n * \n * Called to snap the given point to the current preview. This snaps to the\n * first point of the preview if alt is not pressed.\n */\nmxConnectionHandler.prototype.snapToPreview = function(me, point)\n{\n\tif (!mxEvent.isAltDown(me.getEvent()) && this.previous != null)\n\t{\n\t\tvar tol = this.graph.gridSize * this.graph.view.scale / 2;\t\n\t\tvar tmp = (this.sourceConstraint != null) ? this.first :\n\t\t\tnew mxPoint(this.previous.getCenterX(), this.previous.getCenterY());\n\n\t\tif (Math.abs(tmp.x - me.getGraphX()) < tol)\n\t\t{\n\t\t\tpoint.x = tmp.x;\n\t\t}\n\t\t\n\t\tif (Math.abs(tmp.y - me.getGraphY()) < tol)\n\t\t{\n\t\t\tpoint.y = tmp.y;\n\t\t}\n\t}\t\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the preview edge or by highlighting\n * a possible source or target terminal.\n */\nmxConnectionHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (!me.isConsumed() && (this.ignoreMouseDown || this.first != null || !this.graph.isMouseDown))\n\t{\n\t\t// Handles special case when handler is disabled during highlight\n\t\tif (!this.isEnabled() && this.currentState != null)\n\t\t{\n\t\t\tthis.destroyIcons();\n\t\t\tthis.currentState = null;\n\t\t}\n\n\t\tvar view = this.graph.getView();\n\t\tvar scale = view.scale;\n\t\tvar tr = view.translate;\n\t\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\tthis.error = null;\n\n\t\tif (this.graph.isGridEnabledEvent(me.getEvent()))\n\t\t{\n\t\t\tpoint = new mxPoint((this.graph.snap(point.x / scale - tr.x) + tr.x) * scale,\n\t\t\t\t(this.graph.snap(point.y / scale - tr.y) + tr.y) * scale);\n\t\t}\n\t\t\n\t\tthis.snapToPreview(me, point);\n\t\tthis.currentPoint = point;\n\t\t\n\t\tif ((this.first != null || (this.isEnabled() && this.graph.isEnabled())) &&\n\t\t\t(this.shape != null || this.first == null ||\n\t\t\tMath.abs(me.getGraphX() - this.first.x) > this.graph.tolerance ||\n\t\t\tMath.abs(me.getGraphY() - this.first.y) > this.graph.tolerance))\n\t\t{\n\t\t\tthis.updateCurrentState(me, point);\n\t\t}\n\n\t\tif (this.first != null)\n\t\t{\n\t\t\tvar constraint = null;\n\t\t\tvar current = point;\n\t\t\t\n\t\t\t// Uses the current point from the constraint handler if available\n\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\tthis.constraintHandler.currentFocus != null &&\n\t\t\t\tthis.constraintHandler.currentPoint != null)\n\t\t\t{\n\t\t\t\tconstraint = this.constraintHandler.currentConstraint;\n\t\t\t\tcurrent = this.constraintHandler.currentPoint.clone();\n\t\t\t}\n\t\t\telse if (this.previous != null && !this.graph.isIgnoreTerminalEvent(me.getEvent()) &&\n\t\t\t\tmxEvent.isShiftDown(me.getEvent()))\n\t\t\t{\n\t\t\t\tif (Math.abs(this.previous.getCenterX() - point.x) <\n\t\t\t\t\tMath.abs(this.previous.getCenterY() - point.y))\n\t\t\t\t{\n\t\t\t\t\tpoint.x = this.previous.getCenterX();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpoint.y = this.previous.getCenterY();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar pt2 = this.first;\n\t\t\t\n\t\t\t// Moves the connect icon with the mouse\n\t\t\tif (this.selectedIcon != null)\n\t\t\t{\n\t\t\t\tvar w = this.selectedIcon.bounds.width;\n\t\t\t\tvar h = this.selectedIcon.bounds.height;\n\t\t\t\t\n\t\t\t\tif (this.currentState != null && this.targetConnectImage)\n\t\t\t\t{\n\t\t\t\t\tvar pos = this.getIconPosition(this.selectedIcon, this.currentState);\n\t\t\t\t\tthis.selectedIcon.bounds.x = pos.x;\n\t\t\t\t\tthis.selectedIcon.bounds.y = pos.y;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar bounds = new mxRectangle(me.getGraphX() + this.connectIconOffset.x,\n\t\t\t\t\t\tme.getGraphY() + this.connectIconOffset.y, w, h);\n\t\t\t\t\tthis.selectedIcon.bounds = bounds;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.selectedIcon.redraw();\n\t\t\t}\n\n\t\t\t// Uses edge state to compute the terminal points\n\t\t\tif (this.edgeState != null)\n\t\t\t{\n\t\t\t\tthis.updateEdgeState(current, constraint);\n\t\t\t\tcurrent = this.edgeState.absolutePoints[this.edgeState.absolutePoints.length - 1];\n\t\t\t\tpt2 = this.edgeState.absolutePoints[0];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (this.currentState != null)\n\t\t\t\t{\n\t\t\t\t\tif (this.constraintHandler.currentConstraint == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp = this.getTargetPerimeterPoint(this.currentState, me);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrent = tmp;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Computes the source perimeter point\n\t\t\t\tif (this.sourceConstraint == null && this.previous != null)\n\t\t\t\t{\n\t\t\t\t\tvar next = (this.waypoints != null && this.waypoints.length > 0) ?\n\t\t\t\t\t\t\tthis.waypoints[0] : current;\n\t\t\t\t\tvar tmp = this.getSourcePerimeterPoint(this.previous, next, me);\n\t\t\t\t\t\n\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tpt2 = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Makes sure the cell under the mousepointer can be detected\n\t\t\t// by moving the preview shape away from the mouse. This\n\t\t\t// makes sure the preview shape does not prevent the detection\n\t\t\t// of the cell under the mousepointer even for slow gestures.\n\t\t\tif (this.currentState == null && this.movePreviewAway)\n\t\t\t{\n\t\t\t\tvar tmp = pt2; \n\t\t\t\t\n\t\t\t\tif (this.edgeState != null && this.edgeState.absolutePoints.length >= 2)\n\t\t\t\t{\n\t\t\t\t\tvar tmp2 = this.edgeState.absolutePoints[this.edgeState.absolutePoints.length - 2];\n\t\t\t\t\t\n\t\t\t\t\tif (tmp2 != null)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp = tmp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar dx = current.x - tmp.x;\n\t\t\t\tvar dy = current.y - tmp.y;\n\t\t\t\t\n\t\t\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\t\n\t\t\t\tif (len == 0)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Stores old point to reuse when creating edge\n\t\t\t\tthis.originalPoint = current.clone();\n\t\t\t\tcurrent.x -= dx * 4 / len;\n\t\t\t\tcurrent.y -= dy * 4 / len;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.originalPoint = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Creates the preview shape (lazy)\n\t\t\tif (this.shape == null)\n\t\t\t{\n\t\t\t\tvar dx = Math.abs(me.getGraphX() - this.first.x);\n\t\t\t\tvar dy = Math.abs(me.getGraphY() - this.first.y);\n\n\t\t\t\tif (dx > this.graph.tolerance || dy > this.graph.tolerance)\n\t\t\t\t{\n\t\t\t\t\tthis.shape = this.createShape();\n\n\t\t\t\t\tif (this.edgeState != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.shape.apply(this.edgeState);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Revalidates current connection\n\t\t\t\t\tthis.updateCurrentState(me, point);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Updates the points in the preview edge\n\t\t\tif (this.shape != null)\n\t\t\t{\n\t\t\t\tif (this.edgeState != null)\n\t\t\t\t{\n\t\t\t\t\tthis.shape.points = this.edgeState.absolutePoints;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar pts = [pt2];\n\t\t\t\t\t\n\t\t\t\t\tif (this.waypoints != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tpts = pts.concat(this.waypoints);\n\t\t\t\t\t}\n\n\t\t\t\t\tpts.push(current);\n\t\t\t\t\tthis.shape.points = pts;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.drawPreview();\n\t\t\t}\n\t\t\t\n\t\t\t// Makes sure endpoint of edge is visible during connect\n\t\t\tif (this.cursor != null)\n\t\t\t{\n\t\t\t\tthis.graph.container.style.cursor = this.cursor;\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.consume(me.getEvent());\n\t\t\tme.consume();\n\t\t}\n\t\telse if (!this.isEnabled() || !this.graph.isEnabled())\n\t\t{\n\t\t\tthis.constraintHandler.reset();\n\t\t}\n\t\telse if (this.previous != this.currentState && this.edgeState == null)\n\t\t{\n\t\t\tthis.destroyIcons();\n\t\t\t\n\t\t\t// Sets the cursor on the current shape\t\t\t\t\n\t\t\tif (this.currentState != null && this.error == null && this.constraintHandler.currentConstraint == null)\n\t\t\t{\n\t\t\t\tthis.icons = this.createIcons(this.currentState);\n\n\t\t\t\tif (this.icons == null)\n\t\t\t\t{\n\t\t\t\t\tthis.currentState.setCursor(mxConstants.CURSOR_CONNECT);\n\t\t\t\t\tme.consume();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.previous = this.currentState;\n\t\t}\n\t\telse if (this.previous == this.currentState && this.currentState != null && this.icons == null &&\n\t\t\t!this.graph.isMouseDown)\n\t\t{\n\t\t\t// Makes sure that no cursors are changed\n\t\t\tme.consume();\n\t\t}\n\n\t\tif (!this.graph.isMouseDown && this.currentState != null && this.icons != null)\n\t\t{\n\t\t\tvar hitsIcon = false;\n\t\t\tvar target = me.getSource();\n\t\t\t\n\t\t\tfor (var i = 0; i < this.icons.length && !hitsIcon; i++)\n\t\t\t{\n\t\t\t\thitsIcon = target == this.icons[i].node || target.parentNode == this.icons[i].node;\n\t\t\t}\n\n\t\t\tif (!hitsIcon)\n\t\t\t{\n\t\t\t\tthis.updateIcons(this.currentState, this.icons, me);\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.constraintHandler.reset();\n\t}\n};\n\n/**\n * Function: updateEdgeState\n * \n * Updates <edgeState>.\n */\nmxConnectionHandler.prototype.updateEdgeState = function(current, constraint)\n{\n\t// TODO: Use generic method for writing constraint to style\n\tif (this.sourceConstraint != null && this.sourceConstraint.point != null)\n\t{\n\t\tthis.edgeState.style[mxConstants.STYLE_EXIT_X] = this.sourceConstraint.point.x;\n\t\tthis.edgeState.style[mxConstants.STYLE_EXIT_Y] = this.sourceConstraint.point.y;\n\t}\n\n\tif (constraint != null && constraint.point != null)\n\t{\n\t\tthis.edgeState.style[mxConstants.STYLE_ENTRY_X] = constraint.point.x;\n\t\tthis.edgeState.style[mxConstants.STYLE_ENTRY_Y] = constraint.point.y;\n\t}\n\telse\n\t{\n\t\tdelete this.edgeState.style[mxConstants.STYLE_ENTRY_X];\n\t\tdelete this.edgeState.style[mxConstants.STYLE_ENTRY_Y];\n\t}\n\t\n\tthis.edgeState.absolutePoints = [null, (this.currentState != null) ? null : current];\n\tthis.graph.view.updateFixedTerminalPoint(this.edgeState, this.previous, true, this.sourceConstraint);\n\t\n\tif (this.currentState != null)\n\t{\n\t\tif (constraint == null)\n\t\t{\n\t\t\tconstraint = this.graph.getConnectionConstraint(this.edgeState, this.previous, false);\n\t\t}\n\t\t\n\t\tthis.edgeState.setAbsoluteTerminalPoint(null, false);\n\t\tthis.graph.view.updateFixedTerminalPoint(this.edgeState, this.currentState, false, constraint);\n\t}\n\t\n\t// Scales and translates the waypoints to the model\n\tvar realPoints = null;\n\t\n\tif (this.waypoints != null)\n\t{\n\t\trealPoints = [];\n\t\t\n\t\tfor (var i = 0; i < this.waypoints.length; i++)\n\t\t{\n\t\t\tvar pt = this.waypoints[i].clone();\n\t\t\tthis.convertWaypoint(pt);\n\t\t\trealPoints[i] = pt;\n\t\t}\n\t}\n\t\n\tthis.graph.view.updatePoints(this.edgeState, realPoints, this.previous, this.currentState);\n\tthis.graph.view.updateFloatingTerminalPoints(this.edgeState, this.previous, this.currentState);\n};\n\n/**\n * Function: getTargetPerimeterPoint\n * \n * Returns the perimeter point for the given target state.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the target cell state.\n * me - <mxMouseEvent> that represents the mouse move.\n */\nmxConnectionHandler.prototype.getTargetPerimeterPoint = function(state, me)\n{\n\tvar result = null;\n\tvar view = state.view;\n\tvar targetPerimeter = view.getPerimeterFunction(state);\n\t\n\tif (targetPerimeter != null)\n\t{\n\t\tvar next = (this.waypoints != null && this.waypoints.length > 0) ?\n\t\t\t\tthis.waypoints[this.waypoints.length - 1] :\n\t\t\t\tnew mxPoint(this.previous.getCenterX(), this.previous.getCenterY());\n\t\tvar tmp = targetPerimeter(view.getPerimeterBounds(state),\n\t\t\tthis.edgeState, next, false);\n\t\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tresult = tmp;\n\t\t}\n\t}\n\telse\n\t{\n\t\tresult = new mxPoint(state.getCenterX(), state.getCenterY());\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getSourcePerimeterPoint\n * \n * Hook to update the icon position(s) based on a mouseOver event. This is\n * an empty implementation.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the target cell state.\n * next - <mxPoint> that represents the next point along the previewed edge.\n * me - <mxMouseEvent> that represents the mouse move.\n */\nmxConnectionHandler.prototype.getSourcePerimeterPoint = function(state, next, me)\n{\n\tvar result = null;\n\tvar view = state.view;\n\tvar sourcePerimeter = view.getPerimeterFunction(state);\n\tvar c = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\n\tif (sourcePerimeter != null)\n\t{\n\t\tvar theta = mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0);\n\t\tvar rad = -theta * (Math.PI / 180);\n\t\t\n\t\tif (theta != 0)\n\t\t{\n\t\t\tnext = mxUtils.getRotatedPoint(new mxPoint(next.x, next.y), Math.cos(rad), Math.sin(rad), c);\n\t\t}\n\t\t\n\t\tvar tmp = sourcePerimeter(view.getPerimeterBounds(state), state, next, false);\n\t\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tif (theta != 0)\n\t\t\t{\n\t\t\t\ttmp = mxUtils.getRotatedPoint(new mxPoint(tmp.x, tmp.y), Math.cos(-rad), Math.sin(-rad), c);\n\t\t\t}\n\t\t\t\n\t\t\tresult = tmp;\n\t\t}\n\t}\n\telse\n\t{\n\t\tresult = c;\n\t}\n\t\n\treturn result;\n};\n\n\n/**\n * Function: updateIcons\n * \n * Hook to update the icon position(s) based on a mouseOver event. This is\n * an empty implementation.\n * \n * Parameters:\n * \n * state - <mxCellState> under the mouse.\n * icons - Array of currently displayed icons.\n * me - <mxMouseEvent> that contains the mouse event.\n */\nmxConnectionHandler.prototype.updateIcons = function(state, icons, me)\n{\n\t// empty\n};\n\n/**\n * Function: isStopEvent\n * \n * Returns true if the given mouse up event should stop this handler. The\n * connection will be created if <error> is null. Note that this is only\n * called if <waypointsEnabled> is true. This implemtation returns true\n * if there is a cell state in the given event.\n */\nmxConnectionHandler.prototype.isStopEvent = function(me)\n{\n\treturn me.getState() != null;\n};\n\n/**\n * Function: addWaypoint\n * \n * Adds the waypoint for the given event to <waypoints>.\n */\nmxConnectionHandler.prototype.addWaypointForEvent = function(me)\n{\n\tvar point = mxUtils.convertPoint(this.graph.container, me.getX(), me.getY());\n\tvar dx = Math.abs(point.x - this.first.x);\n\tvar dy = Math.abs(point.y - this.first.y);\n\tvar addPoint = this.waypoints != null || (this.mouseDownCounter > 1 &&\n\t\t\t(dx > this.graph.tolerance || dy > this.graph.tolerance));\n\n\tif (addPoint)\n\t{\n\t\tif (this.waypoints == null)\n\t\t{\n\t\t\tthis.waypoints = [];\n\t\t}\n\t\t\n\t\tvar scale = this.graph.view.scale;\n\t\tvar point = new mxPoint(this.graph.snap(me.getGraphX() / scale) * scale,\n\t\t\t\tthis.graph.snap(me.getGraphY() / scale) * scale);\n\t\tthis.waypoints.push(point);\n\t}\n};\n\n/**\n * Function: checkConstraints\n * \n * Returns true if the connection for the given constraints is valid. This\n * implementation returns true if the constraints are not pointing to the\n * same fixed connection point.\n */\nmxConnectionHandler.prototype.checkConstraints = function(c1, c2)\n{\n\treturn (c1 == null || c2 == null || c1.point == null || c2.point == null ||\n\t\t!c1.point.equals(c2.point) || c1.dx != c2.dx || c1.dy != c2.dy ||\n\t\tc1.perimeter != c2.perimeter);\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by inserting the new connection.\n */\nmxConnectionHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (!me.isConsumed() && this.isConnecting())\n\t{\n\t\tif (this.waypointsEnabled && !this.isStopEvent(me))\n\t\t{\n\t\t\tthis.addWaypointForEvent(me);\n\t\t\tme.consume();\n\t\t\t\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar c1 = this.sourceConstraint;\n\t\tvar c2 = this.constraintHandler.currentConstraint;\n\n\t\tvar source = (this.previous != null) ? this.previous.cell : null;\n\t\tvar target = null;\n\t\t\n\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t{\n\t\t\ttarget = this.constraintHandler.currentFocus.cell;\n\t\t}\n\t\t\n\t\tif (target == null && this.currentState != null)\n\t\t{\n\t\t\ttarget = this.currentState.cell;\n\t\t}\n\t\t\n\t\t// Inserts the edge if no validation error exists and if constraints differ\n\t\tif (this.error == null && (source == null || target == null ||\n\t\t\tsource != target || this.checkConstraints(c1, c2)))\n\t\t{\n\t\t\tthis.connect(source, target, me.getEvent(), me.getCell());\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Selects the source terminal for self-references\n\t\t\tif (this.previous != null && this.marker.validState != null &&\n\t\t\t\tthis.previous.cell == this.marker.validState.cell)\n\t\t\t{\n\t\t\t\tthis.graph.selectCellForEvent(this.marker.source, me.getEvent());\n\t\t\t}\n\t\t\t\n\t\t\t// Displays the error message if it is not an empty string,\n\t\t\t// for empty error messages, the event is silently dropped\n\t\t\tif (this.error != null && this.error.length > 0)\n\t\t\t{\n\t\t\t\tthis.graph.validationAlert(this.error);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Redraws the connect icons and resets the handler state\n\t\tthis.destroyIcons();\n\t\tme.consume();\n\t}\n\n\tif (this.first != null)\n\t{\n\t\tthis.reset();\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxConnectionHandler.prototype.reset = function()\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\t// Resets the cursor on the container\n\tif (this.cursor != null && this.graph.container != null)\n\t{\n\t\tthis.graph.container.style.cursor = '';\n\t}\n\t\n\tthis.destroyIcons();\n\tthis.marker.reset();\n\tthis.constraintHandler.reset();\n\tthis.originalPoint = null;\n\tthis.currentPoint = null;\n\tthis.edgeState = null;\n\tthis.previous = null;\n\tthis.error = null;\n\tthis.sourceConstraint = null;\n\tthis.mouseDownCounter = 0;\n\tthis.first = null;\n\n\tthis.fireEvent(new mxEventObject(mxEvent.RESET));\n};\n\n/**\n * Function: drawPreview\n * \n * Redraws the preview edge using the color and width returned by\n * <getEdgeColor> and <getEdgeWidth>.\n */\nmxConnectionHandler.prototype.drawPreview = function()\n{\n\tthis.updatePreview(this.error == null);\n\tthis.shape.redraw();\n};\n\n/**\n * Function: getEdgeColor\n * \n * Returns the color used to draw the preview edge. This returns green if\n * there is no edge validation error and red otherwise.\n * \n * Parameters:\n * \n * valid - Boolean indicating if the color for a valid edge should be\n * returned.\n */\nmxConnectionHandler.prototype.updatePreview = function(valid)\n{\n\tthis.shape.strokewidth = this.getEdgeWidth(valid);\n\tthis.shape.stroke = this.getEdgeColor(valid);\n};\n\n/**\n * Function: getEdgeColor\n * \n * Returns the color used to draw the preview edge. This returns green if\n * there is no edge validation error and red otherwise.\n * \n * Parameters:\n * \n * valid - Boolean indicating if the color for a valid edge should be\n * returned.\n */\nmxConnectionHandler.prototype.getEdgeColor = function(valid)\n{\n\treturn (valid) ? mxConstants.VALID_COLOR : mxConstants.INVALID_COLOR;\n};\n\t\n/**\n * Function: getEdgeWidth\n * \n * Returns the width used to draw the preview edge. This returns 3 if\n * there is no edge validation error and 1 otherwise.\n * \n * Parameters:\n * \n * valid - Boolean indicating if the width for a valid edge should be\n * returned.\n */\nmxConnectionHandler.prototype.getEdgeWidth = function(valid)\n{\n\treturn (valid) ? 3 : 1;\n};\n\n/**\n * Function: connect\n * \n * Connects the given source and target using a new edge. This\n * implementation uses <createEdge> to create the edge.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * evt - Mousedown event of the connect gesture.\n * dropTarget - <mxCell> that represents the cell under the mouse when it was\n * released.\n */\nmxConnectionHandler.prototype.connect = function(source, target, evt, dropTarget)\n{\n\tif (target != null || this.isCreateTarget(evt) || this.graph.allowDanglingEdges)\n\t{\n\t\t// Uses the common parent of source and target or\n\t\t// the default parent to insert the edge\n\t\tvar model = this.graph.getModel();\n\t\tvar terminalInserted = false;\n\t\tvar edge = null;\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (source != null && target == null && !this.graph.isIgnoreTerminalEvent(evt) && this.isCreateTarget(evt))\n\t\t\t{\n\t\t\t\ttarget = this.createTargetVertex(evt, source);\n\t\t\t\t\n\t\t\t\tif (target != null)\n\t\t\t\t{\n\t\t\t\t\tdropTarget = this.graph.getDropTarget([target], evt, dropTarget);\n\t\t\t\t\tterminalInserted = true;\n\t\t\t\t\t\n\t\t\t\t\t// Disables edges as drop targets if the target cell was created\n\t\t\t\t\t// FIXME: Should not shift if vertex was aligned (same in Java)\n\t\t\t\t\tif (dropTarget == null || !this.graph.getModel().isEdge(dropTarget))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar pstate = this.graph.getView().getState(dropTarget);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (pstate != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar tmp = model.getGeometry(target);\n\t\t\t\t\t\t\ttmp.x -= pstate.origin.x;\n\t\t\t\t\t\t\ttmp.y -= pstate.origin.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tdropTarget = this.graph.getDefaultParent();\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tthis.graph.addCell(target, dropTarget);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar parent = this.graph.getDefaultParent();\n\n\t\t\tif (source != null && target != null &&\n\t\t\t\tmodel.getParent(source) == model.getParent(target) &&\n\t\t\t\tmodel.getParent(model.getParent(source)) != model.getRoot())\n\t\t\t{\n\t\t\t\tparent = model.getParent(source);\n\n\t\t\t\tif ((source.geometry != null && source.geometry.relative) &&\n\t\t\t\t\t(target.geometry != null && target.geometry.relative))\n\t\t\t\t{\n\t\t\t\t\tparent = model.getParent(parent);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Uses the value of the preview edge state for inserting\n\t\t\t// the new edge into the graph\n\t\t\tvar value = null;\n\t\t\tvar style = null;\n\t\t\t\n\t\t\tif (this.edgeState != null)\n\t\t\t{\n\t\t\t\tvalue = this.edgeState.cell.value;\n\t\t\t\tstyle = this.edgeState.cell.style;\n\t\t\t}\n\n\t\t\tedge = this.insertEdge(parent, null, value, source, target, style);\n\t\t\t\n\t\t\tif (edge != null)\n\t\t\t{\n\t\t\t\t// Updates the connection constraints\n\t\t\t\tthis.graph.setConnectionConstraint(edge, source, true, this.sourceConstraint);\n\t\t\t\tthis.graph.setConnectionConstraint(edge, target, false, this.constraintHandler.currentConstraint);\n\t\t\t\t\n\t\t\t\t// Uses geometry of the preview edge state\n\t\t\t\tif (this.edgeState != null)\n\t\t\t\t{\n\t\t\t\t\tmodel.setGeometry(edge, this.edgeState.cell.geometry);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar parent = model.getParent(source);\n\t\t\t\t\n\t\t\t\t// Inserts edge before source\n\t\t\t\tif (this.isInsertBefore(edge, source, target, evt, dropTarget))\n\t\t\t\t{\n\t\t\t\t\tvar index = null;\n\t\t\t\t\tvar tmp = source;\n\n\t\t\t\t\twhile (tmp.parent != null && tmp.geometry != null &&\n\t\t\t\t\t\ttmp.geometry.relative && tmp.parent != edge.parent)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp = this.graph.model.getParent(tmp);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tmp != null && tmp.parent != null && tmp.parent == edge.parent)\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel.add(parent, edge, tmp.parent.getIndex(tmp));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Makes sure the edge has a non-null, relative geometry\n\t\t\t\tvar geo = model.getGeometry(edge);\n\n\t\t\t\tif (geo == null)\n\t\t\t\t{\n\t\t\t\t\tgeo = new mxGeometry();\n\t\t\t\t\tgeo.relative = true;\n\t\t\t\t\t\n\t\t\t\t\tmodel.setGeometry(edge, geo);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Uses scaled waypoints in geometry\n\t\t\t\tif (this.waypoints != null && this.waypoints.length > 0)\n\t\t\t\t{\n\t\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\t\tvar tr = this.graph.view.translate;\n\t\t\t\t\tgeo.points = [];\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = 0; i < this.waypoints.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar pt = this.waypoints[i];\n\t\t\t\t\t\tgeo.points.push(new mxPoint(pt.x / s - tr.x, pt.y / s - tr.y));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (target == null)\n\t\t\t\t{\n\t\t\t\t\tvar t = this.graph.view.translate;\n\t\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\t\tvar pt = (this.originalPoint != null) ?\n\t\t\t\t\t\t\tnew mxPoint(this.originalPoint.x / s - t.x, this.originalPoint.y / s - t.y) :\n\t\t\t\t\t\tnew mxPoint(this.currentPoint.x / s - t.x, this.currentPoint.y / s - t.y);\n\t\t\t\t\tpt.x -= this.graph.panDx / this.graph.view.scale;\n\t\t\t\t\tpt.y -= this.graph.panDy / this.graph.view.scale;\n\t\t\t\t\tgeo.setTerminalPoint(pt, false);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CONNECT, 'cell', edge, 'terminal', target,\n\t\t\t\t\t'event', evt, 'target', dropTarget, 'terminalInserted', terminalInserted));\n\t\t\t}\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tmxLog.show();\n\t\t\tmxLog.debug(e.message);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t\t\n\t\tif (this.select)\n\t\t{\n\t\t\tthis.selectCells(edge, (terminalInserted) ? target : null);\n\t\t}\n\t}\n};\n\n/**\n * Function: selectCells\n * \n * Selects the given edge after adding a new connection. The target argument\n * contains the target vertex if one has been inserted.\n */\nmxConnectionHandler.prototype.selectCells = function(edge, target)\n{\n\tthis.graph.setSelectionCell(edge);\n};\n\n/**\n * Function: insertEdge\n * \n * Creates, inserts and returns the new edge for the given parameters. This\n * implementation does only use <createEdge> if <factoryMethod> is defined,\n * otherwise <mxGraph.insertEdge> will be used.\n */\nmxConnectionHandler.prototype.insertEdge = function(parent, id, value, source, target, style)\n{\n\tif (this.factoryMethod == null)\n\t{\n\t\treturn this.graph.insertEdge(parent, id, value, source, target, style);\n\t}\n\telse\n\t{\n\t\tvar edge = this.createEdge(value, source, target, style);\n\t\tedge = this.graph.addEdge(edge, parent, source, target);\n\t\t\n\t\treturn edge;\n\t}\n};\n\n/**\n * Function: createTargetVertex\n * \n * Hook method for creating new vertices on the fly if no target was\n * under the mouse. This is only called if <createTarget> is true and\n * returns null.\n * \n * Parameters:\n * \n * evt - Mousedown event of the connect gesture.\n * source - <mxCell> that represents the source terminal.\n */\nmxConnectionHandler.prototype.createTargetVertex = function(evt, source)\n{\n\t// Uses the first non-relative source\n\tvar geo = this.graph.getCellGeometry(source);\n\t\n\twhile (geo != null && geo.relative)\n\t{\n\t\tsource = this.graph.getModel().getParent(source);\n\t\tgeo = this.graph.getCellGeometry(source);\n\t}\n\t\n\tvar clone = this.graph.cloneCell(source);\n\tvar geo = this.graph.getModel().getGeometry(clone);\n\t\n\tif (geo != null)\n\t{\n\t\tvar t = this.graph.view.translate;\n\t\tvar s = this.graph.view.scale;\n\t\tvar point = new mxPoint(this.currentPoint.x / s - t.x, this.currentPoint.y / s - t.y);\n\t\tgeo.x = Math.round(point.x - geo.width / 2 - this.graph.panDx / s);\n\t\tgeo.y = Math.round(point.y - geo.height / 2 - this.graph.panDy / s);\n\n\t\t// Aligns with source if within certain tolerance\n\t\tvar tol = this.getAlignmentTolerance();\n\t\t\n\t\tif (tol > 0)\n\t\t{\n\t\t\tvar sourceState = this.graph.view.getState(source);\n\t\t\t\n\t\t\tif (sourceState != null)\n\t\t\t{\n\t\t\t\tvar x = sourceState.x / s - t.x;\n\t\t\t\tvar y = sourceState.y / s - t.y;\n\t\t\t\t\n\t\t\t\tif (Math.abs(x - geo.x) <= tol)\n\t\t\t\t{\n\t\t\t\t\tgeo.x = Math.round(x);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(y - geo.y) <= tol)\n\t\t\t\t{\n\t\t\t\t\tgeo.y = Math.round(y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn clone;\t\t\n};\n\n/**\n * Function: getAlignmentTolerance\n * \n * Returns the tolerance for aligning new targets to sources. This returns the grid size / 2.\n */\nmxConnectionHandler.prototype.getAlignmentTolerance = function(evt)\n{\n\treturn (this.graph.isGridEnabled()) ? this.graph.gridSize / 2 : this.graph.tolerance;\n};\n\n/**\n * Function: createEdge\n * \n * Creates and returns a new edge using <factoryMethod> if one exists. If\n * no factory method is defined, then a new default edge is returned. The\n * source and target arguments are informal, the actual connection is\n * setup later by the caller of this function.\n * \n * Parameters:\n * \n * value - Value to be used for creating the edge.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * style - Optional style from the preview edge.\n */\nmxConnectionHandler.prototype.createEdge = function(value, source, target, style)\n{\n\tvar edge = null;\n\t\n\t// Creates a new edge using the factoryMethod\n\tif (this.factoryMethod != null)\n\t{\n\t\tedge = this.factoryMethod(source, target, style);\n\t}\n\t\n\tif (edge == null)\n\t{\n\t\tedge = new mxCell(value || '');\n\t\tedge.setEdge(true);\n\t\tedge.setStyle(style);\n\t\t\n\t\tvar geo = new mxGeometry();\n\t\tgeo.relative = true;\n\t\tedge.setGeometry(geo);\n\t}\n\n\treturn edge;\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes. This should be\n * called on all instances. It is called automatically for the built-in\n * instance created for each <mxGraph>.\n */\nmxConnectionHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\tif (this.marker != null)\n\t{\n\t\tthis.marker.destroy();\n\t\tthis.marker = null;\n\t}\n\n\tif (this.constraintHandler != null)\n\t{\n\t\tthis.constraintHandler.destroy();\n\t\tthis.constraintHandler = null;\n\t}\n\n\tif (this.changeHandler != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.changeHandler);\n\t\tthis.graph.getView().removeListener(this.changeHandler);\n\t\tthis.changeHandler = null;\n\t}\n\t\n\tif (this.drillHandler != null)\n\t{\n\t\tthis.graph.removeListener(this.drillHandler);\n\t\tthis.graph.getView().removeListener(this.drillHandler);\n\t\tthis.drillHandler = null;\n\t}\n\t\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n};\n\n__mxOutput.mxConnectionHandler = typeof mxConnectionHandler !== 'undefined' ? mxConnectionHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxConstraintHandler\n *\n * Handles constraints on connection targets. This class is in charge of\n * showing fixed points when the mouse is over a vertex and handles constraints\n * to establish new connections.\n *\n * Constructor: mxConstraintHandler\n *\n * Constructs an new constraint handler.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * factoryMethod - Optional function to create the edge. The function takes\n * the source and target <mxCell> as the first and second argument and\n * returns the <mxCell> that represents the new edge.\n */\nfunction mxConstraintHandler(graph)\n{\n\tthis.graph = graph;\n\t\n\t// Adds a graph model listener to update the current focus on changes\n\tthis.resetHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.currentFocus != null && this.graph.view.getState(this.currentFocus.cell) == null)\n\t\t{\n\t\t\tthis.reset();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.redraw();\n\t\t}\n\t});\n\t\n\tthis.graph.model.addListener(mxEvent.CHANGE, this.resetHandler);\n\tthis.graph.view.addListener(mxEvent.SCALE_AND_TRANSLATE, this.resetHandler);\n\tthis.graph.view.addListener(mxEvent.TRANSLATE, this.resetHandler);\n\tthis.graph.view.addListener(mxEvent.SCALE, this.resetHandler);\n\tthis.graph.addListener(mxEvent.ROOT, this.resetHandler);\n};\n\n/**\n * Variable: pointImage\n * \n * <mxImage> to be used as the image for fixed connection points.\n */\nmxConstraintHandler.prototype.pointImage = new mxImage(mxClient.imageBasePath + '/point.gif', 5, 5);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxConstraintHandler.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxConstraintHandler.prototype.enabled = true;\n\n/**\n * Variable: highlightColor\n * \n * Specifies the color for the highlight. Default is <mxConstants.DEFAULT_VALID_COLOR>.\n */\nmxConstraintHandler.prototype.highlightColor = mxConstants.DEFAULT_VALID_COLOR;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxConstraintHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxConstraintHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxConstraintHandler.prototype.reset = function()\n{\n\tif (this.focusIcons != null)\n\t{\n\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t{\n\t\t\tthis.focusIcons[i].destroy();\n\t\t}\n\t\t\n\t\tthis.focusIcons = null;\n\t}\n\t\n\tif (this.focusHighlight != null)\n\t{\n\t\tthis.focusHighlight.destroy();\n\t\tthis.focusHighlight = null;\n\t}\n\t\n\tthis.currentConstraint = null;\n\tthis.currentFocusArea = null;\n\tthis.currentPoint = null;\n\tthis.currentFocus = null;\n\tthis.focusPoints = null;\n};\n\n/**\n * Function: getTolerance\n * \n * Returns the tolerance to be used for intersecting connection points. This\n * implementation returns <mxGraph.tolerance>.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> whose tolerance should be returned.\n */\nmxConstraintHandler.prototype.getTolerance = function(me)\n{\n\treturn this.graph.getTolerance();\n};\n\n/**\n * Function: getImageForConstraint\n * \n * Returns the tolerance to be used for intersecting connection points.\n */\nmxConstraintHandler.prototype.getImageForConstraint = function(state, constraint, point)\n{\n\treturn this.pointImage;\n};\n\n/**\n * Function: isEventIgnored\n * \n * Returns true if the given <mxMouseEvent> should be ignored in <update>. This\n * implementation always returns false.\n */\nmxConstraintHandler.prototype.isEventIgnored = function(me, source)\n{\n\treturn false;\n};\n\n/**\n * Function: isStateIgnored\n * \n * Returns true if the given state should be ignored. This always returns false.\n */\nmxConstraintHandler.prototype.isStateIgnored = function(state, source)\n{\n\treturn false;\n};\n\n/**\n * Function: destroyIcons\n * \n * Destroys the <focusIcons> if they exist.\n */\nmxConstraintHandler.prototype.destroyIcons = function()\n{\n\tif (this.focusIcons != null)\n\t{\n\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t{\n\t\t\tthis.focusIcons[i].destroy();\n\t\t}\n\t\t\n\t\tthis.focusIcons = null;\n\t\tthis.focusPoints = null;\n\t}\n};\n\n/**\n * Function: destroyFocusHighlight\n * \n * Destroys the <focusHighlight> if one exists.\n */\nmxConstraintHandler.prototype.destroyFocusHighlight = function()\n{\n\tif (this.focusHighlight != null)\n\t{\n\t\tthis.focusHighlight.destroy();\n\t\tthis.focusHighlight = null;\n\t}\n};\n\n/**\n * Function: isKeepFocusEvent\n * \n * Returns true if the current focused state should not be changed for the given event.\n * This returns true if shift and alt are pressed.\n */\nmxConstraintHandler.prototype.isKeepFocusEvent = function(me)\n{\n\treturn mxEvent.isShiftDown(me.getEvent());\n};\n\n/**\n * Function: getCellForEvent\n * \n * Returns the cell for the given event.\n */\nmxConstraintHandler.prototype.getCellForEvent = function(me, point)\n{\n\tvar cell = me.getCell();\n\t\n\t// Gets cell under actual point if different from event location\n\tif (cell == null && point != null && (me.getGraphX() != point.x || me.getGraphY() != point.y))\n\t{\n\t\tcell = this.graph.getCellAt(point.x, point.y);\n\t}\n\t\n\t// Uses connectable parent vertex if one exists\n\tif (cell != null && !this.graph.isCellConnectable(cell))\n\t{\n\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\t\n\t\tif (this.graph.getModel().isVertex(parent) && this.graph.isCellConnectable(parent))\n\t\t{\n\t\t\tcell = parent;\n\t\t}\n\t}\n\t\n\treturn (this.graph.isCellLocked(cell)) ? null : cell;\n};\n\n/**\n * Function: update\n * \n * Updates the state of this handler based on the given <mxMouseEvent>.\n * Source is a boolean indicating if the cell is a source or target.\n */\nmxConstraintHandler.prototype.update = function(me, source, existingEdge, point)\n{\n\tif (this.isEnabled() && !this.isEventIgnored(me))\n\t{\n\t\t// Lazy installation of mouseleave handler\n\t\tif (this.mouseleaveHandler == null && this.graph.container != null)\n\t\t{\n\t\t\tthis.mouseleaveHandler = mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.reset();\n\t\t\t});\n\n\t\t\tmxEvent.addListener(this.graph.container, 'mouseleave', this.resetHandler);\t\n\t\t}\n\t\t\n\t\tvar tol = this.getTolerance(me);\n\t\tvar x = (point != null) ? point.x : me.getGraphX();\n\t\tvar y = (point != null) ? point.y : me.getGraphY();\n\t\tvar grid = new mxRectangle(x - tol, y - tol, 2 * tol, 2 * tol);\n\t\tvar mouse = new mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol);\n\t\tvar state = this.graph.view.getState(this.getCellForEvent(me, point));\n\n\t\t// Keeps focus icons visible while over vertex bounds and no other cell under mouse or shift is pressed\n\t\tif (!this.isKeepFocusEvent(me) && (this.currentFocusArea == null || this.currentFocus == null ||\n\t\t\t(state != null) || !this.graph.getModel().isVertex(this.currentFocus.cell) ||\n\t\t\t!mxUtils.intersects(this.currentFocusArea, mouse)) && (state != this.currentFocus))\n\t\t{\n\t\t\tthis.currentFocusArea = null;\n\t\t\tthis.currentFocus = null;\n\t\t\tthis.setFocus(me, state, source);\n\t\t}\n\n\t\tthis.currentConstraint = null;\n\t\tthis.currentPoint = null;\n\t\tvar minDistSq = null;\n\t\t\n\t\tif (this.focusIcons != null && this.constraints != null &&\n\t\t\t(state == null || this.currentFocus == state))\n\t\t{\n\t\t\tvar cx = mouse.getCenterX();\n\t\t\tvar cy = mouse.getCenterY();\n\t\t\t\n\t\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t\t{\n\t\t\t\tvar dx = cx - this.focusIcons[i].bounds.getCenterX();\n\t\t\t\tvar dy = cy - this.focusIcons[i].bounds.getCenterY();\n\t\t\t\tvar tmp = dx * dx + dy * dy;\n\t\t\t\t\n\t\t\t\tif ((this.intersects(this.focusIcons[i], mouse, source, existingEdge) || (point != null &&\n\t\t\t\t\tthis.intersects(this.focusIcons[i], grid, source, existingEdge))) &&\n\t\t\t\t\t(minDistSq == null || tmp < minDistSq))\n\t\t\t\t{\n\t\t\t\t\tthis.currentConstraint = this.constraints[i];\n\t\t\t\t\tthis.currentPoint = this.focusPoints[i];\n\t\t\t\t\tminDistSq = tmp;\n\t\t\t\t\t\n\t\t\t\t\tvar tmp = this.focusIcons[i].bounds.clone();\n\t\t\t\t\ttmp.grow(mxConstants.HIGHLIGHT_SIZE + 1);\n\t\t\t\t\ttmp.width -= 1;\n\t\t\t\t\ttmp.height -= 1;\n\t\t\t\t\t\n\t\t\t\t\tif (this.focusHighlight == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar hl = this.createHighlightShape();\n\t\t\t\t\t\thl.dialect = (this.graph.dialect == mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\t\t\tmxConstants.DIALECT_SVG : mxConstants.DIALECT_VML;\n\t\t\t\t\t\thl.pointerEvents = false;\n\n\t\t\t\t\t\thl.init(this.graph.getView().getOverlayPane());\n\t\t\t\t\t\tthis.focusHighlight = hl;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar getState = mxUtils.bind(this, function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn (this.currentFocus != null) ? this.currentFocus : state;\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\tmxEvent.redirectMouseEvents(hl.node, this.graph, getState);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.focusHighlight.bounds = tmp;\n\t\t\t\t\tthis.focusHighlight.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.currentConstraint == null)\n\t\t{\n\t\t\tthis.destroyFocusHighlight();\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.currentConstraint = null;\n\t\tthis.currentFocus = null;\n\t\tthis.currentPoint = null;\n\t}\n};\n\n/**\n * Function: redraw\n * \n * Transfers the focus to the given state as a source or target terminal. If\n * the handler is not enabled then the outline is painted, but the constraints\n * are ignored.\n */\nmxConstraintHandler.prototype.redraw = function()\n{\n\tif (this.currentFocus != null && this.constraints != null && this.focusIcons != null)\n\t{\n\t\tvar state = this.graph.view.getState(this.currentFocus.cell);\n\t\tthis.currentFocus = state;\n\t\tthis.currentFocusArea = new mxRectangle(state.x, state.y, state.width, state.height);\n\t\t\n\t\tfor (var i = 0; i < this.constraints.length; i++)\n\t\t{\n\t\t\tvar cp = this.graph.getConnectionPoint(state, this.constraints[i]);\n\t\t\tvar img = this.getImageForConstraint(state, this.constraints[i], cp);\n\n\t\t\tvar bounds = new mxRectangle(Math.round(cp.x - img.width / 2),\n\t\t\t\tMath.round(cp.y - img.height / 2), img.width, img.height);\n\t\t\tthis.focusIcons[i].bounds = bounds;\n\t\t\tthis.focusIcons[i].redraw();\n\t\t\tthis.currentFocusArea.add(this.focusIcons[i].bounds);\n\t\t\tthis.focusPoints[i] = cp;\n\t\t}\n\t}\t\n};\n\n/**\n * Function: setFocus\n * \n * Transfers the focus to the given state as a source or target terminal. If\n * the handler is not enabled then the outline is painted, but the constraints\n * are ignored.\n */\nmxConstraintHandler.prototype.setFocus = function(me, state, source)\n{\n\tthis.constraints = (state != null && !this.isStateIgnored(state, source) &&\n\t\tthis.graph.isCellConnectable(state.cell)) ? ((this.isEnabled()) ?\n\t\t(this.graph.getAllConnectionConstraints(state, source) || []) : []) : null;\n\n\t// Only uses cells which have constraints\n\tif (this.constraints != null)\n\t{\n\t\tthis.currentFocus = state;\n\t\tthis.currentFocusArea = new mxRectangle(state.x, state.y, state.width, state.height);\n\t\t\n\t\tif (this.focusIcons != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t\t{\n\t\t\t\tthis.focusIcons[i].destroy();\n\t\t\t}\n\t\t\t\n\t\t\tthis.focusIcons = null;\n\t\t\tthis.focusPoints = null;\n\t\t}\n\t\t\n\t\tthis.focusPoints = [];\n\t\tthis.focusIcons = [];\n\t\t\n\t\tfor (var i = 0; i < this.constraints.length; i++)\n\t\t{\n\t\t\tvar cp = this.graph.getConnectionPoint(state, this.constraints[i]);\n\t\t\tvar img = this.getImageForConstraint(state, this.constraints[i], cp);\n\n\t\t\tvar src = img.src;\n\t\t\tvar bounds = new mxRectangle(Math.round(cp.x - img.width / 2),\n\t\t\t\tMath.round(cp.y - img.height / 2), img.width, img.height);\n\t\t\tvar icon = new mxImageShape(bounds, src);\n\t\t\ticon.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\t\ticon.preserveImageAspect = false;\n\t\t\ticon.init(this.graph.getView().getDecoratorPane());\n\t\t\t\n\t\t\t// Fixes lost event tracking for images in quirks / IE8 standards\n\t\t\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(icon.node, 'dragstart', function(evt)\n\t\t\t\t{\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t// Move the icon behind all other overlays\n\t\t\tif (icon.node.previousSibling != null)\n\t\t\t{\n\t\t\t\ticon.node.parentNode.insertBefore(icon.node, icon.node.parentNode.firstChild);\n\t\t\t}\n\n\t\t\tvar getState = mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\treturn (this.currentFocus != null) ? this.currentFocus : state;\n\t\t\t});\n\t\t\t\n\t\t\ticon.redraw();\n\n\t\t\tmxEvent.redirectMouseEvents(icon.node, this.graph, getState);\n\t\t\tthis.currentFocusArea.add(icon.bounds);\n\t\t\tthis.focusIcons.push(icon);\n\t\t\tthis.focusPoints.push(cp);\n\t\t}\n\t\t\n\t\tthis.currentFocusArea.grow(this.getTolerance(me));\n\t}\n\telse\n\t{\n\t\tthis.destroyIcons();\n\t\tthis.destroyFocusHighlight();\n\t}\n};\n\n/**\n * Function: createHighlightShape\n * \n * Create the shape used to paint the highlight.\n * \n * Returns true if the given icon intersects the given point.\n */\nmxConstraintHandler.prototype.createHighlightShape = function()\n{\n\tvar hl = new mxRectangleShape(null, this.highlightColor, this.highlightColor, mxConstants.HIGHLIGHT_STROKEWIDTH);\n\thl.opacity = mxConstants.HIGHLIGHT_OPACITY;\n\t\n\treturn hl;\n};\n\n/**\n * Function: intersects\n * \n * Returns true if the given icon intersects the given rectangle.\n */\nmxConstraintHandler.prototype.intersects = function(icon, mouse, source, existingEdge)\n{\n\treturn mxUtils.intersects(icon.bounds, mouse);\n};\n\n/**\n * Function: destroy\n * \n * Destroy this handler.\n */\nmxConstraintHandler.prototype.destroy = function()\n{\n\tthis.reset();\n\t\n\tif (this.resetHandler != null)\n\t{\n\t\tthis.graph.model.removeListener(this.resetHandler);\n\t\tthis.graph.view.removeListener(this.resetHandler);\n\t\tthis.graph.removeListener(this.resetHandler);\n\t\tthis.resetHandler = null;\n\t}\n\t\n\tif (this.mouseleaveHandler != null && this.graph.container != null)\n\t{\n\t\tmxEvent.removeListener(this.graph.container, 'mouseleave', this.mouseleaveHandler);\n\t\tthis.mouseleaveHandler = null;\n\t}\n};\n\n__mxOutput.mxConstraintHandler = typeof mxConstraintHandler !== 'undefined' ? mxConstraintHandler : undefined;\n\n/**\n * Copyright (c) 2006-2016, JGraph Ltd\n * Copyright (c) 2006-2016, Gaudenz Alder\n */\n/**\n * Class: mxRubberband\n * \n * Event handler that selects rectangular regions. This is not built-into\n * <mxGraph>. To enable rubberband selection in a graph, use the following code.\n * \n * Example:\n * \n * (code)\n * var rubberband = new mxRubberband(graph);\n * (end)\n * \n * Constructor: mxRubberband\n * \n * Constructs an event handler that selects rectangular regions in the graph\n * using rubberband selection.\n */\nfunction mxRubberband(graph)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.graph.addMouseListener(this);\n\n\t\t// Handles force rubberband event\n\t\tthis.forceRubberbandHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar evtName = evt.getProperty('eventName');\n\t\t\tvar me = evt.getProperty('event');\n\t\t\t\n\t\t\tif (evtName == mxEvent.MOUSE_DOWN && this.isForceRubberbandEvent(me))\n\t\t\t{\n\t\t\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\t\t\tvar origin = mxUtils.getScrollOrigin(this.graph.container);\n\t\t\t\torigin.x -= offset.x;\n\t\t\t\torigin.y -= offset.y;\n\t\t\t\tthis.start(me.getX() + origin.x, me.getY() + origin.y);\n\t\t\t\tme.consume(false);\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.FIRE_MOUSE_EVENT, this.forceRubberbandHandler);\n\t\t\n\t\t// Repaints the marquee after autoscroll\n\t\tthis.panHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.repaint();\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.PAN, this.panHandler);\n\t\t\n\t\t// Does not show menu if any touch gestures take place after the trigger\n\t\tthis.gestureHandler = mxUtils.bind(this, function(sender, eo)\n\t\t{\n\t\t\tif (this.first != null)\n\t\t\t{\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.GESTURE, this.gestureHandler);\n\t\t\n\t\t// Automatic deallocation of memory\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tmxEvent.addListener(window, 'unload',\n\t\t\t\tmxUtils.bind(this, function()\n\t\t\t\t{\n\t\t\t\t\tthis.destroy();\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n};\n\n/**\n * Variable: defaultOpacity\n * \n * Specifies the default opacity to be used for the rubberband div. Default\n * is 20.\n */\nmxRubberband.prototype.defaultOpacity = 20;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxRubberband.prototype.enabled = true;\n\n/**\n * Variable: div\n * \n * Holds the DIV element which is currently visible.\n */\nmxRubberband.prototype.div = null;\n\n/**\n * Variable: sharedDiv\n * \n * Holds the DIV element which is used to display the rubberband.\n */\nmxRubberband.prototype.sharedDiv = null;\n\n/**\n * Variable: currentX\n * \n * Holds the value of the x argument in the last call to <update>.\n */\nmxRubberband.prototype.currentX = 0;\n\n/**\n * Variable: currentY\n * \n * Holds the value of the y argument in the last call to <update>.\n */\nmxRubberband.prototype.currentY = 0;\n\n/**\n * Variable: fadeOut\n * \n * Optional fade out effect. Default is false.\n */\nmxRubberband.prototype.fadeOut = false;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation returns\n * <enabled>.\n */\nmxRubberband.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation updates\n * <enabled>.\n */\nmxRubberband.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isForceRubberbandEvent\n * \n * Returns true if the given <mxMouseEvent> should start rubberband selection.\n * This implementation returns true if the alt key is pressed.\n */\nmxRubberband.prototype.isForceRubberbandEvent = function(me)\n{\n\treturn mxEvent.isAltDown(me.getEvent());\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating a rubberband selection. By consuming the\n * event all subsequent events of the gesture are redirected to this\n * handler.\n */\nmxRubberband.prototype.mouseDown = function(sender, me)\n{\n\tif (!me.isConsumed() && this.isEnabled() && this.graph.isEnabled() &&\n\t\tme.getState() == null && !mxEvent.isMultiTouchEvent(me.getEvent()))\n\t{\n\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\tvar origin = mxUtils.getScrollOrigin(this.graph.container);\n\t\torigin.x -= offset.x;\n\t\torigin.y -= offset.y;\n\t\tthis.start(me.getX() + origin.x, me.getY() + origin.y);\n\n\t\t// Does not prevent the default for this event so that the\n\t\t// event processing chain is still executed even if we start\n\t\t// rubberbanding. This is required eg. in ExtJs to hide the\n\t\t// current context menu. In mouseMove we'll make sure we're\n\t\t// not selecting anything while we're rubberbanding.\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: start\n * \n * Sets the start point for the rubberband selection.\n */\nmxRubberband.prototype.start = function(x, y)\n{\n\tthis.first = new mxPoint(x, y);\n\n\tvar container = this.graph.container;\n\t\n\tfunction createMouseEvent(evt)\n\t{\n\t\tvar me = new mxMouseEvent(evt);\n\t\tvar pt = mxUtils.convertPoint(container, me.getX(), me.getY());\n\t\t\n\t\tme.graphX = pt.x;\n\t\tme.graphY = pt.y;\n\t\t\n\t\treturn me;\n\t};\n\n\tthis.dragHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.mouseMove(this.graph, createMouseEvent(evt));\n\t});\n\n\tthis.dropHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.mouseUp(this.graph, createMouseEvent(evt));\n\t});\n\n\t// Workaround for rubberband stopping if the mouse leaves the container in Firefox\n\tif (mxClient.IS_FF)\n\t{\n\t\tmxEvent.addGestureListeners(document, null, this.dragHandler, this.dropHandler);\n\t}\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating therubberband selection.\n */\nmxRubberband.prototype.mouseMove = function(sender, me)\n{\n\tif (!me.isConsumed() && this.first != null)\n\t{\n\t\tvar origin = mxUtils.getScrollOrigin(this.graph.container);\n\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\torigin.x -= offset.x;\n\t\torigin.y -= offset.y;\n\t\tvar x = me.getX() + origin.x;\n\t\tvar y = me.getY() + origin.y;\n\t\tvar dx = this.first.x - x;\n\t\tvar dy = this.first.y - y;\n\t\tvar tol = this.graph.tolerance;\n\t\t\n\t\tif (this.div != null || Math.abs(dx) > tol ||  Math.abs(dy) > tol)\n\t\t{\n\t\t\tif (this.div == null)\n\t\t\t{\n\t\t\t\tthis.div = this.createShape();\n\t\t\t}\n\t\t\t\n\t\t\t// Clears selection while rubberbanding. This is required because\n\t\t\t// the event is not consumed in mouseDown.\n\t\t\tmxUtils.clearSelection();\n\t\t\t\n\t\t\tthis.update(x, y);\n\t\t\tme.consume();\n\t\t}\n\t}\n};\n\n/**\n * Function: createShape\n * \n * Creates the rubberband selection shape.\n */\nmxRubberband.prototype.createShape = function()\n{\n\tif (this.sharedDiv == null)\n\t{\n\t\tthis.sharedDiv = document.createElement('div');\n\t\tthis.sharedDiv.className = 'mxRubberband';\n\t\tmxUtils.setOpacity(this.sharedDiv, this.defaultOpacity);\n\t}\n\n\tthis.graph.container.appendChild(this.sharedDiv);\n\tvar result = this.sharedDiv;\n\t\n\tif (mxClient.IS_SVG && (!mxClient.IS_IE || document.documentMode >= 10) && this.fadeOut)\n\t{\n\t\tthis.sharedDiv = null;\n\t}\n\t\t\n\treturn result;\n};\n\n/**\n * Function: isActive\n * \n * Returns true if this handler is active.\n */\nmxRubberband.prototype.isActive = function(sender, me)\n{\n\treturn this.div != null && this.div.style.display != 'none';\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by selecting the region of the rubberband using\n * <mxGraph.selectRegion>.\n */\nmxRubberband.prototype.mouseUp = function(sender, me)\n{\n\tvar active = this.isActive();\n\tthis.reset();\n\t\n\tif (active)\n\t{\n\t\tthis.execute(me.getEvent());\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: execute\n * \n * Resets the state of this handler and selects the current region\n * for the given event.\n */\nmxRubberband.prototype.execute = function(evt)\n{\n\tvar rect = new mxRectangle(this.x, this.y, this.width, this.height);\n\tthis.graph.selectRegion(rect, evt);\n};\n\n/**\n * Function: reset\n * \n * Resets the state of the rubberband selection.\n */\nmxRubberband.prototype.reset = function()\n{\n\tif (this.div != null)\n\t{\n\t\tif (mxClient.IS_SVG && (!mxClient.IS_IE || document.documentMode >= 10) && this.fadeOut)\n\t\t{\n\t\t\tvar temp = this.div;\n\t\t\tmxUtils.setPrefixedStyle(temp.style, 'transition', 'all 0.2s linear');\n\t\t\ttemp.style.pointerEvents = 'none';\n\t\t\ttemp.style.opacity = 0;\n\t\t    \n\t\t    window.setTimeout(function()\n\t\t    \t{\n\t\t    \t\ttemp.parentNode.removeChild(temp);\n\t\t    \t}, 200);\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t}\n\n\tmxEvent.removeGestureListeners(document, null, this.dragHandler, this.dropHandler);\n\tthis.dragHandler = null;\n\tthis.dropHandler = null;\n\t\n\tthis.currentX = 0;\n\tthis.currentY = 0;\n\tthis.first = null;\n\tthis.div = null;\n};\n\n/**\n * Function: update\n * \n * Sets <currentX> and <currentY> and calls <repaint>.\n */\nmxRubberband.prototype.update = function(x, y)\n{\n\tthis.currentX = x;\n\tthis.currentY = y;\n\t\n\tthis.repaint();\n};\n\n/**\n * Function: repaint\n * \n * Computes the bounding box and updates the style of the <div>.\n */\nmxRubberband.prototype.repaint = function()\n{\n\tif (this.div != null)\n\t{\n\t\tvar x = this.currentX - this.graph.panDx;\n\t\tvar y = this.currentY - this.graph.panDy;\n\t\t\n\t\tthis.x = Math.min(this.first.x, x);\n\t\tthis.y = Math.min(this.first.y, y);\n\t\tthis.width = Math.max(this.first.x, x) - this.x;\n\t\tthis.height =  Math.max(this.first.y, y) - this.y;\n\n\t\tvar dx = (mxClient.IS_VML) ? this.graph.panDx : 0;\n\t\tvar dy = (mxClient.IS_VML) ? this.graph.panDy : 0;\n\t\t\n\t\tthis.div.style.left = (this.x + dx) + 'px';\n\t\tthis.div.style.top = (this.y + dy) + 'px';\n\t\tthis.div.style.width = Math.max(1, this.width) + 'px';\n\t\tthis.div.style.height = Math.max(1, this.height) + 'px';\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes. This does\n * normally not need to be called, it is called automatically when the\n * window unloads.\n */\nmxRubberband.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\t\tthis.graph.removeMouseListener(this);\n\t\tthis.graph.removeListener(this.forceRubberbandHandler);\n\t\tthis.graph.removeListener(this.panHandler);\n\t\tthis.reset();\n\t\t\n\t\tif (this.sharedDiv != null)\n\t\t{\n\t\t\tthis.sharedDiv = null;\n\t\t}\n\t}\n};\n\n__mxOutput.mxRubberband = typeof mxRubberband !== 'undefined' ? mxRubberband : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxHandle\n * \n * Implements a single custom handle for vertices.\n * \n * Constructor: mxHandle\n * \n * Constructs a new handle for the given state.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be handled.\n */\nfunction mxHandle(state, cursor, image, shape)\n{\n\tthis.graph = state.view.graph;\n\tthis.state = state;\n\tthis.cursor = (cursor != null) ? cursor : this.cursor;\n\tthis.image = (image != null) ? image : this.image;\n\tthis.shape = (shape != null) ? shape : null;\n\tthis.init();\n};\n\n/**\n * Variable: cursor\n * \n * Specifies the cursor to be used for this handle. Default is 'default'.\n */\nmxHandle.prototype.cursor = 'default';\n\n/**\n * Variable: image\n * \n * Specifies the <mxImage> to be used to render the handle. Default is null.\n */\nmxHandle.prototype.image = null;\n\n/**\n * Variable: ignoreGrid\n * \n * Default is false.\n */\nmxHandle.prototype.ignoreGrid = false;\n\n/**\n * Function: getPosition\n * \n * Hook for subclassers to return the current position of the handle.\n */\nmxHandle.prototype.getPosition = function(bounds) { };\n\n/**\n * Function: setPosition\n * \n * Hooks for subclassers to update the style in the <state>.\n */\nmxHandle.prototype.setPosition = function(bounds, pt, me) { };\n\n/**\n * Function: execute\n * \n * Hook for subclassers to execute the handle.\n */\nmxHandle.prototype.execute = function(me) { };\n\n/**\n * Function: copyStyle\n * \n * Sets the cell style with the given name to the corresponding value in <state>.\n */\nmxHandle.prototype.copyStyle = function(key)\n{\n\tthis.graph.setCellStyles(key, this.state.style[key], [this.state.cell]);\n};\n\n/**\n * Function: processEvent\n * \n * Processes the given <mxMouseEvent> and invokes <setPosition>.\n */\nmxHandle.prototype.processEvent = function(me)\n{\n\tvar scale = this.graph.view.scale;\n\tvar tr = this.graph.view.translate;\n\tvar pt = new mxPoint(me.getGraphX() / scale - tr.x, me.getGraphY() / scale - tr.y);\n\t\n\t// Center shape on mouse cursor\n\tif (this.shape != null && this.shape.bounds != null)\n\t{\n\t\tpt.x -= this.shape.bounds.width / scale / 4;\n\t\tpt.y -= this.shape.bounds.height / scale / 4;\n\t}\n\n\t// Snaps to grid for the rotated position then applies the rotation for the direction after that\n\tvar alpha1 = -mxUtils.toRadians(this.getRotation());\n\tvar alpha2 = -mxUtils.toRadians(this.getTotalRotation()) - alpha1;\n\tpt = this.flipPoint(this.rotatePoint(this.snapPoint(this.rotatePoint(pt, alpha1),\n\t\t\tthis.ignoreGrid || !this.graph.isGridEnabledEvent(me.getEvent())), alpha2));\n\tthis.setPosition(this.state.getPaintBounds(), pt, me);\n\tthis.redraw();\n};\n\n/**\n * Function: positionChanged\n * \n * Should be called after <setPosition> in <processEvent>.\n * This repaints the state using <mxCellRenderer>.\n */\nmxHandle.prototype.positionChanged = function()\n{\n\tif (this.state.text != null)\n\t{\n\t\tthis.state.text.apply(this.state);\n\t}\n\t\n\tif (this.state.shape != null)\n\t{\n\t\tthis.state.shape.apply(this.state);\n\t}\n\t\n\tthis.graph.cellRenderer.redraw(this.state, true);\n};\n\n/**\n * Function: getRotation\n * \n * Returns the rotation defined in the style of the cell.\n */\nmxHandle.prototype.getRotation = function()\n{\n\tif (this.state.shape != null)\n\t{\n\t\treturn this.state.shape.getRotation();\n\t}\n\t\n\treturn 0;\n};\n\n/**\n * Function: getTotalRotation\n * \n * Returns the rotation from the style and the rotation from the direction of\n * the cell.\n */\nmxHandle.prototype.getTotalRotation = function()\n{\n\tif (this.state.shape != null)\n\t{\n\t\treturn this.state.shape.getShapeRotation();\n\t}\n\t\n\treturn 0;\n};\n\n/**\n * Function: init\n * \n * Creates and initializes the shapes required for this handle.\n */\nmxHandle.prototype.init = function()\n{\n\tvar html = this.isHtmlRequired();\n\t\n\tif (this.image != null)\n\t{\n\t\tthis.shape = new mxImageShape(new mxRectangle(0, 0, this.image.width, this.image.height), this.image.src);\n\t\tthis.shape.preserveImageAspect = false;\n\t}\n\telse if (this.shape == null)\n\t{\n\t\tthis.shape = this.createShape(html);\n\t}\n\t\n\tthis.initShape(html);\n};\n\n/**\n * Function: createShape\n * \n * Creates and returns the shape for this handle.\n */\nmxHandle.prototype.createShape = function(html)\n{\n\tvar bounds = new mxRectangle(0, 0, mxConstants.HANDLE_SIZE, mxConstants.HANDLE_SIZE);\n\t\n\treturn new mxRectangleShape(bounds, mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n};\n\n/**\n * Function: initShape\n * \n * Initializes <shape> and sets its cursor.\n */\nmxHandle.prototype.initShape = function(html)\n{\n\tif (html && this.shape.isHtmlAllowed())\n\t{\n\t\tthis.shape.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tthis.shape.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\tthis.shape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\t\n\t\tif (this.cursor != null)\n\t\t{\n\t\t\tthis.shape.init(this.graph.getView().getOverlayPane());\n\t\t}\n\t}\n\n\tmxEvent.redirectMouseEvents(this.shape.node, this.graph, this.state);\n\tthis.shape.node.style.cursor = this.cursor;\n};\n\n/**\n * Function: redraw\n * \n * Renders the shape for this handle.\n */\nmxHandle.prototype.redraw = function()\n{\n\tif (this.shape != null && this.state.shape != null)\n\t{\n\t\tvar pt = this.getPosition(this.state.getPaintBounds());\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tvar alpha = mxUtils.toRadians(this.getTotalRotation());\n\t\t\tpt = this.rotatePoint(this.flipPoint(pt), alpha);\n\t\n\t\t\tvar scale = this.graph.view.scale;\n\t\t\tvar tr = this.graph.view.translate;\n\t\t\tthis.shape.bounds.x = Math.floor((pt.x + tr.x) * scale - this.shape.bounds.width / 2);\n\t\t\tthis.shape.bounds.y = Math.floor((pt.y + tr.y) * scale - this.shape.bounds.height / 2);\n\t\t\t\n\t\t\t// Needed to force update of text bounds\n\t\t\tthis.shape.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: isHtmlRequired\n * \n * Returns true if this handle should be rendered in HTML. This returns true if\n * the text node is in the graph container.\n */\nmxHandle.prototype.isHtmlRequired = function()\n{\n\treturn this.state.text != null && this.state.text.node.parentNode == this.graph.container;\n};\n\n/**\n * Function: rotatePoint\n * \n * Rotates the point by the given angle.\n */\nmxHandle.prototype.rotatePoint = function(pt, alpha)\n{\n\tvar bounds = this.state.getCellBounds();\n\tvar cx = new mxPoint(bounds.getCenterX(), bounds.getCenterY());\n\tvar cos = Math.cos(alpha);\n\tvar sin = Math.sin(alpha); \n\n\treturn mxUtils.getRotatedPoint(pt, cos, sin, cx);\n};\n\n/**\n * Function: flipPoint\n * \n * Flips the given point vertically and/or horizontally.\n */\nmxHandle.prototype.flipPoint = function(pt)\n{\n\tif (this.state.shape != null)\n\t{\n\t\tvar bounds = this.state.getCellBounds();\n\t\t\n\t\tif (this.state.shape.flipH)\n\t\t{\n\t\t\tpt.x = 2 * bounds.x + bounds.width - pt.x;\n\t\t}\n\t\t\n\t\tif (this.state.shape.flipV)\n\t\t{\n\t\t\tpt.y = 2 * bounds.y + bounds.height - pt.y;\n\t\t}\n\t}\n\t\n\treturn pt;\n};\n\n/**\n * Function: snapPoint\n * \n * Snaps the given point to the grid if ignore is false. This modifies\n * the given point in-place and also returns it.\n */\nmxHandle.prototype.snapPoint = function(pt, ignore)\n{\n\tif (!ignore)\n\t{\n\t\tpt.x = this.graph.snap(pt.x);\n\t\tpt.y = this.graph.snap(pt.y);\n\t}\n\t\n\treturn pt;\n};\n\n/**\n * Function: setVisible\n * \n * Shows or hides this handle.\n */\nmxHandle.prototype.setVisible = function(visible)\n{\n\tif (this.shape != null && this.shape.node != null)\n\t{\n\t\tthis.shape.node.style.display = (visible) ? '' : 'none';\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handle by setting its visibility to true.\n */\nmxHandle.prototype.reset = function()\n{\n\tthis.setVisible(true);\n\tthis.state.style = this.graph.getCellStyle(this.state.cell);\n\tthis.positionChanged();\n};\n\n/**\n * Function: destroy\n * \n * Destroys this handle.\n */\nmxHandle.prototype.destroy = function()\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n};\n\n__mxOutput.mxHandle = typeof mxHandle !== 'undefined' ? mxHandle : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxVertexHandler\n * \n * Event handler for resizing cells. This handler is automatically created in\n * <mxGraph.createHandler>.\n * \n * Constructor: mxVertexHandler\n * \n * Constructs an event handler that allows to resize vertices\n * and groups.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be resized.\n */\nfunction mxVertexHandler(state)\n{\n\tif (state != null)\n\t{\n\t\tthis.state = state;\n\t\tthis.init();\n\t\t\n\t\t// Handles escape keystrokes\n\t\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tif (this.livePreview && this.index != null)\n\t\t\t{\n\t\t\t\t// Redraws the live preview\n\t\t\t\tthis.state.view.graph.cellRenderer.redraw(this.state, true);\n\t\t\t\t\n\t\t\t\t// Redraws connected edges\n\t\t\t\tthis.state.view.invalidate(this.state.cell);\n\t\t\t\tthis.state.invalid = false;\n\t\t\t\tthis.state.view.validate();\n\t\t\t}\n\t\t\t\n\t\t\tthis.reset();\n\t\t});\n\t\t\n\t\tthis.state.view.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t}\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxVertexHandler.prototype.graph = null;\n\n/**\n * Variable: state\n * \n * Reference to the <mxCellState> being modified.\n */\nmxVertexHandler.prototype.state = null;\n\n/**\n * Variable: singleSizer\n * \n * Specifies if only one sizer handle at the bottom, right corner should be\n * used. Default is false.\n */\nmxVertexHandler.prototype.singleSizer = false;\n\n/**\n * Variable: index\n * \n * Holds the index of the current handle.\n */\nmxVertexHandler.prototype.index = null;\n\n/**\n * Variable: allowHandleBoundsCheck\n * \n * Specifies if the bounds of handles should be used for hit-detection in IE or\n * if <tolerance> > 0. Default is true.\n */\nmxVertexHandler.prototype.allowHandleBoundsCheck = true;\n\n/**\n * Variable: handleImage\n * \n * Optional <mxImage> to be used as handles. Default is null.\n */\nmxVertexHandler.prototype.handleImage = null;\n\n/**\n * Variable: handlesVisible\n * \n * If handles are currently visible.\n */\nmxVertexHandler.prototype.handlesVisible = true;\n\n/**\n * Variable: tolerance\n * \n * Optional tolerance for hit-detection in <getHandleForEvent>. Default is 0.\n */\nmxVertexHandler.prototype.tolerance = 0;\n\n/**\n * Variable: rotationEnabled\n * \n * Specifies if a rotation handle should be visible. Default is false.\n */\nmxVertexHandler.prototype.rotationEnabled = false;\n\n/**\n * Variable: parentHighlightEnabled\n * \n * Specifies if the parent should be highlighted if a child cell is selected.\n * Default is false.\n */\nmxVertexHandler.prototype.parentHighlightEnabled = false;\n\n/**\n * Variable: rotationRaster\n * \n * Specifies if rotation steps should be \"rasterized\" depening on the distance\n * to the handle. Default is true.\n */\nmxVertexHandler.prototype.rotationRaster = true;\n\n/**\n * Variable: rotationCursor\n * \n * Specifies the cursor for the rotation handle. Default is 'crosshair'.\n */\nmxVertexHandler.prototype.rotationCursor = 'crosshair';\n\n/**\n * Variable: livePreview\n * \n * Specifies if resize should change the cell in-place. This is an experimental\n * feature for non-touch devices. Default is false.\n */\nmxVertexHandler.prototype.livePreview = false;\n\n/**\n * Variable: movePreviewToFront\n * \n * Specifies if the live preview should be moved to the front.\n */\nmxVertexHandler.prototype.movePreviewToFront = false;\n\n/**\n * Variable: manageSizers\n * \n * Specifies if sizers should be hidden and spaced if the vertex is small.\n * Default is false.\n */\nmxVertexHandler.prototype.manageSizers = false;\n\n/**\n * Variable: constrainGroupByChildren\n * \n * Specifies if the size of groups should be constrained by the children.\n * Default is false.\n */\nmxVertexHandler.prototype.constrainGroupByChildren = false;\n\n/**\n * Variable: rotationHandleVSpacing\n * \n * Vertical spacing for rotation icon. Default is -16.\n */\nmxVertexHandler.prototype.rotationHandleVSpacing = -16;\n\n/**\n * Variable: horizontalOffset\n * \n * The horizontal offset for the handles. This is updated in <redrawHandles>\n * if <manageSizers> is true and the sizers are offset horizontally.\n */\nmxVertexHandler.prototype.horizontalOffset = 0;\n\n/**\n * Variable: verticalOffset\n * \n * The horizontal offset for the handles. This is updated in <redrawHandles>\n * if <manageSizers> is true and the sizers are offset vertically.\n */\nmxVertexHandler.prototype.verticalOffset = 0;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxVertexHandler.prototype.init = function()\n{\n\tthis.graph = this.state.view.graph;\n\tthis.selectionBounds = this.getSelectionBounds(this.state);\n\tthis.bounds = new mxRectangle(this.selectionBounds.x, this.selectionBounds.y, this.selectionBounds.width, this.selectionBounds.height);\n\tthis.selectionBorder = this.createSelectionShape(this.bounds);\n\t// VML dialect required here for event transparency in IE\n\tthis.selectionBorder.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\tthis.selectionBorder.pointerEvents = false;\n\tthis.selectionBorder.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\tthis.selectionBorder.init(this.graph.getView().getOverlayPane());\n\tmxEvent.redirectMouseEvents(this.selectionBorder.node, this.graph, this.state);\n\t\n\tif (this.graph.isCellMovable(this.state.cell))\n\t{\n\t\tthis.selectionBorder.setCursor(mxConstants.CURSOR_MOVABLE_VERTEX);\n\t}\n\n\t// Adds the sizer handles\n\tif (mxGraphHandler.prototype.maxCells <= 0 || this.graph.getSelectionCount() < mxGraphHandler.prototype.maxCells)\n\t{\n\t\tvar resizable = this.graph.isCellResizable(this.state.cell);\n\t\tthis.sizers = [];\n\n\t\tif (resizable || (this.graph.isLabelMovable(this.state.cell) &&\n\t\t\tthis.state.width >= 2 && this.state.height >= 2))\n\t\t{\n\t\t\tvar i = 0;\n\n\t\t\tif (resizable)\n\t\t\t{\n\t\t\t\tif (!this.singleSizer)\n\t\t\t\t{\n\t\t\t\t\tthis.sizers.push(this.createSizer('nw-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('n-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('ne-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('w-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('e-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('sw-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('s-resize', i++));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.sizers.push(this.createSizer('se-resize', i++));\n\t\t\t}\n\t\t\t\n\t\t\tvar geo = this.graph.model.getGeometry(this.state.cell);\n\t\t\t\n\t\t\tif (geo != null && !geo.relative && !this.graph.isSwimlane(this.state.cell) &&\n\t\t\t\tthis.graph.isLabelMovable(this.state.cell))\n\t\t\t{\n\t\t\t\t// Marks this as the label handle for getHandleForEvent\n\t\t\t\tthis.labelShape = this.createSizer(mxConstants.CURSOR_LABEL_HANDLE, mxEvent.LABEL_HANDLE,\n\t\t\t\t\tmxConstants.LABEL_HANDLE_SIZE, mxConstants.LABEL_HANDLE_FILLCOLOR);\n\t\t\t\tthis.sizers.push(this.labelShape);\n\t\t\t}\n\t\t}\n\t\telse if (this.graph.isCellMovable(this.state.cell) && !this.graph.isCellResizable(this.state.cell) &&\n\t\t\tthis.state.width < 2 && this.state.height < 2)\n\t\t{\n\t\t\tthis.labelShape = this.createSizer(mxConstants.CURSOR_MOVABLE_VERTEX,\n\t\t\t\tmxEvent.LABEL_HANDLE, null, mxConstants.LABEL_HANDLE_FILLCOLOR);\n\t\t\tthis.sizers.push(this.labelShape);\n\t\t}\n\t}\n\t\n\t// Adds the rotation handler\n\tif (this.isRotationHandleVisible())\n\t{\n\t\tthis.rotationShape = this.createSizer(this.rotationCursor, mxEvent.ROTATION_HANDLE,\n\t\t\tmxConstants.HANDLE_SIZE + 3, mxConstants.HANDLE_FILLCOLOR);\n\t\tthis.sizers.push(this.rotationShape);\n\t}\n\n\tthis.customHandles = this.createCustomHandles();\n\tthis.redraw();\n\t\n\tif (this.constrainGroupByChildren)\n\t{\n\t\tthis.updateMinBounds();\n\t}\n};\n\n/**\n * Function: isRotationHandleVisible\n * \n * Returns true if the rotation handle should be showing.\n */\nmxVertexHandler.prototype.isRotationHandleVisible = function()\n{\n\treturn this.graph.isEnabled() && this.rotationEnabled && this.graph.isCellRotatable(this.state.cell) &&\n\t\t(mxGraphHandler.prototype.maxCells <= 0 || this.graph.getSelectionCount() < mxGraphHandler.prototype.maxCells);\n};\n\n/**\n * Function: isConstrainedEvent\n * \n * Returns true if the aspect ratio if the cell should be maintained.\n */\nmxVertexHandler.prototype.isConstrainedEvent = function(me)\n{\n\treturn mxEvent.isShiftDown(me.getEvent()) || this.state.style[mxConstants.STYLE_ASPECT] == 'fixed';\n};\n\n/**\n * Function: isCenteredEvent\n * \n * Returns true if the center of the vertex should be maintained during the resize.\n */\nmxVertexHandler.prototype.isCenteredEvent = function(state, me)\n{\n\treturn false;\n};\n\n/**\n * Function: createCustomHandles\n * \n * Returns an array of custom handles. This implementation returns null.\n */\nmxVertexHandler.prototype.createCustomHandles = function()\n{\n\treturn null;\n};\n\n/**\n * Function: updateMinBounds\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxVertexHandler.prototype.updateMinBounds = function()\n{\n\tvar children = this.graph.getChildCells(this.state.cell);\n\t\n\tif (children.length > 0)\n\t{\n\t\tthis.minBounds = this.graph.view.getBounds(children);\n\t\t\n\t\tif (this.minBounds != null)\n\t\t{\n\t\t\tvar s = this.state.view.scale;\n\t\t\tvar t = this.state.view.translate;\n\n\t\t\tthis.minBounds.x -= this.state.x;\n\t\t\tthis.minBounds.y -= this.state.y;\n\t\t\tthis.minBounds.x /= s;\n\t\t\tthis.minBounds.y /= s;\n\t\t\tthis.minBounds.width /= s;\n\t\t\tthis.minBounds.height /= s;\n\t\t\tthis.x0 = this.state.x / s - t.x;\n\t\t\tthis.y0 = this.state.y / s - t.y;\n\t\t}\n\t}\n};\n\n/**\n * Function: getSelectionBounds\n * \n * Returns the mxRectangle that defines the bounds of the selection\n * border.\n */\nmxVertexHandler.prototype.getSelectionBounds = function(state)\n{\n\treturn new mxRectangle(Math.round(state.x), Math.round(state.y), Math.round(state.width), Math.round(state.height));\n};\n\n/**\n * Function: createParentHighlightShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxVertexHandler.prototype.createParentHighlightShape = function(bounds)\n{\n\treturn this.createSelectionShape(bounds);\n};\n\n/**\n * Function: createSelectionShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxVertexHandler.prototype.createSelectionShape = function(bounds)\n{\n\tvar shape = new mxRectangleShape(\n\t\tmxRectangle.fromRectangle(bounds),\n\t\tnull, this.getSelectionColor());\n\tshape.strokewidth = this.getSelectionStrokeWidth();\n\tshape.isDashed = this.isSelectionDashed();\n\t\n\treturn shape;\n};\n\n/**\n * Function: getSelectionColor\n * \n * Returns <mxConstants.VERTEX_SELECTION_COLOR>.\n */\nmxVertexHandler.prototype.getSelectionColor = function()\n{\n\treturn mxConstants.VERTEX_SELECTION_COLOR;\n};\n\n/**\n * Function: getSelectionStrokeWidth\n * \n * Returns <mxConstants.VERTEX_SELECTION_STROKEWIDTH>.\n */\nmxVertexHandler.prototype.getSelectionStrokeWidth = function()\n{\n\treturn mxConstants.VERTEX_SELECTION_STROKEWIDTH;\n};\n\n/**\n * Function: isSelectionDashed\n * \n * Returns <mxConstants.VERTEX_SELECTION_DASHED>.\n */\nmxVertexHandler.prototype.isSelectionDashed = function()\n{\n\treturn mxConstants.VERTEX_SELECTION_DASHED;\n};\n\n/**\n * Function: createSizer\n * \n * Creates a sizer handle for the specified cursor and index and returns\n * the new <mxRectangleShape> that represents the handle.\n */\nmxVertexHandler.prototype.createSizer = function(cursor, index, size, fillColor)\n{\n\tsize = size || mxConstants.HANDLE_SIZE;\n\t\n\tvar bounds = new mxRectangle(0, 0, size, size);\n\tvar sizer = this.createSizerShape(bounds, index, fillColor);\n\n\tif (sizer.isHtmlAllowed() && this.state.text != null && this.state.text.node.parentNode == this.graph.container)\n\t{\n\t\tsizer.bounds.height -= 1;\n\t\tsizer.bounds.width -= 1;\n\t\tsizer.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tsizer.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\tsizer.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\tsizer.init(this.graph.getView().getOverlayPane());\n\t}\n\n\tmxEvent.redirectMouseEvents(sizer.node, this.graph, this.state);\n\t\n\tif (this.graph.isEnabled())\n\t{\n\t\tsizer.setCursor(cursor);\n\t}\n\t\n\tif (!this.isSizerVisible(index))\n\t{\n\t\tsizer.visible = false;\n\t}\n\t\n\treturn sizer;\n};\n\n/**\n * Function: isSizerVisible\n * \n * Returns true if the sizer for the given index is visible.\n * This returns true for all given indices.\n */\nmxVertexHandler.prototype.isSizerVisible = function(index)\n{\n\treturn true;\n};\n\n/**\n * Function: createSizerShape\n * \n * Creates the shape used for the sizer handle for the specified bounds an\n * index. Only images and rectangles should be returned if support for HTML\n * labels with not foreign objects is required.\n */\nmxVertexHandler.prototype.createSizerShape = function(bounds, index, fillColor)\n{\n\tif (this.handleImage != null)\n\t{\n\t\tbounds = new mxRectangle(bounds.x, bounds.y, this.handleImage.width, this.handleImage.height);\n\t\tvar shape = new mxImageShape(bounds, this.handleImage.src);\n\t\t\n\t\t// Allows HTML rendering of the images\n\t\tshape.preserveImageAspect = false;\n\n\t\treturn shape;\n\t}\n\telse if (index == mxEvent.ROTATION_HANDLE)\n\t{\n\t\treturn new mxEllipse(bounds, fillColor || mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n\telse\n\t{\n\t\treturn new mxRectangleShape(bounds, fillColor || mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n};\n\n/**\n * Function: createBounds\n * \n * Helper method to create an <mxRectangle> around the given centerpoint\n * with a width and height of 2*s or 6, if no s is given.\n */\nmxVertexHandler.prototype.moveSizerTo = function(shape, x, y)\n{\n\tif (shape != null)\n\t{\n\t\tshape.bounds.x = Math.floor(x - shape.bounds.width / 2);\n\t\tshape.bounds.y = Math.floor(y - shape.bounds.height / 2);\n\t\t\n\t\t// Fixes visible inactive handles in VML\n\t\tif (shape.node != null && shape.node.style.display != 'none')\n\t\t{\n\t\t\tshape.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: getHandleForEvent\n * \n * Returns the index of the handle for the given event. This returns the index\n * of the sizer from where the event originated or <mxEvent.LABEL_INDEX>.\n */\nmxVertexHandler.prototype.getHandleForEvent = function(me)\n{\n\t// Connection highlight may consume events before they reach sizer handle\n\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.tolerance : 1;\n\tvar hit = (this.allowHandleBoundsCheck && (mxClient.IS_IE || tol > 0)) ?\n\t\tnew mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol) : null;\n\n\tvar checkShape = mxUtils.bind(this, function(shape)\n\t{\n\t\tvar st = (shape != null && shape.constructor != mxImageShape &&\n\t\t\tthis.allowHandleBoundsCheck) ? shape.strokewidth + shape.svgStrokeTolerance : null;\n\t\tvar real = (st != null) ? new mxRectangle(me.getGraphX() - Math.floor(st / 2),\n\t\t\tme.getGraphY() - Math.floor(st / 2), st, st) : hit;\n\n\t\treturn shape != null && (me.isSource(shape) || (real != null && mxUtils.intersects(shape.bounds, real) &&\n\t\t\tshape.node.style.display != 'none' && shape.node.style.visibility != 'hidden'));\n\t});\n\t\n\tif (checkShape(this.rotationShape))\n\t{\n\t\treturn mxEvent.ROTATION_HANDLE;\n\t}\n\telse if (checkShape(this.labelShape))\n\t{\n\t\treturn mxEvent.LABEL_HANDLE;\n\t}\n\n\tif (this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tif (checkShape(this.sizers[i]))\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.customHandles != null && this.isCustomHandleEvent(me))\n\t{\n\t\t// Inverse loop order to match display order\n\t\tfor (var i = this.customHandles.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tif (checkShape(this.customHandles[i].shape))\n\t\t\t{\n\t\t\t\t// LATER: Return reference to active shape\n\t\t\t\treturn mxEvent.CUSTOM_HANDLE - i;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n};\n\n/**\n * Function: isCustomHandleEvent\n * \n * Returns true if the given event allows custom handles to be changed. This\n * implementation returns true.\n */\nmxVertexHandler.prototype.isCustomHandleEvent = function(me)\n{\n\treturn true;\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event if a handle has been clicked. By consuming the\n * event all subsequent events of the gesture are redirected to this\n * handler.\n */\nmxVertexHandler.prototype.mouseDown = function(sender, me)\n{\n\tif (!me.isConsumed() && this.graph.isEnabled())\n\t{\n\t\tvar handle = this.getHandleForEvent(me);\n\n\t\tif (handle != null)\n\t\t{\n\t\t\tthis.start(me.getGraphX(), me.getGraphY(), handle);\n\t\t\tme.consume();\n\t\t}\n\t}\n};\n\n/**\n * Function: isLivePreviewBorder\n * \n * Called if <livePreview> is enabled to check if a border should be painted.\n * This implementation returns true if the shape is transparent.\n */\nmxVertexHandler.prototype.isLivePreviewBorder = function()\n{\n\treturn this.state.shape != null && this.state.shape.fill == null && this.state.shape.stroke == null;\n};\n\n/**\n * Function: start\n * \n * Starts the handling of the mouse gesture.\n */\nmxVertexHandler.prototype.start = function(x, y, index)\n{\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.livePreviewActive = this.livePreview && this.graph.model.getChildCount(this.state.cell) == 0;\n\t\tthis.inTolerance = true;\n\t\tthis.childOffsetX = 0;\n\t\tthis.childOffsetY = 0;\n\t\tthis.index = index;\n\t\tthis.startX = x;\n\t\tthis.startY = y;\n\t\t\n\t\tif (this.index <= mxEvent.CUSTOM_HANDLE && this.isGhostPreview())\n\t\t{\n\t\t\tthis.ghostPreview = this.createGhostPreview();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Saves reference to parent state\n\t\t\tvar model = this.state.view.graph.model;\n\t\t\tvar parent = model.getParent(this.state.cell);\n\t\t\t\n\t\t\tif (this.state.view.currentRoot != parent && (model.isVertex(parent) || model.isEdge(parent)))\n\t\t\t{\n\t\t\t\tthis.parentState = this.state.view.graph.view.getState(parent);\n\t\t\t}\n\t\t\t\n\t\t\t// Creates a preview that can be on top of any HTML label\n\t\t\tthis.selectionBorder.node.style.display = (index == mxEvent.ROTATION_HANDLE) ? 'inline' : 'none';\n\t\t\t\n\t\t\t// Creates the border that represents the new bounds\n\t\t\tif (!this.livePreviewActive || this.isLivePreviewBorder())\n\t\t\t{\n\t\t\t\tthis.preview = this.createSelectionShape(this.bounds);\n\t\t\t\t\n\t\t\t\tif (!(mxClient.IS_SVG && Number(this.state.style[mxConstants.STYLE_ROTATION] || '0') != 0) &&\n\t\t\t\t\tthis.state.text != null && this.state.text.node.parentNode == this.graph.container)\n\t\t\t\t{\n\t\t\t\t\tthis.preview.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\t\t\t\tthis.preview.init(this.graph.container);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.preview.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\t\tthis.preview.init(this.graph.view.getOverlayPane());\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (index == mxEvent.ROTATION_HANDLE)\n\t\t\t{\n\t\t\t\t// With the rotation handle in a corner, need the angle and distance\n\t\t\t\tvar pos = this.getRotationHandlePosition();\n\t\t\t\t\n\t\t\t\tvar dx = pos.x - this.state.getCenterX();\n\t\t\t\tvar dy = pos.y - this.state.getCenterY();\n\t\t\t\t\n\t\t\t\tthis.startAngle = (dx != 0) ? Math.atan(dy / dx) * 180 / Math.PI + 90 : 0;\n\t\t\t\tthis.startDist = Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\n\t\t\t// Prepares the handles for live preview\n\t\t\tif (this.livePreviewActive)\n\t\t\t{\n\t\t\t\tthis.hideSizers();\n\t\t\t\t\n\t\t\t\tif (index == mxEvent.ROTATION_HANDLE)\n\t\t\t\t{\n\t\t\t\t\tthis.rotationShape.node.style.display = '';\n\t\t\t\t}\n\t\t\t\telse if (index == mxEvent.LABEL_HANDLE)\n\t\t\t\t{\n\t\t\t\t\tthis.labelShape.node.style.display = '';\n\t\t\t\t}\n\t\t\t\telse if (this.sizers != null && this.sizers[index] != null)\n\t\t\t\t{\n\t\t\t\t\tthis.sizers[index].node.style.display = '';\n\t\t\t\t}\n\t\t\t\telse if (index <= mxEvent.CUSTOM_HANDLE && this.customHandles != null)\n\t\t\t\t{\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - index].setVisible(true);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Gets the array of connected edge handlers for redrawing\n\t\t\t\tvar edges = this.graph.getEdges(this.state.cell);\n\t\t\t\tthis.edgeHandlers = [];\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < edges.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar handler = this.graph.selectionCellsHandler.getHandler(edges[i]);\n\t\t\t\t\t\n\t\t\t\t\tif (handler != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.edgeHandlers.push(handler);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: createGhostPreview\n * \n * Starts the handling of the mouse gesture.\n */\nmxVertexHandler.prototype.createGhostPreview = function()\n{\n\tvar shape = this.graph.cellRenderer.createShape(this.state);\n\tshape.init(this.graph.view.getOverlayPane());\n\tshape.scale = this.state.view.scale;\n\tshape.bounds = this.bounds;\n\tshape.outline = true;\n\t\n\treturn shape;\n};\n\n/**\n * Function: hideHandles\n * \n * Shortcut to <hideSizers>.\n */\nmxVertexHandler.prototype.setHandlesVisible = function(visible)\n{\n\tthis.handlesVisible = visible;\n\t\n\tif (this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tthis.sizers[i].node.style.display = (visible) ? '' : 'none';\n\t\t}\n\t}\n\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].setVisible(visible);\n\t\t}\n\t}\n};\n\n/**\n * Function: hideSizers\n * \n * Hides all sizers except.\n * \n * Starts the handling of the mouse gesture.\n */\nmxVertexHandler.prototype.hideSizers = function()\n{\n\tthis.setHandlesVisible(false);\n};\n\n/**\n * Function: checkTolerance\n * \n * Checks if the coordinates for the given event are within the\n * <mxGraph.tolerance>. If the event is a mouse event then the tolerance is\n * ignored.\n */\nmxVertexHandler.prototype.checkTolerance = function(me)\n{\n\tif (this.inTolerance && this.startX != null && this.startY != null)\n\t{\n\t\tif (mxEvent.isMouseEvent(me.getEvent()) ||\n\t\t\tMath.abs(me.getGraphX() - this.startX) > this.graph.tolerance ||\n\t\t\tMath.abs(me.getGraphY() - this.startY) > this.graph.tolerance)\n\t\t{\n\t\t\tthis.inTolerance = false;\n\t\t}\n\t}\n};\n\n/**\n * Function: updateHint\n * \n * Hook for subclassers do show details while the handler is active.\n */\nmxVertexHandler.prototype.updateHint = function(me) { };\n\n/**\n * Function: removeHint\n * \n * Hooks for subclassers to hide details when the handler gets inactive.\n */\nmxVertexHandler.prototype.removeHint = function() { };\n\n/**\n * Function: roundAngle\n * \n * Hook for rounding the angle. This uses Math.round.\n */\nmxVertexHandler.prototype.roundAngle = function(angle)\n{\n\treturn Math.round(angle * 10) / 10;\n};\n\n/**\n * Function: roundLength\n * \n * Hook for rounding the unscaled width or height. This uses Math.round.\n */\nmxVertexHandler.prototype.roundLength = function(length)\n{\n\treturn Math.round(length * 100) / 100;\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the preview.\n */\nmxVertexHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (!me.isConsumed() && this.index != null)\n\t{\n\t\t// Checks tolerance for ignoring single clicks\n\t\tthis.checkTolerance(me);\n\n\t\tif (!this.inTolerance)\n\t\t{\n\t\t\tif (this.index <= mxEvent.CUSTOM_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.customHandles != null)\n\t\t\t\t{\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].processEvent(me);\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].active = true;\n\t\t\t\t\t\n\t\t\t\t\tif (this.ghostPreview != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.ghostPreview.apply(this.state);\n\t\t\t\t\t\tthis.ghostPreview.strokewidth = this.getSelectionStrokeWidth() /\n\t\t\t\t\t\t\tthis.ghostPreview.scale / this.ghostPreview.scale;\n\t\t\t\t\t\tthis.ghostPreview.isDashed = this.isSelectionDashed();\n\t\t\t\t\t\tthis.ghostPreview.stroke = this.getSelectionColor();\n\t\t\t\t\t\tthis.ghostPreview.redraw();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.selectionBounds != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.selectionBorder.node.style.display = 'none';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.movePreviewToFront)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.moveToFront();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].positionChanged();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.index == mxEvent.LABEL_HANDLE)\n\t\t\t{\n\t\t\t\tthis.moveLabel(me);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (this.index == mxEvent.ROTATION_HANDLE)\n\t\t\t\t{\n\t\t\t\t\tthis.rotateVertex(me);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.resizeVertex(me);\n\t\t\t\t}\n\n\t\t\t\tthis.updateHint(me);\n\t\t\t}\n\t\t}\n\t\t\n\t\tme.consume();\n\t}\n\t// Workaround for disabling the connect highlight when over handle\n\telse if (!this.graph.isMouseDown && this.getHandleForEvent(me) != null)\n\t{\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: isGhostPreview\n * \n * Returns true if a ghost preview should be used for custom handles.\n */\nmxVertexHandler.prototype.isGhostPreview = function()\n{\n\treturn this.state.view.graph.model.getChildCount(this.state.cell) > 0;\n};\n\n/**\n * Function: moveLabel\n * \n * Moves the label.\n */\nmxVertexHandler.prototype.moveLabel = function(me)\n{\n\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\tvar tr = this.graph.view.translate;\n\tvar scale = this.graph.view.scale;\n\t\n\tif (this.graph.isGridEnabledEvent(me.getEvent()))\n\t{\n\t\tpoint.x = (this.graph.snap(point.x / scale - tr.x) + tr.x) * scale;\n\t\tpoint.y = (this.graph.snap(point.y / scale - tr.y) + tr.y) * scale;\n\t}\n\n\tvar index = (this.rotationShape != null) ? this.sizers.length - 2 : this.sizers.length - 1;\n\tthis.moveSizerTo(this.sizers[index], point.x, point.y);\n};\n\n/**\n * Function: rotateVertex\n * \n * Rotates the vertex.\n */\nmxVertexHandler.prototype.rotateVertex = function(me)\n{\n\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\tvar dx = this.state.x + this.state.width / 2 - point.x;\n\tvar dy = this.state.y + this.state.height / 2 - point.y;\n\tthis.currentAlpha = (dx != 0) ? Math.atan(dy / dx) * 180 / Math.PI + 90 : ((dy < 0) ? 180 : 0);\n\t\n\tif (dx > 0)\n\t{\n\t\tthis.currentAlpha -= 180;\n\t}\n\t\n\tthis.currentAlpha -= this.startAngle;\n\t\n\t// Rotation raster\n\tif (this.rotationRaster && this.graph.isGridEnabledEvent(me.getEvent()))\n\t{\n\t\tvar dx = point.x - this.state.getCenterX();\n\t\tvar dy = point.y - this.state.getCenterY();\n\t\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\t\t\n\t\tif (dist - this.startDist < 2)\n\t\t{\n\t\t\traster = 15;\n\t\t}\n\t\telse if (dist - this.startDist < 25)\n\t\t{\n\t\t\traster = 5;\n\t\t}\n\t\telse\n\t\t{\n\t\t\traster = 1;\n\t\t}\n\t\t\n\t\tthis.currentAlpha = Math.round(this.currentAlpha / raster) * raster;\n\t}\n\telse\n\t{\n\t\tthis.currentAlpha = this.roundAngle(this.currentAlpha);\n\t}\n\n\tthis.selectionBorder.rotation = this.currentAlpha;\n\tthis.selectionBorder.redraw();\n\t\t\t\t\t\n\tif (this.livePreviewActive)\n\t{\n\t\tthis.redrawHandles();\n\t}\n};\n\n/**\n * Function: resizeVertex\n * \n * Risizes the vertex.\n */\nmxVertexHandler.prototype.resizeVertex = function(me)\n{\n\tvar ct = new mxPoint(this.state.getCenterX(), this.state.getCenterY());\n\tvar alpha = mxUtils.toRadians(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\tvar tr = this.graph.view.translate;\n\tvar scale = this.graph.view.scale;\n\tvar cos = Math.cos(-alpha);\n\tvar sin = Math.sin(-alpha);\n\t\n\tvar dx = point.x - this.startX;\n\tvar dy = point.y - this.startY;\n\n\t// Rotates vector for mouse gesture\n\tvar tx = cos * dx - sin * dy;\n\tvar ty = sin * dx + cos * dy;\n\t\n\tdx = tx;\n\tdy = ty;\n\n\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\tthis.unscaledBounds = this.union(geo, dx / scale, dy / scale, this.index,\n\t\tthis.graph.isGridEnabledEvent(me.getEvent()), 1,\n\t\tnew mxPoint(0, 0), this.isConstrainedEvent(me),\n\t\tthis.isCenteredEvent(this.state, me));\n\t\n\t// Keeps vertex within maximum graph or parent bounds\n\tif (!geo.relative)\n\t{\n\t\tvar max = this.graph.getMaximumGraphBounds();\n\t\t\n\t\t// Handles child cells\n\t\tif (max != null && this.parentState != null)\n\t\t{\n\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\n\t\t\tmax.x -= (this.parentState.x - tr.x * scale) / scale;\n\t\t\tmax.y -= (this.parentState.y - tr.y * scale) / scale;\n\t\t}\n\t\t\n\t\tif (this.graph.isConstrainChild(this.state.cell))\n\t\t{\n\t\t\tvar tmp = this.graph.getCellContainmentArea(this.state.cell);\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tvar overlap = this.graph.getOverlap(this.state.cell);\n\t\t\t\t\n\t\t\t\tif (overlap > 0)\n\t\t\t\t{\n\t\t\t\t\ttmp = mxRectangle.fromRectangle(tmp);\n\t\t\t\t\t\n\t\t\t\t\ttmp.x -= tmp.width * overlap;\n\t\t\t\t\ttmp.y -= tmp.height * overlap;\n\t\t\t\t\ttmp.width += 2 * tmp.width * overlap;\n\t\t\t\t\ttmp.height += 2 * tmp.height * overlap;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (max == null)\n\t\t\t\t{\n\t\t\t\t\tmax = tmp;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\t\tmax.intersect(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tif (max != null)\n\t\t{\n\t\t\tif (this.unscaledBounds.x < max.x)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.width -= max.x - this.unscaledBounds.x;\n\t\t\t\tthis.unscaledBounds.x = max.x;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.unscaledBounds.y < max.y)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.height -= max.y - this.unscaledBounds.y;\n\t\t\t\tthis.unscaledBounds.y = max.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.unscaledBounds.x + this.unscaledBounds.width > max.x + max.width)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.width -= this.unscaledBounds.x +\n\t\t\t\t\tthis.unscaledBounds.width - max.x - max.width;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.unscaledBounds.y + this.unscaledBounds.height > max.y + max.height)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.height -= this.unscaledBounds.y +\n\t\t\t\t\tthis.unscaledBounds.height - max.y - max.height;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar old = this.bounds;\n\tthis.bounds = new mxRectangle(((this.parentState != null) ? this.parentState.x : tr.x * scale) +\n\t\t(this.unscaledBounds.x) * scale, ((this.parentState != null) ? this.parentState.y : tr.y * scale) +\n\t\t(this.unscaledBounds.y) * scale, this.unscaledBounds.width * scale, this.unscaledBounds.height * scale);\n\n\tif (geo.relative && this.parentState != null)\n\t{\n\t\tthis.bounds.x += this.state.x - this.parentState.x;\n\t\tthis.bounds.y += this.state.y - this.parentState.y;\n\t}\n\n\tcos = Math.cos(alpha);\n\tsin = Math.sin(alpha);\n\t\n\tvar c2 = new mxPoint(this.bounds.getCenterX(), this.bounds.getCenterY());\n\n\tvar dx = c2.x - ct.x;\n\tvar dy = c2.y - ct.y;\n\t\n\tvar dx2 = cos * dx - sin * dy;\n\tvar dy2 = sin * dx + cos * dy;\n\t\n\tvar dx3 = dx2 - dx;\n\tvar dy3 = dy2 - dy;\n\t\n\tvar dx4 = this.bounds.x - this.state.x;\n\tvar dy4 = this.bounds.y - this.state.y;\n\t\n\tvar dx5 = cos * dx4 - sin * dy4;\n\tvar dy5 = sin * dx4 + cos * dy4;\n\t\n\tthis.bounds.x += dx3;\n\tthis.bounds.y += dy3;\n\t\n\t// Rounds unscaled bounds to int\n\tthis.unscaledBounds.x = this.roundLength(this.unscaledBounds.x + dx3 / scale);\n\tthis.unscaledBounds.y = this.roundLength(this.unscaledBounds.y + dy3 / scale);\n\tthis.unscaledBounds.width = this.roundLength(this.unscaledBounds.width);\n\tthis.unscaledBounds.height = this.roundLength(this.unscaledBounds.height);\n\t\n\t// Shifts the children according to parent offset\n\tif (!this.graph.isCellCollapsed(this.state.cell) && (dx3 != 0 || dy3 != 0))\n\t{\n\t\tthis.childOffsetX = this.state.x - this.bounds.x + dx5;\n\t\tthis.childOffsetY = this.state.y - this.bounds.y + dy5;\n\t}\n\telse\n\t{\n\t\tthis.childOffsetX = 0;\n\t\tthis.childOffsetY = 0;\n\t}\n\t\t\t\n\tif (!old.equals(this.bounds))\n\t{\t\n\t\tif (this.livePreviewActive)\n\t\t{\n\t\t\tthis.updateLivePreview(me);\n\t\t}\n\t\t\n\t\tif (this.preview != null)\n\t\t{\n\t\t\tthis.drawPreview();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.updateParentHighlight();\n\t\t}\n\t}\n};\n\n/**\n * Function: updateLivePreview\n * \n * Repaints the live preview.\n */\nmxVertexHandler.prototype.updateLivePreview = function(me)\n{\n\t// TODO: Apply child offset to children in live preview\n\tvar scale = this.graph.view.scale;\n\tvar tr = this.graph.view.translate;\n\t\n\t// Saves current state\n\tvar tempState = this.state.clone();\n\n\t// Temporarily changes size and origin\n\tthis.state.x = this.bounds.x;\n\tthis.state.y = this.bounds.y;\n\tthis.state.origin = new mxPoint(this.state.x / scale - tr.x, this.state.y / scale - tr.y);\n\tthis.state.width = this.bounds.width;\n\tthis.state.height = this.bounds.height;\n\t\n\t// Redraws cell and handles\n\tvar off = this.state.absoluteOffset;\n\toff = new mxPoint(off.x, off.y);\n\n\t// Required to store and reset absolute offset for updating label position\n\tthis.state.absoluteOffset.x = 0;\n\tthis.state.absoluteOffset.y = 0;\n\tvar geo = this.graph.getCellGeometry(this.state.cell);\t\t\t\t\n\n\tif (geo != null)\n\t{\n\t\tvar offset = geo.offset || this.EMPTY_POINT;\n\n\t\tif (offset != null && !geo.relative)\n\t\t{\n\t\t\tthis.state.absoluteOffset.x = this.state.view.scale * offset.x;\n\t\t\tthis.state.absoluteOffset.y = this.state.view.scale * offset.y;\n\t\t}\n\t\t\n\t\tthis.state.view.updateVertexLabelOffset(this.state);\n\t}\n\t\n\t// Draws the live preview\n\tthis.state.view.graph.cellRenderer.redraw(this.state, true);\n\t\n\t// Redraws connected edges TODO: Include child edges\n\tthis.state.view.invalidate(this.state.cell);\n\tthis.state.invalid = false;\n\tthis.state.view.validate();\n\tthis.redrawHandles();\n\t\n\t// Moves live preview to front\n\tif (this.movePreviewToFront)\n\t{\n\t\tthis.moveToFront();\n\t}\n\t\n\t// Hides folding icon\n\tif (this.state.control != null && this.state.control.node != null)\n\t{\n\t\tthis.state.control.node.style.visibility = 'hidden';\n\t}\n\t\n\t// Restores current state\n\tthis.state.setState(tempState);\n};\n\n/**\n * Function: moveToFront\n * \n * Handles the event by applying the changes to the geometry.\n */\nmxVertexHandler.prototype.moveToFront = function()\n{\n\tif ((this.state.text != null && this.state.text.node != null &&\n\t\tthis.state.text.node.nextSibling != null) ||\n\t\t(this.state.shape != null && this.state.shape.node != null &&\n\t\tthis.state.shape.node.nextSibling != null && (this.state.text == null ||\n\t\tthis.state.shape.node.nextSibling != this.state.text.node)))\n\t{\n\t\tif (this.state.shape != null && this.state.shape.node != null)\n\t\t{\n\t\t\tthis.state.shape.node.parentNode.appendChild(this.state.shape.node);\n\t\t}\n\t\t\n\t\tif (this.state.text != null && this.state.text.node != null)\n\t\t{\n\t\t\tthis.state.text.node.parentNode.appendChild(this.state.text.node);\n\t\t}\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by applying the changes to the geometry.\n */\nmxVertexHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.index != null && this.state != null)\n\t{\n\t\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\tvar index = this.index;\n\t\tthis.index = null;\n\t\n\t\tif (this.ghostPreview == null)\n\t\t{\n\t\t\t// Required to restore order in case of no change\n\t\t\tthis.state.view.invalidate(this.state.cell, false, false);\n\t\t\tthis.state.view.validate();\n\t\t}\n\t\t\n\t\tthis.graph.getModel().beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (index <= mxEvent.CUSTOM_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.customHandles != null)\n\t\t\t\t{\n\t\t\t\t\t// Creates style before changing cell state\n\t\t\t\t\tvar style = this.state.view.graph.getCellStyle(this.state.cell);\n\t\t\t\t\t\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - index].active = false;\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - index].execute(me);\n\t\t\t\t\t\n\t\t\t\t\t// Sets style and apply on shape to force repaint and\n\t\t\t\t\t// check if execute has removed custom handles\n\t\t\t\t\tif (this.customHandles != null &&\n\t\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - index] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.style = style;\n\t\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - index].positionChanged();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (index == mxEvent.ROTATION_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.currentAlpha != null)\n\t\t\t\t{\n\t\t\t\t\tvar delta = this.currentAlpha - (this.state.style[mxConstants.STYLE_ROTATION] || 0);\n\t\t\t\t\t\n\t\t\t\t\tif (delta != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.rotateCell(this.state.cell, delta);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.rotateClick();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar gridEnabled = this.graph.isGridEnabledEvent(me.getEvent());\n\t\t\t\tvar alpha = mxUtils.toRadians(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\t\n\t\t\t\tvar dx = point.x - this.startX;\n\t\t\t\tvar dy = point.y - this.startY;\n\t\t\t\t\n\t\t\t\t// Rotates vector for mouse gesture\n\t\t\t\tvar tx = cos * dx - sin * dy;\n\t\t\t\tvar ty = sin * dx + cos * dy;\n\t\t\t\t\n\t\t\t\tdx = tx;\n\t\t\t\tdy = ty;\n\t\t\t\t\n\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\tvar recurse = this.isRecursiveResize(this.state, me);\n\t\t\t\tthis.resizeCell(this.state.cell, this.roundLength(dx / s), this.roundLength(dy / s),\n\t\t\t\t\tindex, gridEnabled, this.isConstrainedEvent(me), recurse);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.graph.getModel().endUpdate();\n\t\t}\n\n\t\tme.consume();\n\t\tthis.reset();\n\t\tthis.redrawHandles();\n\t}\n};\n\n/**\n * Function: isRecursiveResize\n * \n * Returns the recursiveResize of the give state.\n * \n * Parameters:\n * \n * state - the given <mxCellState>. This implementation takes \n * the value of this state.\n * me - the mouse event.\n */\nmxVertexHandler.prototype.isRecursiveResize = function(state, me)\n{\n\treturn this.graph.isRecursiveResize(this.state);\n};\n\n/**\n * Function: rotateClick\n * \n * Hook for subclassers to implement a single click on the rotation handle.\n * This code is executed as part of the model transaction. This implementation\n * is empty.\n */\nmxVertexHandler.prototype.rotateClick = function() { };\n\n/**\n * Function: rotateCell\n * \n * Rotates the given cell and its children by the given angle in degrees.\n * \n * Parameters:\n * \n * cell - <mxCell> to be rotated.\n * angle - Angle in degrees.\n */\nmxVertexHandler.prototype.rotateCell = function(cell, angle, parent)\n{\n\tif (angle != 0)\n\t{\n\t\tvar model = this.graph.getModel();\n\n\t\tif (model.isVertex(cell) || model.isEdge(cell))\n\t\t{\n\t\t\tif (!model.isEdge(cell))\n\t\t\t{\n\t\t\t\tvar style = this.graph.getCurrentCellStyle(cell);\n\t\t\t\tvar total = (style[mxConstants.STYLE_ROTATION] || 0) + angle;\n\t\t\t\tthis.graph.setCellStyles(mxConstants.STYLE_ROTATION, total, [cell]);\n\t\t\t}\n\t\t\t\n\t\t\tvar geo = this.graph.getCellGeometry(cell);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar pgeo = this.graph.getCellGeometry(parent);\n\t\t\t\t\n\t\t\t\tif (pgeo != null && !model.isEdge(parent))\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\tgeo.rotate(angle, new mxPoint(pgeo.width / 2, pgeo.height / 2));\n\t\t\t\t\tmodel.setGeometry(cell, geo);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ((model.isVertex(cell) && !geo.relative) || model.isEdge(cell))\n\t\t\t\t{\n\t\t\t\t\t// Recursive rotation\n\t\t\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.rotateCell(model.getChildAt(cell, i), angle, cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxVertexHandler.prototype.reset = function()\n{\n\tif (this.sizers != null && this.index != null && this.sizers[this.index] != null &&\n\t\tthis.sizers[this.index].node.style.display == 'none')\n\t{\n\t\tthis.sizers[this.index].node.style.display = '';\n\t}\n\n\tthis.currentAlpha = null;\n\tthis.inTolerance = null;\n\tthis.index = null;\n\n\t// TODO: Reset and redraw cell states for live preview\n\tif (this.preview != null)\n\t{\n\t\tthis.preview.destroy();\n\t\tthis.preview = null;\n\t}\n\t\n\tif (this.ghostPreview != null)\n\t{\n\t\tthis.ghostPreview.destroy();\n\t\tthis.ghostPreview = null;\n\t}\n\n\tif (this.livePreviewActive && this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tif (this.sizers[i] != null)\n\t\t\t{\n\t\t\t\tthis.sizers[i].node.style.display = '';\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Shows folding icon\n\t\tif (this.state.control != null && this.state.control.node != null)\n\t\t{\n\t\t\tthis.state.control.node.style.visibility = '';\n\t\t}\n\t}\n\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tif (this.customHandles[i].active)\n\t\t\t{\n\t\t\t\tthis.customHandles[i].active = false;\n\t\t\t\tthis.customHandles[i].reset();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.customHandles[i].setVisible(true);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Checks if handler has been destroyed\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.node.style.display = 'inline';\n\t\tthis.selectionBounds = this.getSelectionBounds(this.state);\n\t\tthis.bounds = new mxRectangle(this.selectionBounds.x, this.selectionBounds.y,\n\t\t\tthis.selectionBounds.width, this.selectionBounds.height);\n\t\tthis.drawPreview();\n\t}\n\n\tthis.removeHint();\n\tthis.redrawHandles();\n\tthis.edgeHandlers = null;\n\tthis.handlesVisible = true;\n\tthis.unscaledBounds = null;\n\tthis.livePreviewActive = null;\n};\n\n/**\n * Function: resizeCell\n * \n * Uses the given vector to change the bounds of the given cell\n * in the graph using <mxGraph.resizeCell>.\n */\nmxVertexHandler.prototype.resizeCell = function(cell, dx, dy, index, gridEnabled, constrained, recurse)\n{\n\tvar geo = this.graph.model.getGeometry(cell);\n\t\n\tif (geo != null)\n\t{\n\t\tif (index == mxEvent.LABEL_HANDLE)\n\t\t{\n\t\t\tvar alpha = -mxUtils.toRadians(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\tvar cos = Math.cos(alpha);\n\t\t\tvar sin = Math.sin(alpha);\n\t\t\tvar scale = this.graph.view.scale;\n\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(\n\t\t\t\tMath.round((this.labelShape.bounds.getCenterX() - this.startX) / scale),\n\t\t\t\tMath.round((this.labelShape.bounds.getCenterY() - this.startY) / scale)),\n\t\t\t\tcos, sin);\n\n\t\t\tgeo = geo.clone();\n\t\t\t\n\t\t\tif (geo.offset == null)\n\t\t\t{\n\t\t\t\tgeo.offset = pt;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgeo.offset.x += pt.x;\n\t\t\t\tgeo.offset.y += pt.y;\n\t\t\t}\n\t\t\t\n\t\t\tthis.graph.model.setGeometry(cell, geo);\n\t\t}\n\t\telse if (this.unscaledBounds != null)\n\t\t{\n\t\t\tvar scale = this.graph.view.scale;\n\n\t\t\tif (this.childOffsetX != 0 || this.childOffsetY != 0)\n\t\t\t{\n\t\t\t\tthis.moveChildren(cell, Math.round(this.childOffsetX / scale), Math.round(this.childOffsetY / scale));\n\t\t\t}\n\n\t\t\tthis.graph.resizeCell(cell, this.unscaledBounds, recurse);\n\t\t}\n\t}\n};\n\n/**\n * Function: moveChildren\n * \n * Moves the children of the given cell by the given vector.\n */\nmxVertexHandler.prototype.moveChildren = function(cell, dx, dy)\n{\n\tvar model = this.graph.getModel();\n\tvar childCount = model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(cell, i);\n\t\tvar geo = this.graph.getCellGeometry(child);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.translate(dx, dy);\n\t\t\tmodel.setGeometry(child, geo);\n\t\t}\n\t}\n};\n/**\n * Function: union\n * \n * Returns the union of the given bounds and location for the specified\n * handle index.\n * \n * To override this to limit the size of vertex via a minWidth/-Height style,\n * the following code can be used.\n * \n * (code)\n * var vertexHandlerUnion = mxVertexHandler.prototype.union;\n * mxVertexHandler.prototype.union = function(bounds, dx, dy, index, gridEnabled, scale, tr, constrained)\n * {\n *   var result = vertexHandlerUnion.apply(this, arguments);\n *   \n *   result.width = Math.max(result.width, mxUtils.getNumber(this.state.style, 'minWidth', 0));\n *   result.height = Math.max(result.height, mxUtils.getNumber(this.state.style, 'minHeight', 0));\n *   \n *   return result;\n * };\n * (end)\n * \n * The minWidth/-Height style can then be used as follows:\n * \n * (code)\n * graph.insertVertex(parent, null, 'Hello,', 20, 20, 80, 30, 'minWidth=100;minHeight=100;');\n * (end)\n * \n * To override this to update the height for a wrapped text if the width of a vertex is\n * changed, the following can be used.\n * \n * (code)\n * var mxVertexHandlerUnion = mxVertexHandler.prototype.union;\n * mxVertexHandler.prototype.union = function(bounds, dx, dy, index, gridEnabled, scale, tr, constrained)\n * {\n *   var result = mxVertexHandlerUnion.apply(this, arguments);\n *   var s = this.state;\n *   \n *   if (this.graph.isHtmlLabel(s.cell) && (index == 3 || index == 4) &&\n *       s.text != null && s.style[mxConstants.STYLE_WHITE_SPACE] == 'wrap')\n *   {\n *     var label = this.graph.getLabel(s.cell);\n *     var fontSize = mxUtils.getNumber(s.style, mxConstants.STYLE_FONTSIZE, mxConstants.DEFAULT_FONTSIZE);\n *     var ww = result.width / s.view.scale - s.text.spacingRight - s.text.spacingLeft\n *     \n *     result.height = mxUtils.getSizeForString(label, fontSize, s.style[mxConstants.STYLE_FONTFAMILY], ww).height;\n *   }\n *   \n *   return result;\n * };\n * (end)\n */\nmxVertexHandler.prototype.union = function(bounds, dx, dy, index, gridEnabled, scale, tr, constrained, centered)\n{\n\tgridEnabled = (gridEnabled != null) ? gridEnabled && this.graph.gridEnabled : this.graph.gridEnabled;\n\t\n\tif (this.singleSizer)\n\t{\n\t\tvar x = bounds.x + bounds.width + dx;\n\t\tvar y = bounds.y + bounds.height + dy;\n\t\t\n\t\tif (gridEnabled)\n\t\t{\n\t\t\tx = this.graph.snap(x / scale) * scale;\n\t\t\ty = this.graph.snap(y / scale) * scale;\n\t\t}\n\t\t\n\t\tvar rect = new mxRectangle(bounds.x, bounds.y, 0, 0);\n\t\trect.add(new mxRectangle(x, y, 0, 0));\n\t\t\n\t\treturn rect;\n\t}\n\telse\n\t{\n\t\tvar w0 = bounds.width;\n\t\tvar h0 = bounds.height;\n\t\tvar left = bounds.x - tr.x * scale;\n\t\tvar right = left + w0;\n\t\tvar top = bounds.y - tr.y * scale;\n\t\tvar bottom = top + h0;\n\t\t\n\t\tvar cx = left + w0 / 2;\n\t\tvar cy = top + h0 / 2;\n\t\t\n\t\tif (index > 4 /* Bottom Row */)\n\t\t{\n\t\t\tbottom = bottom + dy;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\tbottom = this.graph.snap(bottom / scale) * scale;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbottom = Math.round(bottom / scale) * scale;\n\t\t\t}\n\t\t}\n\t\telse if (index < 3 /* Top Row */)\n\t\t{\n\t\t\ttop = top + dy;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\ttop = this.graph.snap(top / scale) * scale;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttop = Math.round(top / scale) * scale;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (index == 0 || index == 3 || index == 5 /* Left */)\n\t\t{\n\t\t\tleft += dx;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\tleft = this.graph.snap(left / scale) * scale;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tleft = Math.round(left / scale) * scale;\n\t\t\t}\n\t\t}\n\t\telse if (index == 2 || index == 4 || index == 7 /* Right */)\n\t\t{\n\t\t\tright += dx;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\tright = this.graph.snap(right / scale) * scale;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tright = Math.round(right / scale) * scale;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar width = right - left;\n\t\tvar height = bottom - top;\n\n\t\tif (constrained)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar aspect = geo.width / geo.height;\n\t\t\t\t\n\t\t\t\tif (index== 1 || index== 2 || index == 7 || index == 6)\n\t\t\t\t{\n\t\t\t\t\twidth = height * aspect;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\theight = width / aspect;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (index == 0)\n\t\t\t\t{\n\t\t\t\t\tleft = right - width;\n\t\t\t\t\ttop = bottom - height;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (centered)\n\t\t{\n\t\t\twidth += (width - w0);\n\t\t\theight += (height - h0);\n\t\t\t\n\t\t\tvar cdx = cx - (left + width / 2);\n\t\t\tvar cdy = cy - (top + height / 2);\n\n\t\t\tleft += cdx;\n\t\t\ttop += cdy;\n\t\t\tright += cdx;\n\t\t\tbottom += cdy;\n\t\t}\n\n\t\t// Flips over left side\n\t\tif (width < 0)\n\t\t{\n\t\t\tleft += width;\n\t\t\twidth = Math.abs(width);\n\t\t}\n\t\t\n\t\t// Flips over top side\n\t\tif (height < 0)\n\t\t{\n\t\t\ttop += height;\n\t\t\theight = Math.abs(height);\n\t\t}\n\n\t\tvar result = new mxRectangle(left + tr.x * scale, top + tr.y * scale, width, height);\n\t\t\n\t\tif (this.minBounds != null)\n\t\t{\n\t\t\tresult.width = Math.max(result.width, this.minBounds.x * scale + this.minBounds.width * scale +\n\t\t\t\tMath.max(0, this.x0 * scale - result.x));\n\t\t\tresult.height = Math.max(result.height, this.minBounds.y * scale + this.minBounds.height * scale +\n\t\t\t\tMath.max(0, this.y0 * scale - result.y));\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n};\n\n/**\n * Function: redraw\n * \n * Redraws the handles and the preview.\n */\nmxVertexHandler.prototype.redraw = function(ignoreHandles)\n{\n\tthis.selectionBounds = this.getSelectionBounds(this.state);\n\tthis.bounds = new mxRectangle(this.selectionBounds.x, this.selectionBounds.y,\n\t\tthis.selectionBounds.width, this.selectionBounds.height);\n\tthis.drawPreview();\n\n\tif (!ignoreHandles)\n\t{\n\t\tthis.redrawHandles();\n\t}\n};\n\n/**\n * Returns the padding to be used for drawing handles for the current <bounds>.\n */\nmxVertexHandler.prototype.getHandlePadding = function()\n{\n\t// KNOWN: Tolerance depends on event type (eg. 0 for mouse events)\n\tvar result = new mxPoint(0, 0);\n\tvar tol = this.tolerance;\n\n\tif (this.sizers != null && this.sizers.length > 0 && this.sizers[0] != null &&\n\t\t(this.bounds.width < 2 * this.sizers[0].bounds.width + 2 * tol ||\n\t\tthis.bounds.height < 2 * this.sizers[0].bounds.height + 2 * tol))\n\t{\n\t\ttol /= 2;\n\t\t\n\t\tresult.x = this.sizers[0].bounds.width + tol;\n\t\tresult.y = this.sizers[0].bounds.height + tol;\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getSizerBounds\n * \n * Returns the bounds used to paint the resize handles.\n */\nmxVertexHandler.prototype.getSizerBounds = function()\n{\n\treturn this.bounds;\n};\n\n/**\n * Function: redrawHandles\n * \n * Redraws the handles. To hide certain handles the following code can be used.\n * \n * (code)\n * mxVertexHandler.prototype.redrawHandles = function()\n * {\n *   mxVertexHandlerRedrawHandles.apply(this, arguments);\n *   \n *   if (this.sizers != null && this.sizers.length > 7)\n *   {\n *     this.sizers[1].node.style.display = 'none';\n *     this.sizers[6].node.style.display = 'none';\n *   }\n * };\n * (end)\n */\nmxVertexHandler.prototype.redrawHandles = function()\n{\n\tvar s = this.getSizerBounds();\n\tvar tol = this.tolerance;\n\tthis.horizontalOffset = 0;\n\tthis.verticalOffset = 0;\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tvar temp = this.customHandles[i].shape.node.style.display;\n\t\t\tthis.customHandles[i].redraw();\n\t\t\tthis.customHandles[i].shape.node.style.display = temp;\n\n\t\t\t// Hides custom handles during text editing\n\t\t\tthis.customHandles[i].shape.node.style.visibility =\n\t\t\t\t(this.handlesVisible && this.isCustomHandleVisible(\n\t\t\t\t\tthis.customHandles[i])) ? '' : 'hidden';\n\t\t}\n\t}\n\n\tif (this.sizers != null && this.sizers.length > 0 && this.sizers[0] != null)\n\t{\n\t\tif (this.index == null && this.manageSizers && this.sizers.length >= 8)\n\t\t{\n\t\t\t// KNOWN: Tolerance depends on event type (eg. 0 for mouse events)\n\t\t\tvar padding = this.getHandlePadding();\n\t\t\tthis.horizontalOffset = padding.x;\n\t\t\tthis.verticalOffset = padding.y;\n\t\t\t\n\t\t\tif (this.horizontalOffset != 0 || this.verticalOffset != 0)\n\t\t\t{\n\t\t\t\ts = new mxRectangle(s.x, s.y, s.width, s.height);\n\n\t\t\t\ts.x -= this.horizontalOffset / 2;\n\t\t\t\ts.width += this.horizontalOffset;\n\t\t\t\ts.y -= this.verticalOffset / 2;\n\t\t\t\ts.height += this.verticalOffset;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.sizers.length >= 8)\n\t\t\t{\n\t\t\t\tif ((s.width < 2 * this.sizers[0].bounds.width + 2 * tol) ||\n\t\t\t\t\t(s.height < 2 * this.sizers[0].bounds.height + 2 * tol))\n\t\t\t\t{\n\t\t\t\t\tthis.sizers[0].node.style.display = 'none';\n\t\t\t\t\tthis.sizers[2].node.style.display = 'none';\n\t\t\t\t\tthis.sizers[5].node.style.display = 'none';\n\t\t\t\t\tthis.sizers[7].node.style.display = 'none';\n\t\t\t\t}\n\t\t\t\telse if (this.handlesVisible)\n\t\t\t\t{\n\t\t\t\t\tthis.sizers[0].node.style.display = '';\n\t\t\t\t\tthis.sizers[2].node.style.display = '';\n\t\t\t\t\tthis.sizers[5].node.style.display = '';\n\t\t\t\t\tthis.sizers[7].node.style.display = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar r = s.x + s.width;\n\t\tvar b = s.y + s.height;\n\t\t\n\t\tif (this.singleSizer)\n\t\t{\n\t\t\tthis.moveSizerTo(this.sizers[0], r, b);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar cx = s.x + s.width / 2;\n\t\t\tvar cy = s.y + s.height / 2;\n\t\t\t\n\t\t\tif (this.sizers.length >= 8)\n\t\t\t{\n\t\t\t\tvar crs = ['nw-resize', 'n-resize', 'ne-resize', 'e-resize', 'se-resize', 's-resize', 'sw-resize', 'w-resize'];\n\t\t\t\t\n\t\t\t\tvar alpha = mxUtils.toRadians(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\tvar cos = Math.cos(alpha);\n\t\t\t\tvar sin = Math.sin(alpha);\n\t\t\t\t\n\t\t\t\tvar da = Math.round(alpha * 4 / Math.PI);\n\t\t\t\t\n\t\t\t\tvar ct = new mxPoint(s.getCenterX(), s.getCenterY());\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(s.x, s.y), cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[0], pt.x, pt.y);\n\t\t\t\tthis.sizers[0].setCursor(crs[mxUtils.mod(0 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tpt.x = cx;\n\t\t\t\tpt.y = s.y;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[1], pt.x, pt.y);\n\t\t\t\tthis.sizers[1].setCursor(crs[mxUtils.mod(1 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tpt.x = r;\n\t\t\t\tpt.y = s.y;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[2], pt.x, pt.y);\n\t\t\t\tthis.sizers[2].setCursor(crs[mxUtils.mod(2 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tpt.x = s.x;\n\t\t\t\tpt.y = cy;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[3], pt.x, pt.y);\n\t\t\t\tthis.sizers[3].setCursor(crs[mxUtils.mod(7 + da, crs.length)]);\n\n\t\t\t\tpt.x = r;\n\t\t\t\tpt.y = cy;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[4], pt.x, pt.y);\n\t\t\t\tthis.sizers[4].setCursor(crs[mxUtils.mod(3 + da, crs.length)]);\n\n\t\t\t\tpt.x = s.x;\n\t\t\t\tpt.y = b;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[5], pt.x, pt.y);\n\t\t\t\tthis.sizers[5].setCursor(crs[mxUtils.mod(6 + da, crs.length)]);\n\n\t\t\t\tpt.x = cx;\n\t\t\t\tpt.y = b;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[6], pt.x, pt.y);\n\t\t\t\tthis.sizers[6].setCursor(crs[mxUtils.mod(5 + da, crs.length)]);\n\n\t\t\t\tpt.x = r;\n\t\t\t\tpt.y = b;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[7], pt.x, pt.y);\n\t\t\t\tthis.sizers[7].setCursor(crs[mxUtils.mod(4 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tpt.x = cx + this.state.absoluteOffset.x;\n\t\t\t\tpt.y = cy + this.state.absoluteOffset.y;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\tthis.moveSizerTo(this.sizers[8], pt.x, pt.y);\n\t\t\t}\n\t\t\telse if (this.state.width >= 2 && this.state.height >= 2)\n\t\t\t{\n\t\t\t\tthis.moveSizerTo(this.sizers[0], cx + this.state.absoluteOffset.x, cy + this.state.absoluteOffset.y);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.moveSizerTo(this.sizers[0], this.state.x, this.state.y);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.rotationShape != null)\n\t{\n\t\tvar alpha = mxUtils.toRadians((this.currentAlpha != null) ? this.currentAlpha : this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\tvar cos = Math.cos(alpha);\n\t\tvar sin = Math.sin(alpha);\n\t\t\n\t\tvar ct = new mxPoint(this.state.getCenterX(), this.state.getCenterY());\n\t\tvar pt = mxUtils.getRotatedPoint(this.getRotationHandlePosition(), cos, sin, ct);\n\n\t\tif (this.rotationShape.node != null)\n\t\t{\n\t\t\tthis.moveSizerTo(this.rotationShape, pt.x, pt.y);\n\n\t\t\t// Hides rotation handle during text editing\n\t\t\tthis.rotationShape.node.style.visibility = (this.state.view.graph.isEditing() ||\n\t\t\t\t!this.handlesVisible) ? 'hidden' : '';\n\t\t}\n\t}\n\t\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t}\n\t\n\tif (this.edgeHandlers != null)\n\t{\t\t\n\t\tfor (var i = 0; i < this.edgeHandlers.length; i++)\n\t\t{\n\t\t\tthis.edgeHandlers[i].redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: isCustomHandleVisible\n * \n * Returns true if the given custom handle is visible.\n */\nmxVertexHandler.prototype.isCustomHandleVisible = function(handle)\n{\n\treturn !this.graph.isEditing() && this.state.view.graph.getSelectionCount() == 1;\n};\n\n/**\n * Function: getRotationHandlePosition\n * \n * Returns an <mxPoint> that defines the rotation handle position.\n */\nmxVertexHandler.prototype.getRotationHandlePosition = function()\n{\n\treturn new mxPoint(this.bounds.x + this.bounds.width / 2, this.bounds.y + this.rotationHandleVSpacing)\n};\n\n/**\n * Function: isParentHighlightVisible\n * \n * Returns true if the parent highlight should be visible. This implementation\n * always returns true.\n */\nmxVertexHandler.prototype.isParentHighlightVisible = function()\n{\n\treturn !this.graph.isCellSelected(this.graph.model.getParent(this.state.cell));\n};\n\n/**\n * Function: updateParentHighlight\n * \n * Updates the highlight of the parent if <parentHighlightEnabled> is true.\n */\nmxVertexHandler.prototype.updateParentHighlight = function()\n{\n\tif (!this.isDestroyed())\n\t{\n\t\tvar visible = this.isParentHighlightVisible();\n\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\tvar pstate = this.graph.view.getState(parent);\n\n\t\tif (this.parentHighlight != null)\n\t\t{\n\t\t\tif (this.graph.model.isVertex(parent) && visible)\n\t\t\t{\n\t\t\t\tvar b = this.parentHighlight.bounds;\n\t\t\t\t\n\t\t\t\tif (pstate != null && (b.x != pstate.x || b.y != pstate.y ||\n\t\t\t\t\tb.width != pstate.width || b.height != pstate.height))\n\t\t\t\t{\n\t\t\t\t\tthis.parentHighlight.bounds = mxRectangle.fromRectangle(pstate);\n\t\t\t\t\tthis.parentHighlight.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (pstate != null && pstate.parentHighlight == this.parentHighlight)\n\t\t\t\t{\n\t\t\t\t\tpstate.parentHighlight = null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.parentHighlight.destroy();\n\t\t\t\tthis.parentHighlight = null;\n\t\t\t}\n\t\t}\n\t\telse if (this.parentHighlightEnabled && visible)\n\t\t{\n\t\t\tif (this.graph.model.isVertex(parent) && pstate != null &&\n\t\t\t\tpstate.parentHighlight == null)\n\t\t\t{\n\t\t\t\tthis.parentHighlight = this.createParentHighlightShape(pstate);\n\t\t\t\t// VML dialect required here for event transparency in IE\n\t\t\t\tthis.parentHighlight.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\tthis.parentHighlight.pointerEvents = false;\n\t\t\t\tthis.parentHighlight.rotation = Number(pstate.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\tthis.parentHighlight.init(this.graph.getView().getOverlayPane());\n\t\t\t\tthis.parentHighlight.redraw();\n\t\t\t\t\n\t\t\t\t// Shows highlight once per parent\n\t\t\t\tpstate.parentHighlight = this.parentHighlight;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: drawPreview\n * \n * Redraws the preview.\n */\nmxVertexHandler.prototype.drawPreview = function()\n{\n\tif (this.preview != null)\n\t{\n\t\tthis.preview.bounds = this.bounds;\n\t\t\n\t\tif (this.preview.node.parentNode == this.graph.container)\n\t\t{\n\t\t\tthis.preview.bounds.width = Math.max(0, this.preview.bounds.width - 1);\n\t\t\tthis.preview.bounds.height = Math.max(0, this.preview.bounds.height - 1);\n\t\t}\n\t\n\t\tthis.preview.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\tthis.preview.redraw();\n\t}\n\t\n\tthis.selectionBorder.bounds = this.getSelectionBorderBounds();\n\tthis.selectionBorder.redraw();\n\tthis.updateParentHighlight();\n};\n\n/**\n * Function: getSelectionBorderBounds\n * \n * Returns the bounds for the selection border.\n */\nmxVertexHandler.prototype.getSelectionBorderBounds = function()\n{\n\treturn this.bounds;\n};\n\n/**\n * Function: isDestroyed\n * \n * Returns true if this handler was destroyed or not initialized.\n */\nmxVertexHandler.prototype.isDestroyed = function()\n{\n\treturn this.selectionBorder == null;\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxVertexHandler.prototype.destroy = function()\n{\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.state.view.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n\t\n\tif (this.preview != null)\n\t{\n\t\tthis.preview.destroy();\n\t\tthis.preview = null;\n\t}\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\tvar pstate = this.graph.view.getState(parent);\n\n\t\tif (pstate != null && pstate.parentHighlight == this.parentHighlight)\n\t\t{\n\t\t\tpstate.parentHighlight = null;\n\t\t}\n\t\t\n\t\tthis.parentHighlight.destroy();\n\t\tthis.parentHighlight = null;\n\t}\n\t\n\tif (this.ghostPreview != null)\n\t{\n\t\tthis.ghostPreview.destroy();\n\t\tthis.ghostPreview = null;\n\t}\n\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.destroy();\n\t\tthis.selectionBorder = null;\n\t}\n\t\n\tthis.labelShape = null;\n\tthis.removeHint();\n\n\tif (this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tthis.sizers[i].destroy();\n\t\t}\n\t\t\n\t\tthis.sizers = null;\n\t}\n\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].destroy();\n\t\t}\n\t\t\n\t\tthis.customHandles = null;\n\t}\n};\n\n__mxOutput.mxVertexHandler = typeof mxVertexHandler !== 'undefined' ? mxVertexHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEdgeHandler\n *\n * Graph event handler that reconnects edges and modifies control points and\n * the edge label location. Uses <mxTerminalMarker> for finding and\n * highlighting new source and target vertices. This handler is automatically\n * created in <mxGraph.createHandler> for each selected edge.\n * \n * To enable adding/removing control points, the following code can be used:\n * \n * (code)\n * mxEdgeHandler.prototype.addEnabled = true;\n * mxEdgeHandler.prototype.removeEnabled = true;\n * (end)\n * \n * Note: This experimental feature is not recommended for production use.\n * \n * Constructor: mxEdgeHandler\n *\n * Constructs an edge handler for the specified <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be handled.\n */\nfunction mxEdgeHandler(state)\n{\n\tif (state != null && state.shape != null)\n\t{\n\t\tthis.state = state;\n\t\tthis.init();\n\t\t\n\t\t// Handles escape keystrokes\n\t\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar dirty = this.index != null;\n\t\t\tthis.reset();\n\t\t\t\n\t\t\tif (dirty)\n\t\t\t{\n\t\t\t\tthis.graph.cellRenderer.redraw(this.state, false, state.view.isRendering());\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.state.view.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t}\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxEdgeHandler.prototype.graph = null;\n\n/**\n * Variable: state\n * \n * Reference to the <mxCellState> being modified.\n */\nmxEdgeHandler.prototype.state = null;\n\n/**\n * Variable: marker\n * \n * Holds the <mxTerminalMarker> which is used for highlighting terminals.\n */\nmxEdgeHandler.prototype.marker = null;\n\n/**\n * Variable: constraintHandler\n * \n * Holds the <mxConstraintHandler> used for drawing and highlighting\n * constraints.\n */\nmxEdgeHandler.prototype.constraintHandler = null;\n\n/**\n * Variable: error\n * \n * Holds the current validation error while a connection is being changed.\n */\nmxEdgeHandler.prototype.error = null;\n\n/**\n * Variable: shape\n * \n * Holds the <mxShape> that represents the preview edge.\n */\nmxEdgeHandler.prototype.shape = null;\n\n/**\n * Variable: bends\n * \n * Holds the <mxShapes> that represent the points.\n */\nmxEdgeHandler.prototype.bends = null;\n\n/**\n * Variable: labelShape\n * \n * Holds the <mxShape> that represents the label position.\n */\nmxEdgeHandler.prototype.labelShape = null;\n\n/**\n * Variable: cloneEnabled\n * \n * Specifies if cloning by control-drag is enabled. Default is true.\n */\nmxEdgeHandler.prototype.cloneEnabled = true;\n\n/**\n * Variable: addEnabled\n * \n * Specifies if adding bends by shift-click is enabled. Default is false.\n * Note: This experimental feature is not recommended for production use.\n */\nmxEdgeHandler.prototype.addEnabled = false;\n\n/**\n * Variable: removeEnabled\n * \n * Specifies if removing bends by shift-click is enabled. Default is false.\n * Note: This experimental feature is not recommended for production use.\n */\nmxEdgeHandler.prototype.removeEnabled = false;\n\n/**\n * Variable: dblClickRemoveEnabled\n * \n * Specifies if removing bends by double click is enabled. Default is false.\n */\nmxEdgeHandler.prototype.dblClickRemoveEnabled = false;\n\n/**\n * Variable: mergeRemoveEnabled\n * \n * Specifies if removing bends by dropping them on other bends is enabled.\n * Default is false.\n */\nmxEdgeHandler.prototype.mergeRemoveEnabled = false;\n\n/**\n * Variable: straightRemoveEnabled\n * \n * Specifies if removing bends by creating straight segments should be enabled.\n * If enabled, this can be overridden by holding down the alt key while moving.\n * Default is false.\n */\nmxEdgeHandler.prototype.straightRemoveEnabled = false;\n\n/**\n * Variable: virtualBendsEnabled\n * \n * Specifies if virtual bends should be added in the center of each\n * segments. These bends can then be used to add new waypoints.\n * Default is false.\n */\nmxEdgeHandler.prototype.virtualBendsEnabled = false;\n\n/**\n * Variable: virtualBendOpacity\n * \n * Opacity to be used for virtual bends (see <virtualBendsEnabled>).\n * Default is 20.\n */\nmxEdgeHandler.prototype.virtualBendOpacity = 20;\n\n/**\n * Variable: parentHighlightEnabled\n * \n * Specifies if the parent should be highlighted if a child cell is selected.\n * Default is false.\n */\nmxEdgeHandler.prototype.parentHighlightEnabled = false;\n\n/**\n * Variable: preferHtml\n * \n * Specifies if bends should be added to the graph container. This is updated\n * in <init> based on whether the edge or one of its terminals has an HTML\n * label in the container.\n */\nmxEdgeHandler.prototype.preferHtml = false;\n\n/**\n * Variable: allowHandleBoundsCheck\n * \n * Specifies if the bounds of handles should be used for hit-detection in IE\n * Default is true.\n */\nmxEdgeHandler.prototype.allowHandleBoundsCheck = true;\n\n/**\n * Variable: snapToTerminals\n * \n * Specifies if waypoints should snap to the routing centers of terminals.\n * Default is false.\n */\nmxEdgeHandler.prototype.snapToTerminals = false;\n\n/**\n * Variable: handleImage\n * \n * Optional <mxImage> to be used as handles. Default is null.\n */\nmxEdgeHandler.prototype.handleImage = null;\n\n/**\n * Variable: tolerance\n * \n * Optional tolerance for hit-detection in <getHandleForEvent>. Default is 0.\n */\nmxEdgeHandler.prototype.tolerance = 0;\n\n/**\n * Variable: outlineConnect\n * \n * Specifies if connections to the outline of a highlighted target should be\n * enabled. This will allow to place the connection point along the outline of\n * the highlighted target. Default is false.\n */\nmxEdgeHandler.prototype.outlineConnect = false;\n\n/**\n * Variable: manageLabelHandle\n * \n * Specifies if the label handle should be moved if it intersects with another\n * handle. Uses <checkLabelHandle> for checking and moving. Default is false.\n */\nmxEdgeHandler.prototype.manageLabelHandle = false;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this edge handler.\n */\nmxEdgeHandler.prototype.init = function()\n{\n\tthis.graph = this.state.view.graph;\n\tthis.marker = this.createMarker();\n\tthis.constraintHandler = new mxConstraintHandler(this.graph);\n\t\n\t// Clones the original points from the cell\n\t// and makes sure at least one point exists\n\tthis.points = [];\n\t\n\t// Uses the absolute points of the state\n\t// for the initial configuration and preview\n\tthis.abspoints = this.getSelectionPoints(this.state);\n\tthis.shape = this.createSelectionShape(this.abspoints);\n\tthis.shape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\tthis.shape.init(this.graph.getView().getOverlayPane());\n\tthis.shape.pointerEvents = false;\n\tthis.shape.setCursor(mxConstants.CURSOR_MOVABLE_EDGE);\n\tmxEvent.redirectMouseEvents(this.shape.node, this.graph, this.state);\n\n\t// Updates preferHtml\n\tthis.preferHtml = this.state.text != null &&\n\t\tthis.state.text.node.parentNode == this.graph.container;\n\t\n\tif (!this.preferHtml)\n\t{\n\t\t// Checks source terminal\n\t\tvar sourceState = this.state.getVisibleTerminalState(true);\n\t\t\n\t\tif (sourceState != null)\n\t\t{\n\t\t\tthis.preferHtml = sourceState.text != null &&\n\t\t\t\tsourceState.text.node.parentNode == this.graph.container;\n\t\t}\n\t\t\n\t\tif (!this.preferHtml)\n\t\t{\n\t\t\t// Checks target terminal\n\t\t\tvar targetState = this.state.getVisibleTerminalState(false);\n\t\t\t\n\t\t\tif (targetState != null)\n\t\t\t{\n\t\t\t\tthis.preferHtml = targetState.text != null &&\n\t\t\t\ttargetState.text.node.parentNode == this.graph.container;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Creates bends for the non-routed absolute points\n\t// or bends that don't correspond to points\n\tif (this.graph.getSelectionCount() < mxGraphHandler.prototype.maxCells ||\n\t\tmxGraphHandler.prototype.maxCells <= 0)\n\t{\n\t\tthis.bends = this.createBends();\n\n\t\tif (this.isVirtualBendsEnabled())\n\t\t{\n\t\t\tthis.virtualBends = this.createVirtualBends();\n\t\t}\n\t}\n\n\t// Adds a rectangular handle for the label position\n\tthis.label = new mxPoint(this.state.absoluteOffset.x, this.state.absoluteOffset.y);\n\tthis.labelShape = this.createLabelHandleShape();\n\tthis.initBend(this.labelShape);\n\tthis.labelShape.setCursor(mxConstants.CURSOR_LABEL_HANDLE);\n\t\n\tthis.customHandles = this.createCustomHandles();\n\t\n\tthis.updateParentHighlight();\n\tthis.redraw();\n};\n\n\n/**\n * Function: isParentHighlightVisible\n * \n * Returns true if the parent highlight should be visible. This implementation\n * always returns true.\n */\nmxEdgeHandler.prototype.isParentHighlightVisible = mxVertexHandler.prototype.isParentHighlightVisible;\n\n/**\n * Function: updateParentHighlight\n * \n * Updates the highlight of the parent if <parentHighlightEnabled> is true.\n */\nmxEdgeHandler.prototype.updateParentHighlight = mxVertexHandler.prototype.updateParentHighlight;\n\n/**\n * Function: createCustomHandles\n * \n * Returns an array of custom handles. This implementation returns null.\n */\nmxEdgeHandler.prototype.createCustomHandles = function()\n{\n\treturn null;\n};\n\n/**\n * Function: isVirtualBendsEnabled\n * \n * Returns true if virtual bends should be added. This returns true if\n * <virtualBendsEnabled> is true and the current style allows and\n * renders custom waypoints.\n */\nmxEdgeHandler.prototype.isVirtualBendsEnabled = function(evt)\n{\n\treturn this.virtualBendsEnabled && (this.state.style[mxConstants.STYLE_EDGE] == null ||\n\t\t\tthis.state.style[mxConstants.STYLE_EDGE] == mxConstants.NONE ||\n\t\t\tthis.state.style[mxConstants.STYLE_NOEDGESTYLE] == 1)  &&\n\t\t\tmxUtils.getValue(this.state.style, mxConstants.STYLE_SHAPE, null) != 'arrow';\n};\n\n/**\n * Function: isCellEnabled\n * \n * Returns true if the given cell allows new connections to be created. This implementation\n * always returns true.\n */\nmxEdgeHandler.prototype.isCellEnabled = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: isAddPointEvent\n * \n * Returns true if the given event is a trigger to add a new point. This\n * implementation returns true if shift is pressed.\n */\nmxEdgeHandler.prototype.isAddPointEvent = function(evt)\n{\n\treturn mxEvent.isShiftDown(evt);\n};\n\n/**\n * Function: isRemovePointEvent\n * \n * Returns true if the given event is a trigger to remove a point. This\n * implementation returns true if shift is pressed.\n */\nmxEdgeHandler.prototype.isRemovePointEvent = function(evt)\n{\n\treturn mxEvent.isShiftDown(evt);\n};\n\n/**\n * Function: getSelectionPoints\n * \n * Returns the list of points that defines the selection stroke.\n */\nmxEdgeHandler.prototype.getSelectionPoints = function(state)\n{\n\treturn state.absolutePoints;\n};\n\n/**\n * Function: createParentHighlightShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxEdgeHandler.prototype.createParentHighlightShape = function(bounds)\n{\n\tvar shape = new mxRectangleShape(mxRectangle.fromRectangle(bounds),\n\t\tnull, this.getSelectionColor());\n\tshape.strokewidth = this.getSelectionStrokeWidth();\n\tshape.isDashed = this.isSelectionDashed();\n\t\n\treturn shape;\n};\n\n/**\n * Function: createSelectionShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxEdgeHandler.prototype.createSelectionShape = function(points)\n{\n\tvar shape = new this.state.shape.constructor();\n\tshape.outline = true;\n\tshape.apply(this.state);\n\t\n\tshape.isDashed = this.isSelectionDashed();\n\tshape.stroke = this.getSelectionColor();\n\tshape.isShadow = false;\n\t\n\treturn shape;\n};\n\n/**\n * Function: getSelectionColor\n * \n * Returns <mxConstants.EDGE_SELECTION_COLOR>.\n */\nmxEdgeHandler.prototype.getSelectionColor = function()\n{\n\treturn mxConstants.EDGE_SELECTION_COLOR;\n};\n\n/**\n * Function: getSelectionStrokeWidth\n * \n * Returns <mxConstants.EDGE_SELECTION_STROKEWIDTH>.\n */\nmxEdgeHandler.prototype.getSelectionStrokeWidth = function()\n{\n\treturn mxConstants.EDGE_SELECTION_STROKEWIDTH;\n};\n\n/**\n * Function: isSelectionDashed\n * \n * Returns <mxConstants.EDGE_SELECTION_DASHED>.\n */\nmxEdgeHandler.prototype.isSelectionDashed = function()\n{\n\treturn mxConstants.EDGE_SELECTION_DASHED;\n};\n\n/**\n * Function: isConnectableCell\n * \n * Returns true if the given cell is connectable. This is a hook to\n * disable floating connections. This implementation returns true.\n */\nmxEdgeHandler.prototype.isConnectableCell = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: getCellAt\n * \n * Creates and returns the <mxCellMarker> used in <marker>.\n */\nmxEdgeHandler.prototype.getCellAt = function(x, y)\n{\n\treturn (!this.outlineConnect) ? this.graph.getCellAt(x, y) : null;\n};\n\n/**\n * Function: createMarker\n * \n * Creates and returns the <mxCellMarker> used in <marker>.\n */\nmxEdgeHandler.prototype.createMarker = function()\n{\n\tvar marker = new mxCellMarker(this.graph);\n\tvar self = this; // closure\n\n\t// Only returns edges if they are connectable and never returns\n\t// the edge that is currently being modified\n\tmarker.getCell = function(me)\n\t{\n\t\tvar cell = mxCellMarker.prototype.getCell.apply(this, arguments);\n\n\t\t// Checks for cell at preview point (with grid)\n\t\tif ((cell == self.state.cell || cell == null) && self.currentPoint != null)\n\t\t{\n\t\t\tcell = self.graph.getCellAt(self.currentPoint.x, self.currentPoint.y);\n\t\t}\n\t\t\n\t\t// Uses connectable parent vertex if one exists\n\t\tif (cell != null && !this.graph.isCellConnectable(cell))\n\t\t{\n\t\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\t\t\n\t\t\tif (this.graph.getModel().isVertex(parent) && this.graph.isCellConnectable(parent))\n\t\t\t{\n\t\t\t\tcell = parent;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar model = self.graph.getModel();\n\t\t\n\t\tif ((this.graph.isSwimlane(cell) && self.currentPoint != null &&\n\t\t\tthis.graph.hitsSwimlaneContent(cell, self.currentPoint.x, self.currentPoint.y)) ||\n\t\t\t(!self.isConnectableCell(cell)) || (cell == self.state.cell ||\n\t\t\t(cell != null && !self.graph.connectableEdges && model.isEdge(cell))) ||\n\t\t\tmodel.isAncestor(self.state.cell, cell))\n\t\t{\n\t\t\tcell = null;\n\t\t}\n\t\t\n\t\tif (!this.graph.isCellConnectable(cell))\n\t\t{\n\t\t\tcell = null;\n\t\t}\n\t\t\n\t\treturn cell;\n\t};\n\n\t// Sets the highlight color according to validateConnection\n\tmarker.isValidState = function(state)\n\t{\n\t\tvar model = self.graph.getModel();\n\t\tvar other = self.graph.view.getTerminalPort(state,\n\t\t\tself.graph.view.getState(model.getTerminal(self.state.cell,\n\t\t\t!self.isSource)), !self.isSource);\n\t\tvar otherCell = (other != null) ? other.cell : null;\n\t\tvar source = (self.isSource) ? state.cell : otherCell;\n\t\tvar target = (self.isSource) ? otherCell : state.cell;\n\t\t\n\t\t// Updates the error message of the handler\n\t\tself.error = self.validateConnection(source, target);\n\n\t\treturn self.error == null;\n\t};\n\t\n\treturn marker;\n};\n\n/**\n * Function: validateConnection\n * \n * Returns the error message or an empty string if the connection for the\n * given source, target pair is not valid. Otherwise it returns null. This\n * implementation uses <mxGraph.getEdgeValidationError>.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxEdgeHandler.prototype.validateConnection = function(source, target)\n{\n\treturn this.graph.getEdgeValidationError(this.state.cell, source, target);\n};\n\n/**\n * Function: createBends\n * \n * Creates and returns the bends used for modifying the edge. This is\n * typically an array of <mxRectangleShapes>.\n */\n mxEdgeHandler.prototype.createBends = function()\n {\n\tvar cell = this.state.cell;\n\tvar bends = [];\n\n\tfor (var i = 0; i < this.abspoints.length; i++)\n\t{\n\t\tif (this.isHandleVisible(i))\n\t\t{\n\t\t\tvar source = i == 0;\n\t\t\tvar target = i == this.abspoints.length - 1;\n\t\t\tvar terminal = source || target;\n\n\t\t\tif (terminal || this.graph.isCellBendable(cell))\n\t\t\t{\n\t\t\t\t(mxUtils.bind(this, function(index)\n\t\t\t\t{\n\t\t\t\t\tvar bend = this.createHandleShape(index);\n\t\t\t\t\tthis.initBend(bend, mxUtils.bind(this, mxUtils.bind(this, function()\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.dblClickRemoveEnabled)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.removePoint(this.state, index);\n\t\t\t\t\t\t}\n\t\t\t\t\t})));\n\t\n\t\t\t\t\tif (this.isHandleEnabled(i))\n\t\t\t\t\t{\n\t\t\t\t\t\tbend.setCursor((terminal) ? mxConstants.CURSOR_TERMINAL_HANDLE : mxConstants.CURSOR_BEND_HANDLE);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbends.push(bend);\n\t\t\t\t\n\t\t\t\t\tif (!terminal)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.points.push(new mxPoint(0,0));\n\t\t\t\t\t\tbend.node.style.visibility = 'hidden';\n\t\t\t\t\t}\n\t\t\t\t}))(i);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn bends;\n};\n\n/**\n * Function: createVirtualBends\n * \n * Creates and returns the bends used for modifying the edge. This is\n * typically an array of <mxRectangleShapes>.\n */\n mxEdgeHandler.prototype.createVirtualBends = function()\n {\n\tvar cell = this.state.cell;\n\tvar last = this.abspoints[0];\n\tvar bends = [];\n\n\tif (this.graph.isCellBendable(cell))\n\t{\n\t\tfor (var i = 1; i < this.abspoints.length; i++)\n\t\t{\n\t\t\t(mxUtils.bind(this, function(bend)\n\t\t\t{\n\t\t\t\tthis.initBend(bend);\n\t\t\t\tbend.setCursor(mxConstants.CURSOR_VIRTUAL_BEND_HANDLE);\n\t\t\t\tbends.push(bend);\n\t\t\t}))(this.createHandleShape());\n\t\t}\n\t}\n\n\treturn bends;\n};\n\n/**\n * Function: isHandleEnabled\n * \n * Creates the shape used to display the given bend.\n */\nmxEdgeHandler.prototype.isHandleEnabled = function(index)\n{\n\treturn true;\n};\n\n/**\n * Function: isHandleVisible\n * \n * Returns true if the handle at the given index is visible.\n */\nmxEdgeHandler.prototype.isHandleVisible = function(index)\n{\n\tvar source = this.state.getVisibleTerminalState(true);\n\tvar target = this.state.getVisibleTerminalState(false);\n\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\tvar edgeStyle = (geo != null) ? this.graph.view.getEdgeStyle(this.state, geo.points, source, target) : null;\n\n\treturn edgeStyle != mxEdgeStyle.EntityRelation || index == 0 || index == this.abspoints.length - 1;\n};\n\n/**\n * Function: createHandleShape\n * \n * Creates the shape used to display the given bend. Note that the index may be\n * null for special cases, such as when called from\n * <mxElbowEdgeHandler.createVirtualBend>. Only images and rectangles should be\n * returned if support for HTML labels with not foreign objects is required.\n * Index if null for virtual handles.\n */\nmxEdgeHandler.prototype.createHandleShape = function(index)\n{\n\tif (this.handleImage != null)\n\t{\n\t\tvar shape = new mxImageShape(new mxRectangle(0, 0, this.handleImage.width, this.handleImage.height), this.handleImage.src);\n\t\t\n\t\t// Allows HTML rendering of the images\n\t\tshape.preserveImageAspect = false;\n\n\t\treturn shape;\n\t}\n\telse\n\t{\n\t\tvar s = mxConstants.HANDLE_SIZE;\n\t\t\n\t\tif (this.preferHtml)\n\t\t{\n\t\t\ts -= 1;\n\t\t}\n\t\t\n\t\treturn new mxRectangleShape(new mxRectangle(0, 0, s, s), mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n};\n\n/**\n * Function: createLabelHandleShape\n * \n * Creates the shape used to display the the label handle.\n */\nmxEdgeHandler.prototype.createLabelHandleShape = function()\n{\n\tif (this.labelHandleImage != null)\n\t{\n\t\tvar shape = new mxImageShape(new mxRectangle(0, 0, this.labelHandleImage.width, this.labelHandleImage.height), this.labelHandleImage.src);\n\t\t\n\t\t// Allows HTML rendering of the images\n\t\tshape.preserveImageAspect = false;\n\n\t\treturn shape;\n\t}\n\telse\n\t{\n\t\tvar s = mxConstants.LABEL_HANDLE_SIZE;\n\t\treturn new mxRectangleShape(new mxRectangle(0, 0, s, s), mxConstants.LABEL_HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n};\n\n/**\n * Function: initBend\n * \n * Helper method to initialize the given bend.\n * \n * Parameters:\n * \n * bend - <mxShape> that represents the bend to be initialized.\n */\nmxEdgeHandler.prototype.initBend = function(bend, dblClick)\n{\n\tif (this.preferHtml)\n\t{\n\t\tbend.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tbend.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\tbend.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\tbend.init(this.graph.getView().getOverlayPane());\n\t}\n\n\tmxEvent.redirectMouseEvents(bend.node, this.graph, this.state,\n\t\t\tnull, null, null, dblClick);\n\t\n\t// Fixes lost event tracking for images in quirks / IE8 standards\n\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t{\n\t\tmxEvent.addListener(bend.node, 'dragstart', function(evt)\n\t\t{\n\t\t\tmxEvent.consume(evt);\n\t\t\t\n\t\t\treturn false;\n\t\t});\n\t}\n\t\n\tif (mxClient.IS_TOUCH)\n\t{\n\t\tbend.node.setAttribute('pointer-events', 'none');\n\t}\n};\n\n/**\n * Function: getHandleForEvent\n * \n * Returns the index of the handle for the given event.\n */\nmxEdgeHandler.prototype.getHandleForEvent = function(me)\n{\n\tvar result = null;\n\t\n\tif (this.state != null)\n\t{\n\t\t// Connection highlight may consume events before they reach sizer handle\n\t\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.tolerance : 1;\n\t\tvar hit = (this.allowHandleBoundsCheck && (mxClient.IS_IE || tol > 0)) ?\n\t\t\tnew mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol) : null;\n\t\tvar minDistSq = null;\n\t\n\t\tfunction checkShape(shape)\n\t\t{\n\t\t\tif (shape != null && shape.node != null && shape.node.style.display != 'none' &&\n\t\t\t\tshape.node.style.visibility != 'hidden' &&\n\t\t\t\t(me.isSource(shape) || (hit != null && mxUtils.intersects(shape.bounds, hit))))\n\t\t\t{\n\t\t\t\tvar dx = me.getGraphX() - shape.bounds.getCenterX();\n\t\t\t\tvar dy = me.getGraphY() - shape.bounds.getCenterY();\n\t\t\t\tvar tmp = dx * dx + dy * dy;\n\t\t\t\t\n\t\t\t\tif (minDistSq == null || tmp <= minDistSq)\n\t\t\t\t{\n\t\t\t\t\tminDistSq = tmp;\n\t\t\t\t\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif (this.customHandles != null && this.isCustomHandleEvent(me))\n\t\t{\n\t\t\t// Inverse loop order to match display order\n\t\t\tfor (var i = this.customHandles.length - 1; i >= 0; i--)\n\t\t\t{\n\t\t\t\tif (checkShape(this.customHandles[i].shape))\n\t\t\t\t{\n\t\t\t\t\t// LATER: Return reference to active shape\n\t\t\t\t\treturn mxEvent.CUSTOM_HANDLE - i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tif (me.isSource(this.state.text) || checkShape(this.labelShape))\n\t\t{\n\t\t\tresult = mxEvent.LABEL_HANDLE;\n\t\t}\n\t\t\n\t\tif (this.bends != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.bends.length; i++)\n\t\t\t{\n\t\t\t\tif (checkShape(this.bends[i]))\n\t\t\t\t{\n\t\t\t\t\tresult = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.virtualBends != null && this.isAddVirtualBendEvent(me))\n\t\t{\n\t\t\tfor (var i = 0; i < this.virtualBends.length; i++)\n\t\t\t{\n\t\t\t\tif (checkShape(this.virtualBends[i]))\n\t\t\t\t{\n\t\t\t\t\tresult = mxEvent.VIRTUAL_HANDLE - i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: isAddVirtualBendEvent\n * \n * Returns true if the given event allows virtual bends to be added. This\n * implementation returns true.\n */\nmxEdgeHandler.prototype.isAddVirtualBendEvent = function(me)\n{\n\treturn true;\n};\n\n/**\n * Function: isCustomHandleEvent\n * \n * Returns true if the given event allows custom handles to be changed. This\n * implementation returns true.\n */\nmxEdgeHandler.prototype.isCustomHandleEvent = function(me)\n{\n\treturn true;\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by checking if a special element of the handler\n * was clicked, in which case the index parameter is non-null. The\n * indices may be one of <LABEL_HANDLE> or the number of the respective\n * control point. The source and target points are used for reconnecting\n * the edge.\n */\nmxEdgeHandler.prototype.mouseDown = function(sender, me)\n{\n\tvar handle = this.getHandleForEvent(me);\n\t\n\tif (this.bends != null && this.bends[handle] != null)\n\t{\n\t\tvar b = this.bends[handle].bounds;\n\t\tthis.snapPoint = new mxPoint(b.getCenterX(), b.getCenterY());\n\t}\n\t\n\tif (this.addEnabled && handle == null && this.isAddPointEvent(me.getEvent()))\n\t{\n\t\tthis.addPoint(this.state, me.getEvent());\n\t\tme.consume();\n\t}\n\telse if (handle != null && !me.isConsumed() && this.graph.isEnabled())\n\t{\n\t\tif (this.removeEnabled && this.isRemovePointEvent(me.getEvent()))\n\t\t{\n\t\t\tthis.removePoint(this.state, handle);\n\t\t}\n\t\telse if (handle != mxEvent.LABEL_HANDLE || this.graph.isLabelMovable(me.getCell()))\n\t\t{\n\t\t\tif (handle <= mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tmxUtils.setOpacity(this.virtualBends[mxEvent.VIRTUAL_HANDLE - handle].node, 100);\n\t\t\t}\n\t\t\t\n\t\t\tthis.start(me.getX(), me.getY(), handle);\n\t\t}\n\t\t\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: start\n * \n * Starts the handling of the mouse gesture.\n */\nmxEdgeHandler.prototype.start = function(x, y, index)\n{\n\tthis.startX = x;\n\tthis.startY = y;\n\n\tthis.isSource = (this.bends == null) ? false : index == 0;\n\tthis.isTarget = (this.bends == null) ? false : index == this.bends.length - 1;\n\tthis.isLabel = index == mxEvent.LABEL_HANDLE;\n\n\tif (this.isSource || this.isTarget)\n\t{\n\t\tvar cell = this.state.cell;\n\t\tvar terminal = this.graph.model.getTerminal(cell, this.isSource);\n\n\t\tif ((terminal == null && this.graph.isTerminalPointMovable(cell, this.isSource)) ||\n\t\t\t(terminal != null && this.graph.isCellDisconnectable(cell, terminal, this.isSource)))\n\t\t{\n\t\t\tthis.index = index;\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.index = index;\n\t}\n\t\n\t// Hides other custom handles\n\tif (this.index <= mxEvent.CUSTOM_HANDLE && this.index > mxEvent.VIRTUAL_HANDLE)\n\t{\n\t\tif (this.customHandles != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t\t{\n\t\t\t\tif (i != mxEvent.CUSTOM_HANDLE - this.index)\n\t\t\t\t{\n\t\t\t\t\tthis.customHandles[i].setVisible(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: clonePreviewState\n * \n * Returns a clone of the current preview state for the given point and terminal.\n */\nmxEdgeHandler.prototype.clonePreviewState = function(point, terminal)\n{\n\treturn this.state.clone();\n};\n\n/**\n * Function: getSnapToTerminalTolerance\n * \n * Returns the tolerance for the guides. Default value is\n * gridSize * scale / 2.\n */\nmxEdgeHandler.prototype.getSnapToTerminalTolerance = function()\n{\n\treturn this.graph.gridSize * this.graph.view.scale / 2;\n};\n\n/**\n * Function: updateHint\n * \n * Hook for subclassers do show details while the handler is active.\n */\nmxEdgeHandler.prototype.updateHint = function(me, point) { };\n\n/**\n * Function: removeHint\n * \n * Hooks for subclassers to hide details when the handler gets inactive.\n */\nmxEdgeHandler.prototype.removeHint = function() { };\n\n/**\n * Function: roundLength\n * \n * Hook for rounding the unscaled width or height. This uses Math.round.\n */\nmxEdgeHandler.prototype.roundLength = function(length)\n{\n\treturn Math.round(length);\n};\n\n/**\n * Function: isSnapToTerminalsEvent\n * \n * Returns true if <snapToTerminals> is true and if alt is not pressed.\n */\nmxEdgeHandler.prototype.isSnapToTerminalsEvent = function(me)\n{\n\treturn this.snapToTerminals && !mxEvent.isAltDown(me.getEvent());\n};\n\n/**\n * Function: getPointForEvent\n * \n * Returns the point for the given event.\n */\nmxEdgeHandler.prototype.getPointForEvent = function(me)\n{\n\tvar view = this.graph.getView();\n\tvar scale = view.scale;\n\tvar point = new mxPoint(this.roundLength(me.getGraphX() / scale) * scale,\n\t\tthis.roundLength(me.getGraphY() / scale) * scale);\n\t\n\tvar tt = this.getSnapToTerminalTolerance();\n\tvar overrideX = false;\n\tvar overrideY = false;\t\t\n\t\n\tif (tt > 0 && this.isSnapToTerminalsEvent(me))\n\t{\n\t\tfunction snapToPoint(pt)\n\t\t{\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tvar x = pt.x;\n\n\t\t\t\tif (Math.abs(point.x - x) < tt)\n\t\t\t\t{\n\t\t\t\t\tpoint.x = x;\n\t\t\t\t\toverrideX = true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar y = pt.y;\n\n\t\t\t\tif (Math.abs(point.y - y) < tt)\n\t\t\t\t{\n\t\t\t\t\tpoint.y = y;\n\t\t\t\t\toverrideY = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Temporary function\n\t\tfunction snapToTerminal(terminal)\n\t\t{\n\t\t\tif (terminal != null)\n\t\t\t{\n\t\t\t\tsnapToPoint.call(this, new mxPoint(view.getRoutingCenterX(terminal),\n\t\t\t\t\t\tview.getRoutingCenterY(terminal)));\n\t\t\t}\n\t\t};\n\n\t\tsnapToTerminal.call(this, this.state.getVisibleTerminalState(true));\n\t\tsnapToTerminal.call(this, this.state.getVisibleTerminalState(false));\n\n\t\tif (this.state.absolutePoints != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.state.absolutePoints.length; i++)\n\t\t\t{\n\t\t\t\tsnapToPoint.call(this, this.state.absolutePoints[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.graph.isGridEnabledEvent(me.getEvent()))\n\t{\n\t\tvar tr = view.translate;\n\t\t\n\t\tif (!overrideX)\n\t\t{\n\t\t\tpoint.x = (this.graph.snap(point.x / scale - tr.x) + tr.x) * scale;\n\t\t}\n\t\t\n\t\tif (!overrideY)\n\t\t{\n\t\t\tpoint.y = (this.graph.snap(point.y / scale - tr.y) + tr.y) * scale;\n\t\t}\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: getPreviewTerminalState\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n */\nmxEdgeHandler.prototype.getPreviewTerminalState = function(me)\n{\n\tthis.constraintHandler.update(me, this.isSource, true, me.isSource(this.marker.highlight.shape) ? null : this.currentPoint);\n\t\n\tif (this.constraintHandler.currentFocus != null && this.constraintHandler.currentConstraint != null)\n\t{\n\t\t// Handles special case where grid is large and connection point is at actual point in which\n\t\t// case the outline is not followed as long as we're < gridSize / 2 away from that point\n\t\tif (this.marker.highlight != null && this.marker.highlight.state != null &&\n\t\t\tthis.marker.highlight.state.cell == this.constraintHandler.currentFocus.cell)\n\t\t{\n\t\t\t// Direct repaint needed if cell already highlighted\n\t\t\tif (this.marker.highlight.shape.stroke != 'transparent')\n\t\t\t{\n\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.marker.markCell(this.constraintHandler.currentFocus.cell, 'transparent');\n\t\t}\n\t\t\n\t\tvar model = this.graph.getModel();\n\t\tvar other = this.graph.view.getTerminalPort(this.state,\n\t\t\t\tthis.graph.view.getState(model.getTerminal(this.state.cell,\n\t\t\t!this.isSource)), !this.isSource);\n\t\tvar otherCell = (other != null) ? other.cell : null;\n\t\tvar source = (this.isSource) ? this.constraintHandler.currentFocus.cell : otherCell;\n\t\tvar target = (this.isSource) ? otherCell : this.constraintHandler.currentFocus.cell;\n\t\t\n\t\t// Updates the error message of the handler\n\t\tthis.error = this.validateConnection(source, target);\n\t\tvar result = null;\n\t\t\n\t\tif (this.error == null)\n\t\t{\n\t\t\tresult = this.constraintHandler.currentFocus;\n\t\t}\n\t\t\n\t\tif (this.error != null || (result != null &&\n\t\t\t!this.isCellEnabled(result.cell)))\n\t\t{\n\t\t\tthis.constraintHandler.reset();\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n\telse if (!this.graph.isIgnoreTerminalEvent(me.getEvent()))\n\t{\n\t\tthis.marker.process(me);\n\t\tvar state = this.marker.getValidState();\n\t\t\n\t\tif (state != null && !this.isCellEnabled(state.cell))\n\t\t{\n\t\t\tthis.constraintHandler.reset();\n\t\t\tthis.marker.reset();\n\t\t}\n\t\t\n\t\treturn this.marker.getValidState();\n\t}\n\telse\n\t{\n\t\tthis.marker.reset();\n\t\t\n\t\treturn null;\n\t}\n};\n\n/**\n * Function: getPreviewPoints\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n * \n * Parameters:\n * \n * pt - <mxPoint> that contains the current pointer position.\n * me - Optional <mxMouseEvent> that contains the current event.\n */\nmxEdgeHandler.prototype.getPreviewPoints = function(pt, me)\n{\n\tvar geometry = this.graph.getCellGeometry(this.state.cell);\n\tvar points = (geometry.points != null) ? geometry.points.slice() : null;\n\tvar point = new mxPoint(pt.x, pt.y);\n\tvar result = null;\n\t\n\tif (!this.isSource && !this.isTarget)\n\t{\n\t\tthis.convertPoint(point, false);\n\t\t\n\t\tif (points == null)\n\t\t{\n\t\t\tpoints = [point];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Adds point from virtual bend\n\t\t\tif (this.index <= mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tpoints.splice(mxEvent.VIRTUAL_HANDLE - this.index, 0, point);\n\t\t\t}\n\n\t\t\t// Removes point if dragged on terminal point\n\t\t\tif (!this.isSource && !this.isTarget)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < this.bends.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i != this.index)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar bend = this.bends[i];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (bend != null && mxUtils.contains(bend.bounds, pt.x, pt.y))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (this.index <= mxEvent.VIRTUAL_HANDLE)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpoints.splice(mxEvent.VIRTUAL_HANDLE - this.index, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpoints.splice(this.index - 1, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tresult = points;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Removes point if user tries to straighten a segment\n\t\t\t\tif (result == null && this.straightRemoveEnabled && (me == null || !mxEvent.isAltDown(me.getEvent())))\n\t\t\t\t{\n\t\t\t\t\tvar tol = this.graph.tolerance * this.graph.tolerance;\n\t\t\t\t\tvar abs = this.state.absolutePoints.slice();\n\t\t\t\t\tabs[this.index] = pt;\n\t\t\t\t\t\n\t\t\t\t\t// Handes special case where removing waypoint affects tolerance (flickering)\n\t\t\t\t\tvar src = this.state.getVisibleTerminalState(true);\n\t\t\t\t\t\n\t\t\t\t\tif (src != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar c = this.graph.getConnectionConstraint(this.state, src, true);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Checks if point is not fixed\n\t\t\t\t\t\tif (c == null || this.graph.getConnectionPoint(src, c) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tabs[0] = new mxPoint(src.view.getRoutingCenterX(src), src.view.getRoutingCenterY(src));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar trg = this.state.getVisibleTerminalState(false);\n\t\t\t\t\t\n\t\t\t\t\tif (trg != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar c = this.graph.getConnectionConstraint(this.state, trg, false);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Checks if point is not fixed\n\t\t\t\t\t\tif (c == null || this.graph.getConnectionPoint(trg, c) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tabs[abs.length - 1] = new mxPoint(trg.view.getRoutingCenterX(trg), trg.view.getRoutingCenterY(trg));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction checkRemove(idx, tmp)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (idx > 0 && idx < abs.length - 1 &&\n\t\t\t\t\t\t\tmxUtils.ptSegDistSq(abs[idx - 1].x, abs[idx - 1].y,\n\t\t\t\t\t\t\t\tabs[idx + 1].x, abs[idx + 1].y, tmp.x, tmp.y) < tol)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpoints.splice(idx - 1, 1);\n\t\t\t\t\t\t\tresult = points;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t// LATER: Check if other points can be removed if a segment is made straight\n\t\t\t\t\tcheckRemove(this.index, pt);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Updates existing point\n\t\t\tif (result == null && this.index > mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tpoints[this.index - 1] = point;\n\t\t\t}\n\t\t}\n\t}\n\telse if (this.graph.resetEdgesOnConnect)\n\t{\n\t\tpoints = null;\n\t}\n\t\n\treturn (result != null) ? result : points;\n};\n\n/**\n * Function: isOutlineConnectEvent\n * \n * Returns true if <outlineConnect> is true and the source of the event is the outline shape\n * or shift is pressed.\n */\nmxEdgeHandler.prototype.isOutlineConnectEvent = function(me)\n{\n\tvar offset = mxUtils.getOffset(this.graph.container);\n\tvar evt = me.getEvent();\n\t\n\tvar clientX = mxEvent.getClientX(evt);\n\tvar clientY = mxEvent.getClientY(evt);\n\t\n\tvar doc = document.documentElement;\n\tvar left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n\tvar top = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);\n\t\n\tvar gridX = this.currentPoint.x - this.graph.container.scrollLeft + offset.x - left;\n\tvar gridY = this.currentPoint.y - this.graph.container.scrollTop + offset.y - top;\n\n\treturn this.outlineConnect && !mxEvent.isShiftDown(me.getEvent()) &&\n\t\t(me.isSource(this.marker.highlight.shape) ||\n\t\t(mxEvent.isAltDown(me.getEvent()) && me.getState() != null) ||\n\t\tthis.marker.highlight.isHighlightAt(clientX, clientY) ||\n\t\t((gridX != clientX || gridY != clientY) && me.getState() == null &&\n\t\tthis.marker.highlight.isHighlightAt(gridX, gridY)));\n};\n\n/**\n * Function: updatePreviewState\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n */\nmxEdgeHandler.prototype.updatePreviewState = function(edge, point, terminalState, me, outline)\n{\n\t// Computes the points for the edge style and terminals\n\tvar sourceState = (this.isSource) ? terminalState : this.state.getVisibleTerminalState(true);\n\tvar targetState = (this.isTarget) ? terminalState : this.state.getVisibleTerminalState(false);\n\t\n\tvar sourceConstraint = this.graph.getConnectionConstraint(edge, sourceState, true);\n\tvar targetConstraint = this.graph.getConnectionConstraint(edge, targetState, false);\n\n\tvar constraint = this.constraintHandler.currentConstraint;\n\n\tif (constraint == null && outline)\n\t{\n\t\tif (terminalState != null)\n\t\t{\n\t\t\t// Handles special case where mouse is on outline away from actual end point\n\t\t\t// in which case the grid is ignored and mouse point is used instead\n\t\t\tif (me.isSource(this.marker.highlight.shape))\n\t\t\t{\n\t\t\t\tpoint = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t\t}\n\t\t\t\n\t\t\tconstraint = this.graph.getOutlineConstraint(point, terminalState, me);\n\t\t\tthis.constraintHandler.setFocus(me, terminalState, this.isSource);\n\t\t\tthis.constraintHandler.currentConstraint = constraint;\n\t\t\tthis.constraintHandler.currentPoint = point;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconstraint = new mxConnectionConstraint();\n\t\t}\n\t}\n\t\n\tif (this.outlineConnect && this.marker.highlight != null && this.marker.highlight.shape != null)\n\t{\n\t\tvar s = this.graph.view.scale;\n\t\t\n\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t{\n\t\t\tthis.marker.highlight.shape.stroke = (outline) ? mxConstants.OUTLINE_HIGHLIGHT_COLOR : 'transparent';\n\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.OUTLINE_HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\tthis.marker.highlight.repaint();\n\t\t}\n\t\telse if (this.marker.hasValidState())\n\t\t{\n\t\t\tthis.marker.highlight.shape.stroke = (this.graph.isCellConnectable(me.getCell()) &&\n\t\t\t\tthis.marker.getValidState() != me.getState()) ?\n\t\t\t\t'transparent' : mxConstants.DEFAULT_VALID_COLOR;\n\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\tthis.marker.highlight.repaint();\n\t\t}\n\t}\n\t\n\tif (this.isSource)\n\t{\n\t\tsourceConstraint = constraint;\n\t}\n\telse if (this.isTarget)\n\t{\n\t\ttargetConstraint = constraint;\n\t}\n\t\n\tif (this.isSource || this.isTarget)\n\t{\n\t\tif (constraint != null && constraint.point != null)\n\t\t{\n\t\t\tedge.style[(this.isSource) ? mxConstants.STYLE_EXIT_X : mxConstants.STYLE_ENTRY_X] = constraint.point.x;\n\t\t\tedge.style[(this.isSource) ? mxConstants.STYLE_EXIT_Y : mxConstants.STYLE_ENTRY_Y] = constraint.point.y;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdelete edge.style[(this.isSource) ? mxConstants.STYLE_EXIT_X : mxConstants.STYLE_ENTRY_X];\n\t\t\tdelete edge.style[(this.isSource) ? mxConstants.STYLE_EXIT_Y : mxConstants.STYLE_ENTRY_Y];\n\t\t}\n\t}\n\t\n\tedge.setVisibleTerminalState(sourceState, true);\n\tedge.setVisibleTerminalState(targetState, false);\n\t\n\tif (!this.isSource || sourceState != null)\n\t{\n\t\tedge.view.updateFixedTerminalPoint(edge, sourceState, true, sourceConstraint);\n\t}\n\t\n\tif (!this.isTarget || targetState != null)\n\t{\n\t\tedge.view.updateFixedTerminalPoint(edge, targetState, false, targetConstraint);\n\t}\n\t\n\tif ((this.isSource || this.isTarget) && terminalState == null)\n\t{\n\t\tedge.setAbsoluteTerminalPoint(point, this.isSource);\n\n\t\tif (this.marker.getMarkedState() == null)\n\t\t{\n\t\t\tthis.error = (this.graph.allowDanglingEdges) ? null : '';\n\t\t}\n\t}\n\t\n\tedge.view.updatePoints(edge, this.points, sourceState, targetState);\n\tedge.view.updateFloatingTerminalPoints(edge, sourceState, targetState);\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the preview.\n */\nmxEdgeHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (this.index != null && this.marker != null)\n\t{\n\t\tthis.currentPoint = this.getPointForEvent(me);\n\t\tthis.error = null;\n\t\t\n\t\t// Uses the current point from the constraint handler if available\n\t\tif (!this.graph.isIgnoreTerminalEvent(me.getEvent()) && mxEvent.isShiftDown(me.getEvent()) && this.snapPoint != null)\n\t\t{\n\t\t\tif (Math.abs(this.snapPoint.x - this.currentPoint.x) < Math.abs(this.snapPoint.y - this.currentPoint.y))\n\t\t\t{\n\t\t\t\tthis.currentPoint.x = this.snapPoint.x;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.currentPoint.y = this.snapPoint.y;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.index <= mxEvent.CUSTOM_HANDLE && this.index > mxEvent.VIRTUAL_HANDLE)\n\t\t{\n\t\t\tif (this.customHandles != null)\n\t\t\t{\n\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].processEvent(me);\n\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].positionChanged();\n\t\t\t\t\n\t\t\t\tif (this.shape != null && this.shape.node != null)\n\t\t\t\t{\n\t\t\t\t\tthis.shape.node.style.display = 'none';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.isLabel)\n\t\t{\n\t\t\tthis.label.x = this.currentPoint.x;\n\t\t\tthis.label.y = this.currentPoint.y;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.points = this.getPreviewPoints(this.currentPoint, me);\n\t\t\tvar terminalState = (this.isSource || this.isTarget) ? this.getPreviewTerminalState(me) : null;\n\t\t\t\n\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\tthis.constraintHandler.currentFocus != null &&\n\t\t\t\tthis.constraintHandler.currentPoint != null)\n\t\t\t{\n\t\t\t\tthis.currentPoint = this.constraintHandler.currentPoint.clone();\n\t\t\t}\n\t\t\telse if (this.outlineConnect)\n\t\t\t{\n\t\t\t\t// Need to check outline before cloning terminal state\n\t\t\t\tvar outline = (this.isSource || this.isTarget) ? this.isOutlineConnectEvent(me) : false\n\t\t\t\t\t\t\n\t\t\t\tif (outline)\n\t\t\t\t{\n\t\t\t\t\tterminalState = this.marker.highlight.state;\n\t\t\t\t}\n\t\t\t\telse if (terminalState != null && terminalState != me.getState() &&\n\t\t\t\t\tthis.graph.isCellConnectable(me.getCell()) &&\n\t\t\t\t\tthis.marker.highlight.shape != null)\n\t\t\t\t{\n\t\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t\t\tterminalState = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (terminalState != null && !this.isCellEnabled(terminalState.cell))\n\t\t\t{\n\t\t\t\tterminalState = null;\n\t\t\t\tthis.marker.reset();\n\t\t\t}\n\t\t\t\n\t\t\tvar clone = this.clonePreviewState(this.currentPoint, (terminalState != null) ? terminalState.cell : null);\n\t\t\tthis.updatePreviewState(clone, this.currentPoint, terminalState, me, outline);\n\n\t\t\t// Sets the color of the preview to valid or invalid, updates the\n\t\t\t// points of the preview and redraws\n\t\t\tvar color = (this.error == null) ? this.marker.validColor : this.marker.invalidColor;\n\t\t\tthis.setPreviewColor(color);\n\t\t\tthis.abspoints = clone.absolutePoints;\n\t\t\tthis.active = true;\n\t\t\tthis.updateHint(me, this.currentPoint);\n\t\t}\n\n\t\t// This should go before calling isOutlineConnectEvent above. As a workaround\n\t\t// we add an offset of gridSize to the hint to avoid problem with hit detection\n\t\t// in highlight.isHighlightAt (which uses comonentFromPoint)\n\t\tthis.drawPreview();\n\t\tmxEvent.consume(me.getEvent());\n\t\tme.consume();\n\t}\n\t// Workaround for disabling the connect highlight when over handle\n\telse if (mxClient.IS_IE && this.getHandleForEvent(me) != null)\n\t{\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event to applying the previewed changes on the edge by\n * using <moveLabel>, <connect> or <changePoints>.\n */\nmxEdgeHandler.prototype.mouseUp = function(sender, me)\n{\n\t// Workaround for wrong event source in Webkit\n\tif (this.index != null && this.marker != null)\n\t{\n\t\tif (this.shape != null && this.shape.node != null)\n\t\t{\n\t\t\tthis.shape.node.style.display = '';\n\t\t}\n\t\t\n\t\tvar edge = this.state.cell;\n\t\tvar index = this.index;\n\t\tthis.index = null;\n\n\t\t// Ignores event if mouse has not been moved\n\t\tif (me.getX() != this.startX || me.getY() != this.startY)\n\t\t{\n\t\t\tvar clone = !this.graph.isIgnoreTerminalEvent(me.getEvent()) && this.graph.isCloneEvent(me.getEvent()) &&\n\t\t\t\tthis.cloneEnabled && this.graph.isCellsCloneable();\n\t\t\t\n\t\t\t// Displays the reason for not carriying out the change\n\t\t\t// if there is an error message with non-zero length\n\t\t\tif (this.error != null)\n\t\t\t{\n\t\t\t\tif (this.error.length > 0)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.validationAlert(this.error);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (index <= mxEvent.CUSTOM_HANDLE && index > mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.customHandles != null)\n\t\t\t\t{\n\t\t\t\t\tvar model = this.graph.getModel();\n\t\t\t\t\t\n\t\t\t\t\tmodel.beginUpdate();\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - index].execute(me);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.shape != null && this.shape.node != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.shape.apply(this.state);\n\t\t\t\t\t\t\tthis.shape.redraw();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfinally\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel.endUpdate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.isLabel)\n\t\t\t{\n\t\t\t\tthis.moveLabel(this.state, this.label.x, this.label.y);\n\t\t\t}\n\t\t\telse if (this.isSource || this.isTarget)\n\t\t\t{\n\t\t\t\tvar terminal = null;\n\t\t\t\t\n\t\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t\t\t{\n\t\t\t\t\tterminal = this.constraintHandler.currentFocus.cell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (terminal == null && this.marker.hasValidState() && this.marker.highlight != null &&\n\t\t\t\t\tthis.marker.highlight.shape != null &&\n\t\t\t\t\tthis.marker.highlight.shape.stroke != 'transparent' &&\n\t\t\t\t\tthis.marker.highlight.shape.stroke != 'white')\n\t\t\t\t{\n\t\t\t\t\tterminal = this.marker.validState.cell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (terminal != null)\n\t\t\t\t{\n\t\t\t\t\tvar model = this.graph.getModel();\n\t\t\t\t\tvar parent = model.getParent(edge);\n\t\t\t\t\t\n\t\t\t\t\tmodel.beginUpdate();\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Clones and adds the cell\n\t\t\t\t\t\tif (clone)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar geo = model.getGeometry(edge);\n\t\t\t\t\t\t\tvar clone = this.graph.cloneCell(edge);\n\t\t\t\t\t\t\tmodel.add(parent, clone, model.getChildCount(parent));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (geo != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\t\tmodel.setGeometry(clone, geo);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar other = model.getTerminal(edge, !this.isSource);\n\t\t\t\t\t\t\tthis.graph.connectCell(clone, other, !this.isSource);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tedge = clone;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tedge = this.connect(edge, terminal, this.isSource, clone, me);\n\t\t\t\t\t}\n\t\t\t\t\tfinally\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel.endUpdate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.graph.isAllowDanglingEdges())\n\t\t\t\t{\n\t\t\t\t\tvar pt = this.abspoints[(this.isSource) ? 0 : this.abspoints.length - 1];\n\t\t\t\t\tpt.x = this.roundLength(pt.x / this.graph.view.scale - this.graph.view.translate.x);\n\t\t\t\t\tpt.y = this.roundLength(pt.y / this.graph.view.scale - this.graph.view.translate.y);\n\n\t\t\t\t\tvar pstate = this.graph.getView().getState(\n\t\t\t\t\t\t\tthis.graph.getModel().getParent(edge));\n\t\t\t\t\t\t\t\n\t\t\t\t\tif (pstate != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tpt.x -= pstate.origin.x;\n\t\t\t\t\t\tpt.y -= pstate.origin.y;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tpt.x -= this.graph.panDx / this.graph.view.scale;\n\t\t\t\t\tpt.y -= this.graph.panDy / this.graph.view.scale;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t// Destroys and recreates this handler\n\t\t\t\t\tedge = this.changeTerminalPoint(edge, pt, this.isSource, clone);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.active)\n\t\t\t{\n\t\t\t\tedge = this.changePoints(edge, this.points, clone);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.graph.getView().invalidate(this.state.cell);\n\t\t\t\tthis.graph.getView().validate(this.state.cell);\t\t\t\t\t\t\n\t\t\t}\n\t\t}\n\t\telse if (this.graph.isToggleEvent(me.getEvent()))\n\t\t{\n\t\t\tthis.graph.selectCellForEvent(this.state.cell, me.getEvent());\n\t\t}\n\n\t\t// Resets the preview color the state of the handler if this\n\t\t// handler has not been recreated\n\t\tif (this.marker != null)\n\t\t{\n\t\t\tthis.reset();\n\n\t\t\t// Updates the selection if the edge has been cloned\n\t\t\tif (edge != this.state.cell)\n\t\t\t{\n\t\t\t\tthis.graph.setSelectionCell(edge);\n\t\t\t}\n\t\t}\n\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxEdgeHandler.prototype.reset = function()\n{\n\tif (this.active)\n\t{\n\t\tthis.refresh();\n\t}\n\t\n\tthis.error = null;\n\tthis.index = null;\n\tthis.label = null;\n\tthis.points = null;\n\tthis.snapPoint = null;\n\tthis.isLabel = false;\n\tthis.isSource = false;\n\tthis.isTarget = false;\n\tthis.active = false;\n\t\n\tif (this.livePreview && this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tif (this.sizers[i] != null)\n\t\t\t{\n\t\t\t\tthis.sizers[i].node.style.display = '';\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.marker != null)\n\t{\n\t\tthis.marker.reset();\n\t}\n\t\n\tif (this.constraintHandler != null)\n\t{\n\t\tthis.constraintHandler.reset();\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].reset();\n\t\t}\n\t}\n\n\tthis.setPreviewColor(mxConstants.EDGE_SELECTION_COLOR);\n\tthis.removeHint();\n\tthis.redraw();\n};\n\n/**\n * Function: setPreviewColor\n * \n * Sets the color of the preview to the given value.\n */\nmxEdgeHandler.prototype.setPreviewColor = function(color)\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.stroke = color;\n\t}\n};\n\n\n/**\n * Function: convertPoint\n * \n * Converts the given point in-place from screen to unscaled, untranslated\n * graph coordinates and applies the grid. Returns the given, modified\n * point instance.\n * \n * Parameters:\n * \n * point - <mxPoint> to be converted.\n * gridEnabled - Boolean that specifies if the grid should be applied.\n */\nmxEdgeHandler.prototype.convertPoint = function(point, gridEnabled)\n{\n\tvar scale = this.graph.getView().getScale();\n\tvar tr = this.graph.getView().getTranslate();\n\t\t\n\tif (gridEnabled)\n\t{\n\t\tpoint.x = this.graph.snap(point.x);\n\t\tpoint.y = this.graph.snap(point.y);\n\t}\n\t\n\tpoint.x = Math.round(point.x / scale - tr.x);\n\tpoint.y = Math.round(point.y / scale - tr.y);\n\n\tvar pstate = this.graph.getView().getState(\n\t\tthis.graph.getModel().getParent(this.state.cell));\n\n\tif (pstate != null)\n\t{\n\t\tpoint.x -= pstate.origin.x;\n\t\tpoint.y -= pstate.origin.y;\n\t}\n\n\treturn point;\n};\n\n/**\n * Function: moveLabel\n * \n * Changes the coordinates for the label of the given edge.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge.\n * x - Integer that specifies the x-coordinate of the new location.\n * y - Integer that specifies the y-coordinate of the new location.\n */\nmxEdgeHandler.prototype.moveLabel = function(edgeState, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar geometry = model.getGeometry(edgeState.cell);\n\t\n\tif (geometry != null)\n\t{\n\t\tvar scale = this.graph.getView().scale;\n\t\tgeometry = geometry.clone();\n\t\t\n\t\tif (geometry.relative)\n\t\t{\n\t\t\t// Resets the relative location stored inside the geometry\n\t\t\tvar pt = this.graph.getView().getRelativePoint(edgeState, x, y);\n\t\t\tgeometry.x = Math.round(pt.x * 10000) / 10000;\n\t\t\tgeometry.y = Math.round(pt.y);\n\t\t\t\n\t\t\t// Resets the offset inside the geometry to find the offset\n\t\t\t// from the resulting point\n\t\t\tgeometry.offset = new mxPoint(0, 0);\n\t\t\tvar pt = this.graph.view.getPoint(edgeState, geometry);\n\t\t\tgeometry.offset = new mxPoint(Math.round((x - pt.x) / scale), Math.round((y - pt.y) / scale));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar points = edgeState.absolutePoints;\n\t\t\tvar p0 = points[0];\n\t\t\tvar pe = points[points.length - 1];\n\t\t\t\n\t\t\tif (p0 != null && pe != null)\n\t\t\t{\n\t\t\t\tvar cx = p0.x + (pe.x - p0.x) / 2;\n\t\t\t\tvar cy = p0.y + (pe.y - p0.y) / 2;\n\t\t\t\t\n\t\t\t\tgeometry.offset = new mxPoint(Math.round((x - cx) / scale), Math.round((y - cy) / scale));\n\t\t\t\tgeometry.x = 0;\n\t\t\t\tgeometry.y = 0;\n\t\t\t}\n\t\t}\n\n\t\tmodel.setGeometry(edgeState.cell, geometry);\n\t}\n};\n\n/**\n * Function: connect\n * \n * Changes the terminal or terminal point of the given edge in the graph\n * model.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to be reconnected.\n * terminal - <mxCell> that represents the new terminal.\n * isSource - Boolean indicating if the new terminal is the source or\n * target terminal.\n * isClone - Boolean indicating if the new connection should be a clone of\n * the old edge.\n * me - <mxMouseEvent> that contains the mouse up event.\n */\nmxEdgeHandler.prototype.connect = function(edge, terminal, isSource, isClone, me)\n{\n\tvar model = this.graph.getModel();\n\tvar parent = model.getParent(edge);\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tvar constraint = this.constraintHandler.currentConstraint;\n\t\t\n\t\tif (constraint == null)\n\t\t{\n\t\t\tconstraint = new mxConnectionConstraint();\n\t\t}\n\n\t\tthis.graph.connectCell(edge, terminal, isSource, constraint);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: changeTerminalPoint\n * \n * Changes the terminal point of the given edge.\n */\nmxEdgeHandler.prototype.changeTerminalPoint = function(edge, point, isSource, clone)\n{\n\tvar model = this.graph.getModel();\n\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tif (clone)\n\t\t{\n\t\t\tvar parent = model.getParent(edge);\n\t\t\tvar terminal = model.getTerminal(edge, !isSource);\n\t\t\tedge = this.graph.cloneCell(edge);\n\t\t\tmodel.add(parent, edge, model.getChildCount(parent));\n\t\t\tmodel.setTerminal(edge, terminal, !isSource);\n\t\t}\n\n\t\tvar geo = model.getGeometry(edge);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.setTerminalPoint(point, isSource);\n\t\t\tmodel.setGeometry(edge, geo);\n\t\t\tthis.graph.connectCell(edge, null, isSource, new mxConnectionConstraint());\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: changePoints\n * \n * Changes the control points of the given edge in the graph model.\n */\nmxEdgeHandler.prototype.changePoints = function(edge, points, clone)\n{\n\tvar model = this.graph.getModel();\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tif (clone)\n\t\t{\n\t\t\tvar parent = model.getParent(edge);\n\t\t\tvar source = model.getTerminal(edge, true);\n\t\t\tvar target = model.getTerminal(edge, false);\n\t\t\tedge = this.graph.cloneCell(edge);\n\t\t\tmodel.add(parent, edge, model.getChildCount(parent));\n\t\t\tmodel.setTerminal(edge, source, true);\n\t\t\tmodel.setTerminal(edge, target, false);\n\t\t}\n\t\t\n\t\tvar geo = model.getGeometry(edge);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.points = points;\n\t\t\t\n\t\t\tmodel.setGeometry(edge, geo);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: addPoint\n * \n * Adds a control point for the given state and event.\n */\nmxEdgeHandler.prototype.addPoint = function(state, evt)\n{\n\tvar pt = mxUtils.convertPoint(this.graph.container, mxEvent.getClientX(evt),\n\t\t\tmxEvent.getClientY(evt));\n\tvar gridEnabled = this.graph.isGridEnabledEvent(evt);\n\tthis.convertPoint(pt, gridEnabled);\n\tthis.addPointAt(state, pt.x, pt.y);\n\tmxEvent.consume(evt);\n};\n\n/**\n * Function: addPointAt\n * \n * Adds a control point at the given point.\n */\nmxEdgeHandler.prototype.addPointAt = function(state, x, y)\n{\n\tvar geo = this.graph.getCellGeometry(state.cell);\n\tvar pt = new mxPoint(x, y);\n\t\n\tif (geo != null)\n\t{\n\t\tgeo = geo.clone();\n\t\tvar t = this.graph.view.translate;\n\t\tvar s = this.graph.view.scale;\n\t\tvar offset = new mxPoint(t.x * s, t.y * s);\n\t\t\n\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\t\n\t\tif (this.graph.model.isVertex(parent))\n\t\t{\n\t\t\tvar pState = this.graph.view.getState(parent);\n\t\t\toffset = new mxPoint(pState.x, pState.y);\n\t\t}\n\t\t\n\t\tvar index = mxUtils.findNearestSegment(state, pt.x * s + offset.x, pt.y * s + offset.y);\n\n\t\tif (geo.points == null)\n\t\t{\n\t\t\tgeo.points = [pt];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgeo.points.splice(index, 0, pt);\n\t\t}\n\t\t\n\t\tthis.graph.getModel().setGeometry(state.cell, geo);\n\t\tthis.refresh();\t\n\t\tthis.redraw();\n\t}\n};\n\n/**\n * Function: removePoint\n * \n * Removes the control point at the given index from the given state.\n */\nmxEdgeHandler.prototype.removePoint = function(state, index)\n{\n\tif (index > 0 && index < this.abspoints.length - 1)\n\t{\n\t\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\t\t\n\t\tif (geo != null && geo.points != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.points.splice(index - 1, 1);\n\t\t\tthis.graph.getModel().setGeometry(state.cell, geo);\n\t\t\tthis.refresh();\n\t\t\tthis.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: getHandleFillColor\n * \n * Returns the fillcolor for the handle at the given index.\n */\nmxEdgeHandler.prototype.getHandleFillColor = function(index)\n{\n\tvar isSource = index == 0;\n\tvar cell = this.state.cell;\n\tvar terminal = this.graph.getModel().getTerminal(cell, isSource);\n\tvar color = mxConstants.HANDLE_FILLCOLOR;\n\t\n\tif ((terminal != null && !this.graph.isCellDisconnectable(cell, terminal, isSource)) ||\n\t\t(terminal == null && !this.graph.isTerminalPointMovable(cell, isSource)))\n\t{\n\t\tcolor = mxConstants.LOCKED_HANDLE_FILLCOLOR;\n\t}\n\telse if (terminal != null && this.graph.isCellDisconnectable(cell, terminal, isSource))\n\t{\n\t\tcolor = mxConstants.CONNECT_HANDLE_FILLCOLOR;\n\t}\n\t\n\treturn color;\n};\n\n/**\n * Function: redraw\n * \n * Redraws the preview, and the bends- and label control points.\n */\nmxEdgeHandler.prototype.redraw = function(ignoreHandles)\n{\n\tif (this.state != null)\n\t{\n\t\tthis.abspoints = this.state.absolutePoints.slice();\n\t\tvar g = this.graph.getModel().getGeometry(this.state.cell);\n\t\t\n\t\tif (g != null)\n\t\t{\n\t\t\tvar pts = g.points;\n\t\t\n\t\t\tif (this.bends != null && this.bends.length > 0)\n\t\t\t{\n\t\t\t\tif (pts != null)\n\t\t\t\t{\n\t\t\t\t\tif (this.points == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.points = [];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = 1; i < this.bends.length - 1; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.bends[i] != null && this.abspoints[i] != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.points[i - 1] = pts[i - 1];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.drawPreview();\n\t\t\n\t\tif (!ignoreHandles)\n\t\t{\n\t\t\tthis.redrawHandles();\n\t\t}\n\t}\n};\n\n/**\n * Function: redrawHandles\n * \n * Redraws the handles.\n */\nmxEdgeHandler.prototype.redrawHandles = function()\n{\n\tvar cell = this.state.cell;\n\n\t// Updates the handle for the label position\n\tvar b = this.labelShape.bounds;\n\tthis.label = new mxPoint(this.state.absoluteOffset.x, this.state.absoluteOffset.y);\n\tthis.labelShape.bounds = new mxRectangle(Math.round(this.label.x - b.width / 2),\n\t\tMath.round(this.label.y - b.height / 2), b.width, b.height);\n\n\t// Shows or hides the label handle depending on the label\n\tvar lab = this.graph.getLabel(cell);\n\tthis.labelShape.visible = (lab != null && lab.length > 0 && this.graph.isLabelMovable(cell));\n\t\n\tif (this.bends != null && this.bends.length > 0)\n\t{\n\t\tvar n = this.abspoints.length - 1;\n\t\t\n\t\tvar p0 = this.abspoints[0];\n\t\tvar x0 = p0.x;\n\t\tvar y0 = p0.y;\n\t\t\n\t\tb = this.bends[0].bounds;\n\t\tthis.bends[0].bounds = new mxRectangle(Math.floor(x0 - b.width / 2),\n\t\t\t\tMath.floor(y0 - b.height / 2), b.width, b.height);\n\t\tthis.bends[0].fill = this.getHandleFillColor(0);\n\t\tthis.bends[0].redraw();\n\t\t\n\t\tif (this.manageLabelHandle)\n\t\t{\n\t\t\tthis.checkLabelHandle(this.bends[0].bounds);\n\t\t}\n\t\t\t\t\n\t\tvar pe = this.abspoints[n];\n\t\tvar xn = pe.x;\n\t\tvar yn = pe.y;\n\t\t\n\t\tvar bn = this.bends.length - 1;\n\t\tb = this.bends[bn].bounds;\n\t\tthis.bends[bn].bounds = new mxRectangle(Math.floor(xn - b.width / 2),\n\t\t\t\tMath.floor(yn - b.height / 2), b.width, b.height);\n\t\tthis.bends[bn].fill = this.getHandleFillColor(bn);\n\t\tthis.bends[bn].redraw();\n\t\t\t\t\n\t\tif (this.manageLabelHandle)\n\t\t{\n\t\t\tthis.checkLabelHandle(this.bends[bn].bounds);\n\t\t}\n\t\t\n\t\tthis.redrawInnerBends(p0, pe);\n\t}\n\n\tif (this.abspoints != null && this.virtualBends != null && this.virtualBends.length > 0)\n\t{\n\t\tvar last = this.abspoints[0];\n\t\t\n\t\tfor (var i = 0; i < this.virtualBends.length; i++)\n\t\t{\n\t\t\tif (this.virtualBends[i] != null && this.abspoints[i + 1] != null)\n\t\t\t{\n\t\t\t\tvar pt = this.abspoints[i + 1];\n\t\t\t\tvar b = this.virtualBends[i];\n\t\t\t\tvar x = last.x + (pt.x - last.x) / 2;\n\t\t\t\tvar y = last.y + (pt.y - last.y) / 2;\n\t\t\t\tb.bounds = new mxRectangle(Math.floor(x - b.bounds.width / 2),\n\t\t\t\t\t\tMath.floor(y - b.bounds.height / 2), b.bounds.width, b.bounds.height);\n\t\t\t\tb.redraw();\n\t\t\t\tmxUtils.setOpacity(b.node, this.virtualBendOpacity);\n\t\t\t\tlast = pt;\n\t\t\t\t\n\t\t\t\tif (this.manageLabelHandle)\n\t\t\t\t{\n\t\t\t\t\tthis.checkLabelHandle(b.bounds);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (this.labelShape != null)\n\t{\n\t\tthis.labelShape.redraw();\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tvar temp = this.customHandles[i].shape.node.style.display;\n\t\t\tthis.customHandles[i].redraw();\n\t\t\tthis.customHandles[i].shape.node.style.display = temp;\n\n\t\t\t// Hides custom handles during text editing\n\t\t\tthis.customHandles[i].shape.node.style.visibility =\n\t\t\t\t(this.isCustomHandleVisible(this.customHandles[i])) ?\n\t\t\t\t'' : 'hidden';\n\t\t}\n\t}\n};\n\n/**\n * Function: isCustomHandleVisible\n * \n * Returns true if the given custom handle is visible.\n */\nmxEdgeHandler.prototype.isCustomHandleVisible = function(handle)\n{\n\treturn !this.graph.isEditing() && this.state.view.graph.getSelectionCount() == 1;\n};\n\n/**\n * Function: hideHandles\n * \n * Shortcut to <hideSizers>.\n */\nmxEdgeHandler.prototype.setHandlesVisible = function(visible)\n{\n\tif (this.bends != null)\n\t{\n\t\tfor (var i = 0; i < this.bends.length; i++)\n\t\t{\n\t\t\tthis.bends[i].node.style.display = (visible) ? '' : 'none';\n\t\t}\n\t}\n\t\n\tif (this.virtualBends != null)\n\t{\n\t\tfor (var i = 0; i < this.virtualBends.length; i++)\n\t\t{\n\t\t\tthis.virtualBends[i].node.style.display = (visible) ? '' : 'none';\n\t\t}\n\t}\n\n\tif (this.labelShape != null)\n\t{\n\t\tthis.labelShape.node.style.display = (visible) ? '' : 'none';\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].setVisible(visible);\n\t\t}\n\t}\n};\n\n/**\n * Function: redrawInnerBends\n * \n * Updates and redraws the inner bends.\n * \n * Parameters:\n * \n * p0 - <mxPoint> that represents the location of the first point.\n * pe - <mxPoint> that represents the location of the last point.\n */\nmxEdgeHandler.prototype.redrawInnerBends = function(p0, pe)\n{\n\tfor (var i = 1; i < this.bends.length - 1; i++)\n\t{\n\t\tif (this.bends[i] != null)\n\t\t{\n\t\t\tif (this.abspoints[i] != null)\n\t\t\t{\n\t\t\t\tvar x = this.abspoints[i].x;\n\t\t\t\tvar y = this.abspoints[i].y;\n\t\t\t\t\n\t\t\t\tvar b = this.bends[i].bounds;\n\t\t\t\tthis.bends[i].node.style.visibility = 'visible';\n\t\t\t\tthis.bends[i].bounds = new mxRectangle(Math.round(x - b.width / 2),\n\t\t\t\t\t\tMath.round(y - b.height / 2), b.width, b.height);\n\t\t\t\t\n\t\t\t\tif (this.manageLabelHandle)\n\t\t\t\t{\n\t\t\t\t\tthis.checkLabelHandle(this.bends[i].bounds);\n\t\t\t\t}\n\t\t\t\telse if (this.handleImage == null && this.labelShape.visible && mxUtils.intersects(this.bends[i].bounds, this.labelShape.bounds))\n\t\t\t\t{\n\t\t\t\t\tw = mxConstants.HANDLE_SIZE + 3;\n\t\t\t\t\th = mxConstants.HANDLE_SIZE + 3;\n\t\t\t\t\tthis.bends[i].bounds = new mxRectangle(Math.round(x - w / 2), Math.round(y - h / 2), w, h);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.bends[i].redraw();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.bends[i].destroy();\n\t\t\t\tthis.bends[i] = null;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: checkLabelHandle\n * \n * Checks if the label handle intersects the given bounds and moves it if it\n * intersects.\n */\nmxEdgeHandler.prototype.checkLabelHandle = function(b)\n{\n\tif (this.labelShape != null)\n\t{\n\t\tvar b2 = this.labelShape.bounds;\n\t\t\n\t\tif (mxUtils.intersects(b, b2))\n\t\t{\n\t\t\tif (b.getCenterY() < b2.getCenterY())\n\t\t\t{\n\t\t\t\tb2.y = b.y + b.height;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tb2.y = b.y - b2.height;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: drawPreview\n * \n * Redraws the preview.\n */\nmxEdgeHandler.prototype.drawPreview = function()\n{\n\ttry\n\t{\n\t\tif (this.isLabel)\n\t\t{\n\t\t\tvar b = this.labelShape.bounds;\n\t\t\tvar bounds = new mxRectangle(Math.round(this.label.x - b.width / 2),\n\t\t\t\tMath.round(this.label.y - b.height / 2), b.width, b.height);\n\t\t\t\n\t\t\tif (!this.labelShape.bounds.equals(bounds))\n\t\t\t{\n\t\t\t\tthis.labelShape.bounds = bounds;\n\t\t\t\tthis.labelShape.redraw();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.shape != null && !mxUtils.equalPoints(this.shape.points, this.abspoints))\n\t\t{\n\t\t\tthis.shape.apply(this.state);\n\t\t\tthis.shape.points = this.abspoints.slice();\n\t\t\tthis.shape.scale = this.state.view.scale;\n\t\t\tthis.shape.isDashed = this.isSelectionDashed();\n\t\t\tthis.shape.stroke = this.getSelectionColor();\n\t\t\tthis.shape.strokewidth = this.getSelectionStrokeWidth() / this.shape.scale / this.shape.scale;\n\t\t\tthis.shape.isShadow = false;\n\t\t\tthis.shape.redraw();\n\t\t}\n\t\t\n\t\tthis.updateParentHighlight();\n\t}\n\tcatch (e)\n\t{\n\t\t// ignore\n\t}\n};\n\n/**\n * Function: refresh\n * \n * Refreshes the bends of this handler.\n */\nmxEdgeHandler.prototype.refresh = function()\n{\n\tif (this.state != null)\n\t{\n\t\tthis.abspoints = this.getSelectionPoints(this.state);\n\t\tthis.points = [];\n\t\n\t\tif (this.bends != null)\n\t\t{\n\t\t\tthis.destroyBends(this.bends);\n\t\t\tthis.bends = this.createBends();\n\t\t}\n\t\t\n\t\tif (this.virtualBends != null)\n\t\t{\n\t\t\tthis.destroyBends(this.virtualBends);\n\t\t\tthis.virtualBends = this.createVirtualBends();\n\t\t}\n\t\t\n\t\tif (this.customHandles != null)\n\t\t{\n\t\t\tthis.destroyBends(this.customHandles);\n\t\t\tthis.customHandles = this.createCustomHandles();\n\t\t}\n\t\t\n\t\t// Puts label node on top of bends\n\t\tif (this.labelShape != null && this.labelShape.node != null && this.labelShape.node.parentNode != null)\n\t\t{\n\t\t\tthis.labelShape.node.parentNode.appendChild(this.labelShape.node);\n\t\t}\n\t}\n};\n\n/**\n * Function: isDestroyed\n * \n * Returns true if <destroy> was called.\n */\nmxEdgeHandler.prototype.isDestroyed = function()\n{\n\treturn this.shape == null;\n};\n\n/**\n * Function: destroyBends\n * \n * Destroys all elements in <bends>.\n */\nmxEdgeHandler.prototype.destroyBends = function(bends)\n{\n\tif (bends != null)\n\t{\n\t\tfor (var i = 0; i < bends.length; i++)\n\t\t{\n\t\t\tif (bends[i] != null)\n\t\t\t{\n\t\t\t\tbends[i].destroy();\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes. This does\n * normally not need to be called as handlers are destroyed automatically\n * when the corresponding cell is deselected.\n */\nmxEdgeHandler.prototype.destroy = function()\n{\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.state.view.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n\t\n\tif (this.marker != null)\n\t{\n\t\tthis.marker.destroy();\n\t\tthis.marker = null;\n\t}\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\tvar pstate = this.graph.view.getState(parent);\n\n\t\tif (pstate != null && pstate.parentHighlight == this.parentHighlight)\n\t\t{\n\t\t\tpstate.parentHighlight = null;\n\t\t}\n\t\t\n\t\tthis.parentHighlight.destroy();\n\t\tthis.parentHighlight = null;\n\t}\n\t\n\tif (this.labelShape != null)\n\t{\n\t\tthis.labelShape.destroy();\n\t\tthis.labelShape = null;\n\t}\n\n\tif (this.constraintHandler != null)\n\t{\n\t\tthis.constraintHandler.destroy();\n\t\tthis.constraintHandler = null;\n\t}\n\t\n\tthis.destroyBends(this.virtualBends);\n\tthis.virtualBends = null;\n\t\n\tthis.destroyBends(this.customHandles);\n\tthis.customHandles = null;\n\n\tthis.destroyBends(this.bends);\n\tthis.bends = null;\n\t\n\tthis.removeHint();\n};\n\n__mxOutput.mxEdgeHandler = typeof mxEdgeHandler !== 'undefined' ? mxEdgeHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxElbowEdgeHandler\n *\n * Graph event handler that reconnects edges and modifies control points and\n * the edge label location. Uses <mxTerminalMarker> for finding and\n * highlighting new source and target vertices. This handler is automatically\n * created in <mxGraph.createHandler>. It extends <mxEdgeHandler>.\n * \n * Constructor: mxEdgeHandler\n *\n * Constructs an edge handler for the specified <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be modified.\n */\nfunction mxElbowEdgeHandler(state)\n{\n\tmxEdgeHandler.call(this, state);\n};\n\n/**\n * Extends mxEdgeHandler.\n */\nmxUtils.extend(mxElbowEdgeHandler, mxEdgeHandler);\n\n/**\n * Specifies if a double click on the middle handle should call\n * <mxGraph.flipEdge>. Default is true.\n */\nmxElbowEdgeHandler.prototype.flipEnabled = true;\n\n/**\n * Variable: doubleClickOrientationResource\n * \n * Specifies the resource key for the tooltip to be displayed on the single\n * control point for routed edges. If the resource for this key does not\n * exist then the value is used as the error message. Default is\n * 'doubleClickOrientation'.\n */\nmxElbowEdgeHandler.prototype.doubleClickOrientationResource =\n\t(mxClient.language != 'none') ? 'doubleClickOrientation' : '';\n\n/**\n * Function: createBends\n * \n * Overrides <mxEdgeHandler.createBends> to create custom bends.\n */\n mxElbowEdgeHandler.prototype.createBends = function()\n {\n\tvar bends = [];\n\t\n\t// Source\n\tvar bend = this.createHandleShape(0);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\n\t// Virtual\n\tbends.push(this.createVirtualBend(mxUtils.bind(this, function(evt)\n\t{\n\t\tif (!mxEvent.isConsumed(evt) && this.flipEnabled)\n\t\t{\n\t\t\tthis.graph.flipEdge(this.state.cell, evt);\n\t\t\tmxEvent.consume(evt);\n\t\t}\n\t})));\n\t\n\tthis.points.push(new mxPoint(0,0));\n\n\t// Target\n\tbend = this.createHandleShape(2);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\t\n\treturn bends;\n };\n\n/**\n * Function: createVirtualBend\n * \n * Creates a virtual bend that supports double clicking and calls\n * <mxGraph.flipEdge>.\n */\nmxElbowEdgeHandler.prototype.createVirtualBend = function(dblClickHandler)\n{\n\tvar bend = this.createHandleShape();\n\tthis.initBend(bend, dblClickHandler);\n\n\tbend.setCursor(this.getCursorForBend());\n\n\tif (!this.graph.isCellBendable(this.state.cell))\n\t{\n\t\tbend.node.style.display = 'none';\n\t}\n\n\treturn bend;\n};\n\n/**\n * Function: getCursorForBend\n * \n * Returns the cursor to be used for the bend.\n */\nmxElbowEdgeHandler.prototype.getCursorForBend = function()\n{\n\treturn (this.state.style[mxConstants.STYLE_EDGE] == mxEdgeStyle.TopToBottom ||\n\t\tthis.state.style[mxConstants.STYLE_EDGE] == mxConstants.EDGESTYLE_TOPTOBOTTOM ||\n\t\t((this.state.style[mxConstants.STYLE_EDGE] == mxEdgeStyle.ElbowConnector ||\n\t\tthis.state.style[mxConstants.STYLE_EDGE] == mxConstants.EDGESTYLE_ELBOW)&&\n\t\tthis.state.style[mxConstants.STYLE_ELBOW] == mxConstants.ELBOW_VERTICAL)) ? \n\t\t'row-resize' : 'col-resize';\n};\n\n/**\n * Function: getTooltipForNode\n * \n * Returns the tooltip for the given node.\n */\nmxElbowEdgeHandler.prototype.getTooltipForNode = function(node)\n{\n\tvar tip = null;\n\t\n\tif (this.bends != null && this.bends[1] != null && (node == this.bends[1].node ||\n\t\tnode.parentNode == this.bends[1].node))\n\t{\n\t\ttip = this.doubleClickOrientationResource;\n\t\ttip = mxResources.get(tip) || tip; // translate\n\t}\n\n\treturn tip;\n};\n\n/**\n * Function: convertPoint\n * \n * Converts the given point in-place from screen to unscaled, untranslated\n * graph coordinates and applies the grid.\n * \n * Parameters:\n * \n * point - <mxPoint> to be converted.\n * gridEnabled - Boolean that specifies if the grid should be applied.\n */\nmxElbowEdgeHandler.prototype.convertPoint = function(point, gridEnabled)\n{\n\tvar scale = this.graph.getView().getScale();\n\tvar tr = this.graph.getView().getTranslate();\n\tvar origin = this.state.origin;\n\t\n\tif (gridEnabled)\n\t{\n\t\tpoint.x = this.graph.snap(point.x);\n\t\tpoint.y = this.graph.snap(point.y);\n\t}\n\t\n\tpoint.x = Math.round(point.x / scale - tr.x - origin.x);\n\tpoint.y = Math.round(point.y / scale - tr.y - origin.y);\n\t\n\treturn point;\n};\n\n/**\n * Function: redrawInnerBends\n * \n * Updates and redraws the inner bends.\n * \n * Parameters:\n * \n * p0 - <mxPoint> that represents the location of the first point.\n * pe - <mxPoint> that represents the location of the last point.\n */\nmxElbowEdgeHandler.prototype.redrawInnerBends = function(p0, pe)\n{\n\tvar g = this.graph.getModel().getGeometry(this.state.cell);\n\tvar pts = this.state.absolutePoints;\n\tvar pt = null;\n\n\t// Keeps the virtual bend on the edge shape\n\tif (pts.length > 1)\n\t{\n\t\tp0 = pts[1];\n\t\tpe = pts[pts.length - 2];\n\t}\n\telse if (g.points != null && g.points.length > 0)\n\t{\n\t\tpt = pts[0];\n\t}\n\t\n\tif (pt == null)\n\t{\n\t\tpt = new mxPoint(p0.x + (pe.x - p0.x) / 2, p0.y + (pe.y - p0.y) / 2);\n\t}\n\telse\n\t{\n\t\tpt = new mxPoint(this.graph.getView().scale * (pt.x + this.graph.getView().translate.x + this.state.origin.x),\n\t\t\t\tthis.graph.getView().scale * (pt.y + this.graph.getView().translate.y + this.state.origin.y));\n\t}\n\n\t// Makes handle slightly bigger if the yellow  label handle\n\t// exists and intersects this green handle\n\tvar b = this.bends[1].bounds;\n\tvar w = b.width;\n\tvar h = b.height;\n\tvar bounds = new mxRectangle(Math.round(pt.x - w / 2), Math.round(pt.y - h / 2), w, h);\n\n\tif (this.manageLabelHandle)\n\t{\n\t\tthis.checkLabelHandle(bounds);\n\t}\n\telse if (this.handleImage == null && this.labelShape.visible && mxUtils.intersects(bounds, this.labelShape.bounds))\n\t{\n\t\tw = mxConstants.HANDLE_SIZE + 3;\n\t\th = mxConstants.HANDLE_SIZE + 3;\n\t\tbounds = new mxRectangle(Math.floor(pt.x - w / 2), Math.floor(pt.y - h / 2), w, h);\n\t}\n\n\tthis.bends[1].bounds = bounds;\n\tthis.bends[1].redraw();\n\t\n\tif (this.manageLabelHandle)\n\t{\n\t\tthis.checkLabelHandle(this.bends[1].bounds);\n\t}\n};\n\n__mxOutput.mxElbowEdgeHandler = typeof mxElbowEdgeHandler !== 'undefined' ? mxElbowEdgeHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nfunction mxEdgeSegmentHandler(state)\n{\n\tmxEdgeHandler.call(this, state);\n};\n\n/**\n * Extends mxEdgeHandler.\n */\nmxUtils.extend(mxEdgeSegmentHandler, mxElbowEdgeHandler);\n\n/**\n * Function: getCurrentPoints\n * \n * Returns the current absolute points.\n */\nmxEdgeSegmentHandler.prototype.getCurrentPoints = function()\n{\n\tvar pts = this.state.absolutePoints;\n\t\n\tif (pts != null)\n\t{\n\t\t// Special case for straight edges where we add a virtual middle handle for moving the edge\n\t\tvar tol = Math.max(1, this.graph.view.scale);\n\t\t\n\t\tif (pts.length == 2 || (pts.length == 3 &&\n\t\t\t(Math.abs(pts[0].x - pts[1].x) < tol && Math.abs(pts[1].x - pts[2].x) < tol ||\n\t\t\tMath.abs(pts[0].y - pts[1].y) < tol && Math.abs(pts[1].y - pts[2].y) < tol)))\n\t\t{\n\t\t\tvar cx = pts[0].x + (pts[pts.length - 1].x - pts[0].x) / 2;\n\t\t\tvar cy = pts[0].y + (pts[pts.length - 1].y - pts[0].y) / 2;\n\t\t\t\n\t\t\tpts = [pts[0], new mxPoint(cx, cy), new mxPoint(cx, cy), pts[pts.length - 1]];\t\n\t\t}\n\t}\n\n\treturn pts;\n};\n\n/**\n * Function: getPreviewPoints\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n */\nmxEdgeSegmentHandler.prototype.getPreviewPoints = function(point)\n{\n\tif (this.isSource || this.isTarget)\n\t{\n\t\treturn mxElbowEdgeHandler.prototype.getPreviewPoints.apply(this, arguments);\n\t}\n\telse\n\t{\n\t\tvar pts = this.getCurrentPoints();\n\t\tvar last = this.convertPoint(pts[0].clone(), false);\n\t\tpoint = this.convertPoint(point.clone(), false);\n\t\tvar result = [];\n\n\t\tfor (var i = 1; i < pts.length; i++)\n\t\t{\n\t\t\tvar pt = this.convertPoint(pts[i].clone(), false);\n\t\t\t\n\t\t\tif (i == this.index)\n\t\t\t{\n\t\t\t\tif (Math.round(last.x - pt.x) == 0)\n\t\t \t\t{\n\t\t\t\t\tlast.x = point.x;\n\t\t\t\t\tpt.x = point.x;\n\t\t \t\t}\n\t\t \t\t\n\t\t\t\tif (Math.round(last.y - pt.y) == 0)\n\t\t \t\t{\n\t\t \t\t\tlast.y = point.y;\n\t\t \t\t\tpt.y = point.y;\n\t\t \t\t}\n\t\t\t}\n\n\t\t\tif (i < pts.length - 1)\n\t\t\t{\n\t\t\t\tresult.push(pt);\n\t\t\t}\n\n\t\t\tlast = pt;\n\t\t}\n\t\t\n\t\t// Replaces single point that intersects with source or target\n\t\tif (result.length == 1)\n\t\t{\n\t\t\tvar source = this.state.getVisibleTerminalState(true);\n\t\t\tvar target = this.state.getVisibleTerminalState(false);\n\t\t\tvar scale = this.state.view.getScale();\n\t\t\tvar tr = this.state.view.getTranslate();\n\t\t\t\n\t\t\tvar x = result[0].x * scale + tr.x;\n\t\t\tvar y = result[0].y * scale + tr.y;\n\t\t\t\n\t\t\tif ((source != null && mxUtils.contains(source, x, y)) ||\n\t\t\t\t(target != null && mxUtils.contains(target, x, y)))\n\t\t\t{\n\t\t\t\tresult = [point, point];\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\n/**\n * Function: updatePreviewState\n * \n * Overridden to perform optimization of the edge style result.\n */\nmxEdgeSegmentHandler.prototype.updatePreviewState = function(edge, point, terminalState, me)\n{\n\tmxEdgeHandler.prototype.updatePreviewState.apply(this, arguments);\n\n\t// Checks and corrects preview by running edge style again\n\tif (!this.isSource && !this.isTarget)\n\t{\n\t\tpoint = this.convertPoint(point.clone(), false);\n\t\tvar pts = edge.absolutePoints;\n\t\tvar pt0 = pts[0];\n\t\tvar pt1 = pts[1];\n\n\t\tvar result = [];\n\t\t\n\t\tfor (var i = 2; i < pts.length; i++)\n\t\t{\n\t\t\tvar pt2 = pts[i];\n\t\t\n\t\t\t// Merges adjacent segments only if more than 2 to allow for straight edges\n\t\t\tif ((Math.round(pt0.x - pt1.x) != 0 || Math.round(pt1.x - pt2.x) != 0) &&\n\t\t\t\t(Math.round(pt0.y - pt1.y) != 0 || Math.round(pt1.y - pt2.y) != 0))\n\t\t\t{\n\t\t\t\tresult.push(this.convertPoint(pt1.clone(), false));\n\t\t\t}\n\n\t\t\tpt0 = pt1;\n\t\t\tpt1 = pt2;\n\t\t}\n\t\t\n\t\tvar source = this.state.getVisibleTerminalState(true);\n\t\tvar target = this.state.getVisibleTerminalState(false);\n\t\tvar rpts = this.state.absolutePoints;\n\t\t\n\t\t// A straight line is represented by 3 handles\n\t\tif (result.length == 0 && (Math.round(pts[0].x - pts[pts.length - 1].x) == 0 ||\n\t\t\tMath.round(pts[0].y - pts[pts.length - 1].y) == 0))\n\t\t{\n\t\t\tresult = [point, point];\n\t\t}\n\t\t// Handles special case of transitions from straight vertical to routed\n\t\telse if (pts.length == 5 && result.length == 2 && source != null && target != null &&\n\t\t\t\trpts != null && Math.round(rpts[0].x - rpts[rpts.length - 1].x) == 0)\n\t\t{\n\t\t\tvar view = this.graph.getView();\n\t\t\tvar scale = view.getScale();\n\t\t\tvar tr = view.getTranslate();\n\t\t\t\n\t\t\tvar y0 = view.getRoutingCenterY(source) / scale - tr.y;\n\t\t\t\n\t\t\t// Use fixed connection point y-coordinate if one exists\n\t\t\tvar sc = this.graph.getConnectionConstraint(edge, source, true);\n\t\t\t\n\t\t\tif (sc != null)\n\t\t\t{\n\t\t\t\tvar pt = this.graph.getConnectionPoint(source, sc);\n\t\t\t\t\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tthis.convertPoint(pt, false);\n\t\t\t\t\ty0 = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar ye = view.getRoutingCenterY(target) / scale - tr.y;\n\t\t\t\n\t\t\t// Use fixed connection point y-coordinate if one exists\n\t\t\tvar tc = this.graph.getConnectionConstraint(edge, target, false);\n\t\t\t\n\t\t\tif (tc)\n\t\t\t{\n\t\t\t\tvar pt = this.graph.getConnectionPoint(target, tc);\n\t\t\t\t\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tthis.convertPoint(pt, false);\n\t\t\t\t\tye = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tresult = [new mxPoint(point.x, y0), new mxPoint(point.x, ye)];\n\t\t}\n\n\t\tthis.points = result;\n\n\t\t// LATER: Check if points and result are different\n\t\tedge.view.updateFixedTerminalPoints(edge, source, target);\n\t\tedge.view.updatePoints(edge, this.points, source, target);\n\t\tedge.view.updateFloatingTerminalPoints(edge, source, target);\n\t}\n};\n\n/**\n * Overriden to merge edge segments.\n */\nmxEdgeSegmentHandler.prototype.connect = function(edge, terminal, isSource, isClone, me)\n{\n\tvar model = this.graph.getModel();\n\tvar geo = model.getGeometry(edge);\n\tvar result = null;\n\t\n\t// Merges adjacent edge segments\n\tif (geo != null && geo.points != null && geo.points.length > 0)\n\t{\n\t\tvar pts = this.abspoints;\n\t\tvar pt0 = pts[0];\n\t\tvar pt1 = pts[1];\n\t\tresult = [];\n\t\t\n\t\tfor (var i = 2; i < pts.length; i++)\n\t\t{\n\t\t\tvar pt2 = pts[i];\n\t\t\n\t\t\t// Merges adjacent segments only if more than 2 to allow for straight edges\n\t\t\tif ((Math.round(pt0.x - pt1.x) != 0 || Math.round(pt1.x - pt2.x) != 0) &&\n\t\t\t\t(Math.round(pt0.y - pt1.y) != 0 || Math.round(pt1.y - pt2.y) != 0))\n\t\t\t{\n\t\t\t\tresult.push(this.convertPoint(pt1.clone(), false));\n\t\t\t}\n\t\n\t\t\tpt0 = pt1;\n\t\t\tpt1 = pt2;\n\t\t}\n\t}\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tif (result != null)\n\t\t{\n\t\t\tvar geo = model.getGeometry(edge);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.points = result;\n\t\t\t\t\n\t\t\t\tmodel.setGeometry(edge, geo);\n\t\t\t}\n\t\t}\n\t\t\n\t\tedge = mxEdgeHandler.prototype.connect.apply(this, arguments);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: getTooltipForNode\n * \n * Returns no tooltips.\n */\nmxEdgeSegmentHandler.prototype.getTooltipForNode = function(node)\n{\n\treturn null;\n};\n\n/**\n * Function: start\n * \n * Starts the handling of the mouse gesture.\n */\nmxEdgeSegmentHandler.prototype.start = function(x, y, index)\n{\n\tmxEdgeHandler.prototype.start.apply(this, arguments);\n\t\n\tif (this.bends != null && this.bends[index] != null &&\n\t\t!this.isSource && !this.isTarget)\n\t{\n\t\tmxUtils.setOpacity(this.bends[index].node, 100);\n\t}\n};\n\n/**\n * Function: createBends\n * \n * Adds custom bends for the center of each segment.\n */\nmxEdgeSegmentHandler.prototype.createBends = function()\n{\n\tvar bends = [];\n\t\n\t// Source\n\tvar bend = this.createHandleShape(0);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\n\tvar pts = this.getCurrentPoints();\n\n\t// Waypoints (segment handles)\n\tif (this.graph.isCellBendable(this.state.cell))\n\t{\n\t\tif (this.points == null)\n\t\t{\n\t\t\tthis.points = [];\n\t\t}\n\n\t\tfor (var i = 0; i < pts.length - 1; i++)\n\t\t{\n\t\t\tbend = this.createVirtualBend();\n\t\t\tbends.push(bend);\n\t\t\tvar horizontal = Math.round(pts[i].x - pts[i + 1].x) == 0;\n\t\t\t\n\t\t\t// Special case where dy is 0 as well\n\t\t\tif (Math.round(pts[i].y - pts[i + 1].y) == 0 && i < pts.length - 2)\n\t\t\t{\n\t\t\t\thorizontal = Math.round(pts[i].x - pts[i + 2].x) == 0;\n\t\t\t}\n\t\t\t\n\t\t\tbend.setCursor((horizontal) ? 'col-resize' : 'row-resize');\n\t\t\tthis.points.push(new mxPoint(0,0));\n\t\t}\n\t}\n\n\t// Target\n\tvar bend = this.createHandleShape(pts.length);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\n\treturn bends;\n};\n\n/**\n * Function: redraw\n * \n * Overridden to invoke <refresh> before the redraw.\n */\nmxEdgeSegmentHandler.prototype.redraw = function()\n{\n\tthis.refresh();\n\tmxEdgeHandler.prototype.redraw.apply(this, arguments);\n};\n\n/**\n * Function: redrawInnerBends\n * \n * Updates the position of the custom bends.\n */\nmxEdgeSegmentHandler.prototype.redrawInnerBends = function(p0, pe)\n{\n\tif (this.graph.isCellBendable(this.state.cell))\n\t{\n\t\tvar pts = this.getCurrentPoints();\n\t\t\n\t\tif (pts != null && pts.length > 1)\n\t\t{\n\t\t\tvar straight = false;\n\t\t\t\n\t\t\t// Puts handle in the center of straight edges\n\t\t\tif (pts.length == 4 && Math.round(pts[1].x - pts[2].x) == 0 && Math.round(pts[1].y - pts[2].y) == 0)\n\t\t\t{\n\t\t\t\tstraight = true;\n\t\t\t\t\n\t\t\t\tif (Math.round(pts[0].y - pts[pts.length - 1].y) == 0)\n\t\t\t\t{\n\t\t\t\t\tvar cx = pts[0].x + (pts[pts.length - 1].x - pts[0].x) / 2;\n\t\t\t\t\tpts[1] = new mxPoint(cx, pts[1].y);\n\t\t\t\t\tpts[2] = new mxPoint(cx, pts[2].y);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar cy = pts[0].y + (pts[pts.length - 1].y - pts[0].y) / 2;\n\t\t\t\t\tpts[1] = new mxPoint(pts[1].x, cy);\n\t\t\t\t\tpts[2] = new mxPoint(pts[2].x, cy);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < pts.length - 1; i++)\n\t\t\t{\n\t\t\t\tif (this.bends[i + 1] != null)\n\t\t\t\t{\n\t\t \t\t\tvar p0 = pts[i];\n\t \t\t\t\tvar pe = pts[i + 1];\n\t\t\t \t\tvar pt = new mxPoint(p0.x + (pe.x - p0.x) / 2, p0.y + (pe.y - p0.y) / 2);\n\t\t\t \t\tvar b = this.bends[i + 1].bounds;\n\t\t\t \t\tthis.bends[i + 1].bounds = new mxRectangle(Math.floor(pt.x - b.width / 2),\n\t\t\t \t\t\t\tMath.floor(pt.y - b.height / 2), b.width, b.height);\n\t\t\t\t \tthis.bends[i + 1].redraw();\n\t\t\t\t \t\n\t\t\t\t \tif (this.manageLabelHandle)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.checkLabelHandle(this.bends[i + 1].bounds);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (straight)\n\t\t\t{\n\t\t\t\tmxUtils.setOpacity(this.bends[1].node, this.virtualBendOpacity);\n\t\t\t\tmxUtils.setOpacity(this.bends[3].node, this.virtualBendOpacity);\n\t\t\t}\n\t\t}\n\t}\n};\n\n__mxOutput.mxEdgeSegmentHandler = typeof mxEdgeSegmentHandler !== 'undefined' ? mxEdgeSegmentHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxKeyHandler\n *\n * Event handler that listens to keystroke events. This is not a singleton,\n * however, it is normally only required once if the target is the document\n * element (default).\n * \n * This handler installs a key event listener in the topmost DOM node and\n * processes all events that originate from descandants of <mxGraph.container>\n * or from the topmost DOM node. The latter means that all unhandled keystrokes\n * are handled by this object regardless of the focused state of the <graph>.\n * \n * Example:\n * \n * The following example creates a key handler that listens to the delete key\n * (46) and deletes the selection cells if the graph is enabled.\n * \n * (code)\n * var keyHandler = new mxKeyHandler(graph);\n * keyHandler.bindKey(46, function(evt)\n * {\n *   if (graph.isEnabled())\n *   {\n *     graph.removeCells();\n *   }\n * });\n * (end)\n * \n * Keycodes:\n * \n * See http://tinyurl.com/yp8jgl or http://tinyurl.com/229yqw for a list of\n * keycodes or install a key event listener into the document element and print\n * the key codes of the respective events to the console.\n * \n * To support the Command key and the Control key on the Mac, the following\n * code can be used.\n *\n * (code)\n * keyHandler.getFunction = function(evt)\n * {\n *   if (evt != null)\n *   {\n *     return (mxEvent.isControlDown(evt) || (mxClient.IS_MAC && evt.metaKey)) ? this.controlKeys[evt.keyCode] : this.normalKeys[evt.keyCode];\n *   }\n *   \n *   return null;\n * };\n * (end)\n * \n * Constructor: mxKeyHandler\n *\n * Constructs an event handler that executes functions bound to specific\n * keystrokes.\n * \n * Parameters:\n * \n * graph - Reference to the associated <mxGraph>.\n * target - Optional reference to the event target. If null, the document\n * element is used as the event target, that is, the object where the key\n * event listener is installed.\n */\nfunction mxKeyHandler(graph, target)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.target = target || document.documentElement;\n\t\t\n\t\t// Creates the arrays to map from keycodes to functions\n\t\tthis.normalKeys = [];\n\t\tthis.shiftKeys = [];\n\t\tthis.controlKeys = [];\n\t\tthis.controlShiftKeys = [];\n\t\t\n\t\tthis.keydownHandler = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.keyDown(evt);\n\t\t});\n\n\t\t// Installs the keystroke listener in the target\n\t\tmxEvent.addListener(this.target, 'keydown', this.keydownHandler);\n\t\t\n\t\t// Automatically deallocates memory in IE\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tmxEvent.addListener(window, 'unload',\n\t\t\t\tmxUtils.bind(this, function()\n\t\t\t\t{\n\t\t\t\t\tthis.destroy();\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n};\n\n/**\n * Variable: graph\n * \n * Reference to the <mxGraph> associated with this handler.\n */\nmxKeyHandler.prototype.graph = null;\n\n/**\n * Variable: target\n * \n * Reference to the target DOM, that is, the DOM node where the key event\n * listeners are installed.\n */\nmxKeyHandler.prototype.target = null;\n\n/**\n * Variable: normalKeys\n * \n * Maps from keycodes to functions for non-pressed control keys.\n */\nmxKeyHandler.prototype.normalKeys = null;\n\n/**\n * Variable: shiftKeys\n * \n * Maps from keycodes to functions for pressed shift keys.\n */\nmxKeyHandler.prototype.shiftKeys = null;\n\n/**\n * Variable: controlKeys\n * \n * Maps from keycodes to functions for pressed control keys.\n */\nmxKeyHandler.prototype.controlKeys = null;\n\n/**\n * Variable: controlShiftKeys\n * \n * Maps from keycodes to functions for pressed control and shift keys.\n */\nmxKeyHandler.prototype.controlShiftKeys = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxKeyHandler.prototype.enabled = true;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation returns\n * <enabled>.\n */\nmxKeyHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling by updating <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxKeyHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: bindKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the control key is not pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindKey = function(code, funct)\n{\n\tthis.normalKeys[code] = funct;\n};\n\n/**\n * Function: bindShiftKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the shift key is pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindShiftKey = function(code, funct)\n{\n\tthis.shiftKeys[code] = funct;\n};\n\n/**\n * Function: bindControlKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the control key is pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindControlKey = function(code, funct)\n{\n\tthis.controlKeys[code] = funct;\n};\n\n/**\n * Function: bindControlShiftKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the control and shift key are pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindControlShiftKey = function(code, funct)\n{\n\tthis.controlShiftKeys[code] = funct;\n};\n\n/**\n * Function: isControlDown\n * \n * Returns true if the control key is pressed. This uses <mxEvent.isControlDown>.\n * \n * Parameters:\n * \n * evt - Key event whose control key pressed state should be returned.\n */\nmxKeyHandler.prototype.isControlDown = function(evt)\n{\n\treturn mxEvent.isControlDown(evt);\n};\n\n/**\n * Function: getFunction\n * \n * Returns the function associated with the given key event or null if no\n * function is associated with the given event.\n * \n * Parameters:\n * \n * evt - Key event whose associated function should be returned.\n */\nmxKeyHandler.prototype.getFunction = function(evt)\n{\n\tif (evt != null && !mxEvent.isAltDown(evt))\n\t{\n\t\tif (this.isControlDown(evt))\n\t\t{\n\t\t\tif (mxEvent.isShiftDown(evt))\n\t\t\t{\n\t\t\t\treturn this.controlShiftKeys[evt.keyCode];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.controlKeys[evt.keyCode];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (mxEvent.isShiftDown(evt))\n\t\t\t{\n\t\t\t\treturn this.shiftKeys[evt.keyCode];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.normalKeys[evt.keyCode];\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\t\n/**\n * Function: isGraphEvent\n * \n * Returns true if the event should be processed by this handler, that is,\n * if the event source is either the target, one of its direct children, a\n * descendant of the <mxGraph.container>, or the <mxGraph.cellEditor> of the\n * <graph>.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.isGraphEvent = function(evt)\n{\n\tvar source = mxEvent.getSource(evt);\n\t\n\t// Accepts events from the target object or\n\t// in-place editing inside graph\n\tif ((source == this.target || source.parentNode == this.target) ||\n\t\t(this.graph.cellEditor != null && this.graph.cellEditor.isEventSource(evt)))\n\t{\n\t\treturn true;\n\t}\n\t\n\t// Accepts events from inside the container\n\treturn mxUtils.isAncestorNode(this.graph.container, source);\n};\n\n/**\n * Function: keyDown\n * \n * Handles the event by invoking the function bound to the respective keystroke\n * if <isEnabledForEvent> returns true for the given event and if\n * <isEventIgnored> returns false, except for escape for which\n * <isEventIgnored> is not invoked.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.keyDown = function(evt)\n{\n\tif (this.isEnabledForEvent(evt))\n\t{\n\t\t// Cancels the editing if escape is pressed\n\t\tif (evt.keyCode == 27 /* Escape */)\n\t\t{\n\t\t\tthis.escape(evt);\n\t\t}\n\t\t\n\t\t// Invokes the function for the keystroke\n\t\telse if (!this.isEventIgnored(evt))\n\t\t{\n\t\t\tvar boundFunction = this.getFunction(evt);\n\t\t\t\n\t\t\tif (boundFunction != null)\n\t\t\t{\n\t\t\t\tboundFunction(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isEnabledForEvent\n * \n * Returns true if the given event should be handled. <isEventIgnored> is\n * called later if the event is not an escape key stroke, in which case\n * <escape> is called. This implementation returns true if <isEnabled>\n * returns true for both, this handler and <graph>, if the event is not\n * consumed and if <isGraphEvent> returns true.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.isEnabledForEvent = function(evt)\n{\n\treturn (this.graph.isEnabled() && !mxEvent.isConsumed(evt) &&\n\t\tthis.isGraphEvent(evt) && this.isEnabled());\n};\n\n/**\n * Function: isEventIgnored\n * \n * Returns true if the given keystroke should be ignored. This returns\n * graph.isEditing().\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.isEventIgnored = function(evt)\n{\n\treturn this.graph.isEditing();\n};\n\n/**\n * Function: escape\n * \n * Hook to process ESCAPE keystrokes. This implementation invokes\n * <mxGraph.stopEditing> to cancel the current editing, connecting\n * and/or other ongoing modifications.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke. Possible keycode in this\n * case is 27 (ESCAPE).\n */\nmxKeyHandler.prototype.escape = function(evt)\n{\n\tif (this.graph.isEscapeEnabled())\n\t{\n\t\tthis.graph.escape(evt);\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its references into the DOM. This does\n * normally not need to be called, it is called automatically when the\n * window unloads (in IE).\n */\nmxKeyHandler.prototype.destroy = function()\n{\n\tif (this.target != null && this.keydownHandler != null)\n\t{\n\t\tmxEvent.removeListener(this.target, 'keydown', this.keydownHandler);\n\t\tthis.keydownHandler = null;\n\t}\n\t\n\tthis.target = null;\n};\n\n__mxOutput.mxKeyHandler = typeof mxKeyHandler !== 'undefined' ? mxKeyHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxTooltipHandler\n * \n * Graph event handler that displays tooltips. <mxGraph.getTooltip> is used to\n * get the tooltip for a cell or handle. This handler is built-into\n * <mxGraph.tooltipHandler> and enabled using <mxGraph.setTooltips>.\n *\n * Example:\n * \n * (code>\n * new mxTooltipHandler(graph);\n * (end)\n * \n * Constructor: mxTooltipHandler\n * \n * Constructs an event handler that displays tooltips with the specified\n * delay (in milliseconds). If no delay is specified then a default delay\n * of 500 ms (0.5 sec) is used.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * delay - Optional delay in milliseconds.\n */\nfunction mxTooltipHandler(graph, delay)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.delay = delay || 500;\n\t\tthis.graph.addMouseListener(this);\n\t}\n};\n\n/**\n * Variable: zIndex\n * \n * Specifies the zIndex for the tooltip and its shadow. Default is 10005.\n */\nmxTooltipHandler.prototype.zIndex = 10005;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxTooltipHandler.prototype.graph = null;\n\n/**\n * Variable: delay\n * \n * Delay to show the tooltip in milliseconds. Default is 500.\n */\nmxTooltipHandler.prototype.delay = null;\n\n/**\n * Variable: ignoreTouchEvents\n * \n * Specifies if touch and pen events should be ignored. Default is true.\n */\nmxTooltipHandler.prototype.ignoreTouchEvents = true;\n\n/**\n * Variable: hideOnHover\n * \n * Specifies if the tooltip should be hidden if the mouse is moved over the\n * current cell. Default is false.\n */\nmxTooltipHandler.prototype.hideOnHover = false;\n\n/**\n * Variable: destroyed\n * \n * True if this handler was destroyed using <destroy>.\n */\nmxTooltipHandler.prototype.destroyed = false;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxTooltipHandler.prototype.enabled = true;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxTooltipHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n */\nmxTooltipHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isHideOnHover\n * \n * Returns <hideOnHover>.\n */\nmxTooltipHandler.prototype.isHideOnHover = function()\n{\n\treturn this.hideOnHover;\n};\n\n/**\n * Function: setHideOnHover\n * \n * Sets <hideOnHover>.\n */\nmxTooltipHandler.prototype.setHideOnHover = function(value)\n{\n\tthis.hideOnHover = value;\n};\n\n/**\n * Function: init\n * \n * Initializes the DOM nodes required for this tooltip handler.\n */\nmxTooltipHandler.prototype.init = function()\n{\n\tif (document.body != null)\n\t{\n\t\tthis.div = document.createElement('div');\n\t\tthis.div.className = 'mxTooltip';\n\t\tthis.div.style.visibility = 'hidden';\n\n\t\tdocument.body.appendChild(this.div);\n\n\t\tmxEvent.addGestureListeners(this.div, mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tvar source = mxEvent.getSource(evt);\n\t\t\t\n\t\t\tif (source.nodeName != 'A')\n\t\t\t{\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}));\n\t}\n};\n\n/**\n * Function: getStateForEvent\n * \n * Returns the <mxCellState> to be used for showing a tooltip for this event.\n */\nmxTooltipHandler.prototype.getStateForEvent = function(me)\n{\n\treturn me.getState();\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating a rubberband selection. By consuming the\n * event all subsequent events of the gesture are redirected to this\n * handler.\n */\nmxTooltipHandler.prototype.mouseDown = function(sender, me)\n{\n\tthis.reset(me, false);\n\tthis.hideTooltip();\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the rubberband selection.\n */\nmxTooltipHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (me.getX() != this.lastX || me.getY() != this.lastY)\n\t{\n\t\tthis.reset(me, true);\n\t\tvar state = this.getStateForEvent(me);\n\t\t\n\t\tif (this.isHideOnHover() || state != this.state || (me.getSource() != this.node &&\n\t\t\t(!this.stateSource || (state != null && this.stateSource ==\n\t\t\t(me.isSource(state.shape) || !me.isSource(state.text))))))\n\t\t{\n\t\t\tthis.hideTooltip();\n\t\t}\n\t}\n\t\n\tthis.lastX = me.getX();\n\tthis.lastY = me.getY();\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by resetting the tooltip timer or hiding the existing\n * tooltip.\n */\nmxTooltipHandler.prototype.mouseUp = function(sender, me)\n{\n\tthis.reset(me, true);\n\tthis.hideTooltip();\n};\n\n\n/**\n * Function: resetTimer\n * \n * Resets the timer.\n */\nmxTooltipHandler.prototype.resetTimer = function()\n{\n\tif (this.thread != null)\n\t{\n\t\twindow.clearTimeout(this.thread);\n\t\tthis.thread = null;\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets and/or restarts the timer to trigger the display of the tooltip.\n */\nmxTooltipHandler.prototype.reset = function(me, restart, state)\n{\n\tif (!this.ignoreTouchEvents || mxEvent.isMouseEvent(me.getEvent()))\n\t{\n\t\tthis.resetTimer();\n\t\tstate = (state != null) ? state : this.getStateForEvent(me);\n\t\t\n\t\tif (restart && this.isEnabled() && state != null && (this.div == null ||\n\t\t\tthis.div.style.visibility == 'hidden'))\n\t\t{\n\t\t\tvar node = me.getSource();\n\t\t\tvar x = me.getX();\n\t\t\tvar y = me.getY();\n\t\t\tvar stateSource = me.isSource(state.shape) || me.isSource(state.text);\n\t\n\t\t\tthis.thread = window.setTimeout(mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tif (!this.graph.isEditing() && !this.graph.popupMenuHandler.isMenuShowing() && !this.graph.isMouseDown)\n\t\t\t\t{\n\t\t\t\t\t// Uses information from inside event cause using the event at\n\t\t\t\t\t// this (delayed) point in time is not possible in IE as it no\n\t\t\t\t\t// longer contains the required information (member not found)\n\t\t\t\t\tvar tip = this.graph.getTooltip(state, node, x, y);\n\t\t\t\t\tthis.show(tip, x, y);\n\t\t\t\t\tthis.state = state;\n\t\t\t\t\tthis.node = node;\n\t\t\t\t\tthis.stateSource = stateSource;\n\t\t\t\t}\n\t\t\t}), this.delay);\n\t\t}\n\t}\n};\n\n/**\n * Function: hide\n * \n * Hides the tooltip and resets the timer.\n */\nmxTooltipHandler.prototype.hide = function()\n{\n\tthis.resetTimer();\n\tthis.hideTooltip();\n};\n\n/**\n * Function: hideTooltip\n * \n * Hides the tooltip.\n */\nmxTooltipHandler.prototype.hideTooltip = function()\n{\n\tif (this.div != null)\n\t{\n\t\tthis.div.style.visibility = 'hidden';\n\t\tthis.div.innerHTML = '';\n\t}\n};\n\n/**\n * Function: show\n * \n * Shows the tooltip for the specified cell and optional index at the\n * specified location (with a vertical offset of 10 pixels).\n */\nmxTooltipHandler.prototype.show = function(tip, x, y)\n{\n\tif (!this.destroyed && tip != null && tip.length > 0)\n\t{\n\t\t// Initializes the DOM nodes if required\n\t\tif (this.div == null)\n\t\t{\n\t\t\tthis.init();\n\t\t}\n\t\t\n\t\tvar origin = mxUtils.getScrollOrigin();\n\n\t\tthis.div.style.zIndex = this.zIndex;\n\t\tthis.div.style.left = (x + origin.x) + 'px';\n\t\tthis.div.style.top = (y + mxConstants.TOOLTIP_VERTICAL_OFFSET +\n\t\t\torigin.y) + 'px';\n\n\t\tif (!mxUtils.isNode(tip))\n\t\t{\t\n\t\t\tthis.div.innerHTML = tip.replace(/\\n/g, '<br>');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.div.innerHTML = '';\n\t\t\tthis.div.appendChild(tip);\n\t\t}\n\t\t\n\t\tthis.div.style.visibility = '';\n\t\tmxUtils.fit(this.div);\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxTooltipHandler.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.graph.removeMouseListener(this);\n\t\tmxEvent.release(this.div);\n\t\t\n\t\tif (this.div != null && this.div.parentNode != null)\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t\t\n\t\tthis.destroyed = true;\n\t\tthis.div = null;\n\t}\n};\n\n__mxOutput.mxTooltipHandler = typeof mxTooltipHandler !== 'undefined' ? mxTooltipHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellTracker\n * \n * Event handler that highlights cells. Inherits from <mxCellMarker>.\n * \n * Example:\n * \n * (code)\n * new mxCellTracker(graph, '#00FF00');\n * (end)\n * \n * For detecting dragEnter, dragOver and dragLeave on cells, the following\n * code can be used:\n * \n * (code)\n * graph.addMouseListener(\n * {\n *   cell: null,\n *   mouseDown: function(sender, me) { },\n *   mouseMove: function(sender, me)\n *   {\n *     var tmp = me.getCell();\n *     \n *     if (tmp != this.cell)\n *     {\n *       if (this.cell != null)\n *       {\n *         this.dragLeave(me.getEvent(), this.cell);\n *       }\n *       \n *       this.cell = tmp;\n *       \n *       if (this.cell != null)\n *       {\n *         this.dragEnter(me.getEvent(), this.cell);\n *       }\n *     }\n *     \n *     if (this.cell != null)\n *     {\n *       this.dragOver(me.getEvent(), this.cell);\n *     }\n *   },\n *   mouseUp: function(sender, me) { },\n *   dragEnter: function(evt, cell)\n *   {\n *     mxLog.debug('dragEnter', cell.value);\n *   },\n *   dragOver: function(evt, cell)\n *   {\n *     mxLog.debug('dragOver', cell.value);\n *   },\n *   dragLeave: function(evt, cell)\n *   {\n *     mxLog.debug('dragLeave', cell.value);\n *   }\n * });\n * (end)\n * \n * Constructor: mxCellTracker\n * \n * Constructs an event handler that highlights cells.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * color - Color of the highlight. Default is blue.\n * funct - Optional JavaScript function that is used to override\n * <mxCellMarker.getCell>.\n */\nfunction mxCellTracker(graph, color, funct)\n{\n\tmxCellMarker.call(this, graph, color);\n\n\tthis.graph.addMouseListener(this);\n\t\n\tif (funct != null)\n\t{\n\t\tthis.getCell = funct;\n\t}\n\t\n\t// Automatic deallocation of memory\n\tif (mxClient.IS_IE)\n\t{\n\t\tmxEvent.addListener(window, 'unload', mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.destroy();\n\t\t}));\n\t}\n};\n\n/**\n * Extends mxCellMarker.\n */\nmxUtils.extend(mxCellTracker, mxCellMarker);\n\n/**\n * Function: mouseDown\n * \n * Ignores the event. The event is not consumed.\n */\nmxCellTracker.prototype.mouseDown = function(sender, me) { };\n\n/**\n * Function: mouseMove\n * \n * Handles the event by highlighting the cell under the mousepointer if it\n * is over the hotspot region of the cell.\n */\nmxCellTracker.prototype.mouseMove = function(sender, me)\n{\n\tif (this.isEnabled())\n\t{\n\t\tthis.process(me);\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by reseting the highlight.\n */\nmxCellTracker.prototype.mouseUp = function(sender, me) { };\n\n/**\n * Function: destroy\n * \n * Destroys the object and all its resources and DOM nodes. This doesn't\n * normally need to be called. It is called automatically when the window\n * unloads.\n */\nmxCellTracker.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\n\t\tthis.graph.removeMouseListener(this);\n\t\tmxCellMarker.prototype.destroy.apply(this);\n\t}\n};\n\n__mxOutput.mxCellTracker = typeof mxCellTracker !== 'undefined' ? mxCellTracker : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellHighlight\n * \n * A helper class to highlight cells. Here is an example for a given cell.\n * \n * (code)\n * var highlight = new mxCellHighlight(graph, '#ff0000', 2);\n * highlight.highlight(graph.view.getState(cell)));\n * (end)\n * \n * Constructor: mxCellHighlight\n * \n * Constructs a cell highlight.\n */\nfunction mxCellHighlight(graph, highlightColor, strokeWidth, dashed)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.highlightColor = (highlightColor != null) ? highlightColor : mxConstants.DEFAULT_VALID_COLOR;\n\t\tthis.strokeWidth = (strokeWidth != null) ? strokeWidth : mxConstants.HIGHLIGHT_STROKEWIDTH;\n\t\tthis.dashed = (dashed != null) ? dashed : false;\n\t\tthis.opacity = mxConstants.HIGHLIGHT_OPACITY;\n\n\t\t// Updates the marker if the graph changes\n\t\tthis.repaintHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\t// Updates reference to state\n\t\t\tif (this.state != null)\n\t\t\t{\n\t\t\t\tvar tmp = this.graph.view.getState(this.state.cell);\n\t\t\t\t\n\t\t\t\tif (tmp == null)\n\t\t\t\t{\n\t\t\t\t\tthis.hide();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.state = tmp;\n\t\t\t\t\tthis.repaint();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.graph.getView().addListener(mxEvent.SCALE, this.repaintHandler);\n\t\tthis.graph.getView().addListener(mxEvent.TRANSLATE, this.repaintHandler);\n\t\tthis.graph.getView().addListener(mxEvent.SCALE_AND_TRANSLATE, this.repaintHandler);\n\t\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.repaintHandler);\n\t\t\n\t\t// Hides the marker if the current root changes\n\t\tthis.resetHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.hide();\n\t\t});\n\n\t\tthis.graph.getView().addListener(mxEvent.DOWN, this.resetHandler);\n\t\tthis.graph.getView().addListener(mxEvent.UP, this.resetHandler);\n\t}\n};\n\n/**\n * Variable: keepOnTop\n * \n * Specifies if the highlights should appear on top of everything\n * else in the overlay pane. Default is false.\n */\nmxCellHighlight.prototype.keepOnTop = false;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellHighlight.prototype.graph = null;\n\n/**\n * Variable: state\n * \n * Reference to the <mxCellState>.\n */\nmxCellHighlight.prototype.state = null;\n\n/**\n * Variable: spacing\n * \n * Specifies the spacing between the highlight for vertices and the vertex.\n * Default is 2.\n */\nmxCellHighlight.prototype.spacing = 2;\n\n/**\n * Variable: resetHandler\n * \n * Holds the handler that automatically invokes reset if the highlight\n * should be hidden.\n */\nmxCellHighlight.prototype.resetHandler = null;\n\n/**\n * Function: setHighlightColor\n * \n * Sets the color of the rectangle used to highlight drop targets.\n * \n * Parameters:\n * \n * color - String that represents the new highlight color.\n */\nmxCellHighlight.prototype.setHighlightColor = function(color)\n{\n\tthis.highlightColor = color;\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.stroke = color;\n\t}\n};\n\n/**\n * Function: drawHighlight\n * \n * Creates and returns the highlight shape for the given state.\n */\nmxCellHighlight.prototype.drawHighlight = function()\n{\n\tthis.shape = this.createShape();\n\tthis.repaint();\n\n\tif (!this.keepOnTop && this.shape.node.parentNode.firstChild != this.shape.node)\n\t{\n\t\tthis.shape.node.parentNode.insertBefore(this.shape.node, this.shape.node.parentNode.firstChild);\n\t}\n};\n\n/**\n * Function: createShape\n * \n * Creates and returns the highlight shape for the given state.\n */\nmxCellHighlight.prototype.createShape = function()\n{\n\tvar shape = this.graph.cellRenderer.createShape(this.state);\n\t\n\tshape.svgStrokeTolerance = this.graph.tolerance;\n\tshape.points = this.state.absolutePoints;\n\tshape.apply(this.state);\n\tshape.stroke = this.highlightColor;\n\tshape.opacity = this.opacity;\n\tshape.isDashed = this.dashed;\n\tshape.isShadow = false;\n\t\n\tshape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\tshape.init(this.graph.getView().getOverlayPane());\n\tmxEvent.redirectMouseEvents(shape.node, this.graph, this.state);\n\t\n\tif (this.graph.dialect != mxConstants.DIALECT_SVG)\n\t{\n\t\tshape.pointerEvents = false;\n\t}\n\telse\n\t{\n\t\tshape.svgPointerEvents = 'stroke';\n\t}\n\t\n\treturn shape;\n};\n\n/**\n * Function: getStrokeWidth\n * \n * Returns the stroke width.\n */\nmxCellHighlight.prototype.getStrokeWidth = function(state)\n{\n\treturn this.strokeWidth;\n};\n\n/**\n * Function: repaint\n * \n * Updates the highlight after a change of the model or view.\n */\nmxCellHighlight.prototype.repaint = function()\n{\n\tif (this.state != null && this.shape != null)\n\t{\n\t\tthis.shape.scale = this.state.view.scale;\n\t\t\n\t\tif (this.graph.model.isEdge(this.state.cell))\n\t\t{\n\t\t\tthis.shape.strokewidth = this.getStrokeWidth();\n\t\t\tthis.shape.points = this.state.absolutePoints;\n\t\t\tthis.shape.outline = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.shape.bounds = new mxRectangle(this.state.x - this.spacing, this.state.y - this.spacing,\n\t\t\t\t\tthis.state.width + 2 * this.spacing, this.state.height + 2 * this.spacing);\n\t\t\tthis.shape.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\tthis.shape.strokewidth = this.getStrokeWidth() / this.state.view.scale;\n\t\t\tthis.shape.outline = true;\n\t\t}\n\n\t\t// Uses cursor from shape in highlight\n\t\tif (this.state.shape != null)\n\t\t{\n\t\t\tthis.shape.setCursor(this.state.shape.getCursor());\n\t\t}\n\t\t\n\t\t// Workaround for event transparency in VML with transparent color\n\t\t// is to use a non-transparent color with near zero opacity\n\t\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t\t{\n\t\t\tif (this.shape.stroke == 'transparent')\n\t\t\t{\n\t\t\t\t// KNOWN: Quirks mode does not seem to catch events if\n\t\t\t\t// we do not force an update of the DOM via a change such\n\t\t\t\t// as mxLog.debug. Since IE6 is EOL we do not add a fix.\n\t\t\t\tthis.shape.stroke = 'white';\n\t\t\t\tthis.shape.opacity = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.shape.opacity = this.opacity;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.shape.redraw();\n\t}\n};\n\n/**\n * Function: hide\n * \n * Resets the state of the cell marker.\n */\nmxCellHighlight.prototype.hide = function()\n{\n\tthis.highlight(null);\n};\n\n/**\n * Function: mark\n * \n * Marks the <markedState> and fires a <mark> event.\n */\nmxCellHighlight.prototype.highlight = function(state)\n{\n\tif (this.state != state)\n\t{\n\t\tif (this.shape != null)\n\t\t{\n\t\t\tthis.shape.destroy();\n\t\t\tthis.shape = null;\n\t\t}\n\n\t\tthis.state = state;\n\t\t\n\t\tif (this.state != null)\n\t\t{\n\t\t\tthis.drawHighlight();\n\t\t}\n\t}\n};\n\n/**\n * Function: isHighlightAt\n * \n * Returns true if this highlight is at the given position.\n */\nmxCellHighlight.prototype.isHighlightAt = function(x, y)\n{\n\tvar hit = false;\n\t\n\t// Quirks mode is currently not supported as it used a different coordinate system\n\tif (this.shape != null && document.elementFromPoint != null && !mxClient.IS_QUIRKS)\n\t{\n\t\tvar elt = document.elementFromPoint(x, y);\n\n\t\twhile (elt != null)\n\t\t{\n\t\t\tif (elt == this.shape.node)\n\t\t\t{\n\t\t\t\thit = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\telt = elt.parentNode;\n\t\t}\n\t}\n\t\n\treturn hit;\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxCellHighlight.prototype.destroy = function()\n{\n\tthis.graph.getView().removeListener(this.resetHandler);\n\tthis.graph.getView().removeListener(this.repaintHandler);\n\tthis.graph.getModel().removeListener(this.repaintHandler);\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n};\n\n__mxOutput.mxCellHighlight = typeof mxCellHighlight !== 'undefined' ? mxCellHighlight : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultKeyHandler\n *\n * Binds keycodes to actionnames in an editor. This aggregates an internal\n * <handler> and extends the implementation of <mxKeyHandler.escape> to not\n * only cancel the editing, but also hide the properties dialog and fire an\n * <mxEditor.escape> event via <editor>. An instance of this class is created\n * by <mxEditor> and stored in <mxEditor.keyHandler>.\n * \n * Example:\n * \n * Bind the delete key to the delete action in an existing editor.\n * \n * (code)\n * var keyHandler = new mxDefaultKeyHandler(editor);\n * keyHandler.bindAction(46, 'delete');\n * (end)\n *\n * Codec:\n * \n * This class uses the <mxDefaultKeyHandlerCodec> to read configuration\n * data into an existing instance. See <mxDefaultKeyHandlerCodec> for a\n * description of the configuration format.\n * \n * Keycodes:\n * \n * See <mxKeyHandler>.\n * \n * An <mxEvent.ESCAPE> event is fired via the editor if the escape key is\n * pressed.\n * \n * Constructor: mxDefaultKeyHandler\n *\n * Constructs a new default key handler for the <mxEditor.graph> in the\n * given <mxEditor>. (The editor may be null if a prototypical instance for\n * a <mxDefaultKeyHandlerCodec> is created.)\n * \n * Parameters:\n * \n * editor - Reference to the enclosing <mxEditor>.\n */\nfunction mxDefaultKeyHandler(editor)\n{\n\tif (editor != null)\n\t{\n\t\tthis.editor = editor;\n\t\tthis.handler = new mxKeyHandler(editor.graph);\n\t\t\n\t\t// Extends the escape function of the internal key\n\t\t// handle to hide the properties dialog and fire\n\t\t// the escape event via the editor instance\n\t\tvar old = this.handler.escape;\n\t\t\n\t\tthis.handler.escape = function(evt)\n\t\t{\n\t\t\told.apply(this, arguments);\n\t\t\teditor.hideProperties();\n\t\t\teditor.fireEvent(new mxEventObject(mxEvent.ESCAPE, 'event', evt));\n\t\t};\n\t}\n};\n\t\n/**\n * Variable: editor\n *\n * Reference to the enclosing <mxEditor>.\n */\nmxDefaultKeyHandler.prototype.editor = null;\n\n/**\n * Variable: handler\n *\n * Holds the <mxKeyHandler> for key event handling.\n */\nmxDefaultKeyHandler.prototype.handler = null;\n\n/**\n * Function: bindAction\n *\n * Binds the specified keycode to the given action in <editor>. The\n * optional control flag specifies if the control key must be pressed\n * to trigger the action.\n *\n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * action - Name of the action to execute in <editor>.\n * control - Optional boolean that specifies if control must be pressed.\n * Default is false.\n */\nmxDefaultKeyHandler.prototype.bindAction = function (code, action, control)\n{\n\tvar keyHandler = mxUtils.bind(this, function()\n\t{\n\t\tthis.editor.execute(action);\n\t});\n\n\t// Binds the function to control-down keycode\n\tif (control)\n\t{\n\t\tthis.handler.bindControlKey(code, keyHandler);\n\t}\n\n\t// Binds the function to the normal keycode\n\telse\n\t{\n\t\tthis.handler.bindKey(code, keyHandler);\t\t\t\t\n\t}\n};\n\n/**\n * Function: destroy\n *\n * Destroys the <handler> associated with this object. This does normally\n * not need to be called, the <handler> is destroyed automatically when the\n * window unloads (in IE) by <mxEditor>.\n */\nmxDefaultKeyHandler.prototype.destroy = function ()\n{\n\tthis.handler.destroy();\n\tthis.handler = null;\n};\n\n__mxOutput.mxDefaultKeyHandler = typeof mxDefaultKeyHandler !== 'undefined' ? mxDefaultKeyHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultPopupMenu\n *\n * Creates popupmenus for mouse events. This object holds an XML node\n * which is a description of the popup menu to be created. In\n * <createMenu>, the configuration is applied to the context and\n * the resulting menu items are added to the menu dynamically. See\n * <createMenu> for a description of the configuration format.\n * \n * This class does not create the DOM nodes required for the popup menu, it\n * only parses an XML description to invoke the respective methods on an\n * <mxPopupMenu> each time the menu is displayed.\n *\n * Codec:\n * \n * This class uses the <mxDefaultPopupMenuCodec> to read configuration\n * data into an existing instance, however, the actual parsing is done\n * by this class during program execution, so the format is described\n * below.\n * \n * Constructor: mxDefaultPopupMenu\n *\n * Constructs a new popupmenu-factory based on given configuration.\n *\n * Paramaters:\n *\n * config - XML node that contains the configuration data.\n */\nfunction mxDefaultPopupMenu(config)\n{\n\tthis.config = config;\n};\n\n/**\n * Variable: imageBasePath\n *\n * Base path for all icon attributes in the config. Default is null.\n */\nmxDefaultPopupMenu.prototype.imageBasePath = null;\n\n/**\n * Variable: config\n *\n * XML node used as the description of new menu items. This node is\n * used in <createMenu> to dynamically create the menu items if their\n * respective conditions evaluate to true for the given arguments.\n */\nmxDefaultPopupMenu.prototype.config = null;\n\n/**\n * Function: createMenu\n *\n * This function is called from <mxEditor> to add items to the\n * given menu based on <config>. The config is a sequence of\n * the following nodes and attributes.\n *\n * Child Nodes: \n *\n * add - Adds a new menu item. See below for attributes.\n * separator - Adds a separator. No attributes.\n * condition - Adds a custom condition. Name attribute.\n * \n * The add-node may have a child node that defines a function to be invoked\n * before the action is executed (or instead of an action to be executed).\n *\n * Attributes:\n *\n * as - Resource key for the label (needs entry in property file).\n * action - Name of the action to execute in enclosing editor.\n * icon - Optional icon (relative/absolute URL).\n * iconCls - Optional CSS class for the icon.\n * if - Optional name of condition that must be true (see below).\n * enabled-if - Optional name of condition that specifies if the menu item\n * should be enabled.\n * name - Name of custom condition. Only for condition nodes.\n *\n * Conditions:\n *\n * nocell - No cell under the mouse.\n * ncells - More than one cell selected.\n * notRoot - Drilling position is other than home.\n * cell - Cell under the mouse.\n * notEmpty - Exactly one cell with children under mouse.\n * expandable - Exactly one expandable cell under mouse.\n * collapsable - Exactly one collapsable cell under mouse.\n * validRoot - Exactly one cell which is a possible root under mouse.\n * swimlane - Exactly one cell which is a swimlane under mouse.\n *\n * Example:\n *\n * To add a new item for a given action to the popupmenu:\n * \n * (code)\n * <mxDefaultPopupMenu as=\"popupHandler\">\n *   <add as=\"delete\" action=\"delete\" icon=\"images/delete.gif\" if=\"cell\"/>\n * </mxDefaultPopupMenu>\n * (end)\n * \n * To add a new item for a custom function:\n * \n * (code)\n * <mxDefaultPopupMenu as=\"popupHandler\">\n *   <add as=\"action1\"><![CDATA[\n *\t\tfunction (editor, cell, evt)\n *\t\t{\n *\t\t\teditor.execute('action1', cell, 'myArg');\n *\t\t}\n *   ]]></add>\n * </mxDefaultPopupMenu>\n * (end)\n * \n * The above example invokes action1 with an additional third argument via\n * the editor instance. The third argument is passed to the function that\n * defines action1. If the add-node has no action-attribute, then only the\n * function defined in the text content is executed, otherwise first the\n * function and then the action defined in the action-attribute is\n * executed. The function in the text content has 3 arguments, namely the\n * <mxEditor> instance, the <mxCell> instance under the mouse, and the\n * native mouse event.\n *\n * Custom Conditions:\n *\n * To add a new condition for popupmenu items:\n *  \n * (code)\n * <condition name=\"condition1\"><![CDATA[\n *   function (editor, cell, evt)\n *   {\n *     return cell != null;\n *   }\n * ]]></condition>\n * (end)\n * \n * The new condition can then be used in any item as follows:\n * \n * (code)\n * <add as=\"action1\" action=\"action1\" icon=\"action1.gif\" if=\"condition1\"/>\n * (end)\n * \n * The order in which the items and conditions appear is not significant as\n * all connditions are evaluated before any items are created.\n * \n * Parameters:\n *\n * editor - Enclosing <mxEditor> instance.\n * menu - <mxPopupMenu> that is used for adding items and separators.\n * cell - Optional <mxCell> which is under the mousepointer.\n * evt - Optional mouse event which triggered the menu. \n */\nmxDefaultPopupMenu.prototype.createMenu = function(editor, menu, cell, evt)\n{\n\tif (this.config != null)\n\t{\n\t\tvar conditions = this.createConditions(editor, cell, evt);\n\t\tvar item = this.config.firstChild;\n\n\t\tthis.addItems(editor, menu, cell, evt, conditions, item, null);\n\t}\n};\n\n/**\n * Function: addItems\n * \n * Recursively adds the given items and all of its children into the given menu.\n * \n * Parameters:\n *\n * editor - Enclosing <mxEditor> instance.\n * menu - <mxPopupMenu> that is used for adding items and separators.\n * cell - Optional <mxCell> which is under the mousepointer.\n * evt - Optional mouse event which triggered the menu.\n * conditions - Array of names boolean conditions.\n * item - XML node that represents the current menu item.\n * parent - DOM node that represents the parent menu item.\n */\nmxDefaultPopupMenu.prototype.addItems = function(editor, menu, cell, evt, conditions, item, parent)\n{\n\tvar addSeparator = false;\n\t\n\twhile (item != null)\n\t{\n\t\tif (item.nodeName == 'add')\n\t\t{\n\t\t\tvar condition = item.getAttribute('if');\n\t\t\t\n\t\t\tif (condition == null || conditions[condition])\n\t\t\t{\n\t\t\t\tvar as = item.getAttribute('as');\n\t\t\t\tas = mxResources.get(as) || as;\n\t\t\t\tvar funct = mxUtils.eval(mxUtils.getTextContent(item));\n\t\t\t\tvar action = item.getAttribute('action');\n\t\t\t\tvar icon = item.getAttribute('icon');\n\t\t\t\tvar iconCls = item.getAttribute('iconCls');\n\t\t\t\tvar enabledCond = item.getAttribute('enabled-if');\n\t\t\t\tvar enabled = enabledCond == null || conditions[enabledCond];\n\t\t\t\t\n\t\t\t\tif (addSeparator)\n\t\t\t\t{\n\t\t\t\t\tmenu.addSeparator(parent);\n\t\t\t\t\taddSeparator = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (icon != null && this.imageBasePath)\n\t\t\t\t{\n\t\t\t\t\ticon = this.imageBasePath + icon;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar row = this.addAction(menu, editor, as, icon, funct, action, cell, parent, iconCls, enabled);\n\t\t\t\tthis.addItems(editor, menu, cell, evt, conditions, item.firstChild, row);\n\t\t\t}\n\t\t}\n\t\telse if (item.nodeName == 'separator')\n\t\t{\n\t\t\taddSeparator = true;\n\t\t}\n\t\t\n\t\titem = item.nextSibling;\n\t}\n};\n\n/**\n * Function: addAction\n *\n * Helper method to bind an action to a new menu item.\n * \n * Parameters:\n *\n * menu - <mxPopupMenu> that is used for adding items and separators.\n * editor - Enclosing <mxEditor> instance.\n * lab - String that represents the label of the menu item.\n * icon - Optional URL that represents the icon of the menu item.\n * action - Optional name of the action to execute in the given editor.\n * funct - Optional function to execute before the optional action. The\n * function takes an <mxEditor>, the <mxCell> under the mouse and the\n * mouse event that triggered the call.\n * cell - Optional <mxCell> to use as an argument for the action.\n * parent - DOM node that represents the parent menu item.\n * iconCls - Optional CSS class for the menu icon.\n * enabled - Optional boolean that specifies if the menu item is enabled.\n * Default is true.\n */\nmxDefaultPopupMenu.prototype.addAction = function(menu, editor, lab, icon, funct, action, cell, parent, iconCls, enabled)\n{\n\tvar clickHandler = function(evt)\n\t{\n\t\tif (typeof(funct) == 'function')\n\t\t{\n\t\t\tfunct.call(editor, editor, cell, evt);\n\t\t}\n\t\t\n\t\tif (action != null)\n\t\t{\n\t\t\teditor.execute(action, cell, evt);\n\t\t}\n\t};\n\t\n\treturn menu.addItem(lab, icon, clickHandler, parent, iconCls, enabled);\n};\n\n/**\n * Function: createConditions\n * \n * Evaluates the default conditions for the given context.\n */\nmxDefaultPopupMenu.prototype.createConditions = function(editor, cell, evt)\n{\n\t// Creates array with conditions\n\tvar model = editor.graph.getModel();\n\tvar childCount = model.getChildCount(cell);\n\t\n\t// Adds some frequently used conditions\n\tvar conditions = [];\n\tconditions['nocell'] = cell == null;\n\tconditions['ncells'] = editor.graph.getSelectionCount() > 1;\n\tconditions['notRoot'] = model.getRoot() !=\n\t\tmodel.getParent(editor.graph.getDefaultParent());\n\tconditions['cell'] = cell != null;\n\t\n\tvar isCell = cell != null && editor.graph.getSelectionCount() == 1;\n\tconditions['nonEmpty'] = isCell && childCount > 0;\n\tconditions['expandable'] = isCell && editor.graph.isCellFoldable(cell, false);\n\tconditions['collapsable'] = isCell && editor.graph.isCellFoldable(cell, true);\n\tconditions['validRoot'] = isCell && editor.graph.isValidRoot(cell);\n\tconditions['emptyValidRoot'] = conditions['validRoot'] && childCount == 0;\n\tconditions['swimlane'] = isCell && editor.graph.isSwimlane(cell);\n\n\t// Evaluates dynamic conditions from config file\n\tvar condNodes = this.config.getElementsByTagName('condition');\n\t\n\tfor (var i=0; i<condNodes.length; i++)\n\t{\n\t\tvar funct = mxUtils.eval(mxUtils.getTextContent(condNodes[i]));\n\t\tvar name = condNodes[i].getAttribute('name');\n\t\t\n\t\tif (name != null && typeof(funct) == 'function')\n\t\t{\n\t\t\tconditions[name] = funct(editor, cell, evt);\n\t\t}\n\t}\n\t\n\treturn conditions;\n};\n\n__mxOutput.mxDefaultPopupMenu = typeof mxDefaultPopupMenu !== 'undefined' ? mxDefaultPopupMenu : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultToolbar\n *\n * Toolbar for the editor. This modifies the state of the graph\n * or inserts new cells upon mouse clicks.\n * \n * Example:\n * \n * Create a toolbar with a button to copy the selection into the clipboard,\n * and a combo box with one action to paste the selection from the clipboard\n * into the graph.\n * \n * (code)\n * var toolbar = new mxDefaultToolbar(container, editor);\n * toolbar.addItem('Copy', null, 'copy');\n * \n * var combo = toolbar.addActionCombo('More actions...');\n * toolbar.addActionOption(combo, 'Paste', 'paste');\n * (end) \n *\n * Codec:\n * \n * This class uses the <mxDefaultToolbarCodec> to read configuration\n * data into an existing instance. See <mxDefaultToolbarCodec> for a\n * description of the configuration format.\n * \n * Constructor: mxDefaultToolbar\n *\n * Constructs a new toolbar for the given container and editor. The\n * container and editor may be null if a prototypical instance for a\n * <mxDefaultKeyHandlerCodec> is created.\n *\n * Parameters:\n *\n * container - DOM node that contains the toolbar.\n * editor - Reference to the enclosing <mxEditor>. \n */\nfunction mxDefaultToolbar(container, editor)\n{\n\tthis.editor = editor;\n\n\tif (container != null && editor != null)\n\t{\n\t\tthis.init(container);\n\t}\n};\n\t\n/**\n * Variable: editor\n *\n * Reference to the enclosing <mxEditor>.\n */\nmxDefaultToolbar.prototype.editor = null;\n\n/**\n * Variable: toolbar\n *\n * Holds the internal <mxToolbar>.\n */\nmxDefaultToolbar.prototype.toolbar = null;\n\n/**\n * Variable: resetHandler\n *\n * Reference to the function used to reset the <toolbar>.\n */\nmxDefaultToolbar.prototype.resetHandler = null;\n\n/**\n * Variable: spacing\n *\n * Defines the spacing between existing and new vertices in\n * gridSize units when a new vertex is dropped on an existing\n * cell. Default is 4 (40 pixels).\n */\nmxDefaultToolbar.prototype.spacing = 4;\n\n/**\n * Variable: connectOnDrop\n * \n * Specifies if elements should be connected if new cells are dropped onto\n * connectable elements. Default is false.\n */\nmxDefaultToolbar.prototype.connectOnDrop = false;\n\n/**\n * Function: init\n * \n * Constructs the <toolbar> for the given container and installs a listener\n * that updates the <mxEditor.insertFunction> on <editor> if an item is\n * selected in the toolbar. This assumes that <editor> is not null.\n *\n * Parameters:\n *\n * container - DOM node that contains the toolbar.\n */\nmxDefaultToolbar.prototype.init = function(container)\n{\n\tif (container != null)\n\t{\n\t\tthis.toolbar = new mxToolbar(container);\n\t\t\n\t\t// Installs the insert function in the editor if an item is\n\t\t// selected in the toolbar\n\t\tthis.toolbar.addListener(mxEvent.SELECT, mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar funct = evt.getProperty('function');\n\t\t\t\n\t\t\tif (funct != null)\n\t\t\t{\n\t\t\t\tthis.editor.insertFunction = mxUtils.bind(this, function()\n\t\t\t\t{\n\t\t\t\t\tfunct.apply(this, arguments);\n\t\t\t\t\tthis.toolbar.resetMode();\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.editor.insertFunction = null;\n\t\t\t}\n\t\t}));\n\t\t\n\t\t// Resets the selected tool after a doubleclick or escape keystroke\n\t\tthis.resetHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\tif (this.toolbar != null)\n\t\t\t{\n\t\t\t\tthis.toolbar.resetMode(true);\n\t\t\t}\n\t\t});\n\n\t\tthis.editor.graph.addListener(mxEvent.DOUBLE_CLICK, this.resetHandler);\n\t\tthis.editor.addListener(mxEvent.ESCAPE, this.resetHandler);\n\t}\n};\n\n/**\n * Function: addItem\n *\n * Adds a new item that executes the given action in <editor>. The title,\n * icon and pressedIcon are used to display the toolbar item.\n * \n * Parameters:\n *\n * title - String that represents the title (tooltip) for the item.\n * icon - URL of the icon to be used for displaying the item.\n * action - Name of the action to execute when the item is clicked.\n * pressed - Optional URL of the icon for the pressed state.\n */\nmxDefaultToolbar.prototype.addItem = function(title, icon, action, pressed)\n{\n\tvar clickHandler = mxUtils.bind(this, function()\n\t{\n\t\tif (action != null && action.length > 0)\n\t\t{\n\t\t\tthis.editor.execute(action);\n\t\t}\n\t});\n\t\n\treturn this.toolbar.addItem(title, icon, clickHandler, pressed);\n};\n\n/**\n * Function: addSeparator\n *\n * Adds a vertical separator using the optional icon.\n * \n * Parameters:\n * \n * icon - Optional URL of the icon that represents the vertical separator.\n * Default is <mxClient.imageBasePath> + '/separator.gif'.\n */\nmxDefaultToolbar.prototype.addSeparator = function(icon)\n{\n\ticon = icon || mxClient.imageBasePath + '/separator.gif';\n\tthis.toolbar.addSeparator(icon);\n};\n\t\n/**\n * Function: addCombo\n *\n * Helper method to invoke <mxToolbar.addCombo> on <toolbar> and return the\n * resulting DOM node.\n */\nmxDefaultToolbar.prototype.addCombo = function()\n{\n\treturn this.toolbar.addCombo();\n};\n\t\t\n/**\n * Function: addActionCombo\n *\n * Helper method to invoke <mxToolbar.addActionCombo> on <toolbar> using\n * the given title and return the resulting DOM node.\n * \n * Parameters:\n * \n * title - String that represents the title of the combo.\n */\nmxDefaultToolbar.prototype.addActionCombo = function(title)\n{\n\treturn this.toolbar.addActionCombo(title);\n};\n\n/**\n * Function: addActionOption\n *\n * Binds the given action to a option with the specified label in the\n * given combo. Combo is an object returned from an earlier call to\n * <addCombo> or <addActionCombo>.\n * \n * Parameters:\n * \n * combo - DOM node that represents the combo box.\n * title - String that represents the title of the combo.\n * action - Name of the action to execute in <editor>.\n */\nmxDefaultToolbar.prototype.addActionOption = function(combo, title, action)\n{\n\tvar clickHandler = mxUtils.bind(this, function()\n\t{\n\t\tthis.editor.execute(action);\n\t});\n\t\n\tthis.addOption(combo, title, clickHandler);\n};\n\n/**\n * Function: addOption\n *\n * Helper method to invoke <mxToolbar.addOption> on <toolbar> and return\n * the resulting DOM node that represents the option.\n * \n * Parameters:\n * \n * combo - DOM node that represents the combo box.\n * title - String that represents the title of the combo.\n * value - Object that represents the value of the option.\n */\nmxDefaultToolbar.prototype.addOption = function(combo, title, value)\n{\n\treturn this.toolbar.addOption(combo, title, value);\n};\n\t\n/**\n * Function: addMode\n *\n * Creates an item for selecting the given mode in the <editor>'s graph.\n * Supported modenames are select, connect and pan.\n * \n * Parameters:\n * \n * title - String that represents the title of the item.\n * icon - URL of the icon that represents the item.\n * mode - String that represents the mode name to be used in\n * <mxEditor.setMode>.\n * pressed - Optional URL of the icon that represents the pressed state.\n * funct - Optional JavaScript function that takes the <mxEditor> as the\n * first and only argument that is executed after the mode has been\n * selected.\n */\nmxDefaultToolbar.prototype.addMode = function(title, icon, mode, pressed, funct)\n{\n\tvar clickHandler = mxUtils.bind(this, function()\n\t{\n\t\tthis.editor.setMode(mode);\n\t\t\n\t\tif (funct != null)\n\t\t{\n\t\t\tfunct(this.editor);\n\t\t}\n\t});\n\t\n\treturn this.toolbar.addSwitchMode(title, icon, clickHandler, pressed);\n};\n\n/**\n * Function: addPrototype\n *\n * Creates an item for inserting a clone of the specified prototype cell into\n * the <editor>'s graph. The ptype may either be a cell or a function that\n * returns a cell.\n * \n * Parameters:\n * \n * title - String that represents the title of the item.\n * icon - URL of the icon that represents the item.\n * ptype - Function or object that represents the prototype cell. If ptype\n * is a function then it is invoked with no arguments to create new\n * instances.\n * pressed - Optional URL of the icon that represents the pressed state.\n * insert - Optional JavaScript function that handles an insert of the new\n * cell. This function takes the <mxEditor>, new cell to be inserted, mouse\n * event and optional <mxCell> under the mouse pointer as arguments.\n * toggle - Optional boolean that specifies if the item can be toggled.\n * Default is true.\n */\nmxDefaultToolbar.prototype.addPrototype = function(title, icon, ptype, pressed, insert, toggle)\n{\n\t// Creates a wrapper function that is in charge of constructing\n\t// the new cell instance to be inserted into the graph\n\tvar factory = mxUtils.bind(this, function()\n\t{\n\t\tif (typeof(ptype) == 'function')\n\t\t{\n\t\t\treturn ptype();\n\t\t}\n\t\telse if (ptype != null)\n\t\t{\n\t\t\treturn this.editor.graph.cloneCell(ptype);\n\t\t}\n\t\t\n\t\treturn null;\n\t});\n\t\n\t// Defines the function for a click event on the graph\n\t// after this item has been selected in the toolbar\n\tvar clickHandler = mxUtils.bind(this, function(evt, cell)\n\t{\n\t\tif (typeof(insert) == 'function')\n\t\t{\n\t\t\tinsert(this.editor, factory(), evt, cell);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.drop(factory(), evt, cell);\n\t\t}\n\t\t\n\t\tthis.toolbar.resetMode();\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tvar img = this.toolbar.addMode(title, icon, clickHandler, pressed, null, toggle);\n\t\t\t\t\n\t// Creates a wrapper function that calls the click handler without\n\t// the graph argument\n\tvar dropHandler = function(graph, evt, cell)\n\t{\n\t\tclickHandler(evt, cell);\n\t};\n\t\n\tthis.installDropHandler(img, dropHandler);\n\t\n\treturn img;\n};\n\n/**\n * Function: drop\n * \n * Handles a drop from a toolbar item to the graph. The given vertex\n * represents the new cell to be inserted. This invokes <insert> or\n * <connect> depending on the given target cell.\n * \n * Parameters:\n * \n * vertex - <mxCell> to be inserted.\n * evt - Mouse event that represents the drop.\n * target - Optional <mxCell> that represents the drop target.\n */\nmxDefaultToolbar.prototype.drop = function(vertex, evt, target)\n{\n\tvar graph = this.editor.graph;\n\tvar model = graph.getModel();\n\t\n\tif (target == null ||\n\t\tmodel.isEdge(target) ||\n\t\t!this.connectOnDrop ||\n\t\t!graph.isCellConnectable(target))\n\t{\n\t\twhile (target != null &&\n\t\t\t!graph.isValidDropTarget(target, [vertex], evt))\n\t\t{\n\t\t\ttarget = model.getParent(target);\n\t\t}\n\t\t\n\t\tthis.insert(vertex, evt, target);\n\t}\n\telse\n\t{\n\t\tthis.connect(vertex, evt, target);\n\t}\n};\n\n/**\n * Function: insert\n *\n * Handles a drop by inserting the given vertex into the given parent cell\n * or the default parent if no parent is specified.\n * \n * Parameters:\n * \n * vertex - <mxCell> to be inserted.\n * evt - Mouse event that represents the drop.\n * parent - Optional <mxCell> that represents the parent.\n */\nmxDefaultToolbar.prototype.insert = function(vertex, evt, target)\n{\n\tvar graph = this.editor.graph;\n\t\n\tif (graph.canImportCell(vertex))\n\t{\n\t\tvar x = mxEvent.getClientX(evt);\n\t\tvar y = mxEvent.getClientY(evt);\n\t\tvar pt = mxUtils.convertPoint(graph.container, x, y);\n\t\t\n\t\t// Splits the target edge or inserts into target group\n\t\tif (graph.isSplitEnabled() &&\n\t\t\tgraph.isSplitTarget(target, [vertex], evt))\n\t\t{\n\t\t\treturn graph.splitEdge(target, [vertex], null, pt.x, pt.y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.editor.addVertex(target, vertex, pt.x, pt.y);\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: connect\n * \n * Handles a drop by connecting the given vertex to the given source cell.\n * \n * vertex - <mxCell> to be inserted.\n * evt - Mouse event that represents the drop.\n * source - Optional <mxCell> that represents the source terminal.\n */\nmxDefaultToolbar.prototype.connect = function(vertex, evt, source)\n{\n\tvar graph = this.editor.graph;\n\tvar model = graph.getModel();\n\t\n\tif (source != null &&\n\t\tgraph.isCellConnectable(vertex) &&\n\t\tgraph.isEdgeValid(null, source, vertex))\n\t{\n\t\tvar edge = null;\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar geo = model.getGeometry(source);\n\t\t\tvar g = model.getGeometry(vertex).clone();\n\t\t\t\n\t\t\t// Moves the vertex away from the drop target that will\n\t\t\t// be used as the source for the new connection\n\t\t\tg.x = geo.x + (geo.width - g.width) / 2;\n\t\t\tg.y = geo.y + (geo.height - g.height) / 2;\n\t\t\t\n\t\t\tvar step = this.spacing * graph.gridSize;\n\t\t\tvar dist = model.getDirectedEdgeCount(source, true) * 20;\n\t\t\t\n\t\t\tif (this.editor.horizontalFlow)\n\t\t\t{\n\t\t\t\tg.x += (g.width + geo.width) / 2 + step + dist;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tg.y += (g.height + geo.height) / 2 + step + dist;\n\t\t\t}\n\t\t\t\n\t\t\tvertex.setGeometry(g);\n\t\t\t\n\t\t\t// Fires two add-events with the code below - should be fixed\n\t\t\t// to only fire one add event for both inserts\n\t\t\tvar parent = model.getParent(source);\n\t\t\tgraph.addCell(vertex, parent);\n\t\t\tgraph.constrainChild(vertex);\n\n\t\t\t// Creates the edge using the editor instance and calls\n\t\t\t// the second function that fires an add event\n\t\t\tedge = this.editor.createEdge(source, vertex);\n\t\t\t\n\t\t\tif (model.getGeometry(edge) == null)\n\t\t\t{\n\t\t\t\tvar edgeGeometry = new mxGeometry();\n\t\t\t\tedgeGeometry.relative = true;\n\t\t\t\t\n\t\t\t\tmodel.setGeometry(edge, edgeGeometry);\n\t\t\t}\n\t\t\t\n\t\t\tgraph.addEdge(edge, parent, source, vertex);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t\t\n\t\tgraph.setSelectionCells([vertex, edge]);\n\t\tgraph.scrollCellToVisible(vertex);\n\t}\n};\n\n/**\n * Function: installDropHandler\n * \n * Makes the given img draggable using the given function for handling a\n * drop event.\n * \n * Parameters:\n * \n * img - DOM node that represents the image.\n * dropHandler - Function that handles a drop of the image.\n */\nmxDefaultToolbar.prototype.installDropHandler = function (img, dropHandler)\n{\n\tvar sprite = document.createElement('img');\n\tsprite.setAttribute('src', img.getAttribute('src'));\n\n\t// Handles delayed loading of the images\n\tvar loader = mxUtils.bind(this, function(evt)\n\t{\n\t\t// Preview uses the image node with double size. Later this can be\n\t\t// changed to use a separate preview and guides, but for this the\n\t\t// dropHandler must use the additional x- and y-arguments and the\n\t\t// dragsource which makeDraggable returns much be configured to\n\t\t// use guides via mxDragSource.isGuidesEnabled.\n\t\tsprite.style.width = (2 * img.offsetWidth) + 'px';\n\t\tsprite.style.height = (2 * img.offsetHeight) + 'px';\n\n\t\tmxUtils.makeDraggable(img, this.editor.graph, dropHandler,\n\t\t\tsprite);\n\t\tmxEvent.removeListener(sprite, 'load', loader);\n\t});\n\n\tif (mxClient.IS_IE)\n\t{\n\t\tloader();\n\t}\n\telse\n\t{\n\t\tmxEvent.addListener(sprite, 'load', loader);\n\t}\t\n};\n\n/**\n * Function: destroy\n * \n * Destroys the <toolbar> associated with this object and removes all\n * installed listeners. This does normally not need to be called, the\n * <toolbar> is destroyed automatically when the window unloads (in IE) by\n * <mxEditor>.\n */\nmxDefaultToolbar.prototype.destroy = function ()\n{\n\tif (this.resetHandler != null)\n\t{\n\t\tthis.editor.graph.removeListener('dblclick', this.resetHandler);\n\t\tthis.editor.removeListener('escape', this.resetHandler);\n\t\tthis.resetHandler = null;\n\t}\n\t\n\tif (this.toolbar != null)\n\t{\n\t\tthis.toolbar.destroy();\n\t\tthis.toolbar = null;\n\t}\n};\n\n__mxOutput.mxDefaultToolbar = typeof mxDefaultToolbar !== 'undefined' ? mxDefaultToolbar : undefined;\n\n/**\n * Copyright (c) 2006-2019, JGraph Ltd\n * Copyright (c) 2006-2019, draw.io AG\n */\n/**\n * Class: mxEditor\n *\n * Extends <mxEventSource> to implement an application wrapper for a graph that\n * adds <actions>, I/O using <mxCodec>, auto-layout using <mxLayoutManager>,\n * command history using <undoManager>, and standard dialogs and widgets, eg.\n * properties, help, outline, toolbar, and popupmenu. It also adds <templates>\n * to be used as cells in toolbars, auto-validation using the <validation>\n * flag, attribute cycling using <cycleAttributeValues>, higher-level events\n * such as <root>, and backend integration using <urlPost> and <urlImage>.\n *\n * Actions:\n *\n * Actions are functions stored in the <actions> array under their names. The\n * functions take the <mxEditor> as the first, and an optional <mxCell> as the\n * second argument and are invoked using <execute>. Any additional arguments\n * passed to execute are passed on to the action as-is.\n *\n * A list of built-in actions is available in the <addActions> description.\n *\n * Read/write Diagrams:\n *\n * To read a diagram from an XML string, for example from a textfield within the\n * page, the following code is used:\n *\n * (code)\n * var doc = mxUtils.parseXML(xmlString);\n * var node = doc.documentElement;\n * editor.readGraphModel(node);\n * (end)\n *\n * For reading a diagram from a remote location, use the <open> method.\n *\n * To save diagrams in XML on a server, you can set the <urlPost> variable.\n * This variable will be used in <getUrlPost> to construct a URL for the post\n * request that is issued in the <save> method. The post request contains the\n * XML representation of the diagram as returned by <writeGraphModel> in the\n * xml parameter.\n *\n * On the server side, the post request is processed using standard\n * technologies such as Java Servlets, CGI, .NET or ASP.\n *\n * Here are some examples of processing a post request in various languages.\n *\n * - Java: URLDecoder.decode(request.getParameter(\"xml\"), \"UTF-8\").replace(\"\\n\", \"&#xa;\")\n *\n * Note that the linefeeds should only be replaced if the XML is\n * processed in Java, for example when creating an image, but not\n * if the XML is passed back to the client-side.\n *\n * - .NET: HttpUtility.UrlDecode(context.Request.Params[\"xml\"])\n * - PHP: urldecode($_POST[\"xml\"])\n *\n * Creating images:\n *\n * A backend (Java, PHP or C#) is required for creating images. The\n * distribution contains an example for each backend (ImageHandler.java,\n * ImageHandler.cs and graph.php). More information about using a backend\n * to create images can be found in the readme.html files. Note that the\n * preview is implemented using VML/SVG in the browser and does not require\n * a backend. The backend is only required to creates images (bitmaps).\n *\n * Special characters:\n *\n * Note There are five characters that should always appear in XML content as\n * escapes, so that they do not interact with the syntax of the markup. These\n * are part of the language for all documents based on XML and for HTML.\n *\n * - &lt; (<)\n * - &gt; (>)\n * - &amp; (&)\n * - &quot; (\")\n * - &apos; (')\n *\n * Although it is part of the XML language, &apos; is not defined in HTML.\n * For this reason the XHTML specification recommends instead the use of\n * &#39; if text may be passed to a HTML user agent.\n *\n * If you are having problems with special characters on the server-side then\n * you may want to try the <escapePostData> flag.\n *\n * For converting decimal escape sequences inside strings, a user has provided\n * us with the following function:\n *\n * (code)\n * function html2js(text)\n * {\n *   var entitySearch = /&#[0-9]+;/;\n *   var entity;\n *\n *   while (entity = entitySearch.exec(text))\n *   {\n *     var charCode = entity[0].substring(2, entity[0].length -1);\n *     text = text.substring(0, entity.index)\n *            + String.fromCharCode(charCode)\n *            + text.substring(entity.index + entity[0].length);\n *   }\n *\n *   return text;\n * }\n * (end)\n *\n * Otherwise try using hex escape sequences and the built-in unescape function\n * for converting such strings.\n *\n * Local Files:\n *\n * For saving and opening local files, no standardized method exists that\n * works across all browsers. The recommended way of dealing with local files\n * is to create a backend that streams the XML data back to the browser (echo)\n * as an attachment so that a Save-dialog is displayed on the client-side and\n * the file can be saved to the local disk.\n *\n * For example, in PHP the code that does this looks as follows.\n *\n * (code)\n * $xml = stripslashes($_POST[\"xml\"]);\n * header(\"Content-Disposition: attachment; filename=\\\"diagram.xml\\\"\");\n * echo($xml);\n * (end)\n *\n * To open a local file, the file should be uploaded via a form in the browser\n * and then opened from the server in the editor.\n *\n * Cell Properties:\n *\n * The properties displayed in the properties dialog are the attributes and\n * values of the cell's user object, which is an XML node. The XML node is\n * defined in the templates section of the config file.\n *\n * The templates are stored in <mxEditor.templates> and contain cells which\n * are cloned at insertion time to create new vertices by use of drag and\n * drop from the toolbar. Each entry in the toolbar for adding a new vertex\n * must refer to an existing template.\n *\n * In the following example, the task node is a business object and only the\n * mxCell node and its mxGeometry child contain graph information:\n *\n * (code)\n * <Task label=\"Task\" description=\"\">\n *   <mxCell vertex=\"true\">\n *     <mxGeometry as=\"geometry\" width=\"72\" height=\"32\"/>\n *   </mxCell>\n * </Task>\n * (end)\n *\n * The idea is that the XML representation is inverse from the in-memory\n * representation: The outer XML node is the user object and the inner node is\n * the cell. This means the user object of the cell is the Task node with no\n * children for the above example:\n *\n * (code)\n * <Task label=\"Task\" description=\"\"/>\n * (end)\n *\n * The Task node can have any tag name, attributes and child nodes. The\n * <mxCodec> will use the XML hierarchy as the user object, while removing the\n * \"known annotations\", such as the mxCell node. At save-time the cell data\n * will be \"merged\" back into the user object. The user object is only modified\n * via the properties dialog during the lifecycle of the cell.\n *\n * In the default implementation of <createProperties>, the user object's\n * attributes are put into a form for editing. Attributes are changed using\n * the <mxCellAttributeChange> action in the model. The dialog can be replaced\n * by overriding the <createProperties> hook or by replacing the showProperties\n * action in <actions>. Alternatively, the entry in the config file's popupmenu\n * section can be modified to invoke a different action.\n *\n * If you want to displey the properties dialog on a doubleclick, you can set\n * <mxEditor.dblClickAction> to showProperties as follows:\n *\n * (code)\n * editor.dblClickAction = 'showProperties';\n * (end)\n *\n * Popupmenu and Toolbar:\n *\n * The toolbar and popupmenu are typically configured using the respective\n * sections in the config file, that is, the popupmenu is defined as follows:\n *\n * (code)\n * <mxEditor>\n *   <mxDefaultPopupMenu as=\"popupHandler\">\n * \t\t<add as=\"cut\" action=\"cut\" icon=\"images/cut.gif\"/>\n *      ...\n * (end)\n *\n * New entries can be added to the toolbar by inserting an add-node into the\n * above configuration. Existing entries may be removed and changed by\n * modifying or removing the respective entries in the configuration.\n * The configuration is read by the <mxDefaultPopupMenuCodec>, the format of the\n * configuration is explained in <mxDefaultPopupMenu.decode>.\n *\n * The toolbar is defined in the mxDefaultToolbar section. Items can be added\n * and removed in this section.\n *\n * (code)\n * <mxEditor>\n *   <mxDefaultToolbar>\n *     <add as=\"save\" action=\"save\" icon=\"images/save.gif\"/>\n *     <add as=\"Swimlane\" template=\"swimlane\" icon=\"images/swimlane.gif\"/>\n *     ...\n * (end)\n *\n * The format of the configuration is described in\n * <mxDefaultToolbarCodec.decode>.\n *\n * Ids:\n *\n * For the IDs, there is an implicit behaviour in <mxCodec>: It moves the Id\n * from the cell to the user object at encoding time and vice versa at decoding\n * time. For example, if the Task node from above has an id attribute, then\n * the <mxCell.id> of the corresponding cell will have this value. If there\n * is no Id collision in the model, then the cell may be retrieved using this\n * Id with the <mxGraphModel.getCell> function. If there is a collision, a new\n * Id will be created for the cell using <mxGraphModel.createId>. At encoding\n * time, this new Id will replace the value previously stored under the id\n * attribute in the Task node.\n *\n * See <mxEditorCodec>, <mxDefaultToolbarCodec> and <mxDefaultPopupMenuCodec>\n * for information about configuring the editor and user interface.\n *\n * Programmatically inserting cells:\n *\n * For inserting a new cell, say, by clicking a button in the document,\n * the following code can be used. This requires an reference to the editor.\n *\n * (code)\n * var userObject = new Object();\n * var parent = editor.graph.getDefaultParent();\n * var model = editor.graph.model;\n * model.beginUpdate();\n * try\n * {\n *   editor.graph.insertVertex(parent, null, userObject, 20, 20, 80, 30);\n * }\n * finally\n * {\n *   model.endUpdate();\n * }\n * (end)\n *\n * If a template cell from the config file should be inserted, then a clone\n * of the template can be created as follows. The clone is then inserted using\n * the add function instead of addVertex.\n *\n * (code)\n * var template = editor.templates['task'];\n * var clone = editor.graph.model.cloneCell(template);\n * (end)\n *\n * Resources:\n *\n * resources/editor - Language resources for mxEditor\n *\n * Callback: onInit\n *\n * Called from within the constructor. In the callback,\n * \"this\" refers to the editor instance.\n *\n * Cookie: mxgraph=seen\n *\n * Set when the editor is started. Never expires. Use\n * <resetFirstTime> to reset this cookie. This cookie\n * only exists if <onInit> is implemented.\n *\n * Event: mxEvent.OPEN\n *\n * Fires after a file was opened in <open>. The <code>filename</code> property\n * contains the filename that was used. The same value is also available in\n * <filename>.\n *\n * Event: mxEvent.SAVE\n *\n * Fires after the current file was saved in <save>. The <code>url</code>\n * property contains the URL that was used for saving.\n *\n * Event: mxEvent.POST\n *\n * Fires if a successful response was received in <postDiagram>. The\n * <code>request</code> property contains the <mxXmlRequest>, the\n * <code>url</code> and <code>data</code> properties contain the URL and the\n * data that were used in the post request.\n *\n * Event: mxEvent.ROOT\n *\n * Fires when the current root has changed, or when the title of the current\n * root has changed. This event has no properties.\n *\n * Event: mxEvent.BEFORE_ADD_VERTEX\n *\n * Fires before a vertex is added in <addVertex>. The <code>vertex</code>\n * property contains the new vertex and the <code>parent</code> property\n * contains its parent.\n *\n * Event: mxEvent.ADD_VERTEX\n *\n * Fires between begin- and endUpdate in <addVertex>. The <code>vertex</code>\n * property contains the vertex that is being inserted.\n *\n * Event: mxEvent.AFTER_ADD_VERTEX\n *\n * Fires after a vertex was inserted and selected in <addVertex>. The\n * <code>vertex</code> property contains the new vertex.\n *\n * Example:\n *\n * For starting an in-place edit after a new vertex has been added to the\n * graph, the following code can be used.\n *\n * (code)\n * editor.addListener(mxEvent.AFTER_ADD_VERTEX, function(sender, evt)\n * {\n *   var vertex = evt.getProperty('vertex');\n *\n *   if (editor.graph.isCellEditable(vertex))\n *   {\n *   \teditor.graph.startEditingAtCell(vertex);\n *   }\n * });\n * (end)\n *\n * Event: mxEvent.ESCAPE\n *\n * Fires when the escape key is pressed. The <code>event</code> property\n * contains the key event.\n *\n * Constructor: mxEditor\n *\n * Constructs a new editor. This function invokes the <onInit> callback\n * upon completion.\n *\n * Example:\n *\n * (code)\n * var config = mxUtils.load('config/diagrameditor.xml').getDocumentElement();\n * var editor = new mxEditor(config);\n * (end)\n *\n * Parameters:\n *\n * config - Optional XML node that contains the configuration.\n */\nfunction mxEditor(config)\n{\n\tthis.actions = [];\n\tthis.addActions();\n\n\t// Executes the following only if a document has been instanciated.\n\t// That is, don't execute when the editorcodec is setup.\n\tif (document.body != null)\n\t{\n\t\t// Defines instance fields\n\t\tthis.cycleAttributeValues = [];\n\t\tthis.popupHandler = new mxDefaultPopupMenu();\n\t\tthis.undoManager = new mxUndoManager();\n\n\t\t// Creates the graph and toolbar without the containers\n\t\tthis.graph = this.createGraph();\n\t\tthis.toolbar = this.createToolbar();\n\n\t\t// Creates the global keyhandler (requires graph instance)\n\t\tthis.keyHandler = new mxDefaultKeyHandler(this);\n\n\t\t// Configures the editor using the URI\n\t\t// which was passed to the ctor\n\t\tthis.configure(config);\n\n\t\t// Assigns the swimlaneIndicatorColorAttribute on the graph\n\t\tthis.graph.swimlaneIndicatorColorAttribute = this.cycleAttributeName;\n\n\t\t// Checks if the <onInit> hook has been set\n\t\tif (this.onInit != null)\n\t\t{\n\t\t\t// Invokes the <onInit> hook\n\t\t\tthis.onInit();\n\t\t}\n\n\t\t// Automatic deallocation of memory\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tmxEvent.addListener(window, 'unload', mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.destroy();\n\t\t\t}));\n\t\t}\n\t}\n};\n\n/**\n * Installs the required language resources at class\n * loading time.\n */\nif (mxLoadResources)\n{\n\tmxResources.add(mxClient.basePath + '/resources/editor');\n}\nelse\n{\n\tmxClient.defaultBundles.push(mxClient.basePath + '/resources/editor');\n}\n\n/**\n * Extends mxEventSource.\n */\nmxEditor.prototype = new mxEventSource();\nmxEditor.prototype.constructor = mxEditor;\n\n/**\n * Group: Controls and Handlers\n */\n\n/**\n * Variable: askZoomResource\n *\n * Specifies the resource key for the zoom dialog. If the resource for this\n * key does not exist then the value is used as the error message. Default\n * is 'askZoom'.\n */\nmxEditor.prototype.askZoomResource = (mxClient.language != 'none') ? 'askZoom' : '';\n\n/**\n * Variable: lastSavedResource\n *\n * Specifies the resource key for the last saved info. If the resource for\n * this key does not exist then the value is used as the error message.\n * Default is 'lastSaved'.\n */\nmxEditor.prototype.lastSavedResource = (mxClient.language != 'none') ? 'lastSaved' : '';\n\n/**\n * Variable: currentFileResource\n *\n * Specifies the resource key for the current file info. If the resource for\n * this key does not exist then the value is used as the error message.\n * Default is 'currentFile'.\n */\nmxEditor.prototype.currentFileResource = (mxClient.language != 'none') ? 'currentFile' : '';\n\n/**\n * Variable: propertiesResource\n *\n * Specifies the resource key for the properties window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'properties'.\n */\nmxEditor.prototype.propertiesResource = (mxClient.language != 'none') ? 'properties' : '';\n\n/**\n * Variable: tasksResource\n *\n * Specifies the resource key for the tasks window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'tasks'.\n */\nmxEditor.prototype.tasksResource = (mxClient.language != 'none') ? 'tasks' : '';\n\n/**\n * Variable: helpResource\n *\n * Specifies the resource key for the help window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'help'.\n */\nmxEditor.prototype.helpResource = (mxClient.language != 'none') ? 'help' : '';\n\n/**\n * Variable: outlineResource\n *\n * Specifies the resource key for the outline window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'outline'.\n */\nmxEditor.prototype.outlineResource = (mxClient.language != 'none') ? 'outline' : '';\n\n/**\n * Variable: outline\n *\n * Reference to the <mxWindow> that contains the outline. The <mxOutline>\n * is stored in outline.outline.\n */\nmxEditor.prototype.outline = null;\n\n/**\n * Variable: graph\n *\n * Holds a <mxGraph> for displaying the diagram. The graph\n * is created in <setGraphContainer>.\n */\nmxEditor.prototype.graph = null;\n\n/**\n * Variable: graphRenderHint\n *\n * Holds the render hint used for creating the\n * graph in <setGraphContainer>. See <mxGraph>.\n * Default is null.\n */\nmxEditor.prototype.graphRenderHint = null;\n\n/**\n * Variable: toolbar\n *\n * Holds a <mxDefaultToolbar> for displaying the toolbar. The\n * toolbar is created in <setToolbarContainer>.\n */\nmxEditor.prototype.toolbar = null;\n\n/**\n * Variable: status\n *\n * DOM container that holds the statusbar. Default is null.\n * Use <setStatusContainer> to set this value.\n */\nmxEditor.prototype.status = null;\n\n/**\n * Variable: popupHandler\n *\n * Holds a <mxDefaultPopupMenu> for displaying\n * popupmenus.\n */\nmxEditor.prototype.popupHandler = null;\n\n/**\n * Variable: undoManager\n *\n * Holds an <mxUndoManager> for the command history.\n */\nmxEditor.prototype.undoManager = null;\n\n/**\n * Variable: keyHandler\n *\n * Holds a <mxDefaultKeyHandler> for handling keyboard events.\n * The handler is created in <setGraphContainer>.\n */\nmxEditor.prototype.keyHandler = null;\n\n/**\n * Group: Actions and Options\n */\n\n/**\n * Variable: actions\n *\n * Maps from actionnames to actions, which are functions taking\n * the editor and the cell as arguments. Use <addAction>\n * to add or replace an action and <execute> to execute an action\n * by name, passing the cell to be operated upon as the second\n * argument.\n */\nmxEditor.prototype.actions = null;\n\n/**\n * Variable: dblClickAction\n *\n * Specifies the name of the action to be executed\n * when a cell is double clicked. Default is 'edit'.\n *\n * To handle a singleclick, use the following code.\n *\n * (code)\n * editor.graph.addListener(mxEvent.CLICK, function(sender, evt)\n * {\n *   var e = evt.getProperty('event');\n *   var cell = evt.getProperty('cell');\n *\n *   if (cell != null && !e.isConsumed())\n *   {\n *     // Do something useful with cell...\n *     e.consume();\n *   }\n * });\n * (end)\n */\nmxEditor.prototype.dblClickAction = 'edit';\n\n/**\n * Variable: swimlaneRequired\n *\n * Specifies if new cells must be inserted\n * into an existing swimlane. Otherwise, cells\n * that are not swimlanes can be inserted as\n * top-level cells. Default is false.\n */\nmxEditor.prototype.swimlaneRequired = false;\n\n/**\n * Variable: disableContextMenu\n *\n * Specifies if the context menu should be disabled in the graph container.\n * Default is true.\n */\nmxEditor.prototype.disableContextMenu = true;\n\n/**\n * Group: Templates\n */\n\n/**\n * Variable: insertFunction\n *\n * Specifies the function to be used for inserting new\n * cells into the graph. This is assigned from the\n * <mxDefaultToolbar> if a vertex-tool is clicked.\n */\nmxEditor.prototype.insertFunction = null;\n\n/**\n * Variable: forcedInserting\n *\n * Specifies if a new cell should be inserted on a single\n * click even using <insertFunction> if there is a cell\n * under the mousepointer, otherwise the cell under the\n * mousepointer is selected. Default is false.\n */\nmxEditor.prototype.forcedInserting = false;\n\n/**\n * Variable: templates\n *\n * Maps from names to protoype cells to be used\n * in the toolbar for inserting new cells into\n * the diagram.\n */\nmxEditor.prototype.templates = null;\n\n/**\n * Variable: defaultEdge\n *\n * Prototype edge cell that is used for creating\n * new edges.\n */\nmxEditor.prototype.defaultEdge = null;\n\n/**\n * Variable: defaultEdgeStyle\n *\n * Specifies the edge style to be returned in <getEdgeStyle>.\n * Default is null.\n */\nmxEditor.prototype.defaultEdgeStyle = null;\n\n/**\n * Variable: defaultGroup\n *\n * Prototype group cell that is used for creating\n * new groups.\n */\nmxEditor.prototype.defaultGroup = null;\n\n/**\n * Variable: groupBorderSize\n *\n * Default size for the border of new groups. If null,\n * then then <mxGraph.gridSize> is used. Default is\n * null.\n */\nmxEditor.prototype.groupBorderSize = null;\n\n/**\n * Group: Backend Integration\n */\n\n/**\n * Variable: filename\n *\n * Contains the URL of the last opened file as a string.\n * Default is null.\n */\nmxEditor.prototype.filename = null;\n\n/**\n * Variable: lineFeed\n *\n * Character to be used for encoding linefeeds in <save>. Default is '&#xa;'.\n */\nmxEditor.prototype.linefeed = '&#xa;';\n\n/**\n * Variable: postParameterName\n *\n * Specifies if the name of the post parameter that contains the diagram\n * data in a post request to the server. Default is 'xml'.\n */\nmxEditor.prototype.postParameterName = 'xml';\n\n/**\n * Variable: escapePostData\n *\n * Specifies if the data in the post request for saving a diagram\n * should be converted using encodeURIComponent. Default is true.\n */\nmxEditor.prototype.escapePostData = true;\n\n/**\n * Variable: urlPost\n *\n * Specifies the URL to be used for posting the diagram\n * to a backend in <save>.\n */\nmxEditor.prototype.urlPost = null;\n\n/**\n * Variable: urlImage\n *\n * Specifies the URL to be used for creating a bitmap of\n * the graph in the image action.\n */\nmxEditor.prototype.urlImage = null;\n\n/**\n * Group: Autolayout\n */\n\n/**\n * Variable: horizontalFlow\n *\n * Specifies the direction of the flow\n * in the diagram. This is used in the\n * layout algorithms. Default is false,\n * ie. vertical flow.\n */\nmxEditor.prototype.horizontalFlow = false;\n\n/**\n * Variable: layoutDiagram\n *\n * Specifies if the top-level elements in the\n * diagram should be layed out using a vertical\n * or horizontal stack depending on the setting\n * of <horizontalFlow>. The spacing between the\n * swimlanes is specified by <swimlaneSpacing>.\n * Default is false.\n *\n * If the top-level elements are swimlanes, then\n * the intra-swimlane layout is activated by\n * the <layoutSwimlanes> switch.\n */\nmxEditor.prototype.layoutDiagram = false;\n\n/**\n * Variable: swimlaneSpacing\n *\n * Specifies the spacing between swimlanes if\n * automatic layout is turned on in\n * <layoutDiagram>. Default is 0.\n */\nmxEditor.prototype.swimlaneSpacing = 0;\n\n/**\n * Variable: maintainSwimlanes\n *\n * Specifies if the swimlanes should be kept at the same\n * width or height depending on the setting of\n * <horizontalFlow>.  Default is false.\n *\n * For horizontal flows, all swimlanes\n * have the same height and for vertical flows, all swimlanes\n * have the same width. Furthermore, the swimlanes are\n * automatically \"stacked\" if <layoutDiagram> is true.\n */\nmxEditor.prototype.maintainSwimlanes = false;\n\n/**\n * Variable: layoutSwimlanes\n *\n * Specifies if the children of swimlanes should\n * be layed out, either vertically or horizontally\n * depending on <horizontalFlow>.\n * Default is false.\n */\nmxEditor.prototype.layoutSwimlanes = false;\n\n/**\n * Group: Attribute Cycling\n */\n\n/**\n * Variable: cycleAttributeValues\n *\n * Specifies the attribute values to be cycled when\n * inserting new swimlanes. Default is an empty\n * array.\n */\nmxEditor.prototype.cycleAttributeValues = null;\n\n/**\n * Variable: cycleAttributeIndex\n *\n * Index of the last consumed attribute index. If a new\n * swimlane is inserted, then the <cycleAttributeValues>\n * at this index will be used as the value for\n * <cycleAttributeName>. Default is 0.\n */\nmxEditor.prototype.cycleAttributeIndex = 0;\n\n/**\n * Variable: cycleAttributeName\n *\n * Name of the attribute to be assigned a <cycleAttributeValues>\n * when inserting new swimlanes. Default is 'fillColor'.\n */\nmxEditor.prototype.cycleAttributeName = 'fillColor';\n\n/**\n * Group: Windows\n */\n\n/**\n * Variable: tasks\n *\n * Holds the <mxWindow> created in <showTasks>.\n */\nmxEditor.prototype.tasks = null;\n\n/**\n * Variable: tasksWindowImage\n *\n * Icon for the tasks window.\n */\nmxEditor.prototype.tasksWindowImage = null;\n\n/**\n * Variable: tasksTop\n *\n * Specifies the top coordinate of the tasks window in pixels.\n * Default is 20.\n */\nmxEditor.prototype.tasksTop = 20;\n\n/**\n * Variable: help\n *\n * Holds the <mxWindow> created in <showHelp>.\n */\nmxEditor.prototype.help = null;\n\n/**\n * Variable: helpWindowImage\n *\n * Icon for the help window.\n */\nmxEditor.prototype.helpWindowImage = null;\n\n/**\n * Variable: urlHelp\n *\n * Specifies the URL to be used for the contents of the\n * Online Help window. This is usually specified in the\n * resources file under urlHelp for language-specific\n * online help support.\n */\nmxEditor.prototype.urlHelp = null;\n\n/**\n * Variable: helpWidth\n *\n * Specifies the width of the help window in pixels.\n * Default is 300.\n */\nmxEditor.prototype.helpWidth = 300;\n\n/**\n * Variable: helpHeight\n *\n * Specifies the height of the help window in pixels.\n * Default is 260.\n */\nmxEditor.prototype.helpHeight = 260;\n\n/**\n * Variable: propertiesWidth\n *\n * Specifies the width of the properties window in pixels.\n * Default is 240.\n */\nmxEditor.prototype.propertiesWidth = 240;\n\n/**\n * Variable: propertiesHeight\n *\n * Specifies the height of the properties window in pixels.\n * If no height is specified then the window will be automatically\n * sized to fit its contents. Default is null.\n */\nmxEditor.prototype.propertiesHeight = null;\n\n/**\n * Variable: movePropertiesDialog\n *\n * Specifies if the properties dialog should be automatically\n * moved near the cell it is displayed for, otherwise the\n * dialog is not moved. This value is only taken into\n * account if the dialog is already visible. Default is false.\n */\nmxEditor.prototype.movePropertiesDialog = false;\n\n/**\n * Variable: validating\n *\n * Specifies if <mxGraph.validateGraph> should automatically be invoked after\n * each change. Default is false.\n */\nmxEditor.prototype.validating = false;\n\n/**\n * Variable: modified\n *\n * True if the graph has been modified since it was last saved.\n */\nmxEditor.prototype.modified = false;\n\n/**\n * Function: isModified\n *\n * Returns <modified>.\n */\nmxEditor.prototype.isModified = function ()\n{\n\treturn this.modified;\n};\n\n/**\n * Function: setModified\n *\n * Sets <modified> to the specified boolean value.\n */\nmxEditor.prototype.setModified = function (value)\n{\n\tthis.modified = value;\n};\n\n/**\n * Function: addActions\n *\n * Adds the built-in actions to the editor instance.\n *\n * save - Saves the graph using <urlPost>.\n * print - Shows the graph in a new print preview window.\n * show - Shows the graph in a new window.\n * exportImage - Shows the graph as a bitmap image using <getUrlImage>.\n * refresh - Refreshes the graph's display.\n * cut - Copies the current selection into the clipboard\n * and removes it from the graph.\n * copy - Copies the current selection into the clipboard.\n * paste - Pastes the clipboard into the graph.\n * delete - Removes the current selection from the graph.\n * group - Puts the current selection into a new group.\n * ungroup - Removes the selected groups and selects the children.\n * undo - Undoes the last change on the graph model.\n * redo - Redoes the last change on the graph model.\n * zoom - Sets the zoom via a dialog.\n * zoomIn - Zooms into the graph.\n * zoomOut - Zooms out of the graph\n * actualSize - Resets the scale and translation on the graph.\n * fit - Changes the scale so that the graph fits into the window.\n * showProperties - Shows the properties dialog.\n * selectAll - Selects all cells.\n * selectNone - Clears the selection.\n * selectVertices - Selects all vertices.\n * selectEdges = Selects all edges.\n * edit - Starts editing the current selection cell.\n * enterGroup - Drills down into the current selection cell.\n * exitGroup - Moves up in the drilling hierachy\n * home - Moves to the topmost parent in the drilling hierarchy\n * selectPrevious - Selects the previous cell.\n * selectNext - Selects the next cell.\n * selectParent - Selects the parent of the selection cell.\n * selectChild - Selects the first child of the selection cell.\n * collapse - Collapses the currently selected cells.\n * expand - Expands the currently selected cells.\n * bold - Toggle bold text style.\n * italic - Toggle italic text style.\n * underline - Toggle underline text style.\n * alignCellsLeft - Aligns the selection cells at the left.\n * alignCellsCenter - Aligns the selection cells in the center.\n * alignCellsRight - Aligns the selection cells at the right.\n * alignCellsTop - Aligns the selection cells at the top.\n * alignCellsMiddle - Aligns the selection cells in the middle.\n * alignCellsBottom - Aligns the selection cells at the bottom.\n * alignFontLeft - Sets the horizontal text alignment to left.\n * alignFontCenter - Sets the horizontal text alignment to center.\n * alignFontRight - Sets the horizontal text alignment to right.\n * alignFontTop - Sets the vertical text alignment to top.\n * alignFontMiddle - Sets the vertical text alignment to middle.\n * alignFontBottom - Sets the vertical text alignment to bottom.\n * toggleTasks - Shows or hides the tasks window.\n * toggleHelp - Shows or hides the help window.\n * toggleOutline - Shows or hides the outline window.\n * toggleConsole - Shows or hides the console window.\n */\nmxEditor.prototype.addActions = function ()\n{\n\tthis.addAction('save', function(editor)\n\t{\n\t\teditor.save();\n\t});\n\n\tthis.addAction('print', function(editor)\n\t{\n\t\tvar preview = new mxPrintPreview(editor.graph, 1);\n\t\tpreview.open();\n\t});\n\n\tthis.addAction('show', function(editor)\n\t{\n\t\tmxUtils.show(editor.graph, null, 10, 10);\n\t});\n\n\tthis.addAction('exportImage', function(editor)\n\t{\n\t\tvar url = editor.getUrlImage();\n\n\t\tif (url == null || mxClient.IS_LOCAL)\n\t\t{\n\t\t\teditor.execute('show');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar node = mxUtils.getViewXml(editor.graph, 1);\n\t\t\tvar xml = mxUtils.getXml(node, '\\n');\n\n\t\t\tmxUtils.submit(url, editor.postParameterName + '=' +\n\t\t\t\tencodeURIComponent(xml), document, '_blank');\n\t\t}\n\t});\n\n\tthis.addAction('refresh', function(editor)\n\t{\n\t\teditor.graph.refresh();\n\t});\n\n\tthis.addAction('cut', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tmxClipboard.cut(editor.graph);\n\t\t}\n\t});\n\n\tthis.addAction('copy', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tmxClipboard.copy(editor.graph);\n\t\t}\n\t});\n\n\tthis.addAction('paste', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tmxClipboard.paste(editor.graph);\n\t\t}\n\t});\n\n\tthis.addAction('delete', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.removeCells();\n\t\t}\n\t});\n\n\tthis.addAction('group', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setSelectionCell(editor.groupCells());\n\t\t}\n\t});\n\n\tthis.addAction('ungroup', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setSelectionCells(editor.graph.ungroupCells());\n\t\t}\n\t});\n\n\tthis.addAction('removeFromParent', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.removeCellsFromParent();\n\t\t}\n\t});\n\n\tthis.addAction('undo', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.undo();\n\t\t}\n\t});\n\n\tthis.addAction('redo', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.redo();\n\t\t}\n\t});\n\n\tthis.addAction('zoomIn', function(editor)\n\t{\n\t\teditor.graph.zoomIn();\n\t});\n\n\tthis.addAction('zoomOut', function(editor)\n\t{\n\t\teditor.graph.zoomOut();\n\t});\n\n\tthis.addAction('actualSize', function(editor)\n\t{\n\t\teditor.graph.zoomActual();\n\t});\n\n\tthis.addAction('fit', function(editor)\n\t{\n\t\teditor.graph.fit();\n\t});\n\n\tthis.addAction('showProperties', function(editor, cell)\n\t{\n\t\teditor.showProperties(cell);\n\t});\n\n\tthis.addAction('selectAll', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectAll();\n\t\t}\n\t});\n\n\tthis.addAction('selectNone', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.clearSelection();\n\t\t}\n\t});\n\n\tthis.addAction('selectVertices', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectVertices();\n\t\t}\n\t});\n\n\tthis.addAction('selectEdges', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectEdges();\n\t\t}\n\t});\n\n\tthis.addAction('edit', function(editor, cell)\n\t{\n\t\tif (editor.graph.isEnabled() &&\n\t\t\teditor.graph.isCellEditable(cell))\n\t\t{\n\t\t\teditor.graph.startEditingAtCell(cell);\n\t\t}\n\t});\n\n\tthis.addAction('toBack', function(editor, cell)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.orderCells(true);\n\t\t}\n\t});\n\n\tthis.addAction('toFront', function(editor, cell)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.orderCells(false);\n\t\t}\n\t});\n\n\tthis.addAction('enterGroup', function(editor, cell)\n\t{\n\t\teditor.graph.enterGroup(cell);\n\t});\n\n\tthis.addAction('exitGroup', function(editor)\n\t{\n\t\teditor.graph.exitGroup();\n\t});\n\n\tthis.addAction('home', function(editor)\n\t{\n\t\teditor.graph.home();\n\t});\n\n\tthis.addAction('selectPrevious', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectPreviousCell();\n\t\t}\n\t});\n\n\tthis.addAction('selectNext', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectNextCell();\n\t\t}\n\t});\n\n\tthis.addAction('selectParent', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectParentCell();\n\t\t}\n\t});\n\n\tthis.addAction('selectChild', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectChildCell();\n\t\t}\n\t});\n\n\tthis.addAction('collapse', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.foldCells(true);\n\t\t}\n\t});\n\n\tthis.addAction('collapseAll', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tvar cells = editor.graph.getChildVertices();\n\t\t\teditor.graph.foldCells(true, false, cells);\n\t\t}\n\t});\n\n\tthis.addAction('expand', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.foldCells(false);\n\t\t}\n\t});\n\n\tthis.addAction('expandAll', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tvar cells = editor.graph.getChildVertices();\n\t\t\teditor.graph.foldCells(false, false, cells);\n\t\t}\n\t});\n\n\tthis.addAction('bold', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.toggleCellStyleFlags(\n\t\t\t\tmxConstants.STYLE_FONTSTYLE,\n\t\t\t\tmxConstants.FONT_BOLD);\n\t\t}\n\t});\n\n\tthis.addAction('italic', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.toggleCellStyleFlags(\n\t\t\t\tmxConstants.STYLE_FONTSTYLE,\n\t\t\t\tmxConstants.FONT_ITALIC);\n\t\t}\n\t});\n\n\tthis.addAction('underline', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.toggleCellStyleFlags(\n\t\t\t\tmxConstants.STYLE_FONTSTYLE,\n\t\t\t\tmxConstants.FONT_UNDERLINE);\n\t\t}\n\t});\n\n\tthis.addAction('alignCellsLeft', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_LEFT);\n\t\t}\n\t});\n\n\tthis.addAction('alignCellsCenter', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_CENTER);\n\t\t}\n\t});\n\n\tthis.addAction('alignCellsRight', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_RIGHT);\n\t\t}\n\t});\n\n\tthis.addAction('alignCellsTop', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_TOP);\n\t\t}\n\t});\n\n\tthis.addAction('alignCellsMiddle', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_MIDDLE);\n\t\t}\n\t});\n\n\tthis.addAction('alignCellsBottom', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_BOTTOM);\n\t\t}\n\t});\n\n\tthis.addAction('alignFontLeft', function(editor)\n\t{\n\n\t\teditor.graph.setCellStyles(\n\t\t\tmxConstants.STYLE_ALIGN,\n\t\t\tmxConstants.ALIGN_LEFT);\n\t});\n\n\tthis.addAction('alignFontCenter', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_ALIGN,\n\t\t\t\tmxConstants.ALIGN_CENTER);\n\t\t}\n\t});\n\n\tthis.addAction('alignFontRight', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_ALIGN,\n\t\t\t\tmxConstants.ALIGN_RIGHT);\n\t\t}\n\t});\n\n\tthis.addAction('alignFontTop', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_VERTICAL_ALIGN,\n\t\t\t\tmxConstants.ALIGN_TOP);\n\t\t}\n\t});\n\n\tthis.addAction('alignFontMiddle', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_VERTICAL_ALIGN,\n\t\t\t\tmxConstants.ALIGN_MIDDLE);\n\t\t}\n\t});\n\n\tthis.addAction('alignFontBottom', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_VERTICAL_ALIGN,\n\t\t\t\tmxConstants.ALIGN_BOTTOM);\n\t\t}\n\t});\n\n\tthis.addAction('zoom', function(editor)\n\t{\n\t\tvar current = editor.graph.getView().scale*100;\n\t\tvar scale = parseFloat(mxUtils.prompt(\n\t\t\tmxResources.get(editor.askZoomResource) ||\n\t\t\teditor.askZoomResource,\n\t\t\tcurrent))/100;\n\n\t\tif (!isNaN(scale))\n\t\t{\n\t\t\teditor.graph.getView().setScale(scale);\n\t\t}\n\t});\n\n\tthis.addAction('toggleTasks', function(editor)\n\t{\n\t\tif (editor.tasks != null)\n\t\t{\n\t\t\teditor.tasks.setVisible(!editor.tasks.isVisible());\n\t\t}\n\t\telse\n\t\t{\n\t\t\teditor.showTasks();\n\t\t}\n\t});\n\n\tthis.addAction('toggleHelp', function(editor)\n\t{\n\t\tif (editor.help != null)\n\t\t{\n\t\t\teditor.help.setVisible(!editor.help.isVisible());\n\t\t}\n\t\telse\n\t\t{\n\t\t\teditor.showHelp();\n\t\t}\n\t});\n\n\tthis.addAction('toggleOutline', function(editor)\n\t{\n\t\tif (editor.outline == null)\n\t\t{\n\t\t\teditor.showOutline();\n\t\t}\n\t\telse\n\t\t{\n\t\t\teditor.outline.setVisible(!editor.outline.isVisible());\n\t\t}\n\t});\n\n\tthis.addAction('toggleConsole', function(editor)\n\t{\n\t\tmxLog.setVisible(!mxLog.isVisible());\n\t});\n};\n\n/**\n * Function: configure\n *\n * Configures the editor using the specified node. To load the\n * configuration from a given URL the following code can be used to obtain\n * the XML node.\n *\n * (code)\n * var node = mxUtils.load(url).getDocumentElement();\n * (end)\n *\n * Parameters:\n *\n * node - XML node that contains the configuration.\n */\nmxEditor.prototype.configure = function (node)\n{\n\tif (node != null)\n\t{\n\t\t// Creates a decoder for the XML data\n\t\t// and uses it to configure the editor\n\t\tvar dec = new mxCodec(node.ownerDocument);\n\t\tdec.decode(node, this);\n\n\t\t// Resets the counters, modified state and\n\t\t// command history\n\t\tthis.resetHistory();\n\t}\n};\n\n/**\n * Function: resetFirstTime\n *\n * Resets the cookie that is used to remember if the editor has already\n * been used.\n */\nmxEditor.prototype.resetFirstTime = function ()\n{\n\tdocument.cookie =\n\t\t'mxgraph=seen; expires=Fri, 27 Jul 2001 02:47:11 UTC; path=/';\n};\n\n/**\n * Function: resetHistory\n *\n * Resets the command history, modified state and counters.\n */\nmxEditor.prototype.resetHistory = function ()\n{\n\tthis.lastSnapshot = new Date().getTime();\n\tthis.undoManager.clear();\n\tthis.ignoredChanges = 0;\n\tthis.setModified(false);\n};\n\n/**\n * Function: addAction\n *\n * Binds the specified actionname to the specified function.\n *\n * Parameters:\n *\n * actionname - String that specifies the name of the action\n * to be added.\n * funct - Function that implements the new action. The first\n * argument of the function is the editor it is used\n * with, the second argument is the cell it operates\n * upon.\n *\n * Example:\n * (code)\n * editor.addAction('test', function(editor, cell)\n * {\n * \t\tmxUtils.alert(\"test \"+cell);\n * });\n * (end)\n */\nmxEditor.prototype.addAction = function (actionname, funct)\n{\n\tthis.actions[actionname] = funct;\n};\n\n/**\n * Function: execute\n *\n * Executes the function with the given name in <actions> passing the\n * editor instance and given cell as the first and second argument. All\n * additional arguments are passed to the action as well. This method\n * contains a try-catch block and displays an error message if an action\n * causes an exception. The exception is re-thrown after the error\n * message was displayed.\n *\n * Example:\n *\n * (code)\n * editor.execute(\"showProperties\", cell);\n * (end)\n */\nmxEditor.prototype.execute = function (actionname, cell, evt)\n{\n\tvar action = this.actions[actionname];\n\n\tif (action != null)\n\t{\n\t\ttry\n\t\t{\n\t\t\t// Creates the array of arguments by replacing the actionname\n\t\t\t// with the editor instance in the args of this function\n\t\t\tvar args = arguments;\n\t\t\targs[0] = this;\n\n\t\t\t// Invokes the function on the editor using the args\n\t\t\taction.apply(this, args);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tmxUtils.error('Cannot execute ' + actionname +\n\t\t\t\t': ' + e.message, 280, true);\n\n\t\t\tthrow e;\n\t\t}\n\t}\n\telse\n\t{\n\t\tmxUtils.error('Cannot find action '+actionname, 280, true);\n\t}\n};\n\n/**\n * Function: addTemplate\n *\n * Adds the specified template under the given name in <templates>.\n */\nmxEditor.prototype.addTemplate = function (name, template)\n{\n\tthis.templates[name] = template;\n};\n\n/**\n * Function: getTemplate\n *\n * Returns the template for the given name.\n */\nmxEditor.prototype.getTemplate = function (name)\n{\n\treturn this.templates[name];\n};\n\n/**\n * Function: createGraph\n *\n * Creates the <graph> for the editor. The graph is created with no\n * container and is initialized from <setGraphContainer>.\n */\nmxEditor.prototype.createGraph = function ()\n{\n\tvar graph = new mxGraph(null, null, this.graphRenderHint);\n\n\t// Enables rubberband, tooltips, panning\n\tgraph.setTooltips(true);\n\tgraph.setPanning(true);\n\n\t// Overrides the dblclick method on the graph to\n\t// invoke the dblClickAction for a cell and reset\n\t// the selection tool in the toolbar\n\tthis.installDblClickHandler(graph);\n\n\t// Installs the command history\n\tthis.installUndoHandler(graph);\n\n\t// Installs the handlers for the root event\n\tthis.installDrillHandler(graph);\n\n\t// Installs the handler for validation\n\tthis.installChangeHandler(graph);\n\n\t// Installs the handler for calling the\n\t// insert function and consume the\n\t// event if an insert function is defined\n\tthis.installInsertHandler(graph);\n\n\t// Redirects the function for creating the\n\t// popupmenu items\n\tgraph.popupMenuHandler.factoryMethod =\n\t\tmxUtils.bind(this, function(menu, cell, evt)\n\t\t{\n\t\t\treturn this.createPopupMenu(menu, cell, evt);\n\t\t});\n\n\t// Redirects the function for creating\n\t// new connections in the diagram\n\tgraph.connectionHandler.factoryMethod =\n\t\tmxUtils.bind(this, function(source, target)\n\t\t{\n\t\t\treturn this.createEdge(source, target);\n\t\t});\n\n\t// Maintains swimlanes and installs autolayout\n\tthis.createSwimlaneManager(graph);\n\tthis.createLayoutManager(graph);\n\n\treturn graph;\n};\n\n/**\n * Function: createSwimlaneManager\n *\n * Sets the graph's container using <mxGraph.init>.\n */\nmxEditor.prototype.createSwimlaneManager = function (graph)\n{\n\tvar swimlaneMgr = new mxSwimlaneManager(graph, false);\n\n\tswimlaneMgr.isHorizontal = mxUtils.bind(this, function()\n\t{\n\t\treturn this.horizontalFlow;\n\t});\n\n\tswimlaneMgr.isEnabled = mxUtils.bind(this, function()\n\t{\n\t\treturn this.maintainSwimlanes;\n\t});\n\n\treturn swimlaneMgr;\n};\n\n/**\n * Function: createLayoutManager\n *\n * Creates a layout manager for the swimlane and diagram layouts, that\n * is, the locally defined inter- and intraswimlane layouts.\n */\nmxEditor.prototype.createLayoutManager = function (graph)\n{\n\tvar layoutMgr = new mxLayoutManager(graph);\n\n\tvar self = this; // closure\n\tlayoutMgr.getLayout = function(cell)\n\t{\n\t\tvar layout = null;\n\t\tvar model = self.graph.getModel();\n\n\t\tif (model.getParent(cell) != null)\n\t\t{\n\t\t\t// Executes the swimlane layout if a child of\n\t\t\t// a swimlane has been changed. The layout is\n\t\t\t// lazy created in createSwimlaneLayout.\n\t\t\tif (self.layoutSwimlanes &&\n\t\t\t\tgraph.isSwimlane(cell))\n\t\t\t{\n\t\t\t\tif (self.swimlaneLayout == null)\n\t\t\t\t{\n\t\t\t\t\tself.swimlaneLayout = self.createSwimlaneLayout();\n\t\t\t\t}\n\n\t\t\t\tlayout = self.swimlaneLayout;\n\t\t\t}\n\n\t\t\t// Executes the diagram layout if the modified\n\t\t\t// cell is a top-level cell. The layout is\n\t\t\t// lazy created in createDiagramLayout.\n\t\t\telse if (self.layoutDiagram &&\n\t\t\t\t(graph.isValidRoot(cell) ||\n\t\t\t\tmodel.getParent(model.getParent(cell)) == null))\n\t\t\t{\n\t\t\t\tif (self.diagramLayout == null)\n\t\t\t\t{\n\t\t\t\t\tself.diagramLayout = self.createDiagramLayout();\n\t\t\t\t}\n\n\t\t\t\tlayout = self.diagramLayout;\n\t\t\t}\n\t\t}\n\n\t\treturn layout;\n\t};\n\n\treturn layoutMgr;\n};\n\n/**\n * Function: setGraphContainer\n *\n * Sets the graph's container using <mxGraph.init>.\n */\nmxEditor.prototype.setGraphContainer = function (container)\n{\n\tif (this.graph.container == null)\n\t{\n\t\t// Creates the graph instance inside the given container and render hint\n\t\t//this.graph = new mxGraph(container, null, this.graphRenderHint);\n\t\tthis.graph.init(container);\n\n\t\t// Install rubberband selection as the last\n\t\t// action handler in the chain\n\t\tthis.rubberband = new mxRubberband(this.graph);\n\n\t\t// Disables the context menu\n\t\tif (this.disableContextMenu)\n\t\t{\n\t\t\tmxEvent.disableContextMenu(container);\n\t\t}\n\n\t\t// Workaround for stylesheet directives in IE\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tnew mxDivResizer(container);\n\t\t}\n\t}\n};\n\n/**\n * Function: installDblClickHandler\n *\n * Overrides <mxGraph.dblClick> to invoke <dblClickAction>\n * on a cell and reset the selection tool in the toolbar.\n */\nmxEditor.prototype.installDblClickHandler = function (graph)\n{\n\t// Installs a listener for double click events\n\tgraph.addListener(mxEvent.DOUBLE_CLICK,\n\t\tmxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar cell = evt.getProperty('cell');\n\n\t\t\tif (cell != null &&\n\t\t\t\tgraph.isEnabled() &&\n\t\t\t\tthis.dblClickAction != null)\n\t\t\t{\n\t\t\t\tthis.execute(this.dblClickAction, cell);\n\t\t\t\tevt.consume();\n\t\t\t}\n\t\t})\n\t);\n};\n\n/**\n * Function: installUndoHandler\n *\n * Adds the <undoManager> to the graph model and the view.\n */\nmxEditor.prototype.installUndoHandler = function (graph)\n{\n\tvar listener = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tvar edit = evt.getProperty('edit');\n\t\tthis.undoManager.undoableEditHappened(edit);\n\t});\n\n\tgraph.getModel().addListener(mxEvent.UNDO, listener);\n\tgraph.getView().addListener(mxEvent.UNDO, listener);\n\n\t// Keeps the selection state in sync\n\tvar undoHandler = function(sender, evt)\n\t{\n\t\tvar changes = evt.getProperty('edit').changes;\n\t\tgraph.setSelectionCells(graph.getSelectionCellsForChanges(changes));\n\t};\n\n\tthis.undoManager.addListener(mxEvent.UNDO, undoHandler);\n\tthis.undoManager.addListener(mxEvent.REDO, undoHandler);\n};\n\n/**\n * Function: installDrillHandler\n *\n * Installs listeners for dispatching the <root> event.\n */\nmxEditor.prototype.installDrillHandler = function (graph)\n{\n\tvar listener = mxUtils.bind(this, function(sender)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ROOT));\n\t});\n\n\tgraph.getView().addListener(mxEvent.DOWN, listener);\n\tgraph.getView().addListener(mxEvent.UP, listener);\n};\n\n/**\n * Function: installChangeHandler\n *\n * Installs the listeners required to automatically validate\n * the graph. On each change of the root, this implementation\n * fires a <root> event.\n */\nmxEditor.prototype.installChangeHandler = function (graph)\n{\n\tvar listener = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\t// Updates the modified state\n\t\tthis.setModified(true);\n\n\t\t// Automatically validates the graph\n\t\t// after each change\n\t\tif (this.validating == true)\n\t\t{\n\t\t\tgraph.validateGraph();\n\t\t}\n\n\t\t// Checks if the root has been changed\n\t\tvar changes = evt.getProperty('edit').changes;\n\n\t\tfor (var i = 0; i < changes.length; i++)\n\t\t{\n\t\t\tvar change = changes[i];\n\n\t\t\tif (change instanceof mxRootChange ||\n\t\t\t\t(change instanceof mxValueChange &&\n\t\t\t\tchange.cell == this.graph.model.root) ||\n\t\t\t\t(change instanceof mxCellAttributeChange &&\n\t\t\t\tchange.cell == this.graph.model.root))\n\t\t\t{\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ROOT));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n\n\tgraph.getModel().addListener(mxEvent.CHANGE, listener);\n};\n\n/**\n * Function: installInsertHandler\n *\n * Installs the handler for invoking <insertFunction> if\n * one is defined.\n */\nmxEditor.prototype.installInsertHandler = function (graph)\n{\n\tvar self = this; // closure\n\tvar insertHandler =\n\t{\n\t\tmouseDown: function(sender, me)\n\t\t{\n\t\t\tif (self.insertFunction != null &&\n\t\t\t\t!me.isPopupTrigger() &&\n\t\t\t\t(self.forcedInserting ||\n\t\t\t\tme.getState() == null))\n\t\t\t{\n\t\t\t\tself.graph.clearSelection();\n\t\t\t\tself.insertFunction(me.getEvent(), me.getCell());\n\n\t\t\t\t// Consumes the rest of the events\n\t\t\t\t// for this gesture (down, move, up)\n\t\t\t\tthis.isActive = true;\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t},\n\n\t\tmouseMove: function(sender, me)\n\t\t{\n\t\t\tif (this.isActive)\n\t\t\t{\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t},\n\n\t\tmouseUp: function(sender, me)\n\t\t{\n\t\t\tif (this.isActive)\n\t\t\t{\n\t\t\t\tthis.isActive = false;\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t}\n\t};\n\n\tgraph.addMouseListener(insertHandler);\n};\n\n/**\n * Function: createDiagramLayout\n *\n * Creates the layout instance used to layout the\n * swimlanes in the diagram.\n */\nmxEditor.prototype.createDiagramLayout = function ()\n{\n\tvar gs = this.graph.gridSize;\n\tvar layout = new mxStackLayout(this.graph, !this.horizontalFlow,\n\t\t this.swimlaneSpacing, 2*gs, 2*gs);\n\n\t// Overrides isIgnored to only take into account swimlanes\n\tlayout.isVertexIgnored = function(cell)\n\t{\n\t\treturn !layout.graph.isSwimlane(cell);\n\t};\n\n\treturn layout;\n};\n\n/**\n * Function: createSwimlaneLayout\n *\n * Creates the layout instance used to layout the\n * children of each swimlane.\n */\nmxEditor.prototype.createSwimlaneLayout = function ()\n{\n\treturn new mxCompactTreeLayout(this.graph, this.horizontalFlow);\n};\n\n/**\n * Function: createToolbar\n *\n * Creates the <toolbar> with no container.\n */\nmxEditor.prototype.createToolbar = function ()\n{\n\treturn new mxDefaultToolbar(null, this);\n};\n\n/**\n * Function: setToolbarContainer\n *\n * Initializes the toolbar for the given container.\n */\nmxEditor.prototype.setToolbarContainer = function (container)\n{\n\tthis.toolbar.init(container);\n\n\t// Workaround for stylesheet directives in IE\n\tif (mxClient.IS_QUIRKS)\n\t{\n\t\tnew mxDivResizer(container);\n\t}\n};\n\n/**\n * Function: setStatusContainer\n *\n * Creates the <status> using the specified container.\n *\n * This implementation adds listeners in the editor to\n * display the last saved time and the current filename\n * in the status bar.\n *\n * Parameters:\n *\n * container - DOM node that will contain the statusbar.\n */\nmxEditor.prototype.setStatusContainer = function (container)\n{\n\tif (this.status == null)\n\t{\n\t\tthis.status = container;\n\n\t\t// Prints the last saved time in the status bar\n\t\t// when files are saved\n\t\tthis.addListener(mxEvent.SAVE, mxUtils.bind(this, function()\n\t\t{\n\t\t\tvar tstamp = new Date().toLocaleString();\n\t\t\tthis.setStatus((mxResources.get(this.lastSavedResource) ||\n\t\t\t\tthis.lastSavedResource)+': '+tstamp);\n\t\t}));\n\n\t\t// Updates the statusbar to display the filename\n\t\t// when new files are opened\n\t\tthis.addListener(mxEvent.OPEN, mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.setStatus((mxResources.get(this.currentFileResource) ||\n\t\t\t\tthis.currentFileResource)+': '+this.filename);\n\t\t}));\n\n\t\t// Workaround for stylesheet directives in IE\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tnew mxDivResizer(container);\n\t\t}\n\t}\n};\n\n/**\n * Function: setStatus\n *\n * Display the specified message in the status bar.\n *\n * Parameters:\n *\n * message - String the specified the message to\n * be displayed.\n */\nmxEditor.prototype.setStatus = function (message)\n{\n\tif (this.status != null && message != null)\n\t{\n\t\tthis.status.innerHTML = message;\n\t}\n};\n\n/**\n * Function: setTitleContainer\n *\n * Creates a listener to update the inner HTML of the\n * specified DOM node with the value of <getTitle>.\n *\n * Parameters:\n *\n * container - DOM node that will contain the title.\n */\nmxEditor.prototype.setTitleContainer = function (container)\n{\n\tthis.addListener(mxEvent.ROOT, mxUtils.bind(this, function(sender)\n\t{\n\t\tcontainer.innerHTML = this.getTitle();\n\t}));\n\n\t// Workaround for stylesheet directives in IE\n\tif (mxClient.IS_QUIRKS)\n\t{\n\t\tnew mxDivResizer(container);\n\t}\n};\n\n/**\n * Function: treeLayout\n *\n * Executes a vertical or horizontal compact tree layout\n * using the specified cell as an argument. The cell may\n * either be a group or the root of a tree.\n *\n * Parameters:\n *\n * cell - <mxCell> to use in the compact tree layout.\n * horizontal - Optional boolean to specify the tree's\n * orientation. Default is true.\n */\nmxEditor.prototype.treeLayout = function (cell, horizontal)\n{\n\tif (cell != null)\n\t{\n\t\tvar layout = new mxCompactTreeLayout(this.graph, horizontal);\n\t\tlayout.execute(cell);\n\t}\n};\n\n/**\n * Function: getTitle\n *\n * Returns the string value for the current root of the\n * diagram.\n */\nmxEditor.prototype.getTitle = function ()\n{\n\tvar title = '';\n\tvar graph = this.graph;\n\tvar cell = graph.getCurrentRoot();\n\n\twhile (cell != null &&\n\t\t   graph.getModel().getParent(\n\t\t\t\tgraph.getModel().getParent(cell)) != null)\n\t{\n\t\t// Append each label of a valid root\n\t\tif (graph.isValidRoot(cell))\n\t\t{\n\t\t\ttitle = ' > ' +\n\t\t\tgraph.convertValueToString(cell) + title;\n\t\t}\n\n\t\tcell = graph.getModel().getParent(cell);\n\t}\n\n\tvar prefix = this.getRootTitle();\n\n\treturn prefix + title;\n};\n\n/**\n * Function: getRootTitle\n *\n * Returns the string value of the root cell in\n * <mxGraph.model>.\n */\nmxEditor.prototype.getRootTitle = function ()\n{\n\tvar root = this.graph.getModel().getRoot();\n\treturn this.graph.convertValueToString(root);\n};\n\n/**\n * Function: undo\n *\n * Undo the last change in <graph>.\n */\nmxEditor.prototype.undo = function ()\n{\n\tthis.undoManager.undo();\n};\n\n/**\n * Function: redo\n *\n * Redo the last change in <graph>.\n */\nmxEditor.prototype.redo = function ()\n{\n\tthis.undoManager.redo();\n};\n\n/**\n * Function: groupCells\n *\n * Invokes <createGroup> to create a new group cell and the invokes\n * <mxGraph.groupCells>, using the grid size of the graph as the spacing\n * in the group's content area.\n */\nmxEditor.prototype.groupCells = function ()\n{\n\tvar border = (this.groupBorderSize != null) ?\n\t\tthis.groupBorderSize :\n\t\tthis.graph.gridSize;\n\treturn this.graph.groupCells(this.createGroup(), border);\n};\n\n/**\n * Function: createGroup\n *\n * Creates and returns a clone of <defaultGroup> to be used\n * as a new group cell in <group>.\n */\nmxEditor.prototype.createGroup = function ()\n{\n\tvar model = this.graph.getModel();\n\n\treturn model.cloneCell(this.defaultGroup);\n};\n\n/**\n * Function: open\n *\n * Opens the specified file synchronously and parses it using\n * <readGraphModel>. It updates <filename> and fires an <open>-event after\n * the file has been opened. Exceptions should be handled as follows:\n *\n * (code)\n * try\n * {\n *   editor.open(filename);\n * }\n * catch (e)\n * {\n *   mxUtils.error('Cannot open ' + filename +\n *     ': ' + e.message, 280, true);\n * }\n * (end)\n *\n * Parameters:\n *\n * filename - URL of the file to be opened.\n */\nmxEditor.prototype.open = function (filename)\n{\n\tif (filename != null)\n\t{\n\t\tvar xml = mxUtils.load(filename).getXml();\n\t\tthis.readGraphModel(xml.documentElement);\n\t\tthis.filename = filename;\n\n\t\tthis.fireEvent(new mxEventObject(mxEvent.OPEN, 'filename', filename));\n\t}\n};\n\n/**\n * Function: readGraphModel\n *\n * Reads the specified XML node into the existing graph model and resets\n * the command history and modified state.\n */\nmxEditor.prototype.readGraphModel = function (node)\n{\n\tvar dec = new mxCodec(node.ownerDocument);\n\tdec.decode(node, this.graph.getModel());\n\tthis.resetHistory();\n};\n\n/**\n * Function: save\n *\n * Posts the string returned by <writeGraphModel> to the given URL or the\n * URL returned by <getUrlPost>. The actual posting is carried out by\n * <postDiagram>. If the URL is null then the resulting XML will be\n * displayed using <mxUtils.popup>. Exceptions should be handled as\n * follows:\n *\n * (code)\n * try\n * {\n *   editor.save();\n * }\n * catch (e)\n * {\n *   mxUtils.error('Cannot save : ' + e.message, 280, true);\n * }\n * (end)\n */\nmxEditor.prototype.save = function (url, linefeed)\n{\n\t// Gets the URL to post the data to\n\turl = url || this.getUrlPost();\n\n\t// Posts the data if the URL is not empty\n\tif (url != null && url.length > 0)\n\t{\n\t\tvar data = this.writeGraphModel(linefeed);\n\t\tthis.postDiagram(url, data);\n\n\t\t// Resets the modified flag\n\t\tthis.setModified(false);\n\t}\n\n\t// Dispatches a save event\n\tthis.fireEvent(new mxEventObject(mxEvent.SAVE, 'url', url));\n};\n\n/**\n * Function: postDiagram\n *\n * Hook for subclassers to override the posting of a diagram\n * represented by the given node to the given URL. This fires\n * an asynchronous <post> event if the diagram has been posted.\n *\n * Example:\n *\n * To replace the diagram with the diagram in the response, use the\n * following code.\n *\n * (code)\n * editor.addListener(mxEvent.POST, function(sender, evt)\n * {\n *   // Process response (replace diagram)\n *   var req = evt.getProperty('request');\n *   var root = req.getDocumentElement();\n *   editor.graph.readGraphModel(root)\n * });\n * (end)\n */\nmxEditor.prototype.postDiagram = function (url, data)\n{\n\tif (this.escapePostData)\n\t{\n\t\tdata = encodeURIComponent(data);\n\t}\n\n\tmxUtils.post(url, this.postParameterName+'='+data,\n\t\tmxUtils.bind(this, function(req)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.POST,\n\t\t\t\t'request', req, 'url', url, 'data', data));\n\t\t})\n\t);\n};\n\n/**\n * Function: writeGraphModel\n *\n * Hook to create the string representation of the diagram. The default\n * implementation uses an <mxCodec> to encode the graph model as\n * follows:\n *\n * (code)\n * var enc = new mxCodec();\n * var node = enc.encode(this.graph.getModel());\n * return mxUtils.getXml(node, this.linefeed);\n * (end)\n *\n * Parameters:\n *\n * linefeed - Optional character to be used as the linefeed. Default is\n * <linefeed>.\n */\nmxEditor.prototype.writeGraphModel = function (linefeed)\n{\n\tlinefeed = (linefeed != null) ? linefeed : this.linefeed;\n\tvar enc = new mxCodec();\n\tvar node = enc.encode(this.graph.getModel());\n\n\treturn mxUtils.getXml(node, linefeed);\n};\n\n/**\n * Function: getUrlPost\n *\n * Returns the URL to post the diagram to. This is used\n * in <save>. The default implementation returns <urlPost>,\n * adding <code>?draft=true</code>.\n */\nmxEditor.prototype.getUrlPost = function ()\n{\n\treturn this.urlPost;\n};\n\n/**\n * Function: getUrlImage\n *\n * Returns the URL to create the image with. This is typically\n * the URL of a backend which accepts an XML representation\n * of a graph view to create an image. The function is used\n * in the image action to create an image. This implementation\n * returns <urlImage>.\n */\nmxEditor.prototype.getUrlImage = function ()\n{\n\treturn this.urlImage;\n};\n\n/**\n * Function: swapStyles\n *\n * Swaps the styles for the given names in the graph's\n * stylesheet and refreshes the graph.\n */\nmxEditor.prototype.swapStyles = function (first, second)\n{\n\tvar style = this.graph.getStylesheet().styles[second];\n\tthis.graph.getView().getStylesheet().putCellStyle(\n\t\tsecond, this.graph.getStylesheet().styles[first]);\n\tthis.graph.getStylesheet().putCellStyle(first, style);\n\tthis.graph.refresh();\n};\n\n/**\n * Function: showProperties\n *\n * Creates and shows the properties dialog for the given\n * cell. The content area of the dialog is created using\n * <createProperties>.\n */\nmxEditor.prototype.showProperties = function (cell)\n{\n\tcell = cell || this.graph.getSelectionCell();\n\n\t// Uses the root node for the properties dialog\n\t// if not cell was passed in and no cell is\n\t// selected\n\tif (cell == null)\n\t{\n\t\tcell = this.graph.getCurrentRoot();\n\n\t\tif (cell == null)\n\t\t{\n\t\t\tcell = this.graph.getModel().getRoot();\n\t\t}\n\t}\n\n\tif (cell != null)\n\t{\n\t\t// Makes sure there is no in-place editor in the\n\t\t// graph and computes the location of the dialog\n\t\tthis.graph.stopEditing(true);\n\n\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\tvar x = offset.x+10;\n\t\tvar y = offset.y;\n\n\t\t// Avoids moving the dialog if it is alredy open\n\t\tif (this.properties != null && !this.movePropertiesDialog)\n\t\t{\n\t\t\tx = this.properties.getX();\n\t\t\ty = this.properties.getY();\n\t\t}\n\n\t\t// Places the dialog near the cell for which it\n\t\t// displays the properties\n\t\telse\n\t\t{\n\t\t\tvar bounds = this.graph.getCellBounds(cell);\n\n\t\t\tif (bounds != null)\n\t\t\t{\n\t\t\t\tx += bounds.x+Math.min(200, bounds.width);\n\t\t\t\ty += bounds.y;\n\t\t\t}\n\t\t}\n\n\t\t// Hides the existing properties dialog and creates a new one with the\n\t\t// contents created in the hook method\n\t\tthis.hideProperties();\n\t\tvar node = this.createProperties(cell);\n\n\t\tif (node != null)\n\t\t{\n\t\t\t// Displays the contents in a window and stores a reference to the\n\t\t\t// window for later hiding of the window\n\t\t\tthis.properties = new mxWindow(mxResources.get(this.propertiesResource) ||\n\t\t\t\tthis.propertiesResource, node, x, y, this.propertiesWidth, this.propertiesHeight, false);\n\t\t\tthis.properties.setVisible(true);\n\t\t}\n\t}\n};\n\n/**\n * Function: isPropertiesVisible\n *\n * Returns true if the properties dialog is currently visible.\n */\nmxEditor.prototype.isPropertiesVisible = function ()\n{\n\treturn this.properties != null;\n};\n\n/**\n * Function: createProperties\n *\n * Creates and returns the DOM node that represents the contents\n * of the properties dialog for the given cell. This implementation\n * works for user objects that are XML nodes and display all the\n * node attributes in a form.\n */\nmxEditor.prototype.createProperties = function (cell)\n{\n\tvar model = this.graph.getModel();\n\tvar value = model.getValue(cell);\n\n\tif (mxUtils.isNode(value))\n\t{\n\t\t// Creates a form for the user object inside\n\t\t// the cell\n\t\tvar form = new mxForm('properties');\n\n\t\t// Adds a readonly field for the cell id\n\t\tvar id = form.addText('ID', cell.getId());\n\t\tid.setAttribute('readonly', 'true');\n\n\t\tvar geo = null;\n\t\tvar yField = null;\n\t\tvar xField = null;\n\t\tvar widthField = null;\n\t\tvar heightField = null;\n\n\t\t// Adds fields for the location and size\n\t\tif (model.isVertex(cell))\n\t\t{\n\t\t\tgeo = model.getGeometry(cell);\n\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tyField = form.addText('top', geo.y);\n\t\t\t\txField = form.addText('left', geo.x);\n\t\t\t\twidthField = form.addText('width', geo.width);\n\t\t\t\theightField = form.addText('height', geo.height);\n\t\t\t}\n\t\t}\n\n\t\t// Adds a field for the cell style\n\t\tvar tmp = model.getStyle(cell);\n\t\tvar style = form.addText('Style', tmp || '');\n\n\t\t// Creates textareas for each attribute of the\n\t\t// user object within the cell\n\t\tvar attrs = value.attributes;\n\t\tvar texts = [];\n\n\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t{\n\t\t\t// Creates a textarea with more lines for\n\t\t\t// the cell label\n\t\t\tvar val = attrs[i].value;\n\t\t\ttexts[i] = form.addTextarea(attrs[i].nodeName, val,\n\t\t\t\t(attrs[i].nodeName == 'label') ? 4 : 2);\n\t\t}\n\n\t\t// Adds an OK and Cancel button to the dialog\n\t\t// contents and implements the respective\n\t\t// actions below\n\n\t\t// Defines the function to be executed when the\n\t\t// OK button is pressed in the dialog\n\t\tvar okFunction = mxUtils.bind(this, function()\n\t\t{\n\t\t\t// Hides the dialog\n\t\t\tthis.hideProperties();\n\n\t\t\t// Supports undo for the changes on the underlying\n\t\t\t// XML structure / XML node attribute changes.\n\t\t\tmodel.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (geo != null)\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\n\t\t\t\t\tgeo.x = parseFloat(xField.value);\n\t\t\t\t\tgeo.y = parseFloat(yField.value);\n\t\t\t\t\tgeo.width = parseFloat(widthField.value);\n\t\t\t\t\tgeo.height = parseFloat(heightField.value);\n\n\t\t\t\t\tmodel.setGeometry(cell, geo);\n\t\t\t\t}\n\n\t\t\t\t// Applies the style\n\t\t\t\tif (style.value.length > 0)\n\t\t\t\t{\n\t\t\t\t\tmodel.setStyle(cell, style.value);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmodel.setStyle(cell, null);\n\t\t\t\t}\n\n\t\t\t\t// Creates an undoable change for each\n\t\t\t\t// attribute and executes it using the\n\t\t\t\t// model, which will also make the change\n\t\t\t\t// part of the current transaction\n\t\t\t\tfor (var i=0; i<attrs.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar edit = new mxCellAttributeChange(\n\t\t\t\t\t\tcell, attrs[i].nodeName,\n\t\t\t\t\t\ttexts[i].value);\n\t\t\t\t\tmodel.execute(edit);\n\t\t\t\t}\n\n\t\t\t\t// Checks if the graph wants cells to\n\t\t\t\t// be automatically sized and updates\n\t\t\t\t// the size as an undoable step if\n\t\t\t\t// the feature is enabled\n\t\t\t\tif (this.graph.isAutoSizeCell(cell))\n\t\t\t\t{\n\t\t\t\t\tthis.graph.updateCellSize(cell);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tmodel.endUpdate();\n\t\t\t}\n\t\t});\n\n\t\t// Defines the function to be executed when the\n\t\t// Cancel button is pressed in the dialog\n\t\tvar cancelFunction = mxUtils.bind(this, function()\n\t\t{\n\t\t\t// Hides the dialog\n\t\t\tthis.hideProperties();\n\t\t});\n\n\t\tform.addButtons(okFunction, cancelFunction);\n\n\t\treturn form.table;\n\t}\n\n\treturn null;\n};\n\n/**\n * Function: hideProperties\n *\n * Hides the properties dialog.\n */\nmxEditor.prototype.hideProperties = function ()\n{\n\tif (this.properties != null)\n\t{\n\t\tthis.properties.destroy();\n\t\tthis.properties = null;\n\t}\n};\n\n/**\n * Function: showTasks\n *\n * Shows the tasks window. The tasks window is created using <createTasks>. The\n * default width of the window is 200 pixels, the y-coordinate of the location\n * can be specifies in <tasksTop> and the x-coordinate is right aligned with a\n * 20 pixel offset from the right border. To change the location of the tasks\n * window, the following code can be used:\n *\n * (code)\n * var oldShowTasks = mxEditor.prototype.showTasks;\n * mxEditor.prototype.showTasks = function()\n * {\n *   oldShowTasks.apply(this, arguments); // \"supercall\"\n *\n *   if (this.tasks != null)\n *   {\n *     this.tasks.setLocation(10, 10);\n *   }\n * };\n * (end)\n */\nmxEditor.prototype.showTasks = function ()\n{\n\tif (this.tasks == null)\n\t{\n\t\tvar div = document.createElement('div');\n\t\tdiv.style.padding = '4px';\n\t\tdiv.style.paddingLeft = '20px';\n\t\tvar w = document.body.clientWidth;\n\t\tvar wnd = new mxWindow(\n\t\t\tmxResources.get(this.tasksResource) ||\n\t\t\tthis.tasksResource,\n\t\t\tdiv, w - 220, this.tasksTop, 200);\n\t\twnd.setClosable(true);\n\t\twnd.destroyOnClose = false;\n\n\t\t// Installs a function to update the contents\n\t\t// of the tasks window on every change of the\n\t\t// model, selection or root.\n\t\tvar funct = mxUtils.bind(this, function(sender)\n\t\t{\n\t\t\tmxEvent.release(div);\n\t\t\tdiv.innerHTML = '';\n\t\t\tthis.createTasks(div);\n\t\t});\n\n\t\tthis.graph.getModel().addListener(mxEvent.CHANGE, funct);\n\t\tthis.graph.getSelectionModel().addListener(mxEvent.CHANGE, funct);\n\t\tthis.graph.addListener(mxEvent.ROOT, funct);\n\n\t\t// Assigns the icon to the tasks window\n\t\tif (this.tasksWindowImage != null)\n\t\t{\n\t\t\twnd.setImage(this.tasksWindowImage);\n\t\t}\n\n\t\tthis.tasks = wnd;\n\t\tthis.createTasks(div);\n\t}\n\n\tthis.tasks.setVisible(true);\n};\n\n/**\n * Function: refreshTasks\n *\n * Updates the contents of the tasks window using <createTasks>.\n */\nmxEditor.prototype.refreshTasks = function (div)\n{\n\tif (this.tasks != null)\n\t{\n\t\tvar div = this.tasks.content;\n\t\tmxEvent.release(div);\n\t\tdiv.innerHTML = '';\n\t\tthis.createTasks(div);\n\t}\n};\n\n/**\n * Function: createTasks\n *\n * Updates the contents of the given DOM node to\n * display the tasks associated with the current\n * editor state. This is invoked whenever there\n * is a possible change of state in the editor.\n * Default implementation is empty.\n */\nmxEditor.prototype.createTasks = function (div)\n{\n\t// override\n};\n\n/**\n * Function: showHelp\n *\n * Shows the help window. If the help window does not exist\n * then it is created using an iframe pointing to the resource\n * for the <code>urlHelp</code> key or <urlHelp> if the resource\n * is undefined.\n */\nmxEditor.prototype.showHelp = function (tasks)\n{\n\tif (this.help == null)\n\t{\n\t\tvar frame = document.createElement('iframe');\n\t\tframe.setAttribute('src', mxResources.get('urlHelp') || this.urlHelp);\n\t\tframe.setAttribute('height', '100%');\n\t\tframe.setAttribute('width', '100%');\n\t\tframe.setAttribute('frameBorder', '0');\n\t\tframe.style.backgroundColor = 'white';\n\n\t\tvar w = document.body.clientWidth;\n\t\tvar h = (document.body.clientHeight || document.documentElement.clientHeight);\n\n\t\tvar wnd = new mxWindow(mxResources.get(this.helpResource) || this.helpResource,\n\t\t\tframe, (w-this.helpWidth)/2, (h-this.helpHeight)/3, this.helpWidth, this.helpHeight);\n\t\twnd.setMaximizable(true);\n\t\twnd.setClosable(true);\n\t\twnd.destroyOnClose = false;\n\t\twnd.setResizable(true);\n\n\t\t// Assigns the icon to the help window\n\t\tif (this.helpWindowImage != null)\n\t\t{\n\t\t\twnd.setImage(this.helpWindowImage);\n\t\t}\n\n\t\t// Workaround for ignored iframe height 100% in FF\n\t\tif (mxClient.IS_NS)\n\t\t{\n\t\t\tvar handler = function(sender)\n\t\t\t{\n\t\t\t\tvar h = wnd.div.offsetHeight;\n\t\t\t\tframe.setAttribute('height', (h-26)+'px');\n\t\t\t};\n\n\t\t\twnd.addListener(mxEvent.RESIZE_END, handler);\n\t\t\twnd.addListener(mxEvent.MAXIMIZE, handler);\n\t\t\twnd.addListener(mxEvent.NORMALIZE, handler);\n\t\t\twnd.addListener(mxEvent.SHOW, handler);\n\t\t}\n\n\t\tthis.help = wnd;\n\t}\n\n\tthis.help.setVisible(true);\n};\n\n/**\n * Function: showOutline\n *\n * Shows the outline window. If the window does not exist, then it is\n * created using an <mxOutline>.\n */\nmxEditor.prototype.showOutline = function ()\n{\n\tvar create = this.outline == null;\n\n\tif (create)\n\t{\n\t\tvar div = document.createElement('div');\n\n\t\tdiv.style.overflow = 'hidden';\n\t\tdiv.style.position = 'relative';\n\t\tdiv.style.width = '100%';\n\t\tdiv.style.height = '100%';\n\t\tdiv.style.background = 'white';\n\t\tdiv.style.cursor = 'move';\n\n\t\tif (document.documentMode == 8)\n\t\t{\n\t\t\tdiv.style.filter = 'progid:DXImageTransform.Microsoft.alpha(opacity=100)';\n\t\t}\n\n\t\tvar wnd = new mxWindow(\n\t\t\tmxResources.get(this.outlineResource) ||\n\t\t\tthis.outlineResource,\n\t\t\tdiv, 600, 480, 200, 200, false);\n\n\t\t// Creates the outline in the specified div\n\t\t// and links it to the existing graph\n\t\tvar outline = new mxOutline(this.graph, div);\n\t\twnd.setClosable(true);\n\t\twnd.setResizable(true);\n\t\twnd.destroyOnClose = false;\n\n\t\twnd.addListener(mxEvent.RESIZE_END, function()\n\t\t{\n\t\t\toutline.update();\n\t\t});\n\n\t\tthis.outline = wnd;\n\t\tthis.outline.outline = outline;\n\t}\n\n\t// Finally shows the outline\n\tthis.outline.setVisible(true);\n\tthis.outline.outline.update(true);\n};\n\n/**\n * Function: setMode\n *\n * Puts the graph into the specified mode. The following modenames are\n * supported:\n *\n * select - Selects using the left mouse button, new connections\n * are disabled.\n * connect - Selects using the left mouse button or creates new\n * connections if mouse over cell hotspot. See <mxConnectionHandler>.\n * pan - Pans using the left mouse button, new connections are disabled.\n */\nmxEditor.prototype.setMode = function(modename)\n{\n\tif (modename == 'select')\n\t{\n\t\tthis.graph.panningHandler.useLeftButtonForPanning = false;\n\t\tthis.graph.setConnectable(false);\n\t}\n\telse if (modename == 'connect')\n\t{\n\t\tthis.graph.panningHandler.useLeftButtonForPanning = false;\n\t\tthis.graph.setConnectable(true);\n\t}\n\telse if (modename == 'pan')\n\t{\n\t\tthis.graph.panningHandler.useLeftButtonForPanning = true;\n\t\tthis.graph.setConnectable(false);\n\t}\n};\n\n/**\n * Function: createPopupMenu\n *\n * Uses <popupHandler> to create the menu in the graph's\n * panning handler. The redirection is setup in\n * <setToolbarContainer>.\n */\nmxEditor.prototype.createPopupMenu = function (menu, cell, evt)\n{\n\tthis.popupHandler.createMenu(this, menu, cell, evt);\n};\n\n/**\n * Function: createEdge\n *\n * Uses <defaultEdge> as the prototype for creating new edges\n * in the connection handler of the graph. The style of the\n * edge will be overridden with the value returned by\n * <getEdgeStyle>.\n */\nmxEditor.prototype.createEdge = function (source, target)\n{\n\t// Clones the defaultedge prototype\n\tvar e = null;\n\n\tif (this.defaultEdge != null)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\te = model.cloneCell(this.defaultEdge);\n\t}\n\telse\n\t{\n\t\te = new mxCell('');\n\t\te.setEdge(true);\n\n\t\tvar geo = new mxGeometry();\n\t\tgeo.relative = true;\n\t\te.setGeometry(geo);\n\t}\n\n\t// Overrides the edge style\n\tvar style = this.getEdgeStyle();\n\n\tif (style != null)\n\t{\n\t\te.setStyle(style);\n\t}\n\n\treturn e;\n};\n\n/**\n * Function: getEdgeStyle\n *\n * Returns a string identifying the style of new edges.\n * The function is used in <createEdge> when new edges\n * are created in the graph.\n */\nmxEditor.prototype.getEdgeStyle = function ()\n{\n\treturn this.defaultEdgeStyle;\n};\n\n/**\n * Function: consumeCycleAttribute\n *\n * Returns the next attribute in <cycleAttributeValues>\n * or null, if not attribute should be used in the\n * specified cell.\n */\nmxEditor.prototype.consumeCycleAttribute = function (cell)\n{\n\treturn (this.cycleAttributeValues != null &&\n\t\tthis.cycleAttributeValues.length > 0 &&\n\t\tthis.graph.isSwimlane(cell)) ?\n\t\tthis.cycleAttributeValues[this.cycleAttributeIndex++ %\n\t\t\tthis.cycleAttributeValues.length] : null;\n};\n\n/**\n * Function: cycleAttribute\n *\n * Uses the returned value from <consumeCycleAttribute>\n * as the value for the <cycleAttributeName> key in\n * the given cell's style.\n */\nmxEditor.prototype.cycleAttribute = function (cell)\n{\n\tif (this.cycleAttributeName != null)\n\t{\n\t\tvar value = this.consumeCycleAttribute(cell);\n\n\t\tif (value != null)\n\t\t{\n\t\t\tcell.setStyle(cell.getStyle()+';'+\n\t\t\t\tthis.cycleAttributeName+'='+value);\n\t\t}\n\t}\n};\n\n/**\n * Function: addVertex\n *\n * Adds the given vertex as a child of parent at the specified\n * x and y coordinate and fires an <addVertex> event.\n */\nmxEditor.prototype.addVertex = function (parent, vertex, x, y)\n{\n\tvar model = this.graph.getModel();\n\n\twhile (parent != null && !this.graph.isValidDropTarget(parent))\n\t{\n\t\tparent = model.getParent(parent);\n\t}\n\n\tparent = (parent != null) ? parent : this.graph.getSwimlaneAt(x, y);\n\tvar scale = this.graph.getView().scale;\n\n\tvar geo = model.getGeometry(vertex);\n\tvar pgeo = model.getGeometry(parent);\n\n\tif (this.graph.isSwimlane(vertex) &&\n\t\t!this.graph.swimlaneNesting)\n\t{\n\t\tparent = null;\n\t}\n\telse if (parent == null && this.swimlaneRequired)\n\t{\n\t\treturn null;\n\t}\n\telse if (parent != null && pgeo != null)\n\t{\n\t\t// Keeps vertex inside parent\n\t\tvar state = this.graph.getView().getState(parent);\n\n\t\tif (state != null)\n\t\t{\n\t\t\tx -= state.origin.x * scale;\n\t\t\ty -= state.origin.y * scale;\n\n\t\t\tif (this.graph.isConstrainedMoving)\n\t\t\t{\n\t\t\t\tvar width = geo.width;\n\t\t\t\tvar height = geo.height;\n\t\t\t\tvar tmp = state.x+state.width;\n\n\t\t\t\tif (x+width > tmp)\n\t\t\t\t{\n\t\t\t\t\tx -= x+width - tmp;\n\t\t\t\t}\n\n\t\t\t\ttmp = state.y+state.height;\n\n\t\t\t\tif (y+height > tmp)\n\t\t\t\t{\n\t\t\t\t\ty -= y+height - tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (pgeo != null)\n\t\t{\n\t\t\tx -= pgeo.x*scale;\n\t\t\ty -= pgeo.y*scale;\n\t\t}\n\t}\n\n\tgeo = geo.clone();\n\tgeo.x = this.graph.snap(x / scale -\n\t\tthis.graph.getView().translate.x -\n\t\tthis.graph.gridSize/2);\n\tgeo.y = this.graph.snap(y / scale -\n\t\tthis.graph.getView().translate.y -\n\t\tthis.graph.gridSize/2);\n\tvertex.setGeometry(geo);\n\n\tif (parent == null)\n\t{\n\t\tparent = this.graph.getDefaultParent();\n\t}\n\n\tthis.cycleAttribute(vertex);\n\tthis.fireEvent(new mxEventObject(mxEvent.BEFORE_ADD_VERTEX,\n\t\t\t'vertex', vertex, 'parent', parent));\n\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tvertex = this.graph.addCell(vertex, parent);\n\n\t\tif (vertex != null)\n\t\t{\n\t\t\tthis.graph.constrainChild(vertex);\n\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ADD_VERTEX, 'vertex', vertex));\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\n\tif (vertex != null)\n\t{\n\t\tthis.graph.setSelectionCell(vertex);\n\t\tthis.graph.scrollCellToVisible(vertex);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.AFTER_ADD_VERTEX, 'vertex', vertex));\n\t}\n\n\treturn vertex;\n};\n\n/**\n * Function: destroy\n *\n * Removes the editor and all its associated resources. This does not\n * normally need to be called, it is called automatically when the window\n * unloads.\n */\nmxEditor.prototype.destroy = function ()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\n\t\tif (this.tasks != null)\n\t\t{\n\t\t\tthis.tasks.destroy();\n\t\t}\n\n\t\tif (this.outline != null)\n\t\t{\n\t\t\tthis.outline.destroy();\n\t\t}\n\n\t\tif (this.properties != null)\n\t\t{\n\t\t\tthis.properties.destroy();\n\t\t}\n\n\t\tif (this.keyHandler != null)\n\t\t{\n\t\t\tthis.keyHandler.destroy();\n\t\t}\n\n\t\tif (this.rubberband != null)\n\t\t{\n\t\t\tthis.rubberband.destroy();\n\t\t}\n\n\t\tif (this.toolbar != null)\n\t\t{\n\t\t\tthis.toolbar.destroy();\n\t\t}\n\n\t\tif (this.graph != null)\n\t\t{\n\t\t\tthis.graph.destroy();\n\t\t}\n\n\t\tthis.status = null;\n\t\tthis.templates = null;\n\t}\n};\n\n__mxOutput.mxEditor = typeof mxEditor !== 'undefined' ? mxEditor : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxCodecRegistry =\n{\n\t/**\n\t * Class: mxCodecRegistry\n\t *\n\t * Singleton class that acts as a global registry for codecs.\n\t *\n\t * Adding an <mxCodec>:\n\t *\n\t * 1. Define a default codec with a new instance of the \n\t * object to be handled.\n\t *\n\t * (code)\n\t * var codec = new mxObjectCodec(new mxGraphModel());\n\t * (end)\n\t *\n\t * 2. Define the functions required for encoding and decoding\n\t * objects.\n\t *\n\t * (code)\n\t * codec.encode = function(enc, obj) { ... }\n\t * codec.decode = function(dec, node, into) { ... }\n\t * (end)\n\t *\n\t * 3. Register the codec in the <mxCodecRegistry>.\n\t *\n\t * (code)\n\t * mxCodecRegistry.register(codec);\n\t * (end)\n\t *\n\t * <mxObjectCodec.decode> may be used to either create a new \n\t * instance of an object or to configure an existing instance, \n\t * in which case the into argument points to the existing\n\t * object. In this case, we say the codec \"configures\" the\n\t * object.\n\t * \n\t * Variable: codecs\n\t *\n\t * Maps from constructor names to codecs.\n\t */\n\tcodecs: [],\n\t\n\t/**\n\t * Variable: aliases\n\t *\n\t * Maps from classnames to codecnames.\n\t */\n\taliases: [],\n\n\t/**\n\t * Function: register\n\t *\n\t * Registers a new codec and associates the name of the template\n\t * constructor in the codec with the codec object.\n\t *\n\t * Parameters:\n\t *\n\t * codec - <mxObjectCodec> to be registered.\n\t */\n\tregister: function(codec)\n\t{\n\t\tif (codec != null)\n\t\t{\n\t\t\tvar name = codec.getName();\n\t\t\tmxCodecRegistry.codecs[name] = codec;\n\t\t\t\n\t\t\tvar classname = mxUtils.getFunctionName(codec.template.constructor);\n\n\t\t\tif (classname != name)\n\t\t\t{\n\t\t\t\tmxCodecRegistry.addAlias(classname, name);\n\t\t\t}\n\t\t}\n\n\t\treturn codec;\n\t},\n\n\t/**\n\t * Function: addAlias\n\t *\n\t * Adds an alias for mapping a classname to a codecname.\n\t */\n\taddAlias: function(classname, codecname)\n\t{\n\t\tmxCodecRegistry.aliases[classname] = codecname;\n\t},\n\n\t/**\n\t * Function: getCodec\n\t *\n\t * Returns a codec that handles objects that are constructed\n\t * using the given constructor.\n\t *\n\t * Parameters:\n\t *\n\t * ctor - JavaScript constructor function. \n\t */\n\tgetCodec: function(ctor)\n\t{\n\t\tvar codec = null;\n\t\t\n\t\tif (ctor != null)\n\t\t{\n\t\t\tvar name = mxUtils.getFunctionName(ctor);\n\t\t\tvar tmp = mxCodecRegistry.aliases[name];\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tname = tmp;\n\t\t\t}\n\t\t\t\n\t\t\tcodec = mxCodecRegistry.codecs[name];\n\t\t\t\n\t\t\t// Registers a new default codec for the given constructor\n\t\t\t// if no codec has been previously defined.\n\t\t\tif (codec == null)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tcodec = new mxObjectCodec(new ctor());\n\t\t\t\t\tmxCodecRegistry.register(codec);\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn codec;\n\t}\n\n};\n\n__mxOutput.mxCodecRegistry = typeof mxCodecRegistry !== 'undefined' ? mxCodecRegistry : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCodec\n *\n * XML codec for JavaScript object graphs. See <mxObjectCodec> for a\n * description of the general encoding/decoding scheme. This class uses the\n * codecs registered in <mxCodecRegistry> for encoding/decoding each object.\n * \n * References:\n * \n * In order to resolve references, especially forward references, the mxCodec\n * constructor must be given the document that contains the referenced\n * elements.\n *\n * Examples:\n *\n * The following code is used to encode a graph model.\n *\n * (code)\n * var encoder = new mxCodec();\n * var result = encoder.encode(graph.getModel());\n * var xml = mxUtils.getXml(result);\n * (end)\n * \n * Example:\n * \n * Using the code below, an XML document is decoded into an existing model. The\n * document may be obtained using one of the functions in mxUtils for loading\n * an XML file, eg. <mxUtils.get>, or using <mxUtils.parseXml> for parsing an\n * XML string.\n * \n * (code)\n * var doc = mxUtils.parseXml(xmlString);\n * var codec = new mxCodec(doc);\n * codec.decode(doc.documentElement, graph.getModel());\n * (end)\n * \n * Example:\n * \n * This example demonstrates parsing a list of isolated cells into an existing\n * graph model. Note that the cells do not have a parent reference so they can\n * be added anywhere in the cell hierarchy after parsing.\n * \n * (code)\n * var xml = '<root><mxCell id=\"2\" value=\"Hello,\" vertex=\"1\"><mxGeometry x=\"20\" y=\"20\" width=\"80\" height=\"30\" as=\"geometry\"/></mxCell><mxCell id=\"3\" value=\"World!\" vertex=\"1\"><mxGeometry x=\"200\" y=\"150\" width=\"80\" height=\"30\" as=\"geometry\"/></mxCell><mxCell id=\"4\" value=\"\" edge=\"1\" source=\"2\" target=\"3\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell></root>';\n * var doc = mxUtils.parseXml(xml);\n * var codec = new mxCodec(doc);\n * var elt = doc.documentElement.firstChild;\n * var cells = [];\n * \n * while (elt != null)\n * {\n *   cells.push(codec.decode(elt));\n *   elt = elt.nextSibling;\n * }\n * \n * graph.addCells(cells);\n * (end)\n * \n * Example:\n * \n * Using the following code, the selection cells of a graph are encoded and the\n * output is displayed in a dialog box.\n * \n * (code)\n * var enc = new mxCodec();\n * var cells = graph.getSelectionCells();\n * mxUtils.alert(mxUtils.getPrettyXml(enc.encode(cells)));\n * (end)\n * \n * Newlines in the XML can be converted to <br>, in which case a '<br>' argument\n * must be passed to <mxUtils.getXml> as the second argument.\n * \n * Debugging:\n * \n * For debugging I/O you can use the following code to get the sequence of\n * encoded objects:\n * \n * (code)\n * var oldEncode = mxCodec.prototype.encode;\n * mxCodec.prototype.encode = function(obj)\n * {\n *   mxLog.show();\n *   mxLog.debug('mxCodec.encode: obj='+mxUtils.getFunctionName(obj.constructor));\n *   \n *   return oldEncode.apply(this, arguments);\n * };\n * (end)\n * \n * Note that the I/O system adds object codecs for new object automatically. For\n * decoding those objects, the constructor should be written as follows:\n * \n * (code)\n * var MyObj = function(name)\n * {\n *   // ...\n * };\n * (end)\n * \n * Constructor: mxCodec\n *\n * Constructs an XML encoder/decoder for the specified\n * owner document.\n *\n * Parameters:\n *\n * document - Optional XML document that contains the data.\n * If no document is specified then a new document is created\n * using <mxUtils.createXmlDocument>.\n */\nfunction mxCodec(document)\n{\n\tthis.document = document || mxUtils.createXmlDocument();\n\tthis.objects = [];\n};\n\n/**\n * Variable: document\n *\n * The owner document of the codec.\n */\nmxCodec.prototype.document = null;\n\n/**\n * Variable: objects\n *\n * Maps from IDs to objects.\n */\nmxCodec.prototype.objects = null;\n\n/**\n * Variable: elements\n * \n * Lookup table for resolving IDs to elements.\n */\nmxCodec.prototype.elements = null;\n\n/**\n * Variable: encodeDefaults\n *\n * Specifies if default values should be encoded. Default is false.\n */\nmxCodec.prototype.encodeDefaults = false;\n\n\n/**\n * Function: putObject\n * \n * Assoiates the given object with the given ID and returns the given object.\n * \n * Parameters\n * \n * id - ID for the object to be associated with.\n * obj - Object to be associated with the ID.\n */\nmxCodec.prototype.putObject = function(id, obj)\n{\n\tthis.objects[id] = obj;\n\t\n\treturn obj;\n};\n\n/**\n * Function: getObject\n *\n * Returns the decoded object for the element with the specified ID in\n * <document>. If the object is not known then <lookup> is used to find an\n * object. If no object is found, then the element with the respective ID\n * from the document is parsed using <decode>.\n */\nmxCodec.prototype.getObject = function(id)\n{\n\tvar obj = null;\n\n\tif (id != null)\n\t{\n\t\tobj = this.objects[id];\n\t\t\n\t\tif (obj == null)\n\t\t{\n\t\t\tobj = this.lookup(id);\n\t\t\t\n\t\t\tif (obj == null)\n\t\t\t{\n\t\t\t\tvar node = this.getElementById(id);\n\t\t\t\t\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tobj = this.decode(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn obj;\n};\n\n/**\n * Function: lookup\n *\n * Hook for subclassers to implement a custom lookup mechanism for cell IDs.\n * This implementation always returns null.\n *\n * Example:\n *\n * (code)\n * var codec = new mxCodec();\n * codec.lookup = function(id)\n * {\n *   return model.getCell(id);\n * };\n * (end)\n *\n * Parameters:\n *\n * id - ID of the object to be returned.\n */\nmxCodec.prototype.lookup = function(id)\n{\n\treturn null;\n};\n\n/**\n * Function: getElementById\n *\n * Returns the element with the given ID from <document>.\n *\n * Parameters:\n *\n * id - String that contains the ID.\n */\nmxCodec.prototype.getElementById = function(id)\n{\n\tthis.updateElements();\n\t\n\treturn this.elements[id];\n};\n\n/**\n * Function: updateElements\n *\n * Returns the element with the given ID from <document>.\n *\n * Parameters:\n *\n * id - String that contains the ID.\n */\nmxCodec.prototype.updateElements = function()\n{\n\tif (this.elements == null)\n\t{\n\t\tthis.elements = new Object();\n\t\t\n\t\tif (this.document.documentElement != null)\n\t\t{\n\t\t\tthis.addElement(this.document.documentElement);\n\t\t}\n\t}\n};\n\n/**\n * Function: addElement\n *\n * Adds the given element to <elements> if it has an ID.\n */\nmxCodec.prototype.addElement = function(node)\n{\n\tif (node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\tvar id = node.getAttribute('id');\n\t\t\n\t\tif (id != null)\n\t\t{\n\t\t\tif (this.elements[id] == null)\n\t\t\t{\n\t\t\t\tthis.elements[id] = node;\n\t\t\t}\n\t\t\telse if (this.elements[id] != node)\n\t\t\t{\n\t\t\t\tthrow new Error(id + ': Duplicate ID');\n\t\t\t}\n\t\t}\n\t}\n\t\n\tnode = node.firstChild;\n\t\n\twhile (node != null)\n\t{\n\t\tthis.addElement(node);\n\t\tnode = node.nextSibling;\n\t}\n};\n\n/**\n * Function: getId\n *\n * Returns the ID of the specified object. This implementation\n * calls <reference> first and if that returns null handles\n * the object as an <mxCell> by returning their IDs using\n * <mxCell.getId>. If no ID exists for the given cell, then\n * an on-the-fly ID is generated using <mxCellPath.create>.\n *\n * Parameters:\n *\n * obj - Object to return the ID for.\n */\nmxCodec.prototype.getId = function(obj)\n{\n\tvar id = null;\n\t\n\tif (obj != null)\n\t{\n\t\tid = this.reference(obj);\n\t\t\n\t\tif (id == null && obj instanceof mxCell)\n\t\t{\n\t\t\tid = obj.getId();\n\t\t\t\n\t\t\tif (id == null)\n\t\t\t{\n\t\t\t\t// Uses an on-the-fly Id\n\t\t\t\tid = mxCellPath.create(obj);\n\t\t\t\t\n\t\t\t\tif (id.length == 0)\n\t\t\t\t{\n\t\t\t\t\tid = 'root';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn id;\n};\n\n/**\n * Function: reference\n *\n * Hook for subclassers to implement a custom method\n * for retrieving IDs from objects. This implementation\n * always returns null.\n *\n * Example:\n *\n * (code)\n * var codec = new mxCodec();\n * codec.reference = function(obj)\n * {\n *   return obj.getCustomId();\n * };\n * (end)\n *\n * Parameters:\n *\n * obj - Object whose ID should be returned.\n */\nmxCodec.prototype.reference = function(obj)\n{\n\treturn null;\n};\n\n/**\n * Function: encode\n *\n * Encodes the specified object and returns the resulting\n * XML node.\n *\n * Parameters:\n *\n * obj - Object to be encoded. \n */\nmxCodec.prototype.encode = function(obj)\n{\n\tvar node = null;\n\t\n\tif (obj != null && obj.constructor != null)\n\t{\n\t\tvar enc = mxCodecRegistry.getCodec(obj.constructor);\n\t\t\n\t\tif (enc != null)\n\t\t{\n\t\t\tnode = enc.encode(this, obj);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (mxUtils.isNode(obj))\n\t\t\t{\n\t\t\t\tnode = mxUtils.importNode(this.document, obj, true);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t    \t\tmxLog.warn('mxCodec.encode: No codec for ' + mxUtils.getFunctionName(obj.constructor));\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: decode\n *\n * Decodes the given XML node. The optional \"into\"\n * argument specifies an existing object to be\n * used. If no object is given, then a new instance\n * is created using the constructor from the codec.\n *\n * The function returns the passed in object or\n * the new instance if no object was given.\n *\n * Parameters:\n *\n * node - XML node to be decoded.\n * into - Optional object to be decodec into.\n */\nmxCodec.prototype.decode = function(node, into)\n{\n\tthis.updateElements();\n\tvar obj = null;\n\t\n\tif (node != null && node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\tvar ctor = null;\n\t\t\n\t\ttry\n\t\t{\n\t\t\tctor = window[node.nodeName];\n\t\t}\n\t\tcatch (err)\n\t\t{\n\t\t\t// ignore\n\t\t}\n\t\t\n\t\tvar dec = mxCodecRegistry.getCodec(ctor);\n\t\t\n\t\tif (dec != null)\n\t\t{\n\t\t\tobj = dec.decode(this, node, into);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tobj = node.cloneNode(true);\n\t\t\tobj.removeAttribute('as');\n\t\t}\n\t}\n\t\n\treturn obj;\n};\n\n/**\n * Function: encodeCell\n *\n * Encoding of cell hierarchies is built-into the core, but\n * is a higher-level function that needs to be explicitely\n * used by the respective object encoders (eg. <mxModelCodec>,\n * <mxChildChangeCodec> and <mxRootChangeCodec>). This\n * implementation writes the given cell and its children as a\n * (flat) sequence into the given node. The children are not\n * encoded if the optional includeChildren is false. The\n * function is in charge of adding the result into the\n * given node and has no return value.\n *\n * Parameters:\n *\n * cell - <mxCell> to be encoded.\n * node - Parent XML node to add the encoded cell into.\n * includeChildren - Optional boolean indicating if the\n * function should include all descendents. Default is true. \n */\nmxCodec.prototype.encodeCell = function(cell, node, includeChildren)\n{\n\tnode.appendChild(this.encode(cell));\n\t\n\tif (includeChildren == null || includeChildren)\n\t{\n\t\tvar childCount = cell.getChildCount();\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.encodeCell(cell.getChildAt(i), node);\n\t\t}\n\t}\n};\n\n/**\n * Function: isCellCodec\n * \n * Returns true if the given codec is a cell codec. This uses\n * <mxCellCodec.isCellCodec> to check if the codec is of the\n * given type.\n */\nmxCodec.prototype.isCellCodec = function(codec)\n{\n\tif (codec != null && typeof(codec.isCellCodec) == 'function')\n\t{\n\t\treturn codec.isCellCodec();\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: decodeCell\n *\n * Decodes cells that have been encoded using inversion, ie.\n * where the user object is the enclosing node in the XML,\n * and restores the group and graph structure in the cells.\n * Returns a new <mxCell> instance that represents the\n * given node.\n *\n * Parameters:\n *\n * node - XML node that contains the cell data.\n * restoreStructures - Optional boolean indicating whether\n * the graph structure should be restored by calling insert\n * and insertEdge on the parent and terminals, respectively.\n * Default is true.\n */\nmxCodec.prototype.decodeCell = function(node, restoreStructures)\n{\n\trestoreStructures = (restoreStructures != null) ? restoreStructures : true;\n\tvar cell = null;\n\t\n\tif (node != null && node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\t// Tries to find a codec for the given node name. If that does\n\t\t// not return a codec then the node is the user object (an XML node\n\t\t// that contains the mxCell, aka inversion).\n\t\tvar decoder = mxCodecRegistry.getCodec(node.nodeName);\n\t\t\n\t\t// Tries to find the codec for the cell inside the user object.\n\t\t// This assumes all node names inside the user object are either\n\t\t// not registered or they correspond to a class for cells.\n\t\tif (!this.isCellCodec(decoder))\n\t\t{\n\t\t\tvar child = node.firstChild;\n\t\t\t\n\t\t\twhile (child != null && !this.isCellCodec(decoder))\n\t\t\t{\n\t\t\t\tdecoder = mxCodecRegistry.getCodec(child.nodeName);\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!this.isCellCodec(decoder))\n\t\t{\n\t\t\tdecoder = mxCodecRegistry.getCodec(mxCell);\n\t\t}\n\n\t\tcell = decoder.decode(this, node);\n\t\t\n\t\tif (restoreStructures)\n\t\t{\n\t\t\tthis.insertIntoGraph(cell);\n\t\t}\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: insertIntoGraph\n *\n * Inserts the given cell into its parent and terminal cells.\n */\nmxCodec.prototype.insertIntoGraph = function(cell)\n{\n\tvar parent = cell.parent;\n\tvar source = cell.getTerminal(true);\n\tvar target = cell.getTerminal(false);\n\n\t// Fixes possible inconsistencies during insert into graph\n\tcell.setTerminal(null, false);\n\tcell.setTerminal(null, true);\n\tcell.parent = null;\n\t\n\tif (parent != null)\n\t{\n\t\tif (parent == cell)\n\t\t{\n\t\t\tthrow new Error(parent.id + ': Self Reference');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tparent.insert(cell);\n\t\t}\n\t}\n\n\tif (source != null)\n\t{\n\t\tsource.insertEdge(cell, true);\n\t}\n\n\tif (target != null)\n\t{\n\t\ttarget.insertEdge(cell, false);\n\t}\n};\n\n/**\n * Function: setAttribute\n *\n * Sets the attribute on the specified node to value. This is a\n * helper method that makes sure the attribute and value arguments\n * are not null.\n *\n * Parameters:\n *\n * node - XML node to set the attribute for.\n * attributes - Attributename to be set.\n * value - New value of the attribute.\n */\nmxCodec.prototype.setAttribute = function(node, attribute, value)\n{\n\tif (attribute != null && value != null)\n\t{\n\t\tnode.setAttribute(attribute, value);\n\t}\n};\n\n__mxOutput.mxCodec = typeof mxCodec !== 'undefined' ? mxCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxObjectCodec\n *\n * Generic codec for JavaScript objects that implements a mapping between\n * JavaScript objects and XML nodes that maps each field or element to an\n * attribute or child node, and vice versa.\n * \n * Atomic Values:\n * \n * Consider the following example.\n * \n * (code)\n * var obj = new Object();\n * obj.foo = \"Foo\";\n * obj.bar = \"Bar\";\n * (end)\n * \n * This object is encoded into an XML node using the following.\n * \n * (code)\n * var enc = new mxCodec();\n * var node = enc.encode(obj);\n * (end)\n * \n * The output of the encoding may be viewed using <mxLog> as follows.\n * \n * (code)\n * mxLog.show();\n * mxLog.debug(mxUtils.getPrettyXml(node));\n * (end)\n * \n * Finally, the result of the encoding looks as follows.\n * \n * (code)\n * <Object foo=\"Foo\" bar=\"Bar\"/>\n * (end)\n * \n * In the above output, the foo and bar fields have been mapped to attributes\n * with the same names, and the name of the constructor was used for the\n * nodename.\n * \n * Booleans:\n *\n * Since booleans are numbers in JavaScript, all boolean values are encoded\n * into 1 for true and 0 for false. The decoder also accepts the string true\n * and false for boolean values.\n * \n * Objects:\n * \n * The above scheme is applied to all atomic fields, that is, to all non-object\n * fields of an object. For object fields, a child node is created with a\n * special attribute that contains the fieldname. This special attribute is\n * called \"as\" and hence, as is a reserved word that should not be used for a\n * fieldname.\n * \n * Consider the following example where foo is an object and bar is an atomic\n * property of foo.\n * \n * (code)\n * var obj = {foo: {bar: \"Bar\"}};\n * (end)\n * \n * This will be mapped to the following XML structure by mxObjectCodec.\n * \n * (code)\n * <Object>\n *   <Object bar=\"Bar\" as=\"foo\"/>\n * </Object>\n * (end)\n * \n * In the above output, the inner Object node contains the as-attribute that\n * specifies the fieldname in the enclosing object. That is, the field foo was\n * mapped to a child node with an as-attribute that has the value foo.\n * \n * Arrays:\n * \n * Arrays are special objects that are either associative, in which case each\n * key, value pair is treated like a field where the key is the fieldname, or\n * they are a sequence of atomic values and objects, which is mapped to a\n * sequence of child nodes. For object elements, the above scheme is applied\n * without the use of the special as-attribute for creating each child. For\n * atomic elements, a special add-node is created with the value stored in the\n * value-attribute.\n * \n * For example, the following array contains one atomic value and one object\n * with a field called bar. Furthermore it contains two associative entries\n * called bar with an atomic value, and foo with an object value.\n * \n * (code)\n * var obj = [\"Bar\", {bar: \"Bar\"}];\n * obj[\"bar\"] = \"Bar\";\n * obj[\"foo\"] = {bar: \"Bar\"};\n * (end)\n * \n * This array is represented by the following XML nodes.\n * \n * (code)\n * <Array bar=\"Bar\">\n *   <add value=\"Bar\"/>\n *   <Object bar=\"Bar\"/>\n *   <Object bar=\"Bar\" as=\"foo\"/>\n * </Array>\n * (end)\n * \n * The Array node name is the name of the constructor. The additional\n * as-attribute in the last child contains the key of the associative entry,\n * whereas the second last child is part of the array sequence and does not\n * have an as-attribute.\n * \n * References:\n * \n * Objects may be represented as child nodes or attributes with ID values,\n * which are used to lookup the object in a table within <mxCodec>. The\n * <isReference> function is in charge of deciding if a specific field should\n * be encoded as a reference or not. Its default implementation returns true if\n * the fieldname is in <idrefs>, an array of strings that is used to configure\n * the <mxObjectCodec>.\n * \n * Using this approach, the mapping does not guarantee that the referenced\n * object itself exists in the document. The fields that are encoded as\n * references must be carefully chosen to make sure all referenced objects\n * exist in the document, or may be resolved by some other means if necessary.\n * \n * For example, in the case of the graph model all cells are stored in a tree\n * whose root is referenced by the model's root field. A tree is a structure\n * that is well suited for an XML representation, however, the additional edges\n * in the graph model have a reference to a source and target cell, which are\n * also contained in the tree. To handle this case, the source and target cell\n * of an edge are treated as references, whereas the children are treated as\n * objects. Since all cells are contained in the tree and no edge references a\n * source or target outside the tree, this setup makes sure all referenced\n * objects are contained in the document.\n * \n * In the case of a tree structure we must further avoid infinite recursion by\n * ignoring the parent reference of each child. This is done by returning true\n * in <isExcluded>, whose default implementation uses the array of excluded\n * fieldnames passed to the mxObjectCodec constructor.\n * \n * References are only used for cells in mxGraph. For defining other\n * referencable object types, the codec must be able to work out the ID of an\n * object. This is done by implementing <mxCodec.reference>. For decoding a\n * reference, the XML node with the respective id-attribute is fetched from the\n * document, decoded, and stored in a lookup table for later reference. For\n * looking up external objects, <mxCodec.lookup> may be implemented.\n * \n * Expressions:\n * \n * For decoding JavaScript expressions, the add-node may be used with a text\n * content that contains the JavaScript expression. For example, the following\n * creates a field called foo in the enclosing object and assigns it the value\n * of <mxConstants.ALIGN_LEFT>.\n * \n * (code)\n * <Object>\n *   <add as=\"foo\">mxConstants.ALIGN_LEFT</add>\n * </Object>\n * (end)\n * \n * The resulting object has a field called foo with the value \"left\". Its XML\n * representation looks as follows.\n * \n * (code)\n * <Object foo=\"left\"/>\n * (end)\n * \n * This means the expression is evaluated at decoding time and the result of\n * the evaluation is stored in the respective field. Valid expressions are all\n * JavaScript expressions, including function definitions, which are mapped to\n * functions on the resulting object.\n * \n * Expressions are only evaluated if <allowEval> is true.\n * \n * Constructor: mxObjectCodec\n *\n * Constructs a new codec for the specified template object.\n * The variables in the optional exclude array are ignored by\n * the codec. Variables in the optional idrefs array are\n * turned into references in the XML. The optional mapping\n * may be used to map from variable names to XML attributes.\n * The argument is created as follows:\n *\n * (code)\n * var mapping = new Object();\n * mapping['variableName'] = 'attribute-name';\n * (end)\n *\n * Parameters:\n *\n * template - Prototypical instance of the object to be\n * encoded/decoded.\n * exclude - Optional array of fieldnames to be ignored.\n * idrefs - Optional array of fieldnames to be converted to/from\n * references.\n * mapping - Optional mapping from field- to attributenames.\n */\nfunction mxObjectCodec(template, exclude, idrefs, mapping)\n{\n\tthis.template = template;\n\t\n\tthis.exclude = (exclude != null) ? exclude : [];\n\tthis.idrefs = (idrefs != null) ? idrefs : [];\n\tthis.mapping = (mapping != null) ? mapping : [];\n\t\n\tthis.reverse = new Object();\n\t\n\tfor (var i in this.mapping)\n\t{\n\t\tthis.reverse[this.mapping[i]] = i;\n\t}\n};\n\n/**\n * Variable: allowEval\n *\n * Static global switch that specifies if expressions in arrays are allowed.\n * Default is false. NOTE: Enabling this carries a possible security risk.\n */\nmxObjectCodec.allowEval = false;\n\n/**\n * Variable: template\n *\n * Holds the template object associated with this codec.\n */\nmxObjectCodec.prototype.template = null;\n\n/**\n * Variable: exclude\n *\n * Array containing the variable names that should be\n * ignored by the codec.\n */\nmxObjectCodec.prototype.exclude = null;\n\n/**\n * Variable: idrefs\n *\n * Array containing the variable names that should be\n * turned into or converted from references. See\n * <mxCodec.getId> and <mxCodec.getObject>.\n */\nmxObjectCodec.prototype.idrefs = null;\n\n/**\n * Variable: mapping\n *\n * Maps from from fieldnames to XML attribute names.\n */\nmxObjectCodec.prototype.mapping = null;\n\n/**\n * Variable: reverse\n *\n * Maps from from XML attribute names to fieldnames.\n */\nmxObjectCodec.prototype.reverse = null;\n\n/**\n * Function: getName\n * \n * Returns the name used for the nodenames and lookup of the codec when\n * classes are encoded and nodes are decoded. For classes to work with\n * this the codec registry automatically adds an alias for the classname\n * if that is different than what this returns. The default implementation\n * returns the classname of the template class.\n */\nmxObjectCodec.prototype.getName = function()\n{\n\treturn mxUtils.getFunctionName(this.template.constructor);\n};\n\n/**\n * Function: cloneTemplate\n * \n * Returns a new instance of the template for this codec.\n */\nmxObjectCodec.prototype.cloneTemplate = function()\n{\n\treturn new this.template.constructor();\n};\n\n/**\n * Function: getFieldName\n * \n * Returns the fieldname for the given attributename.\n * Looks up the value in the <reverse> mapping or returns\n * the input if there is no reverse mapping for the\n * given name.\n */\nmxObjectCodec.prototype.getFieldName = function(attributename)\n{\n\tif (attributename != null)\n\t{\n\t\tvar mapped = this.reverse[attributename];\n\t\t\n\t\tif (mapped != null)\n\t\t{\n\t\t\tattributename = mapped;\n\t\t}\n\t}\n\t\n\treturn attributename;\n};\n\n/**\n * Function: getAttributeName\n * \n * Returns the attributename for the given fieldname.\n * Looks up the value in the <mapping> or returns\n * the input if there is no mapping for the\n * given name.\n */\nmxObjectCodec.prototype.getAttributeName = function(fieldname)\n{\n\tif (fieldname != null)\n\t{\n\t\tvar mapped = this.mapping[fieldname];\n\t\t\n\t\tif (mapped != null)\n\t\t{\n\t\t\tfieldname = mapped;\n\t\t}\n\t}\n\t\n\treturn fieldname;\n};\n\n/**\n * Function: isExcluded\n *\n * Returns true if the given attribute is to be ignored by the codec. This\n * implementation returns true if the given fieldname is in <exclude> or\n * if the fieldname equals <mxObjectIdentity.FIELD_NAME>.\n *\n * Parameters:\n *\n * obj - Object instance that contains the field.\n * attr - Fieldname of the field.\n * value - Value of the field.\n * write - Boolean indicating if the field is being encoded or decoded.\n * Write is true if the field is being encoded, else it is being decoded.\n */\nmxObjectCodec.prototype.isExcluded = function(obj, attr, value, write)\n{\n\treturn attr == mxObjectIdentity.FIELD_NAME ||\n\t\tmxUtils.indexOf(this.exclude, attr) >= 0;\n};\n\n/**\n * Function: isReference\n *\n * Returns true if the given fieldname is to be treated\n * as a textual reference (ID). This implementation returns\n * true if the given fieldname is in <idrefs>.\n *\n * Parameters:\n *\n * obj - Object instance that contains the field.\n * attr - Fieldname of the field.\n * value - Value of the field. \n * write - Boolean indicating if the field is being encoded or decoded.\n * Write is true if the field is being encoded, else it is being decoded.\n */\nmxObjectCodec.prototype.isReference = function(obj, attr, value, write)\n{\n\treturn mxUtils.indexOf(this.idrefs, attr) >= 0;\n};\n\n/**\n * Function: encode\n *\n * Encodes the specified object and returns a node\n * representing then given object. Calls <beforeEncode>\n * after creating the node and <afterEncode> with the \n * resulting node after processing.\n *\n * Enc is a reference to the calling encoder. It is used\n * to encode complex objects and create references.\n *\n * This implementation encodes all variables of an\n * object according to the following rules:\n *\n * - If the variable name is in <exclude> then it is ignored.\n * - If the variable name is in <idrefs> then <mxCodec.getId>\n * is used to replace the object with its ID.\n * - The variable name is mapped using <mapping>.\n * - If obj is an array and the variable name is numeric\n * (ie. an index) then it is not encoded.\n * - If the value is an object, then the codec is used to\n * create a child node with the variable name encoded into\n * the \"as\" attribute.\n * - Else, if <encodeDefaults> is true or the value differs\n * from the template value, then ...\n * - ... if obj is not an array, then the value is mapped to\n * an attribute.\n * - ... else if obj is an array, the value is mapped to an\n * add child with a value attribute or a text child node,\n * if the value is a function.\n *\n * If no ID exists for a variable in <idrefs> or if an object\n * cannot be encoded, a warning is issued using <mxLog.warn>.\n *\n * Returns the resulting XML node that represents the given\n * object.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n */\nmxObjectCodec.prototype.encode = function(enc, obj)\n{\n\tvar node = enc.document.createElement(this.getName());\n\t\n\tobj = this.beforeEncode(enc, obj, node);\n\tthis.encodeObject(enc, obj, node);\n\t\n\treturn this.afterEncode(enc, obj, node);\n};\n\t\n/**\n * Function: encodeObject\n *\n * Encodes the value of each member in then given obj into the given node using\n * <encodeValue>.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n * node - XML node that contains the encoded object.\n */\nmxObjectCodec.prototype.encodeObject = function(enc, obj, node)\n{\n\tenc.setAttribute(node, 'id', enc.getId(obj));\n\t\n    for (var i in obj)\n    {\n\t\tvar name = i;\n\t\tvar value = obj[name];\n\t\t\n    \tif (value != null && !this.isExcluded(obj, name, value, true))\n    \t{\n    \t\tif (mxUtils.isInteger(name))\n    \t\t{\n    \t\t\tname = null;\n    \t\t}\n    \t\t\n    \t\tthis.encodeValue(enc, obj, name, value, node);\n    \t}\n    }\n};\n\n/**\n * Function: encodeValue\n * \n * Converts the given value according to the mappings\n * and id-refs in this codec and uses <writeAttribute>\n * to write the attribute into the given node.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object whose property is going to be encoded.\n * name - XML node that contains the encoded object.\n * value - Value of the property to be encoded.\n * node - XML node that contains the encoded object.\n */\nmxObjectCodec.prototype.encodeValue = function(enc, obj, name, value, node)\n{\n\tif (value != null)\n\t{\n\t\tif (this.isReference(obj, name, value, true))\n\t\t{\n\t\t\tvar tmp = enc.getId(value);\n\t\t\t\n\t\t\tif (tmp == null)\n\t\t\t{\n\t\t    \tmxLog.warn('mxObjectCodec.encode: No ID for ' +\n\t\t    \t\tthis.getName() + '.' + name + '=' + value);\n\t\t    \treturn; // exit\n\t\t    }\n\t\t    \n\t\t    value = tmp;\n\t\t}\n\n\t\tvar defaultValue = this.template[name];\n\t\t\n\t\t// Checks if the value is a default value and\n\t\t// the name is correct\n\t\tif (name == null || enc.encodeDefaults || defaultValue != value)\n\t\t{\n\t\t\tname = this.getAttributeName(name);\n\t\t\tthis.writeAttribute(enc, obj, name, value, node);\t\n\t\t}\n\t}\n};\n\n/**\n * Function: writeAttribute\n * \n * Writes the given value into node using <writePrimitiveAttribute>\n * or <writeComplexAttribute> depending on the type of the value.\n */\nmxObjectCodec.prototype.writeAttribute = function(enc, obj, name, value, node)\n{\n\tif (typeof(value) != 'object' /* primitive type */)\n\t{\n\t\tthis.writePrimitiveAttribute(enc, obj, name, value, node);\n\t}\n\telse /* complex type */\n\t{\n\t\tthis.writeComplexAttribute(enc, obj, name, value, node);\n\t}\n};\n\n/**\n * Function: writePrimitiveAttribute\n * \n * Writes the given value as an attribute of the given node.\n */\nmxObjectCodec.prototype.writePrimitiveAttribute = function(enc, obj, name, value, node)\n{\n\tvalue = this.convertAttributeToXml(enc, obj, name, value, node);\n\t\n\tif (name == null)\n\t{\n\t\tvar child = enc.document.createElement('add');\n\t\t\n\t\tif (typeof(value) == 'function')\n\t\t{\n    \t\tchild.appendChild(enc.document.createTextNode(value));\n    \t}\n    \telse\n    \t{\n    \t\tenc.setAttribute(child, 'value', value);\n    \t}\n    \t\n\t\tnode.appendChild(child);\n\t}\n\telse if (typeof(value) != 'function')\n\t{\n    \tenc.setAttribute(node, name, value);\n\t}\t\t\n};\n\t\n/**\n * Function: writeComplexAttribute\n * \n * Writes the given value as a child node of the given node.\n */\nmxObjectCodec.prototype.writeComplexAttribute = function(enc, obj, name, value, node)\n{\n\tvar child = enc.encode(value);\n\t\n\tif (child != null)\n\t{\n\t\tif (name != null)\n\t\t{\n    \t\tchild.setAttribute('as', name);\n    \t}\n    \t\n    \tnode.appendChild(child);\n\t}\n\telse\n\t{\n\t\tmxLog.warn('mxObjectCodec.encode: No node for ' + this.getName() + '.' + name + ': ' + value);\n\t}\n};\n\n/**\n * Function: convertAttributeToXml\n * \n * Converts true to \"1\" and false to \"0\" is <isBooleanAttribute> returns true.\n * All other values are not converted.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Objec to convert the attribute for.\n * name - Name of the attribute to be converted.\n * value - Value to be converted.\n */\nmxObjectCodec.prototype.convertAttributeToXml = function(enc, obj, name, value)\n{\n\t// Makes sure to encode boolean values as numeric values\n\tif (this.isBooleanAttribute(enc, obj, name, value))\n\t{\t\n\t\t// Checks if the value is true (do not use the value as is, because\n\t\t// this would check if the value is not null, so 0 would be true)\n\t\tvalue = (value == true) ? '1' : '0';\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: isBooleanAttribute\n * \n * Returns true if the given object attribute is a boolean value.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Objec to convert the attribute for.\n * name - Name of the attribute to be converted.\n * value - Value of the attribute to be converted.\n */\nmxObjectCodec.prototype.isBooleanAttribute = function(enc, obj, name, value)\n{\n\treturn (typeof(value.length) == 'undefined' && (value == true || value == false));\n};\n\n/**\n * Function: convertAttributeFromXml\n * \n * Converts booleans and numeric values to the respective types. Values are\n * numeric if <isNumericAttribute> returns true.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be converted.\n * obj - Objec to convert the attribute for.\n */\nmxObjectCodec.prototype.convertAttributeFromXml = function(dec, attr, obj)\n{\n\tvar value = attr.value;\n\t\n\tif (this.isNumericAttribute(dec, attr, obj))\n\t{\n\t\tvalue = parseFloat(value);\n\t\t\n\t\tif (isNaN(value) || !isFinite(value))\n\t\t{\n\t\t\tvalue = 0;\n\t\t}\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: isNumericAttribute\n * \n * Returns true if the given XML attribute is or should be a numeric value.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be converted.\n * obj - Objec to convert the attribute for.\n */\nmxObjectCodec.prototype.isNumericAttribute = function(dec, attr, obj)\n{\n\t// Handles known numeric attributes for generic objects\n\tvar result = (obj.constructor == mxGeometry &&\n\t\t(attr.name == 'x' || attr.name == 'y' ||\n\t\tattr.name == 'width' || attr.name == 'height')) ||\n\t\t(obj.constructor == mxPoint &&\n\t\t(attr.name == 'x' || attr.name == 'y')) ||\n\t\tmxUtils.isNumeric(attr.value);\n\t\n\treturn result;\n};\n\n/**\n * Function: beforeEncode\n *\n * Hook for subclassers to pre-process the object before\n * encoding. This returns the input object. The return\n * value of this function is used in <encode> to perform\n * the default encoding into the given node.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n * node - XML node to encode the object into.\n */\nmxObjectCodec.prototype.beforeEncode = function(enc, obj, node)\n{\n\treturn obj;\n};\n\n/**\n * Function: afterEncode\n *\n * Hook for subclassers to post-process the node\n * for the given object after encoding and return the\n * post-processed node. This implementation returns \n * the input node. The return value of this method\n * is returned to the encoder from <encode>.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n * node - XML node that represents the default encoding.\n */\nmxObjectCodec.prototype.afterEncode = function(enc, obj, node)\n{\n\treturn node;\n};\n\n/**\n * Function: decode\n *\n * Parses the given node into the object or returns a new object\n * representing the given node.\n *\n * Dec is a reference to the calling decoder. It is used to decode\n * complex objects and resolve references.\n *\n * If a node has an id attribute then the object cache is checked for the\n * object. If the object is not yet in the cache then it is constructed\n * using the constructor of <template> and cached in <mxCodec.objects>.\n *\n * This implementation decodes all attributes and childs of a node\n * according to the following rules:\n *\n * - If the variable name is in <exclude> or if the attribute name is \"id\"\n * or \"as\" then it is ignored.\n * - If the variable name is in <idrefs> then <mxCodec.getObject> is used\n * to replace the reference with an object.\n * - The variable name is mapped using a reverse <mapping>.\n * - If the value has a child node, then the codec is used to create a\n * child object with the variable name taken from the \"as\" attribute.\n * - If the object is an array and the variable name is empty then the\n * value or child object is appended to the array.\n * - If an add child has no value or the object is not an array then\n * the child text content is evaluated using <mxUtils.eval>.\n *\n * For add nodes where the object is not an array and the variable name\n * is defined, the default mechanism is used, allowing to override/add\n * methods as follows:\n *\n * (code)\n * <Object>\n *   <add as=\"hello\"><![CDATA[\n *     function(arg1) {\n *       mxUtils.alert('Hello '+arg1);\n *     }\n *   ]]></add>\n * </Object>\n * (end) \n *\n * If no object exists for an ID in <idrefs> a warning is issued\n * using <mxLog.warn>.\n *\n * Returns the resulting object that represents the given XML node\n * or the object given to the method as the into parameter.\n *\n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * into - Optional objec to encode the node into.\n */\nmxObjectCodec.prototype.decode = function(dec, node, into)\n{\n\tvar id = node.getAttribute('id');\n\tvar obj = dec.objects[id];\n\t\n\tif (obj == null)\n\t{\n\t\tobj = into || this.cloneTemplate();\n\t\t\n\t\tif (id != null)\n\t\t{\n\t\t\tdec.putObject(id, obj);\n\t\t}\n\t}\n\t\n\tnode = this.beforeDecode(dec, node, obj);\n\tthis.decodeNode(dec, node, obj);\n\t\n    return this.afterDecode(dec, node, obj);\n};\t\n\n/**\n * Function: decodeNode\n * \n * Calls <decodeAttributes> and <decodeChildren> for the given node.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeNode = function(dec, node, obj)\n{\n\tif (node != null)\n\t{\n\t\tthis.decodeAttributes(dec, node, obj);\n\t\tthis.decodeChildren(dec, node, obj);\n\t}\n};\n\n/**\n * Function: decodeAttributes\n * \n * Decodes all attributes of the given node using <decodeAttribute>.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeAttributes = function(dec, node, obj)\n{\n\tvar attrs = node.attributes;\n\t\n\tif (attrs != null)\n\t{\n\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t{\n\t\t\tthis.decodeAttribute(dec, attrs[i], obj);\n\t\t}\n\t}\n};\n\n/**\n * Function: isIgnoredAttribute\n * \n * Returns true if the given attribute should be ignored. This implementation\n * returns true if the attribute name is \"as\" or \"id\".\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be decoded.\n * obj - Objec to encode the attribute into.\n */\t\nmxObjectCodec.prototype.isIgnoredAttribute = function(dec, attr, obj)\n{\n\treturn attr.nodeName == 'as' || attr.nodeName == 'id';\n};\n\n/**\n * Function: decodeAttribute\n * \n * Reads the given attribute into the specified object.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be decoded.\n * obj - Objec to encode the attribute into.\n */\t\nmxObjectCodec.prototype.decodeAttribute = function(dec, attr, obj)\n{\n\tif (!this.isIgnoredAttribute(dec, attr, obj))\n\t{\n\t\tvar name = attr.nodeName;\n\t\t\n\t\t// Converts the string true and false to their boolean values.\n\t\t// This may require an additional check on the obj to see if\n\t\t// the existing field is a boolean value or uninitialized, in\n\t\t// which case we may want to convert true and false to a string.\n\t\tvar value = this.convertAttributeFromXml(dec, attr, obj);\n\t\tvar fieldname = this.getFieldName(name);\n\t\t\n\t\tif (this.isReference(obj, fieldname, value, false))\n\t\t{\n\t\t\tvar tmp = dec.getObject(value);\n\t\t\t\n\t\t\tif (tmp == null)\n\t\t\t{\n\t\t    \tmxLog.warn('mxObjectCodec.decode: No object for ' +\n\t\t    \t\tthis.getName() + '.' + name + '=' + value);\n\t\t    \treturn; // exit\n\t\t    }\n\t\t    \n\t\t    value = tmp;\n\t\t}\n\n\t\tif (!this.isExcluded(obj, name, value, false))\n\t\t{\n\t\t\t//mxLog.debug(mxUtils.getFunctionName(obj.constructor)+'.'+name+'='+value);\n\t\t\tobj[name] = value;\n\t\t}\n\t}\n};\n\n/**\n * Function: decodeChildren\n * \n * Decodes all children of the given node using <decodeChild>.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeChildren = function(dec, node, obj)\n{\n\tvar child = node.firstChild;\n\t\n\twhile (child != null)\n\t{\n\t\tvar tmp = child.nextSibling;\n\t\t\n\t\tif (child.nodeType == mxConstants.NODETYPE_ELEMENT &&\n\t\t\t!this.processInclude(dec, child, obj))\n\t\t{\n\t\t\tthis.decodeChild(dec, child, obj);\n\t\t}\n\t\t\n\t\tchild = tmp;\n\t}\n};\n\n/**\n * Function: decodeChild\n * \n * Reads the specified child into the given object.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * child - XML child element to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeChild = function(dec, child, obj)\n{\n\tvar fieldname = this.getFieldName(child.getAttribute('as'));\n\t\n\tif (fieldname == null || !this.isExcluded(obj, fieldname, child, false))\n\t{\n\t\tvar template = this.getFieldTemplate(obj, fieldname, child);\n\t\tvar value = null;\n\t\t\n\t\tif (child.nodeName == 'add')\n\t\t{\n\t\t\tvalue = child.getAttribute('value');\n\t\t\t\n\t\t\tif (value == null && mxObjectCodec.allowEval)\n\t\t\t{\n\t\t\t\tvalue = mxUtils.eval(mxUtils.getTextContent(child));\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvalue = dec.decode(child, template);\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\tthis.addObjectValue(obj, fieldname, value, template);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tthrow new Error(e.message + ' for ' + child.nodeName);\n\t\t}\n\t}\n};\n\n/**\n * Function: getFieldTemplate\n * \n * Returns the template instance for the given field. This returns the\n * value of the field, null if the value is an array or an empty collection\n * if the value is a collection. The value is then used to populate the\n * field for a new instance. For strongly typed languages it may be\n * required to override this to return the correct collection instance\n * based on the encoded child.\n */\t\nmxObjectCodec.prototype.getFieldTemplate = function(obj, fieldname, child)\n{\n\tvar template = obj[fieldname];\n\t\n\t// Non-empty arrays are replaced completely\n    if (template instanceof Array && template.length > 0)\n    {\n        template = null;\n    }\n    \n    return template;\n};\n\n/**\n * Function: addObjectValue\n * \n * Sets the decoded child node as a value of the given object. If the\n * object is a map, then the value is added with the given fieldname as a\n * key. If the fieldname is not empty, then setFieldValue is called or\n * else, if the object is a collection, the value is added to the\n * collection. For strongly typed languages it may be required to\n * override this with the correct code to add an entry to an object.\n */\t\nmxObjectCodec.prototype.addObjectValue = function(obj, fieldname, value, template)\n{\n\tif (value != null && value != template)\n\t{\n\t\tif (fieldname != null && fieldname.length > 0)\n\t\t{\n\t\t\tobj[fieldname] = value;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tobj.push(value);\n\t\t}\n\t\t//mxLog.debug('Decoded '+mxUtils.getFunctionName(obj.constructor)+'.'+fieldname+': '+value);\n\t}\n};\n\n/**\n * Function: processInclude\n *\n * Returns true if the given node is an include directive and\n * executes the include by decoding the XML document. Returns\n * false if the given node is not an include directive.\n *\n * Parameters:\n *\n * dec - <mxCodec> that controls the encoding/decoding process.\n * node - XML node to be checked.\n * into - Optional object to pass-thru to the codec.\n */\nmxObjectCodec.prototype.processInclude = function(dec, node, into)\n{\n\tif (node.nodeName == 'include')\n\t{\n\t\tvar name = node.getAttribute('name');\n\t\t\n\t\tif (name != null)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar xml = mxUtils.load(name).getDocumentElement();\n\t\t\t\t\n\t\t\t\tif (xml != null)\n\t\t\t\t{\n\t\t\t\t\tdec.decode(xml, into);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: beforeDecode\n *\n * Hook for subclassers to pre-process the node for\n * the specified object and return the node to be\n * used for further processing by <decode>.\n * The object is created based on the template in the \n * calling method and is never null. This implementation\n * returns the input node. The return value of this\n * function is used in <decode> to perform\n * the default decoding into the given object.\n *\n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Object to encode the node into.\n */\nmxObjectCodec.prototype.beforeDecode = function(dec, node, obj)\n{\n\treturn node;\n};\n\n/**\n * Function: afterDecode\n *\n * Hook for subclassers to post-process the object after\n * decoding. This implementation returns the given object\n * without any changes. The return value of this method\n * is returned to the decoder from <decode>.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * node - XML node to be decoded.\n * obj - Object that represents the default decoding.\n */\nmxObjectCodec.prototype.afterDecode = function(dec, node, obj)\n{\n\treturn obj;\n};\n\n__mxOutput.mxObjectCodec = typeof mxObjectCodec !== 'undefined' ? mxObjectCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxCellCodec\n\t *\n\t * Codec for <mxCell>s. This class is created and registered\n\t * dynamically at load time and used implicitly via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - children\n\t * - edges\n\t * - overlays\n\t * - mxTransient\n\t *\n\t * Reference Fields:\n\t *\n\t * - parent\n\t * - source\n\t * - target\n\t * \n\t * Transient fields can be added using the following code:\n\t * \n\t * mxCodecRegistry.getCodec(mxCell).exclude.push('name_of_field');\n\t * \n\t * To subclass <mxCell>, replace the template and add an alias as\n\t * follows.\n\t * \n\t * (code)\n\t * function CustomCell(value, geometry, style)\n\t * {\n\t *   mxCell.apply(this, arguments);\n\t * }\n\t * \n\t * mxUtils.extend(CustomCell, mxCell);\n\t * \n\t * mxCodecRegistry.getCodec(mxCell).template = new CustomCell();\n\t * mxCodecRegistry.addAlias('CustomCell', 'mxCell');\n\t * (end)\n\t */\n\tvar codec = new mxObjectCodec(new mxCell(),\n\t\t['children', 'edges', 'overlays', 'mxTransient'],\n\t\t['parent', 'source', 'target']);\n\n\t/**\n\t * Function: isCellCodec\n\t *\n\t * Returns true since this is a cell codec.\n\t */\n\tcodec.isCellCodec = function()\n\t{\n\t\treturn true;\n\t};\n\n\t/**\n\t * Overidden to disable conversion of value to number.\n\t */\n\tcodec.isNumericAttribute = function(dec, attr, obj)\n\t{\n\t\treturn attr.nodeName !== 'value' && mxObjectCodec.prototype.isNumericAttribute.apply(this, arguments);\n\t};\n\t\n\t/**\n\t * Function: isExcluded\n\t *\n\t * Excludes user objects that are XML nodes.\n\t */ \n\tcodec.isExcluded = function(obj, attr, value, isWrite)\n\t{\n\t\treturn mxObjectCodec.prototype.isExcluded.apply(this, arguments) ||\n\t\t\t(isWrite && attr == 'value' &&\n\t\t\tvalue.nodeType == mxConstants.NODETYPE_ELEMENT);\n\t};\n\t\n\t/**\n\t * Function: afterEncode\n\t *\n\t * Encodes an <mxCell> and wraps the XML up inside the\n\t * XML of the user object (inversion).\n\t */\n\tcodec.afterEncode = function(enc, obj, node)\n\t{\n\t\tif (obj.value != null && obj.value.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\t// Wraps the graphical annotation up in the user object (inversion)\n\t\t\t// by putting the result of the default encoding into a clone of the\n\t\t\t// user object (node type 1) and returning this cloned user object.\n\t\t\tvar tmp = node;\n\t\t\tnode = mxUtils.importNode(enc.document, obj.value, true);\n\t\t\tnode.appendChild(tmp);\n\t\t\t\n\t\t\t// Moves the id attribute to the outermost XML node, namely the\n\t\t\t// node which denotes the object boundaries in the file.\n\t\t\tvar id = tmp.getAttribute('id');\n\t\t\tnode.setAttribute('id', id);\n\t\t\ttmp.removeAttribute('id');\n\t\t}\n\n\t\treturn node;\n\t};\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes an <mxCell> and uses the enclosing XML node as\n\t * the user object for the cell (inversion).\n\t */\n\tcodec.beforeDecode = function(dec, node, obj)\n\t{\n\t\tvar inner = node.cloneNode(true);\n\t\tvar classname = this.getName();\n\t\t\n\t\tif (node.nodeName != classname)\n\t\t{\n\t\t\t// Passes the inner graphical annotation node to the\n\t\t\t// object codec for further processing of the cell.\n\t\t\tvar tmp = node.getElementsByTagName(classname)[0];\n\t\t\t\n\t\t\tif (tmp != null && tmp.parentNode == node)\n\t\t\t{\n\t\t\t\tmxUtils.removeWhitespace(tmp, true);\n\t\t\t\tmxUtils.removeWhitespace(tmp, false);\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\tinner = tmp;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinner = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Creates the user object out of the XML node\n\t\t\tobj.value = node.cloneNode(true);\n\t\t\tvar id = obj.value.getAttribute('id');\n\t\t\t\n\t\t\tif (id != null)\n\t\t\t{\n\t\t\t\tobj.setId(id);\n\t\t\t\tobj.value.removeAttribute('id');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Uses ID from XML file as ID for cell in model\n\t\t\tobj.setId(node.getAttribute('id'));\n\t\t}\n\t\t\t\n\t\t// Preprocesses and removes all Id-references in order to use the\n\t\t// correct encoder (this) for the known references to cells (all).\n\t\tif (inner != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.idrefs.length; i++)\n\t\t\t{\n\t\t\t\tvar attr = this.idrefs[i];\n\t\t\t\tvar ref = inner.getAttribute(attr);\n\t\t\t\t\n\t\t\t\tif (ref != null)\n\t\t\t\t{\n\t\t\t\t\tinner.removeAttribute(attr);\n\t\t\t\t\tvar object = dec.objects[ref] || dec.lookup(ref);\n\t\t\t\t\t\n\t\t\t\t\tif (object == null)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Needs to decode forward reference\n\t\t\t\t\t\tvar element = dec.getElementById(ref);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (element != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar decoder = mxCodecRegistry.codecs[element.nodeName] || this;\n\t\t\t\t\t\t\tobject = decoder.decode(dec, element);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tobj[attr] = object;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn inner;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxCellCodec = typeof mxCellCodec !== 'undefined' ? mxCellCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxModelCodec\n\t *\n\t * Codec for <mxGraphModel>s. This class is created and registered\n\t * dynamically at load time and used implicitly via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t */\n\tvar codec = new mxObjectCodec(new mxGraphModel());\n\n\t/**\n\t * Function: encodeObject\n\t *\n\t * Encodes the given <mxGraphModel> by writing a (flat) XML sequence of\n\t * cell nodes as produced by the <mxCellCodec>. The sequence is\n\t * wrapped-up in a node with the name root.\n\t */\n\tcodec.encodeObject = function(enc, obj, node)\n\t{\n\t\tvar rootNode = enc.document.createElement('root');\n\t\tenc.encodeCell(obj.getRoot(), rootNode);\n\t\tnode.appendChild(rootNode);\n\t};\n\n\t/**\n\t * Function: decodeChild\n\t * \n\t * Overrides decode child to handle special child nodes.\n\t */\t\n\tcodec.decodeChild = function(dec, child, obj)\n\t{\n\t\tif (child.nodeName == 'root')\n\t\t{\n\t\t\tthis.decodeRoot(dec, child, obj);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxObjectCodec.prototype.decodeChild.apply(this, arguments);\n\t\t}\n\t};\n\n\t/**\n\t * Function: decodeRoot\n\t *\n\t * Reads the cells into the graph model. All cells\n\t * are children of the root element in the node.\n\t */\n\tcodec.decodeRoot = function(dec, root, model)\n\t{\n\t\tvar rootCell = null;\n\t\tvar tmp = root.firstChild;\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tvar cell = dec.decodeCell(tmp);\n\t\t\t\n\t\t\tif (cell != null && cell.getParent() == null)\n\t\t\t{\n\t\t\t\trootCell = cell;\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\n\n\t\t// Sets the root on the model if one has been decoded\n\t\tif (rootCell != null)\n\t\t{\n\t\t\tmodel.setRoot(rootCell);\n\t\t}\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxModelCodec = typeof mxModelCodec !== 'undefined' ? mxModelCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxRootChangeCodec\n\t *\n\t * Codec for <mxRootChange>s. This class is created and registered\n\t * dynamically at load time and used implicitly via <mxCodec> and\n\t * the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - model\n\t * - previous\n\t * - root\n\t */\n\tvar codec = new mxObjectCodec(new mxRootChange(),\n\t\t['model', 'previous', 'root']);\n\n\t/**\n\t * Function: onEncode\n\t *\n\t * Encodes the child recursively.\n\t */\n\tcodec.afterEncode = function(enc, obj, node)\n\t{\n\t\tenc.encodeCell(obj.root, node);\n\t\t\n\t\treturn node;\n\t};\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes the optional children as cells\n\t * using the respective decoder.\n\t */\n\tcodec.beforeDecode = function(dec, node, obj)\n\t{\n\t\tif (node.firstChild != null &&\n\t\t\tnode.firstChild.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\t// Makes sure the original node isn't modified\n\t\t\tnode = node.cloneNode(true);\n\t\t\t\n\t\t\tvar tmp = node.firstChild;\n\t\t\tobj.root = dec.decodeCell(tmp, false);\n\n\t\t\tvar tmp2 = tmp.nextSibling;\n\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\ttmp = tmp2;\n\t\t\n\t\t\twhile (tmp != null)\n\t\t\t{\n\t\t\t\ttmp2 = tmp.nextSibling;\n\t\t\t\tdec.decodeCell(tmp);\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\ttmp = tmp2;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\t\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\tobj.previous = obj.root;\n\t\t\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxRootChangeCodec = typeof mxRootChangeCodec !== 'undefined' ? mxRootChangeCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxChildChangeCodec\n\t *\n\t * Codec for <mxChildChange>s. This class is created and registered\n\t * dynamically at load time and used implicitly via <mxCodec> and\n\t * the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - model\n\t * - previous\n\t * - previousIndex\n\t * - child\n\t *\n\t * Reference Fields:\n\t *\n\t * - parent\n\t */\n\tvar codec = new mxObjectCodec(new mxChildChange(),\n\t\t['model', 'child', 'previousIndex'],\n\t\t['parent', 'previous']);\n\n\t/**\n\t * Function: isReference\n\t *\n\t * Returns true for the child attribute if the child\n\t * cell had a previous parent or if we're reading the\n\t * child as an attribute rather than a child node, in\n\t * which case it's always a reference.\n\t */\n\tcodec.isReference = function(obj, attr, value, isWrite)\n\t{\n\t\tif (attr == 'child' && (!isWrite || obj.model.contains(obj.previous)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn mxUtils.indexOf(this.idrefs, attr) >= 0;\n\t};\n\n\t/**\n\t * Function: isExcluded\n\t *\n\t * Excludes references to parent or previous if not in the model.\n\t */\n  \tcodec.isExcluded = function(obj, attr, value, write)\n  \t{\n  \t\treturn mxObjectCodec.prototype.isExcluded.apply(this, arguments) ||\n  \t\t\t(write && value != null && (attr == 'previous' ||\n  \t\t\tattr == 'parent') && !obj.model.contains(value));\n  \t};\n  \t\n\t/**\n\t * Function: afterEncode\n\t *\n\t * Encodes the child recusively and adds the result\n\t * to the given node.\n\t */\n\tcodec.afterEncode = function(enc, obj, node)\n\t{\n\t\tif (this.isReference(obj, 'child', obj.child, true))\n\t\t{\n\t\t\t// Encodes as reference (id)\n\t\t\tnode.setAttribute('child', enc.getId(obj.child));\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// At this point, the encoder is no longer able to know which cells\n\t\t\t// are new, so we have to encode the complete cell hierarchy and\n\t\t\t// ignore the ones that are already there at decoding time. Note:\n\t\t\t// This can only be resolved by moving the notify event into the\n\t\t\t// execute of the edit.\n\t\t\tenc.encodeCell(obj.child, node);\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes the any child nodes as using the respective\n\t * codec from the registry.\n\t */\n\tcodec.beforeDecode = function(dec, node, obj)\n\t{\n\t\tif (node.firstChild != null &&\n\t\t\tnode.firstChild.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\t// Makes sure the original node isn't modified\n\t\t\tnode = node.cloneNode(true);\n\t\t\t\n\t\t\tvar tmp = node.firstChild;\n\t\t\tobj.child = dec.decodeCell(tmp, false);\n\n\t\t\tvar tmp2 = tmp.nextSibling;\n\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\ttmp = tmp2;\n\t\t\t\n\t\t\twhile (tmp != null)\n\t\t\t{\n\t\t\t\ttmp2 = tmp.nextSibling;\n\t\t\t\t\n\t\t\t\tif (tmp.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t{\n\t\t\t\t\t// Ignores all existing cells because those do not need to\n\t\t\t\t\t// be re-inserted into the model. Since the encoded version\n\t\t\t\t\t// of these cells contains the new parent, this would leave\n\t\t\t\t\t// to an inconsistent state on the model (ie. a parent\n\t\t\t\t\t// change without a call to parentForCellChanged).\n\t\t\t\t\tvar id = tmp.getAttribute('id');\n\t\t\t\t\t\n\t\t\t\t\tif (dec.lookup(id) == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tdec.decodeCell(tmp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\ttmp = tmp2;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar childRef = node.getAttribute('child');\n\t\t\tobj.child = dec.getObject(childRef);\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\t\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores object state in the child change.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Cells are decoded here after a complete transaction so the previous\n\t\t// parent must be restored on the cell for the case where the cell was\n\t\t// added. This is needed for the local model to identify the cell as a\n\t\t// new cell and register the ID.\n        if (obj.child != null)\n        {\n            if (obj.child.parent != null && obj.previous != null &&\n                obj.child.parent != obj.previous)\n            {\n                obj.previous = obj.child.parent;\n            }\n\n            obj.child.parent = obj.previous;\n            obj.previous = obj.parent;\n            obj.previousIndex = obj.index;\n        }\n\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxChildChangeCodec = typeof mxChildChangeCodec !== 'undefined' ? mxChildChangeCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxTerminalChangeCodec\n\t *\n\t * Codec for <mxTerminalChange>s. This class is created and registered\n\t * dynamically at load time and used implicitly via <mxCodec> and\n\t * the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - model\n\t * - previous\n\t *\n\t * Reference Fields:\n\t *\n\t * - cell\n\t * - terminal\n\t */\n\tvar codec = new mxObjectCodec(new mxTerminalChange(),\n\t\t['model', 'previous'], ['cell', 'terminal']);\n\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\tobj.previous = obj.terminal;\n\t\t\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxTerminalChangeCodec = typeof mxTerminalChangeCodec !== 'undefined' ? mxTerminalChangeCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGenericChangeCodec\n *\n * Codec for <mxValueChange>s, <mxStyleChange>s, <mxGeometryChange>s,\n * <mxCollapseChange>s and <mxVisibleChange>s. This class is created\n * and registered dynamically at load time and used implicitly\n * via <mxCodec> and the <mxCodecRegistry>.\n *\n * Transient Fields:\n *\n * - model\n * - previous\n *\n * Reference Fields:\n *\n * - cell\n * \n * Constructor: mxGenericChangeCodec\n *\n * Factory function that creates a <mxObjectCodec> for\n * the specified change and fieldname.\n *\n * Parameters:\n *\n * obj - An instance of the change object.\n * variable - The fieldname for the change data.\n */\nvar mxGenericChangeCodec = function(obj, variable)\n{\n\tvar codec = new mxObjectCodec(obj,  ['model', 'previous'], ['cell']);\n\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Allows forward references in sessions. This is a workaround\n\t\t// for the sequence of edits in mxGraph.moveCells and cellsAdded.\n\t\tif (mxUtils.isNode(obj.cell))\n\t\t{\n\t\t\tobj.cell = dec.decodeCell(obj.cell, false);\n\t\t}\n\n\t\tobj.previous = obj[variable];\n\n\t\treturn obj;\n\t};\n\t\n\treturn codec;\n};\n\n// Registers the codecs\nmxCodecRegistry.register(mxGenericChangeCodec(new mxValueChange(), 'value'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxStyleChange(), 'style'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxGeometryChange(), 'geometry'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxCollapseChange(), 'collapsed'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxVisibleChange(), 'visible'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxCellAttributeChange(), 'value'));\n\n__mxOutput.mxGenericChangeCodec = typeof mxGenericChangeCodec !== 'undefined' ? mxGenericChangeCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxGraphCodec\n\t *\n\t * Codec for <mxGraph>s. This class is created and registered\n\t * dynamically at load time and used implicitly via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - graphListeners\n\t * - eventListeners\n\t * - view\n\t * - container\n\t * - cellRenderer\n\t * - editor\n\t * - selection\n\t */\n\treturn new mxObjectCodec(new mxGraph(),\n\t\t['graphListeners', 'eventListeners', 'view', 'container',\n\t\t'cellRenderer', 'editor', 'selection']);\n\n}());\n\n__mxOutput.mxGraphCodec = typeof mxGraphCodec !== 'undefined' ? mxGraphCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxGraphViewCodec\n\t *\n\t * Custom encoder for <mxGraphView>s. This class is created\n\t * and registered dynamically at load time and used implicitly via\n\t * <mxCodec> and the <mxCodecRegistry>. This codec only writes views\n\t * into a XML format that can be used to create an image for\n\t * the graph, that is, it contains absolute coordinates with\n\t * computed perimeters, edge styles and cell styles.\n\t */\n\tvar codec = new mxObjectCodec(new mxGraphView());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Encodes the given <mxGraphView> using <encodeCell>\n\t * starting at the model's root. This returns the\n\t * top-level graph node of the recursive encoding.\n\t */\n\tcodec.encode = function(enc, view)\n\t{\n\t\treturn this.encodeCell(enc, view,\n\t\t\tview.graph.getModel().getRoot());\n\t};\n\n\t/**\n\t * Function: encodeCell\n\t *\n\t * Recursively encodes the specifed cell. Uses layer\n\t * as the default nodename. If the cell's parent is\n\t * null, then graph is used for the nodename. If\n\t * <mxGraphModel.isEdge> returns true for the cell,\n\t * then edge is used for the nodename, else if\n\t * <mxGraphModel.isVertex> returns true for the cell,\n\t * then vertex is used for the nodename.\n\t *\n\t * <mxGraph.getLabel> is used to create the label\n\t * attribute for the cell. For graph nodes and vertices\n\t * the bounds are encoded into x, y, width and height.\n\t * For edges the points are encoded into a points\n\t * attribute as a space-separated list of comma-separated\n\t * coordinate pairs (eg. x0,y0 x1,y1 ... xn,yn). All\n\t * values from the cell style are added as attribute\n\t * values to the node. \n\t */\n\tcodec.encodeCell = function(enc, view, cell)\n\t{\n\t\tvar model = view.graph.getModel();\n\t\tvar state = view.getState(cell);\n\t\tvar parent = model.getParent(cell);\n\t\t\n\t\tif (parent == null || state != null)\n\t\t{\n\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\tvar geo = view.graph.getCellGeometry(cell);\n\t\t\tvar name = null;\n\t\t\t\n\t\t\tif (parent == model.getRoot())\n\t\t\t{\n\t\t\t\tname = 'layer';\n\t\t\t}\n\t\t\telse if (parent == null)\n\t\t\t{\n\t\t\t\tname = 'graph';\n\t\t\t}\n\t\t\telse if (model.isEdge(cell))\n\t\t\t{\n\t\t\t\tname = 'edge';\n\t\t\t}\n\t\t\telse if (childCount > 0 && geo != null)\n\t\t\t{\n\t\t\t\tname = 'group';\n\t\t\t}\n\t\t\telse if (model.isVertex(cell))\n\t\t\t{\n\t\t\t\tname = 'vertex';\n\t\t\t}\n\t\t\t\n\t\t\tif (name != null)\n\t\t\t{\n\t\t\t\tvar node = enc.document.createElement(name);\n\t\t\t\tvar lab = view.graph.getLabel(cell);\n\t\t\t\t\n\t\t\t\tif (lab != null)\n\t\t\t\t{\n\t\t\t\t\tnode.setAttribute('label', view.graph.getLabel(cell));\n\t\t\t\t\t\n\t\t\t\t\tif (view.graph.isHtmlLabel(cell))\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.setAttribute('html', true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tif (parent == null)\n\t\t\t\t{\n\t\t\t\t\tvar bounds = view.getGraphBounds();\n\t\t\t\t\t\n\t\t\t\t\tif (bounds != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.setAttribute('x', Math.round(bounds.x));\n\t\t\t\t\t\tnode.setAttribute('y', Math.round(bounds.y));\n\t\t\t\t\t\tnode.setAttribute('width', Math.round(bounds.width));\n\t\t\t\t\t\tnode.setAttribute('height', Math.round(bounds.height));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tnode.setAttribute('scale', view.scale);\n\t\t\t\t}\n\t\t\t\telse if (state != null && geo != null)\n\t\t\t\t{\n\t\t\t\t\t// Writes each key, value in the style pair to an attribute\n\t\t\t\t    for (var i in state.style)\n\t\t\t\t    {\n\t\t\t\t    \tvar value = state.style[i];\n\t\t\n\t\t\t\t    \t// Tries to turn objects and functions into strings\n\t\t\t\t\t    if (typeof(value) == 'function' &&\n\t\t\t\t\t\t\ttypeof(value) == 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t    \tvalue = mxStyleRegistry.getName(value);\n\t\t\t\t        }\n\t\t\t\t    \t\n\t\t\t\t    \tif (value != null &&\n\t\t\t\t    \t\ttypeof(value) != 'function' &&\n\t\t\t\t\t\t\ttypeof(value) != 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnode.setAttribute(i, value);\n\t\t\t\t        }\n\t\t\t\t    }\n\t\t\t\t    \n\t\t\t\t\tvar abs = state.absolutePoints;\n\t\t\t\t\t\n\t\t\t\t\t// Writes the list of points into one attribute\n\t\t\t\t\tif (abs != null && abs.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar pts = Math.round(abs[0].x) + ',' + Math.round(abs[0].y);\n\t\t\n\t\t\t\t\t\tfor (var i=1; i<abs.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpts += ' ' + Math.round(abs[i].x) + ',' +\n\t\t\t\t\t\t\t\tMath.round(abs[i].y);\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\tnode.setAttribute('points', pts);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Writes the bounds into 4 attributes\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.setAttribute('x', Math.round(state.x));\n\t\t\t\t\t\tnode.setAttribute('y', Math.round(state.y));\n\t\t\t\t\t\tnode.setAttribute('width', Math.round(state.width));\n\t\t\t\t\t\tnode.setAttribute('height', Math.round(state.height));\t\t\t\t\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tvar offset = state.absoluteOffset;\n\t\t\t\t\t\n\t\t\t\t\t// Writes the offset into 2 attributes\n\t\t\t\t\tif (offset != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (offset.x != 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnode.setAttribute('dx', Math.round(offset.x));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (offset.y != 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnode.setAttribute('dy', Math.round(offset.y));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tfor (var i=0; i<childCount; i++)\n\t\t\t\t{\n\t\t\t\t\tvar childNode = this.encodeCell(enc,\n\t\t\t\t\t\t\tview, model.getChildAt(cell, i));\n\t\t\t\t\t\n\t\t\t\t\tif (childNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxGraphViewCodec = typeof mxGraphViewCodec !== 'undefined' ? mxGraphViewCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStylesheetCodec\n *\n * Codec for <mxStylesheet>s. This class is created and registered\n * dynamically at load time and used implicitly via <mxCodec>\n * and the <mxCodecRegistry>.\n */\nvar mxStylesheetCodec = mxCodecRegistry.register(function()\n{\n\tvar codec = new mxObjectCodec(new mxStylesheet());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Encodes a stylesheet. See <decode> for a description of the\n\t * format.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\tvar node = enc.document.createElement(this.getName());\n\t\t\n\t\tfor (var i in obj.styles)\n\t\t{\n\t\t\tvar style = obj.styles[i];\n\t\t\tvar styleNode = enc.document.createElement('add');\n\t\t\t\n\t\t\tif (i != null)\n\t\t\t{\n\t\t\t\tstyleNode.setAttribute('as', i);\n\t\t\t\t\n\t\t\t\tfor (var j in style)\n\t\t\t\t{\n\t\t\t\t\tvar value = this.getStringValue(j, style[j]);\n\t\t\t\t\t\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar entry = enc.document.createElement('add');\n\t\t\t\t\t\tentry.setAttribute('value', value);\n\t\t\t\t\t\tentry.setAttribute('as', j);\n\t\t\t\t\t\tstyleNode.appendChild(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (styleNode.childNodes.length > 0)\n\t\t\t\t{\n\t\t\t\t\tnode.appendChild(styleNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t    return node;\n\t};\n\n\t/**\n\t * Function: getStringValue\n\t *\n\t * Returns the string for encoding the given value.\n\t */\n\tcodec.getStringValue = function(key, value)\n\t{\n\t\tvar type = typeof(value);\n\t\t\n\t\tif (type == 'function')\n\t\t{\n\t\t\tvalue = mxStyleRegistry.getName(value);\n\t\t}\n\t\telse if (type == 'object')\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\treturn value;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Reads a sequence of the following child nodes\n\t * and attributes:\n\t *\n\t * Child Nodes:\n\t *\n\t * add - Adds a new style.\n\t *\n\t * Attributes:\n\t *\n\t * as - Name of the style.\n\t * extend - Name of the style to inherit from.\n\t *\n\t * Each node contains another sequence of add and remove nodes with the following\n\t * attributes:\n\t *\n\t * as - Name of the style (see <mxConstants>).\n\t * value - Value for the style.\n\t *\n\t * Instead of the value-attribute, one can put Javascript expressions into\n\t * the node as follows if <mxStylesheetCodec.allowEval> is true:\n\t * <add as=\"perimeter\">mxPerimeter.RectanglePerimeter</add>\n\t *\n\t * A remove node will remove the entry with the name given in the as-attribute\n\t * from the style.\n\t * \n\t * Example:\n\t *\n\t * (code)\n\t * <mxStylesheet as=\"stylesheet\">\n\t *   <add as=\"text\">\n\t *     <add as=\"fontSize\" value=\"12\"/>\n\t *   </add>\n\t *   <add as=\"defaultVertex\" extend=\"text\">\n\t *     <add as=\"shape\" value=\"rectangle\"/>\n\t *   </add>\n\t * </mxStylesheet>\n\t * (end)\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tvar obj = into || new this.template.constructor();\n\t\tvar id = node.getAttribute('id');\n\t\t\n\t\tif (id != null)\n\t\t{\n\t\t\tdec.objects[id] = obj;\n\t\t}\n\t\t\n\t\tnode = node.firstChild;\n\t\t\n\t\twhile (node != null)\n\t\t{\n\t\t\tif (!this.processInclude(dec, node, obj) && node.nodeName == 'add')\n\t\t\t{\n\t\t\t\tvar as = node.getAttribute('as');\n\t\t\t\t\n\t\t\t\tif (as != null)\n\t\t\t\t{\n\t\t\t\t\tvar extend = node.getAttribute('extend');\n\t\t\t\t\tvar style = (extend != null) ? mxUtils.clone(obj.styles[extend]) : null;\n\t\t\t\t\t\n\t\t\t\t\tif (style == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (extend != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxLog.warn('mxStylesheetCodec.decode: stylesheet ' +\n\t\t\t\t\t\t\t\textend + ' not found to extend');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tstyle = new Object();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar entry = node.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (entry != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (entry.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t \tvar key = entry.getAttribute('as');\n\t\t\t\t\t\t \t\n\t\t\t\t\t\t \tif (entry.nodeName == 'add')\n\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \tvar text = mxUtils.getTextContent(entry);\n\t\t\t\t\t\t\t \tvar value = null;\n\t\t\t\t\t\t\t \t\n\t\t\t\t\t\t\t \tif (text != null && text.length > 0 && mxStylesheetCodec.allowEval)\n\t\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \t\tvalue = mxUtils.eval(text);\n\t\t\t\t\t\t\t \t}\n\t\t\t\t\t\t\t \telse\n\t\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \t\tvalue = entry.getAttribute('value');\n\t\t\t\t\t\t\t \t\t\n\t\t\t\t\t\t\t \t\tif (mxUtils.isNumeric(value))\n\t\t\t\t\t\t\t \t\t{\n\t\t\t\t\t\t\t\t\t\tvalue = parseFloat(value);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t \t}\n\n\t\t\t\t\t\t\t \tif (value != null)\n\t\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \t\tstyle[key] = value;\n\t\t\t\t\t\t\t \t}\n\t\t\t\t\t\t \t}\n\t\t\t\t\t\t \telse if (entry.nodeName == 'remove')\n\t\t\t\t\t\t \t{\n\t\t\t\t\t\t \t\tdelete style[key];\n\t\t\t\t\t\t \t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tentry = entry.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tobj.putCellStyle(as, style);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t\t\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n/**\n * Variable: allowEval\n * \n * Static global switch that specifies if the use of eval is allowed for\n * evaluating text content. Default is true. Set this to false if stylesheets\n * may contain user input.\n */\nmxStylesheetCodec.allowEval = true;\n\n__mxOutput.mxStylesheetCodec = typeof mxStylesheetCodec !== 'undefined' ? mxStylesheetCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxDefaultKeyHandlerCodec\n\t *\n\t * Custom codec for configuring <mxDefaultKeyHandler>s. This class is created\n\t * and registered dynamically at load time and used implicitly via\n\t * <mxCodec> and the <mxCodecRegistry>. This codec only reads configuration\n\t * data for existing key handlers, it does not encode or create key handlers.\n\t */\n\tvar codec = new mxObjectCodec(new mxDefaultKeyHandler());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Returns null.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\treturn null;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Reads a sequence of the following child nodes\n\t * and attributes:\n\t *\n\t * Child Nodes:\n\t *\n\t * add - Binds a keystroke to an actionname.\n\t *\n\t * Attributes:\n\t *\n\t * as - Keycode.\n\t * action - Actionname to execute in editor.\n\t * control - Optional boolean indicating if\n\t * \t\tthe control key must be pressed.\n\t *\n\t * Example:\n\t *\n\t * (code)\n\t * <mxDefaultKeyHandler as=\"keyHandler\">\n\t *   <add as=\"88\" control=\"true\" action=\"cut\"/>\n\t *   <add as=\"67\" control=\"true\" action=\"copy\"/>\n\t *   <add as=\"86\" control=\"true\" action=\"paste\"/>\n\t * </mxDefaultKeyHandler>\n\t * (end)\n\t *\n\t * The keycodes are for the x, c and v keys.\n\t *\n\t * See also: <mxDefaultKeyHandler.bindAction>,\n\t * http://www.js-examples.com/page/tutorials__key_codes.html\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tif (into != null)\n\t\t{\n\t\t\tvar editor = into.editor;\n\t\t\tnode = node.firstChild;\n\t\t\t\n\t\t\twhile (node != null)\n\t\t\t{\n\t\t\t\tif (!this.processInclude(dec, node, into) &&\n\t\t\t\t\tnode.nodeName == 'add')\n\t\t\t\t{\n\t\t\t\t\tvar as = node.getAttribute('as');\n\t\t\t\t\tvar action = node.getAttribute('action');\n\t\t\t\t\tvar control = node.getAttribute('control');\n\t\t\t\t\t\n\t\t\t\t\tinto.bindAction(as, action, control);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnode = node.nextSibling;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn into;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxDefaultKeyHandlerCodec = typeof mxDefaultKeyHandlerCodec !== 'undefined' ? mxDefaultKeyHandlerCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultToolbarCodec\n *\n * Custom codec for configuring <mxDefaultToolbar>s. This class is created\n * and registered dynamically at load time and used implicitly via\n * <mxCodec> and the <mxCodecRegistry>. This codec only reads configuration\n * data for existing toolbars handlers, it does not encode or create toolbars.\n */\nvar mxDefaultToolbarCodec = mxCodecRegistry.register(function()\n{\n\tvar codec = new mxObjectCodec(new mxDefaultToolbar());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Returns null.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\treturn null;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Reads a sequence of the following child nodes\n\t * and attributes:\n\t *\n\t * Child Nodes:\n\t *\n\t * add - Adds a new item to the toolbar. See below for attributes.\n\t * separator - Adds a vertical separator. No attributes.\n\t * hr - Adds a horizontal separator. No attributes.\n\t * br - Adds a linefeed. No attributes. \n\t *\n\t * Attributes:\n\t *\n\t * as - Resource key for the label.\n\t * action - Name of the action to execute in enclosing editor.\n\t * mode - Modename (see below).\n\t * template - Template name for cell insertion.\n\t * style - Optional style to override the template style.\n\t * icon - Icon (relative/absolute URL).\n\t * pressedIcon - Optional icon for pressed state (relative/absolute URL).\n\t * id - Optional ID to be used for the created DOM element.\n\t * toggle - Optional 0 or 1 to disable toggling of the element. Default is\n\t * 1 (true).\n\t *\n\t * The action, mode and template attributes are mutually exclusive. The\n\t * style can only be used with the template attribute. The add node may\n\t * contain another sequence of add nodes with as and action attributes\n\t * to create a combo box in the toolbar. If the icon is specified then\n\t * a list of the child node is expected to have its template attribute\n\t * set and the action is ignored instead.\n\t * \n\t * Nodes with a specified template may define a function to be used for\n\t * inserting the cloned template into the graph. Here is an example of such\n\t * a node:\n\t * \n\t * (code)\n\t * <add as=\"Swimlane\" template=\"swimlane\" icon=\"images/swimlane.gif\"><![CDATA[\n\t *   function (editor, cell, evt, targetCell)\n\t *   {\n\t *     var pt = mxUtils.convertPoint(\n\t *       editor.graph.container, mxEvent.getClientX(evt),\n\t *         mxEvent.getClientY(evt));\n\t *     return editor.addVertex(targetCell, cell, pt.x, pt.y);\n\t *   }\n\t * ]]></add>\n\t * (end)\n\t * \n\t * In the above function, editor is the enclosing <mxEditor> instance, cell\n\t * is the clone of the template, evt is the mouse event that represents the\n\t * drop and targetCell is the cell under the mousepointer where the drop\n\t * occurred. The targetCell is retrieved using <mxGraph.getCellAt>.\n\t *\n\t * Futhermore, nodes with the mode attribute may define a function to\n\t * be executed upon selection of the respective toolbar icon. In the\n\t * example below, the default edge style is set when this specific\n\t * connect-mode is activated:\n\t *\n\t * (code)\n\t * <add as=\"connect\" mode=\"connect\"><![CDATA[\n\t *   function (editor)\n\t *   {\n\t *     if (editor.defaultEdge != null)\n\t *     {\n\t *       editor.defaultEdge.style = 'straightEdge';\n\t *     }\n\t *   }\n\t * ]]></add>\n\t * (end)\n\t * \n\t * Both functions require <mxDefaultToolbarCodec.allowEval> to be set to true.\n\t *\n\t * Modes:\n\t *\n\t * select - Left mouse button used for rubberband- & cell-selection.\n\t * connect - Allows connecting vertices by inserting new edges.\n\t * pan - Disables selection and switches to panning on the left button.\n\t *\n\t * Example:\n\t *\n\t * To add items to the toolbar:\n\t * \n\t * (code)\n\t * <mxDefaultToolbar as=\"toolbar\">\n\t *   <add as=\"save\" action=\"save\" icon=\"images/save.gif\"/>\n\t *   <br/><hr/>\n\t *   <add as=\"select\" mode=\"select\" icon=\"images/select.gif\"/>\n\t *   <add as=\"connect\" mode=\"connect\" icon=\"images/connect.gif\"/>\n\t * </mxDefaultToolbar>\n\t * (end)\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tif (into != null)\n\t\t{\n\t\t\tvar editor = into.editor;\n\t\t\tnode = node.firstChild;\n\t\t\t\n\t\t\twhile (node != null)\n\t\t\t{\n\t\t\t\tif (node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t{\n\t\t\t\t\tif (!this.processInclude(dec, node, into))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (node.nodeName == 'separator')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinto.addSeparator();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (node.nodeName == 'br')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinto.toolbar.addBreak();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (node.nodeName == 'hr')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinto.toolbar.addLine();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (node.nodeName == 'add')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar as = node.getAttribute('as');\n\t\t\t\t\t\t\tas = mxResources.get(as) || as;\n\t\t\t\t\t\t\tvar icon = node.getAttribute('icon');\n\t\t\t\t\t\t\tvar pressedIcon = node.getAttribute('pressedIcon');\n\t\t\t\t\t\t\tvar action = node.getAttribute('action');\n\t\t\t\t\t\t\tvar mode = node.getAttribute('mode');\n\t\t\t\t\t\t\tvar template = node.getAttribute('template');\n\t\t\t\t\t\t\tvar toggle = node.getAttribute('toggle') != '0';\n\t\t\t\t\t\t\tvar text = mxUtils.getTextContent(node);\n\t\t\t\t\t\t\tvar elt = null;\n\n\t\t\t\t\t\t\tif (action != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\telt = into.addItem(as, icon, action, pressedIcon);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (mode != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar funct = (mxDefaultToolbarCodec.allowEval) ? mxUtils.eval(text) : null;\n\t\t\t\t\t\t\t\telt = into.addMode(as, icon, mode, pressedIcon, funct);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (template != null || (text != null && text.length > 0))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar cell = editor.templates[template];\n\t\t\t\t\t\t\t\tvar style = node.getAttribute('style');\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (cell != null && style != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcell = editor.graph.cloneCell(cell);\n\t\t\t\t\t\t\t\t\tcell.setStyle(style);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar insertFunction = null;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (text != null && text.length > 0 && mxDefaultToolbarCodec.allowEval)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tinsertFunction = mxUtils.eval(text);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\telt = into.addPrototype(as, icon, cell, pressedIcon, insertFunction, toggle);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar children = mxUtils.getChildNodes(node);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (children.length > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (icon == null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvar combo = into.addActionCombo(as);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tfor (var i=0; i<children.length; i++)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar child = children[i];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (child.nodeName == 'separator')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tinto.addOption(combo, '---');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse if (child.nodeName == 'add')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar lab = child.getAttribute('as');\n\t\t\t\t\t\t\t\t\t\t\t\tvar act = child.getAttribute('action');\n\t\t\t\t\t\t\t\t\t\t\t\tinto.addActionOption(combo, lab, act);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvar select = null;\n\t\t\t\t\t\t\t\t\t\tvar create = function()\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar template = editor.templates[select.value];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (template != null)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar clone = template.clone();\n\t\t\t\t\t\t\t\t\t\t\t\tvar style = select.options[select.selectedIndex].cellStyle;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif (style != null)\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tclone.setStyle(style);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\treturn clone;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tmxLog.warn('Template '+template+' not found');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tvar img = into.addPrototype(as, icon, create, null, null, toggle);\n\t\t\t\t\t\t\t\t\t\tselect = into.addCombo();\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// Selects the toolbar icon if a selection change\n\t\t\t\t\t\t\t\t\t\t// is made in the corresponding combobox.\n\t\t\t\t\t\t\t\t\t\tmxEvent.addListener(select, 'change', function()\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tinto.toolbar.selectMode(img, function(evt)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar pt = mxUtils.convertPoint(editor.graph.container,\n\t\t\t\t\t\t\t\t\t\t\t\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\treturn editor.addVertex(null, funct(), pt.x, pt.y);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tinto.toolbar.noReset = false;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// Adds the entries to the combobox\n\t\t\t\t\t\t\t\t\t\tfor (var i=0; i<children.length; i++)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar child = children[i];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (child.nodeName == 'separator')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tinto.addOption(select, '---');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse if (child.nodeName == 'add')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar lab = child.getAttribute('as');\n\t\t\t\t\t\t\t\t\t\t\t\tvar tmp = child.getAttribute('template');\n\t\t\t\t\t\t\t\t\t\t\t\tvar option = into.addOption(select, lab, tmp || template);\n\t\t\t\t\t\t\t\t\t\t\t\toption.cellStyle = child.getAttribute('style');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Assigns an ID to the created element to access it later.\n\t\t\t\t\t\t\tif (elt != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar id = node.getAttribute('id');\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (id != null && id.length > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\telt.setAttribute('id', id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnode = node.nextSibling;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn into;\n\t};\n\t\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n/**\n * Variable: allowEval\n * \n * Static global switch that specifies if the use of eval is allowed for\n * evaluating text content. Default is true. Set this to false if stylesheets\n * may contain user input\n */\nmxDefaultToolbarCodec.allowEval = true;\n\n__mxOutput.mxDefaultToolbarCodec = typeof mxDefaultToolbarCodec !== 'undefined' ? mxDefaultToolbarCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxDefaultPopupMenuCodec\n\t *\n\t * Custom codec for configuring <mxDefaultPopupMenu>s. This class is created\n\t * and registered dynamically at load time and used implicitly via\n\t * <mxCodec> and the <mxCodecRegistry>. This codec only reads configuration\n\t * data for existing popup menus, it does not encode or create menus. Note\n\t * that this codec only passes the configuration node to the popup menu,\n\t * which uses the config to dynamically create menus. See\n\t * <mxDefaultPopupMenu.createMenu>.\n\t */\n\tvar codec = new mxObjectCodec(new mxDefaultPopupMenu());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Returns null.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\treturn null;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Uses the given node as the config for <mxDefaultPopupMenu>.\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tvar inc = node.getElementsByTagName('include')[0];\n\t\t\n\t\tif (inc != null)\n\t\t{\n\t\t\tthis.processInclude(dec, inc, into);\n\t\t}\n\t\telse if (into != null)\n\t\t{\n\t\t\tinto.config = node;\n\t\t}\n\t\t\n\t\treturn into;\n\t};\n\t\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxDefaultPopupMenuCodec = typeof mxDefaultPopupMenuCodec !== 'undefined' ? mxDefaultPopupMenuCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxEditorCodec\n\t *\n\t * Codec for <mxEditor>s. This class is created and registered\n\t * dynamically at load time and used implicitly via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - modified\n\t * - lastSnapshot\n\t * - ignoredChanges\n\t * - undoManager\n\t * - graphContainer\n\t * - toolbarContainer\n\t */\n\tvar codec = new mxObjectCodec(new mxEditor(),\n\t\t['modified', 'lastSnapshot', 'ignoredChanges',\n\t\t'undoManager', 'graphContainer', 'toolbarContainer']);\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes the ui-part of the configuration node by reading\n\t * a sequence of the following child nodes and attributes\n\t * and passes the control to the default decoding mechanism:\n\t *\n\t * Child Nodes:\n\t *\n\t * stylesheet - Adds a CSS stylesheet to the document.\n\t * resource - Adds the basename of a resource bundle.\n\t * add - Creates or configures a known UI element.\n\t *\n\t * These elements may appear in any order given that the\n\t * graph UI element is added before the toolbar element\n\t * (see Known Keys).\n\t *\n\t * Attributes:\n\t *\n\t * as - Key for the UI element (see below).\n\t * element - ID for the element in the document.\n\t * style - CSS style to be used for the element or window.\n\t * x - X coordinate for the new window.\n\t * y - Y coordinate for the new window.\n\t * width - Width for the new window.\n\t * height - Optional height for the new window.\n\t * name - Name of the stylesheet (absolute/relative URL).\n\t * basename - Basename of the resource bundle (see <mxResources>).\n\t *\n\t * The x, y, width and height attributes are used to create a new\n\t * <mxWindow> if the element attribute is not specified in an add\n\t * node. The name and basename are only used in the stylesheet and\n\t * resource nodes, respectively.\n\t *\n\t * Known Keys:\n\t *\n\t * graph - Main graph element (see <mxEditor.setGraphContainer>).\n\t * title - Title element (see <mxEditor.setTitleContainer>).\n\t * toolbar - Toolbar element (see <mxEditor.setToolbarContainer>).\n\t * status - Status bar element (see <mxEditor.setStatusContainer>).\n\t *\n\t * Example:\n\t *\n\t * (code)\n\t * <ui>\n\t *   <stylesheet name=\"css/process.css\"/>\n\t *   <resource basename=\"resources/app\"/>\n\t *   <add as=\"graph\" element=\"graph\"\n\t *     style=\"left:70px;right:20px;top:20px;bottom:40px\"/>\n\t *   <add as=\"status\" element=\"status\"/>\n\t *   <add as=\"toolbar\" x=\"10\" y=\"20\" width=\"54\"/>\n\t * </ui>\n\t * (end)\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Assigns the specified templates for edges\n\t\tvar defaultEdge = node.getAttribute('defaultEdge');\n\t\t\n\t\tif (defaultEdge != null)\n\t\t{\n\t\t\tnode.removeAttribute('defaultEdge');\n\t\t\tobj.defaultEdge = obj.templates[defaultEdge];\n\t\t}\n\n\t\t// Assigns the specified templates for groups\n\t\tvar defaultGroup = node.getAttribute('defaultGroup');\n\t\t\n\t\tif (defaultGroup != null)\n\t\t{\n\t\t\tnode.removeAttribute('defaultGroup');\n\t\t\tobj.defaultGroup = obj.templates[defaultGroup];\n\t\t}\n\n\t\treturn obj;\n\t};\n\t\n\t/**\n\t * Function: decodeChild\n\t * \n\t * Overrides decode child to handle special child nodes.\n\t */\t\n\tcodec.decodeChild = function(dec, child, obj)\n\t{\n\t\tif (child.nodeName == 'Array')\n\t\t{\n\t\t\tvar role = child.getAttribute('as');\n\t\t\t\n\t\t\tif (role == 'templates')\n\t\t\t{\n\t\t\t\tthis.decodeTemplates(dec, child, obj);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse if (child.nodeName == 'ui')\n\t\t{\n\t\t\tthis.decodeUi(dec, child, obj);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxObjectCodec.prototype.decodeChild.apply(this, arguments);\n\t};\n\t\t\n\t/**\n\t * Function: decodeUi\n\t *\n\t * Decodes the ui elements from the given node.\n\t */\n\tcodec.decodeUi = function(dec, node, editor)\n\t{\n\t\tvar tmp = node.firstChild;\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp.nodeName == 'add')\n\t\t\t{\n\t\t\t\tvar as = tmp.getAttribute('as');\n\t\t\t\tvar elt = tmp.getAttribute('element');\n\t\t\t\tvar style = tmp.getAttribute('style');\n\t\t\t\tvar element = null;\n\n\t\t\t\tif (elt != null)\n\t\t\t\t{\n\t\t\t\t\telement = document.getElementById(elt);\n\t\t\t\t\t\n\t\t\t\t\tif (element != null && style != null)\n\t\t\t\t\t{\n\t\t\t\t\t\telement.style.cssText += ';' + style;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar x = parseInt(tmp.getAttribute('x'));\n\t\t\t\t\tvar y = parseInt(tmp.getAttribute('y'));\n\t\t\t\t\tvar width = tmp.getAttribute('width');\n\t\t\t\t\tvar height = tmp.getAttribute('height');\n\n\t\t\t\t\t// Creates a new window around the element\n\t\t\t\t\telement = document.createElement('div');\n\t\t\t\t\telement.style.cssText = style;\n\t\t\t\t\t\n\t\t\t\t\tvar wnd = new mxWindow(mxResources.get(as) || as,\n\t\t\t\t\t\telement, x, y, width, height, false, true);\n\t\t\t\t\twnd.setVisible(true);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// TODO: Make more generic\n\t\t\t\tif (as == 'graph')\n\t\t\t\t{\n\t\t\t\t\teditor.setGraphContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'toolbar')\n\t\t\t\t{\n\t\t\t\t\teditor.setToolbarContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'title')\n\t\t\t\t{\n\t\t\t\t\teditor.setTitleContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'status')\n\t\t\t\t{\n\t\t\t\t\teditor.setStatusContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'map')\n\t\t\t\t{\n\t\t\t\t\teditor.setMapContainer(element);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmp.nodeName == 'resource')\n\t\t\t{\n\t\t\t\tmxResources.add(tmp.getAttribute('basename'));\n\t\t\t}\n\t\t\telse if (tmp.nodeName == 'stylesheet')\n\t\t\t{\n\t\t\t\tmxClient.link('stylesheet', tmp.getAttribute('name'));\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\t\n\t};\n\t\n\t/**\n\t * Function: decodeTemplates\n\t *\n\t * Decodes the cells from the given node as templates.\n\t */\n\tcodec.decodeTemplates = function(dec, node, editor)\n\t{\n\t\tif (editor.templates == null)\n\t\t{\n\t\t\teditor.templates = [];\n\t\t}\n\t\t\n\t\tvar children = mxUtils.getChildNodes(node);\n\t\tfor (var j=0; j<children.length; j++)\n\t\t{\n\t\t\tvar name = children[j].getAttribute('as');\n\t\t\tvar child = children[j].firstChild;\n\t\t\t\n\t\t\twhile (child != null && child.nodeType != 1)\n\t\t\t{\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\t\n\t\t\tif (child != null)\n\t\t\t{\n\t\t\t\t// LATER: Only single cells means you need\n\t\t\t\t// to group multiple cells within another\n\t\t\t\t// cell. This should be changed to support\n\t\t\t\t// arrays of cells, or the wrapper must\n\t\t\t\t// be automatically handled in this class.\n\t\t\t\teditor.templates[name] = dec.decodeCell(child);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxEditorCodec = typeof mxEditorCodec !== 'undefined' ? mxEditorCodec : undefined;\nreturn __mxOutput;\n};\n}));","var anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (key, value) {\n  try {\n    createNonEnumerableProperty(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","module.exports = {};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","'use strict';\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : nativePropertyIsEnumerable;\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n","var anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar redefine = require('../internals/redefine');\nvar toString = require('../internals/object-to-string');\n\n// `Object.prototype.toString` method\n// https://tc39.es/ecma262/#sec-object.prototype.tostring\nif (!TO_STRING_TAG_SUPPORT) {\n  redefine(Object.prototype, 'toString', toString, { unsafe: true });\n}\n","var defineProperty = require('../internals/object-define-property').f;\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC) {\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line no-undef\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func\n  (function () { return this; })() || Function('return this')();\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","// `Symbol.prototype.description` getter\n// https://tc39.es/ecma262/#sec-symbol.prototype.description\n'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar has = require('../internals/has');\nvar isObject = require('../internals/is-object');\nvar defineProperty = require('../internals/object-define-property').f;\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\n\nvar NativeSymbol = global.Symbol;\n\nif (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||\n  // Safari 12 bug\n  NativeSymbol().description !== undefined\n)) {\n  var EmptyStringDescriptionStore = {};\n  // wrap Symbol constructor for correct work with undefined description\n  var SymbolWrapper = function Symbol() {\n    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var result = this instanceof SymbolWrapper\n      ? new NativeSymbol(description)\n      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n      : description === undefined ? NativeSymbol() : NativeSymbol(description);\n    if (description === '') EmptyStringDescriptionStore[result] = true;\n    return result;\n  };\n  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n  symbolPrototype.constructor = SymbolWrapper;\n\n  var symbolToString = symbolPrototype.toString;\n  var native = String(NativeSymbol('test')) == 'Symbol(test)';\n  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n  defineProperty(symbolPrototype, 'description', {\n    configurable: true,\n    get: function description() {\n      var symbol = isObject(this) ? this.valueOf() : this;\n      var string = symbolToString.call(symbol);\n      if (has(EmptyStringDescriptionStore, symbol)) return '';\n      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');\n      return desc === '' ? undefined : desc;\n    }\n  });\n\n  $({ global: true, forced: true }, {\n    Symbol: SymbolWrapper\n  });\n}\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.es/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.es/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.es/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.es/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.es/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.es/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var redefine = require('../internals/redefine');\n\nmodule.exports = function (target, src, options) {\n  for (var key in src) redefine(target, key, src[key], options);\n  return target;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n","module.exports = function (exec) {\n  try {\n    return { error: false, value: exec() };\n  } catch (error) {\n    return { error: true, value: error };\n  }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar redefine = require('../internals/redefine');\nvar redefineAll = require('../internals/redefine-all');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar setSpecies = require('../internals/set-species');\nvar isObject = require('../internals/is-object');\nvar aFunction = require('../internals/a-function');\nvar anInstance = require('../internals/an-instance');\nvar inspectSource = require('../internals/inspect-source');\nvar iterate = require('../internals/iterate');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar speciesConstructor = require('../internals/species-constructor');\nvar task = require('../internals/task').set;\nvar microtask = require('../internals/microtask');\nvar promiseResolve = require('../internals/promise-resolve');\nvar hostReportErrors = require('../internals/host-report-errors');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar InternalStateModule = require('../internals/internal-state');\nvar isForced = require('../internals/is-forced');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_NODE = require('../internals/engine-is-node');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\nvar PROMISE = 'Promise';\nvar getInternalState = InternalStateModule.get;\nvar setInternalState = InternalStateModule.set;\nvar getInternalPromiseState = InternalStateModule.getterFor(PROMISE);\nvar PromiseConstructor = NativePromise;\nvar TypeError = global.TypeError;\nvar document = global.document;\nvar process = global.process;\nvar $fetch = getBuiltIn('fetch');\nvar newPromiseCapability = newPromiseCapabilityModule.f;\nvar newGenericPromiseCapability = newPromiseCapability;\nvar DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);\nvar NATIVE_REJECTION_EVENT = typeof PromiseRejectionEvent == 'function';\nvar UNHANDLED_REJECTION = 'unhandledrejection';\nvar REJECTION_HANDLED = 'rejectionhandled';\nvar PENDING = 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\nvar HANDLED = 1;\nvar UNHANDLED = 2;\nvar Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;\n\nvar FORCED = isForced(PROMISE, function () {\n  var GLOBAL_CORE_JS_PROMISE = inspectSource(PromiseConstructor) !== String(PromiseConstructor);\n  if (!GLOBAL_CORE_JS_PROMISE) {\n    // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n    // We can't detect it synchronously, so just check versions\n    if (V8_VERSION === 66) return true;\n    // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    if (!IS_NODE && !NATIVE_REJECTION_EVENT) return true;\n  }\n  // We need Promise#finally in the pure version for preventing prototype pollution\n  if (IS_PURE && !PromiseConstructor.prototype['finally']) return true;\n  // We can't use @@species feature detection in V8 since it causes\n  // deoptimization and performance degradation\n  // https://github.com/zloirock/core-js/issues/679\n  if (V8_VERSION >= 51 && /native code/.test(PromiseConstructor)) return false;\n  // Detect correctness of subclassing with @@species support\n  var promise = PromiseConstructor.resolve(1);\n  var FakePromise = function (exec) {\n    exec(function () { /* empty */ }, function () { /* empty */ });\n  };\n  var constructor = promise.constructor = {};\n  constructor[SPECIES] = FakePromise;\n  return !(promise.then(function () { /* empty */ }) instanceof FakePromise);\n});\n\nvar INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {\n  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });\n});\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\n\nvar notify = function (state, isReject) {\n  if (state.notified) return;\n  state.notified = true;\n  var chain = state.reactions;\n  microtask(function () {\n    var value = state.value;\n    var ok = state.state == FULFILLED;\n    var index = 0;\n    // variable length - can't use forEach\n    while (chain.length > index) {\n      var reaction = chain[index++];\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (state.rejection === UNHANDLED) onHandleUnhandled(state);\n            state.rejection = HANDLED;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // can throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (error) {\n        if (domain && !exited) domain.exit();\n        reject(error);\n      }\n    }\n    state.reactions = [];\n    state.notified = false;\n    if (isReject && !state.rejection) onUnhandled(state);\n  });\n};\n\nvar dispatchEvent = function (name, promise, reason) {\n  var event, handler;\n  if (DISPATCH_EVENT) {\n    event = document.createEvent('Event');\n    event.promise = promise;\n    event.reason = reason;\n    event.initEvent(name, false, true);\n    global.dispatchEvent(event);\n  } else event = { promise: promise, reason: reason };\n  if (!NATIVE_REJECTION_EVENT && (handler = global['on' + name])) handler(event);\n  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);\n};\n\nvar onUnhandled = function (state) {\n  task.call(global, function () {\n    var promise = state.facade;\n    var value = state.value;\n    var IS_UNHANDLED = isUnhandled(state);\n    var result;\n    if (IS_UNHANDLED) {\n      result = perform(function () {\n        if (IS_NODE) {\n          process.emit('unhandledRejection', value, promise);\n        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;\n      if (result.error) throw result.value;\n    }\n  });\n};\n\nvar isUnhandled = function (state) {\n  return state.rejection !== HANDLED && !state.parent;\n};\n\nvar onHandleUnhandled = function (state) {\n  task.call(global, function () {\n    var promise = state.facade;\n    if (IS_NODE) {\n      process.emit('rejectionHandled', promise);\n    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);\n  });\n};\n\nvar bind = function (fn, state, unwrap) {\n  return function (value) {\n    fn(state, value, unwrap);\n  };\n};\n\nvar internalReject = function (state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  state.value = value;\n  state.state = REJECTED;\n  notify(state, true);\n};\n\nvar internalResolve = function (state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  try {\n    if (state.facade === value) throw TypeError(\"Promise can't be resolved itself\");\n    var then = isThenable(value);\n    if (then) {\n      microtask(function () {\n        var wrapper = { done: false };\n        try {\n          then.call(value,\n            bind(internalResolve, wrapper, state),\n            bind(internalReject, wrapper, state)\n          );\n        } catch (error) {\n          internalReject(wrapper, error, state);\n        }\n      });\n    } else {\n      state.value = value;\n      state.state = FULFILLED;\n      notify(state, false);\n    }\n  } catch (error) {\n    internalReject({ done: false }, error, state);\n  }\n};\n\n// constructor polyfill\nif (FORCED) {\n  // 25.4.3.1 Promise(executor)\n  PromiseConstructor = function Promise(executor) {\n    anInstance(this, PromiseConstructor, PROMISE);\n    aFunction(executor);\n    Internal.call(this);\n    var state = getInternalState(this);\n    try {\n      executor(bind(internalResolve, state), bind(internalReject, state));\n    } catch (error) {\n      internalReject(state, error);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    setInternalState(this, {\n      type: PROMISE,\n      done: false,\n      notified: false,\n      parent: false,\n      reactions: [],\n      rejection: false,\n      state: PENDING,\n      value: undefined\n    });\n  };\n  Internal.prototype = redefineAll(PromiseConstructor.prototype, {\n    // `Promise.prototype.then` method\n    // https://tc39.es/ecma262/#sec-promise.prototype.then\n    then: function then(onFulfilled, onRejected) {\n      var state = getInternalPromiseState(this);\n      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = IS_NODE ? process.domain : undefined;\n      state.parent = true;\n      state.reactions.push(reaction);\n      if (state.state != PENDING) notify(state, false);\n      return reaction.promise;\n    },\n    // `Promise.prototype.catch` method\n    // https://tc39.es/ecma262/#sec-promise.prototype.catch\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    var state = getInternalState(promise);\n    this.promise = promise;\n    this.resolve = bind(internalResolve, state);\n    this.reject = bind(internalReject, state);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === PromiseConstructor || C === PromiseWrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n\n  if (!IS_PURE && typeof NativePromise == 'function') {\n    nativeThen = NativePromise.prototype.then;\n\n    // wrap native Promise#then for native async functions\n    redefine(NativePromise.prototype, 'then', function then(onFulfilled, onRejected) {\n      var that = this;\n      return new PromiseConstructor(function (resolve, reject) {\n        nativeThen.call(that, resolve, reject);\n      }).then(onFulfilled, onRejected);\n    // https://github.com/zloirock/core-js/issues/640\n    }, { unsafe: true });\n\n    // wrap fetch result\n    if (typeof $fetch == 'function') $({ global: true, enumerable: true, forced: true }, {\n      // eslint-disable-next-line no-unused-vars\n      fetch: function fetch(input /* , init */) {\n        return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));\n      }\n    });\n  }\n}\n\n$({ global: true, wrap: true, forced: FORCED }, {\n  Promise: PromiseConstructor\n});\n\nsetToStringTag(PromiseConstructor, PROMISE, false, true);\nsetSpecies(PROMISE);\n\nPromiseWrapper = getBuiltIn(PROMISE);\n\n// statics\n$({ target: PROMISE, stat: true, forced: FORCED }, {\n  // `Promise.reject` method\n  // https://tc39.es/ecma262/#sec-promise.reject\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    capability.reject.call(undefined, r);\n    return capability.promise;\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {\n  // `Promise.resolve` method\n  // https://tc39.es/ecma262/#sec-promise.resolve\n  resolve: function resolve(x) {\n    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {\n  // `Promise.all` method\n  // https://tc39.es/ecma262/#sec-promise.all\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        $promiseResolve.call(C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  },\n  // `Promise.race` method\n  // https://tc39.es/ecma262/#sec-promise.race\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      iterate(iterable, function (promise) {\n        $promiseResolve.call(C, promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","'use strict';\nvar aFunction = require('../internals/a-function');\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n};\n\n// 25.4.1.5 NewPromiseCapability(C)\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","var NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  // eslint-disable-next-line no-undef\n  && !Symbol.sham\n  // eslint-disable-next-line no-undef\n  && typeof Symbol.iterator == 'symbol';\n","var global = require('../internals/global');\n\nmodule.exports = global.Promise;\n"],"sourceRoot":""}